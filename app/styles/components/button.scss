$border-radius: 5px;
$alpha-100: #656A761A;
$alpha-200: #656A7633;
$alpha-300: #3B3D4566;

// TODO! generalize with the existing mixin in Card component
@mixin tempElevation() {
  box-shadow:
    var(--token-elevation-low-shadow-01-x)
    var(--token-elevation-low-shadow-01-y)
    var(--token-elevation-low-shadow-01-blur)
    var(--token-elevation-low-shadow-01-spread)
    var(--token-elevation-low-shadow-01-color),
    var(--token-elevation-low-shadow-02-x)
    var(--token-elevation-low-shadow-02-y)
    var(--token-elevation-low-shadow-02-blur)
    var(--token-elevation-low-shadow-02-spread)
    var(--token-elevation-low-shadow-02-color)
  ;
}

.hds-button {
  @include tempElevation();

  align-items: center;
  border: 1px solid transparent;
  border-radius: $border-radius;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  margin: 2px; // to account for the outline; TODO convert to relational units
  max-width: 100%;
  position: relative;
  width: 100%;

  @media screen and (min-width: 48rem) { // TODO what are our breakpoints?
    width: auto;
  }

  &.hds-button--width-full {
    width: 100%;
  }

  &.is-focus,
  &:focus {
    &::before {
      border-radius: $border-radius + 4px;
      border: 3px solid var(--token-color-action-background-primary);
      bottom: -5px;
      box-sizing: border-box;
      content: '';
      left: -5px;
      position: absolute;
      right: -5px;
      top: -5px;
    }
  }
}

.hds-button__icon, .hds-button__text {
  display: flex;
}


// SIZE

.hds-button--size-small {
  font-size: var(--token-typography-small-font-size);
  gap: 0.625rem;
  height: 1rem;
  line-height: var(--token-typography-small-line-height);
  padding: 0.625rem 1rem;
}
.hds-button--size-medium {
  font-size: 0.875rem;
  gap: 0.625rem;
  height: 2.25rem;
  padding: 0.625rem 1rem;
}
.hds-button--size-large {
  font-size: 1rem;
  gap: 0.75rem;
  height: 3rem;
  padding: 0.75rem 1.25rem;
}

// COLORS & STATES

.hds-button--color-primary {
  background-color: var(--token-color-action-background-primary);
  border-color: var(--token-color-action-border-on-primary);
  color: var(--token-color-neutral-neutral-0);

  &:disabled,
  &[disabled],
  &[disabled]:hover {
    background-color: rgba(250, 250, 250, 0.6);
    border-color: var(--token-color-neutral-neutral-400);
    box-shadow: none;
    color: var(--token-color-neutral-neutral-400);
    cursor: not-allowed;
  }
  &:focus {
    background-color: var(--token-color-action-background-primary);
    border-color: var(--token-color-action-border-focus);
    color: var(--token-color-neutral-neutral-0);
  }
  &:hover {
    background-color: var(--token-color-action-background-hover);
    border-color: var(--token-color-action-border-hover);
    color: var(--token-color-neutral-neutral-0);
    cursor: pointer;
  }
  &:active {
    background-color: var(--token-color-action-background-active);
    border-color: var(--token-color-action-border-active);
    box-shadow: none;
    color: var(--token-color-neutral-neutral-0);
    &::before {
      border-color: transparent;
    }
  }
}