/* Card Component > Container
 *
 * classes are sorted the same way as the Figma properties
 * properties within each class are sorted alphabetically
 *
 */

 @mixin getElevation($elevation) {
  @if ($elevation != 'base') {
    box-shadow:
        var(--token-elevation-#{$elevation}-shadow-01-x)
        var(--token-elevation-#{$elevation}-shadow-01-y)
        var(--token-elevation-#{$elevation}-shadow-01-blur)
        var(--token-elevation-#{$elevation}-shadow-01-spread)
        var(--token-elevation-#{$elevation}-shadow-01-color),
        var(--token-elevation-#{$elevation}-shadow-02-x)
        var(--token-elevation-#{$elevation}-shadow-02-y)
        var(--token-elevation-#{$elevation}-shadow-02-blur)
        var(--token-elevation-#{$elevation}-shadow-02-spread)
        var(--token-elevation-#{$elevation}-shadow-02-color)
    ;
  }
}

@mixin getEdge($elevation) {
  @if ($elevation != 'base') {
    outline: var(--token-elevation-#{$elevation}-edge-width) solid var(--token-elevation-#{$elevation}-edge-color);
  }
}

$hds-card-container-elevations: ( 'base', 'low', 'mid', 'high', 'higher' );
$hds-card-container-backgrounds: ( 'neutral-0', 'neutral-50' );

$hds-card-container-border-radius: 6px;

.hds-card-container {
  position: relative;
  background-color: #fff;
  border-radius: $hds-card-container-border-radius;
}

// ELEVATION (shadow)

@each $elevation in $hds-card-container-elevations {
  .hds-card-container--elevation-#{$elevation} {
    @include getElevation($elevation);

    // EGDE (border)
    &.hds-card-container--outlined {
      @include getEdge($elevation);
    }
  }
}

// BACKGROUND

@each $background-color in $hds-card-container-backgrounds {
  .hds-card-container--background-#{$background-color} {
    background-color: var(--token-color-neutral-#{$background-color});
  }
}

// OVERFLOW

.hds-card-container--overflow-hidden {
  overflow: hidden;
}

.hds-card-container--overflow-visible {
  overflow: visible;
}