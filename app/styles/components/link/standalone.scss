$hds-link-standalone--border-radius: 5px;
$hds-link-standalone-sizes: ( 'small', 'medium', 'large' );

.hds-link-standalone {
  align-items: center;
  border-color: transparent;
  color: var(--token-color-action-foreground-primary);
  display: flex;
  font-family: var(--token-typography-body-base-font-family);
  justify-content: center;
  outline-color: transparent;
  position: relative;
  text-decoration: none;
  width: fit-content;

  // TODO
  // once the designers have decided what to do,
  // probably some of these states can be merged
  // Also they need to stay in this order: visited, hover, focus, active
  &:visited,
  &.is-visited {
    color: var(--token-color-action-foreground-primary);
  }

  &:hover,
  &.is-hover {
    color: var(--token-color-action-foreground-primary);
    text-decoration: underline;
  }

  &:focus,
  &.is-focus {
    color: var(--token-color-action-foreground-primary);
    border-color: transparent;
    text-decoration: underline;

    // TODO! waiting for the designers to spec the focus state
    &::before {
      border-radius: $hds-link-standalone--border-radius;
      border: 3px solid #5990ff; // special color??
      bottom: -2px;
      box-sizing: border-box;
      content: '';
      left: -8px;
      position: absolute;
      right: -8px;
      top: -2px;
    }
  }
  &:active,
  &.is-active {
    color: var(--token-color-action-foreground-primary);
  }
}

// these values later may come from the design tokens
$size-props: (
  "small": (
    "font-size": 0.8125rem, // 13px;
    "icon-size": 0.75rem, // 12px
    "line-height": 0.75,
  ),
  "medium": (
    "font-size": 0.875rem, // 14px
    "icon-size": 1rem, // 16px
    "line-height": 1, // 16px
  ),
  "large": (
    "font-size": 1rem, // 16px
    "icon-size": 1.5rem, // 24px
    "line-height": 1.5, // 24px
  )
);

@each $size in $hds-link-standalone-sizes {
  .hds-link-standalone--size-#{$size} {

    .hds-link-standalone__icon {
      height: map-get($size-props, $size, "icon-size");
      width: map-get($size-props, $size, "icon-size");
    }

    .hds-link-standalone__text {
      font-size: map-get($size-props, $size, "font-size");
      line-height: map-get($size-props, $size, "line-height");
    }

  }
}

.hds-link-standalone__text {
  flex: 1 0 0;
  margin-inline-start: 6px;
}