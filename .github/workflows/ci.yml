name: CI 

on:
  push:
    branches:
      - main
  pull_request:

env:
  NODE_VERSION: '16.x'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '${{ env.NODE_VERSION }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/yarn.lock'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: yarn install --frozen-lockfile
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Lint
      run: yarn lint


  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '${{ env.NODE_VERSION }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/yarn.lock'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: yarn install --frozen-lockfile
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test
      run: yarn test:ember --launch ${{ matrix.browser }}

  floating-dependencies:
    name: Floating Dependencies
    runs-on: ${{ matrix.os }}
    needs: lint

    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '${{ env.NODE_VERSION }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/yarn.lock'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: yarn install --no-lockfile --non-interactive

    - name: Test
      run: yarn test:ember --launch ${{ matrix.browser }}

  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: test

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario: [
          ember-lts-3.20,
          ember-lts-3.24,
          ember-release,
          ember-beta,
          # ember-canary,
          ember-default-with-jquery,
          ember-classic,
          embroider-safe,
          embroider-optimized
        ]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '${{ env.NODE_VERSION }}'

    - name: Get package manager's global cache path
      id: global-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache package manager's global cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.global-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{
          hashFiles('**/yarn.lock'
          ) }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      run: yarn install --frozen-lockfile
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test
      env:
        EMBER_TRY_SCENARIO: ${{ matrix.ember-try-scenario }}
      run: node_modules/.bin/ember try:one $EMBER_TRY_SCENARIO
