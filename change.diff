diff --git a/packages/components/addon-main.cjs b/packages/components/addon-main.cjs
index 797c851c5..da24a0b99 100644
--- a/packages/components/addon-main.cjs
+++ b/packages/components/addon-main.cjs
@@ -4,19 +4,14 @@
  */
 
 const { addonV1Shim } = require('@embroider/addon-shim');
-const flightIconSprite = require('@hashicorp/flight-icons/svg-sprite/svg-sprite-module');
 
 module.exports = {
   ...addonV1Shim(__dirname),
-  contentFor(type, config) {
-    if (
-      !config.flightIconsSpriteLazyEmbed &&
-      !config.__flightIconsSpriteLoaded &&
-      type === 'body-footer'
-    ) {
-      config.__flightIconsSpriteLoaded = true;
-
-      return flightIconSprite;
-    }
+  options: {
+    '@embroider/macros': {
+      setOwnConfig: {
+        flightIconsSpriteLazyEmbed: true,
+      },
+    },
   },
 };
diff --git a/packages/components/package.json b/packages/components/package.json
index 60704a074..da4d2473e 100644
--- a/packages/components/package.json
+++ b/packages/components/package.json
@@ -62,7 +62,6 @@
     "ember-concurrency": "^4.0.4",
     "ember-element-helper": "^0.8.6",
     "ember-focus-trap": "^1.1.1",
-    "ember-get-config": "^2.1.1",
     "ember-modifier": "^4.2.2",
     "ember-power-select": "^8.7.1",
     "ember-stargate": "^1.0.2",
diff --git a/packages/components/src/instance-initializers/load-sprite.ts b/packages/components/src/instance-initializers/load-sprite.ts
index a88ecd9ec..f98dd61fc 100644
--- a/packages/components/src/instance-initializers/load-sprite.ts
+++ b/packages/components/src/instance-initializers/load-sprite.ts
@@ -3,19 +3,21 @@
  * SPDX-License-Identifier: MPL-2.0
  */
 
-import config from 'ember-get-config';
+import { macroCondition, isTesting, getOwnConfig } from '@embroider/macros';
+
+interface Config {
+  flightIconsSpriteLazyEmbed: boolean;
+}
 
 export async function initialize() {
-  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
-  if (config?.flightIconsSpriteLazyEmbed) {
+  if (macroCondition(getOwnConfig<Config>().flightIconsSpriteLazyEmbed)) {
     const { default: svgSprite } = await import(
       '@hashicorp/flight-icons/svg-sprite/svg-sprite-module'
     );
 
     // in test environments we can inject the sprite directly into the ember testing container
     // to avoid issues with tools like Percy that only consider content inside that element
-    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
-    if (config.environment === 'test') {
+    if (macroCondition(isTesting())) {
       const container = window.document?.getElementById('ember-testing');
 
       if (container && !container.querySelector('.flight-sprite-container')) {
diff --git a/packages/components/src/modifiers/hds-code-editor.ts b/packages/components/src/modifiers/hds-code-editor.ts
index 39f7d60ae..f0c74de7a 100644
--- a/packages/components/src/modifiers/hds-code-editor.ts
+++ b/packages/components/src/modifiers/hds-code-editor.ts
@@ -7,7 +7,7 @@ import Modifier from 'ember-modifier';
 import { assert, warn } from '@ember/debug';
 import { registerDestructor } from '@ember/destroyable';
 import { task } from 'ember-concurrency';
-import config from 'ember-get-config';
+import { macroCondition, isTesting } from '@embroider/macros';
 import { Compartment } from '@codemirror/state';
 import { EditorView } from '@codemirror/view';
 import { guidFor } from '@ember/object/internals';
@@ -208,8 +208,7 @@ export default class HdsCodeEditorModifier extends Modifier<HdsCodeEditorSignatu
     // if the editor does not exist, setup the editor
     else {
       // the intersection observer makes loading unreliable in tests
-      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
-      if (config.environment === 'test') {
+      if (macroCondition(isTesting())) {
         // eslint-disable-next-line @typescript-eslint/no-floating-promises
         this._setupTask.perform(element, positional, named);
       } else {
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 848d01b41..43db4eb16 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -151,9 +151,6 @@ importers:
       ember-focus-trap:
         specifier: ^1.1.1
         version: 1.1.1(ember-source@6.5.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
-      ember-get-config:
-        specifier: ^2.1.1
-        version: 2.1.1(@glint/template@1.5.2)
       ember-modifier:
         specifier: ^4.2.2
         version: 4.2.2(@babel/core@7.28.0)
@@ -677,9 +674,6 @@ importers:
       ember-try:
         specifier: ^4.0.0
         version: 4.0.0
-      ember-unique-id-helper-polyfill:
-        specifier: ^1.2.2
-        version: 1.2.2
       eslint:
         specifier: ^9.27.0
         version: 9.32.0
@@ -908,9 +902,6 @@ importers:
       ember-fetch:
         specifier: ^8.1.2
         version: 8.1.2
-      ember-get-config:
-        specifier: ^2.1.1
-        version: 2.1.1(@glint/template@1.5.2)
       ember-load-initializers:
         specifier: ^3.0.1
         version: 3.0.1(ember-source@6.4.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
@@ -2832,6 +2823,7 @@ packages:
     engines: {node: '>= 18'}
     peerDependencies:
       '@ember/string': ^3.1.1 || ^4.0.0
+      ember-basic-dropdown: ^7.3.0 || ^8.6.1
       ember-engines: '>= 0.11.0'
       ember-intl: ^7.3.0
     peerDependenciesMeta:
@@ -6425,10 +6417,6 @@ packages:
     resolution: {integrity: sha512-gWG1k8+hio1rndJXxzIYhayL7ITof3ebkZ7HwFzFDaz3NARb8MjcVloKj1PFCheu8ZbY8iP8QTRPqb+J+N+Izg==}
     engines: {node: '>= 18'}
 
-  ember-unique-id-helper-polyfill@1.2.2:
-    resolution: {integrity: sha512-gjcwTBkCDUA0iYFS7aArfJub+eos/itxEsC399JUbdKNIBJLesB/1OHnmxLLwExZHp7gyHuiDFOPcknafhFm3g==}
-    engines: {node: 12.* || 14.* || >= 16}
-
   emittery@0.13.1:
     resolution: {integrity: sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==}
     engines: {node: '>=12'}
@@ -9840,7 +9828,6 @@ packages:
     engines: {node: '>=0.6.0', teleport: '>=0.2.0'}
     deprecated: |-
       You or someone you depend on is using Q, the JavaScript Promise library that gave JavaScript developers strong feelings about promises. They can almost certainly migrate to the native JavaScript promise now. Thank you literally everyone for joining me in this bet against the odds. Be excellent to each other.
-
       (For a CapTP with native promises, see @endo/eventual-send and @endo/captp)
 
   qs@6.13.0:
@@ -14158,10 +14145,10 @@ snapshots:
       codemirror-lang-hcl: 0.0.0-beta.2
       decorator-transforms: 2.3.0(@babel/core@7.28.0)
       ember-a11y-refocus: 5.1.0(@babel/core@7.28.0)(ember-source@6.4.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
+      ember-basic-dropdown: 8.6.2(@babel/core@7.28.0)(@ember/string@4.0.1)(@ember/test-helpers@5.2.2(@babel/core@7.28.0)(@glint/template@1.5.2))(@glimmer/component@2.0.0)(@glint/environment-ember-loose@1.5.2(@glimmer/component@2.0.0)(@glint/template@1.5.2)(ember-cli-htmlbars@6.3.0)(ember-modifier@4.2.2(@babel/core@7.28.0)))(@glint/template@1.5.2)(ember-source@6.4.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
       ember-concurrency: 4.0.4(@babel/core@7.28.0)(@glint/template@1.5.2)
       ember-element-helper: 0.8.8
       ember-focus-trap: 1.1.1(ember-source@6.4.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
-      ember-get-config: 2.1.1(@glint/template@1.5.2)
       ember-modifier: 4.2.2(@babel/core@7.28.0)
       ember-power-select: 8.7.3(@babel/core@7.28.0)(@ember/test-helpers@5.2.2(@babel/core@7.28.0)(@glint/template@1.5.2))(@glimmer/component@2.0.0)(@glint/environment-ember-loose@1.5.2(@glimmer/component@2.0.0)(@glint/template@1.5.2)(ember-cli-htmlbars@6.3.0)(ember-modifier@4.2.2(@babel/core@7.28.0)))(@glint/template@1.5.2)(ember-basic-dropdown@8.6.2(@babel/core@7.28.0)(@ember/string@4.0.1)(@ember/test-helpers@5.2.2(@babel/core@7.28.0)(@glint/template@1.5.2))(@glimmer/component@2.0.0)(@glint/environment-ember-loose@1.5.2(@glimmer/component@2.0.0)(@glint/template@1.5.2)(ember-cli-htmlbars@6.3.0)(ember-modifier@4.2.2(@babel/core@7.28.0)))(@glint/template@1.5.2)(ember-source@6.4.0(@glimmer/component@2.0.0)(rsvp@4.8.5)))(ember-concurrency@4.0.4(@babel/core@7.28.0)(@glint/template@1.5.2))(ember-source@6.4.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
       ember-stargate: 1.0.2(@babel/core@7.28.0)(@glimmer/component@2.0.0)(@glint/template@1.5.2)
@@ -14180,7 +14167,6 @@ snapshots:
       - '@glimmer/component'
       - '@glint/environment-ember-loose'
       - '@glint/template'
-      - ember-basic-dropdown
       - ember-source
       - supports-color
 
@@ -14213,10 +14199,10 @@ snapshots:
       codemirror-lang-hcl: 0.0.0-beta.2
       decorator-transforms: 2.3.0(@babel/core@7.28.0)
       ember-a11y-refocus: 5.1.0(@babel/core@7.28.0)(ember-source@6.5.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
+      ember-basic-dropdown: 8.6.2(@babel/core@7.28.0)(@ember/string@4.0.1)(@ember/test-helpers@5.2.2(@babel/core@7.28.0)(@glint/template@1.5.2))(@glimmer/component@2.0.0)(@glint/environment-ember-loose@1.5.2(@glimmer/component@2.0.0)(@glint/template@1.5.2)(ember-cli-htmlbars@6.3.0)(ember-modifier@4.2.2(@babel/core@7.28.0)))(@glint/template@1.5.2)(ember-source@6.5.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
       ember-concurrency: 4.0.4(@babel/core@7.28.0)(@glint/template@1.5.2)
       ember-element-helper: 0.8.8
       ember-focus-trap: 1.1.1(ember-source@6.5.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
-      ember-get-config: 2.1.1(@glint/template@1.5.2)
       ember-modifier: 4.2.2(@babel/core@7.28.0)
       ember-power-select: 8.7.3(@babel/core@7.28.0)(@ember/test-helpers@5.2.2(@babel/core@7.28.0)(@glint/template@1.5.2))(@glimmer/component@2.0.0)(@glint/environment-ember-loose@1.5.2(@glimmer/component@2.0.0)(@glint/template@1.5.2)(ember-cli-htmlbars@6.3.0)(ember-modifier@4.2.2(@babel/core@7.28.0)))(@glint/template@1.5.2)(ember-basic-dropdown@8.6.2(@babel/core@7.28.0)(@ember/string@4.0.1)(@ember/test-helpers@5.2.2(@babel/core@7.28.0)(@glint/template@1.5.2))(@glimmer/component@2.0.0)(@glint/environment-ember-loose@1.5.2(@glimmer/component@2.0.0)(@glint/template@1.5.2)(ember-cli-htmlbars@6.3.0)(ember-modifier@4.2.2(@babel/core@7.28.0)))(@glint/template@1.5.2)(ember-source@6.5.0(@glimmer/component@2.0.0)(rsvp@4.8.5)))(ember-concurrency@4.0.4(@babel/core@7.28.0)(@glint/template@1.5.2))(ember-source@6.5.0(@glimmer/component@2.0.0)(rsvp@4.8.5))
       ember-stargate: 1.0.2(@babel/core@7.28.0)(@glimmer/component@2.0.0)(@glint/template@1.5.2)
@@ -14235,7 +14221,6 @@ snapshots:
       - '@glimmer/component'
       - '@glint/environment-ember-loose'
       - '@glint/template'
-      - ember-basic-dropdown
       - ember-source
       - supports-color
 
@@ -19832,14 +19817,6 @@ snapshots:
       - encoding
       - supports-color
 
-  ember-unique-id-helper-polyfill@1.2.2:
-    dependencies:
-      broccoli-funnel: 3.0.8
-      ember-cli-babel: 7.26.11
-      ember-cli-version-checker: 5.1.2
-    transitivePeerDependencies:
-      - supports-color
-
   emittery@0.13.1: {}
 
   emoji-regex@10.4.0: {}
diff --git a/showcase/ember-cli-build.js b/showcase/ember-cli-build.js
index 72fd59252..5e70ce95e 100644
--- a/showcase/ember-cli-build.js
+++ b/showcase/ember-cli-build.js
@@ -9,6 +9,14 @@ const EmberApp = require('ember-cli/lib/broccoli/ember-app');
 
 module.exports = function (defaults) {
   const app = new EmberApp(defaults, {
+    '@embroider/macros': {
+      setConfig: {
+        '@hashicorp/design-system-components': {
+          flightIconsSpriteLazyEmbed: true,
+        },
+      },
+    },
+
     'ember-cli-babel': {
       enableTypeScriptTransform: true,
     },
diff --git a/showcase/package.json b/showcase/package.json
index 9f0cf932a..5ec97a5c4 100644
--- a/showcase/package.json
+++ b/showcase/package.json
@@ -101,7 +101,6 @@
     "ember-template-lint": "^7.7.0",
     "ember-truth-helpers": "^4.0.3",
     "ember-try": "^4.0.0",
-    "ember-unique-id-helper-polyfill": "^1.2.2",
     "eslint": "^9.27.0",
     "eslint-config-prettier": "^10.1.5",
     "eslint-plugin-ember": "^12.5.0",
diff --git a/website/app/routes/application.js b/website/app/routes/application.js
index 024690b0d..342c9f60f 100644
--- a/website/app/routes/application.js
+++ b/website/app/routes/application.js
@@ -1,6 +1,7 @@
 import Route from '@ember/routing/route';
 import fetch from 'fetch';
-import config from 'ember-get-config';
+
+import config from '../config/environment';
 
 export default class ApplicationRoute extends Route {
   model() {
diff --git a/website/app/routes/show.js b/website/app/routes/show.js
index b5f5155e4..df8c2e036 100644
--- a/website/app/routes/show.js
+++ b/website/app/routes/show.js
@@ -6,11 +6,12 @@ import {
   isUnauthorizedResponse,
   isNotFoundResponse,
 } from 'ember-fetch/errors';
-import config from 'ember-get-config';
 import { service } from '@ember/service';
 import { action } from '@ember/object';
 import { reject } from 'rsvp';
 
+import config from '../config/environment';
+
 export default class ShowRoute extends Route {
   @service router;
   queryParams = {
diff --git a/website/app/services/head-data.js b/website/app/services/head-data.js
index c885741b6..3c2020f99 100644
--- a/website/app/services/head-data.js
+++ b/website/app/services/head-data.js
@@ -4,9 +4,10 @@
  */
 
 import HeadDataService from 'ember-meta/services/head-data';
-import config from 'ember-get-config';
 import { service } from '@ember/service';
 
+import config from '../config/environment';
+
 export default class CustomHeadDataService extends HeadDataService {
   @service router;
 
diff --git a/website/package.json b/website/package.json
index c2b6cca59..901654ac9 100644
--- a/website/package.json
+++ b/website/package.json
@@ -90,7 +90,6 @@
     "ember-cli-terser": "^4.0.2",
     "ember-concurrency": "^4.0.4",
     "ember-fetch": "^8.1.2",
-    "ember-get-config": "^2.1.1",
     "ember-load-initializers": "^3.0.1",
     "ember-math-helpers": "^4.2.1",
     "ember-meta": "^2.0.0",
