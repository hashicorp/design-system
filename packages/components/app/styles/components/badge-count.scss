//
// BADGE-COUNT
//
// properties within each class are sorted alphabetically
//

@use 'sass:math';

$hds-badge-count-types: ( 'flat','inverted','outlined' );
$hds-badge-count-sizes: ( 'small', 'medium', 'large' );

$hds-badge-count-border-width: 1px;


.hds-badge-count {
  align-items: center;
  border: $hds-badge-count-border-width solid transparent;
  display: inline-flex;
  font-family: var(--token-typography-font-stack-text);
  max-width: 100%;
}

// SIZE

// these values later may come from the design tokens
$size-props: (
  "small": (
    "font-size": 0.8125rem, // 13px
    "height": 1.25rem,
    "line-height": 1.23077, // 16px
    "padding-vertical": 0.125rem,
    "padding-horizontal": 0.5rem,
  ),
  "medium": (
    "font-size": 0.8125rem, // 13px
    "height": 1.5rem,
    "line-height": 1.23077, // 16px
    "padding-vertical": 0.25rem,
    "padding-horizontal": 0.75rem,
  ),
  "large": (
    "font-size": 1rem, // 16px
    "height": 2rem,
    "line-height": 1.5, // 24px
    "padding-vertical": 0.25rem,
    "padding-horizontal": 0.875rem,
  )
);

@each $size in $hds-badge-count-sizes {
  .hds-badge-count--size-#{$size} {
    border-radius: math.div(map-get($size-props, $size, "height"), 2);
    font-size: map-get($size-props, $size, "font-size");
    line-height: map-get($size-props, $size, "line-height");
    min-height: map-get($size-props, $size, "height");
    padding: calc(#{map-get($size-props, $size, "padding-vertical")} - #{$hds-badge-count-border-width}) calc(#{map-get($size-props, $size, "padding-horizontal")} - #{$hds-badge-count-border-width});
  }
}


// COLOR + TYPE COMBINATIONS

.hds-badge-count--color-neutral {
  &.hds-badge-count--type-filled {
    background-color: var(--token-color-surface-strong);
    color: var(--token-color-foreground-primary);
  }

  &.hds-badge-count--type-inverted {
    background-color: var(--token-color-foreground-faint);
    color: var(--token-color-foreground-high-contrast);
  }

  &.hds-badge-count--type-outlined {
    background-color: transparent;
    border-color: var(--token-color-foreground-faint);
    color: var(--token-color-foreground-primary);
  }
}

.hds-badge-count--color-neutral-dark-mode {
  &.hds-badge-count--type-filled {
    background-color: var(--token-color-foreground-faint);
    color: var(--token-color-foreground-high-contrast);
  }

  &.hds-badge-count--type-inverted {
    background-color: var(--token-color-surface-faint);
    color: var(--token-color-foreground-primary);
  }

  &.hds-badge-count--type-outlined {
    background-color: transparent;
    border-color: var(--token-color-palette-neutral-100);
    color: var(--token-color-foreground-high-contrast);
  }
}