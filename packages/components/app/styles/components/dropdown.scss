// >>>>>>>>>> WARNING <<<<<<<<<<<
//
// Notice: in this component we're using directly the `Hds::Button` component
// (and adding a specialized class for the "toggle-button" variant, see below)
// If you need to change the styling of the `Button` component, remember that this will impact also
// this component too.
// If instead you need to change only the styling of the `toggle-button` component, you can do it here using
// the specialized class declared below.
// This is NOT a standard approach that we use in the HDS design system implementation, but it's been
// the least worst option we could find to solve the problem of sharing the exact same style of the
// `Button (primary)` with other components.

//
// DROPDOWN COMPONENT
//
// properties within each class are sorted alphabetically
// notice: pseudo-classes for the states *must* follow the order link > visited > hover > focus > active
//
//

@use '../mixins/focus-ring' as *;

$hds-dropdown-toggle-base-height: 36px;
$hds-dropdown-toggle-border-radius: 5px;


// TOGGLE/ICON

.hds-dropdown-toggle-icon {
  align-items: center;
  background-color: transparent;
  border: 1px solid transparent; // We need this to be transparent for a11y
  border-radius: $hds-dropdown-toggle-border-radius;
  display: flex;
  height: $hds-dropdown-toggle-base-height;
  justify-content: center;
  min-width: $hds-dropdown-toggle-base-height;
  outline-style: solid; // used to avoid double outline+focus-ring in Safari (see https://github.com/hashicorp/design-system-components/issues/161#issuecomment-1031548656)
  outline-color: transparent; // We need this to be transparent for a11y
  padding: 1px;

  &:hover,
  &.is-hover {
    background-color: var(--token-color-surface-interactive);
    border-color: var(--token-color-border-strong);
    cursor: pointer;
  }

  @include hds-focus-ring-with-pseudo-element($top: -1px, $right: -1px, $bottom: -1px, $left: -1px, $radius: $hds-dropdown-toggle-border-radius);

  &:active,
  &.is-active {
    background-color: var(--token-color-surface-interactive-active);
    border-color: var(--token-color-border-strong);
  }
}

.hds-dropdown-toggle-icon__wrapper {
  align-items: center;
  border-radius: 3px; // $hds-dropdown-toggle-border-radius - 1px padding - 1px border
  display: flex;
  justify-content: center;
  height: 32px;
  padding: 1px;
  width: 32px;

  img {
    border-radius: inherit;
    height: 100%;
    object-fit: cover; // this will make sure it's correct even if the item isn't square
    width: 100%;
  }
}

.hds-dropdown-toggle-icon__chevron {
  margin-left: 4px;

  @media (prefers-reduced-motion: no-preference) {
    transition: transform .3s;
  }

  .hds-dropdown-toggle-icon--is-open & {
    transform: rotate(-180deg);
  }
}

// TOGGLE/BUTTON

.hds-dropdown-toggle-button {
  box-shadow: none; // we override this to remove the elevation style

  .hds-button__icon {
    margin-left: 8px; // this overrides the rule `.hds-button__text + .hds-button__icon`
    margin-right: -6px; // we apply a negative margin to counter the padding-right of the button and reduce the visual space between the icon and the right border

    @media (prefers-reduced-motion: no-preference) {
      transition: transform .3s;
    }
  }
}


.hds-dropdown-toggle-button--is-open {
  .hds-button__icon {
    transform: rotate(-180deg);
  }
}


// LIST
// UL ELEMENT
// GOES INSIDE HDS::DISCLOSURE's :content block

.hds-dropdown-list {
  background-color: var(--token-color-surface-primary);
  border-radius: 6px;
  box-shadow: var(--token-surface-high-box-shadow);
  list-style: none;
  margin: 0;
  max-width: 400px;
  min-width: 200px;
  padding: 4px 0;
  width: max-content; // notice: this is important because being in a position absolute means the layout algorithm assigns a width of 0 and this impacts on the flex algorithm of the children (in some cases they don't use the full width)
}

.hds-dropdown-list--fixed-width {
  max-width: initial;
  min-width: initial;
}

.hds-dropdown-list--position-right {
  position: absolute;
  right: 0;
  top: calc(100% + 4px);
  z-index: 2; // https://github.com/hashicorp/design-system/issues/114
}

.hds-dropdown-list--position-left {
  left: 0;
  position: absolute;
  top: calc(100% + 4px);
  z-index: 2; // https://github.com/hashicorp/design-system/issues/114
}


// LIST > LIST-ITEM
// HDS::DROPDOWN::LIST-ITEM

.hds-dropdown-list-item__copy-item-title {
  color: var(--token-color-foreground-faint);
  padding: 2px 0 4px;
}

.hds-dropdown-list-item--copy-item {
  padding: 10px 16px 12px;
  width: 100%;

  button {
    background-color: transparent;
    border-radius: 5px;
    border: 1px solid var(--token-color-border-primary);
    color: var(--token-color-foreground-primary);
    display: flex;
    justify-content: space-between;
    padding: 12px 8px;
    width: 100%;

    &:hover,
    &.is-hover {
      background-color: var(--token-color-surface-interactive-hover);
      cursor: pointer;
    }

    @include hds-focus-ring-basic();

    &:focus,
    &.is-focus {
      //TODO this focus is just way too complex
      background-color:  var(--token-color-surface-action);
      border-color: var(--token-color-focus-action-internal);
    }

    &:active,
    &.is-active {
      background-color: var(--token-color-surface-interactive-active);
    }

    &.is-success {
      background-color: var(--token-color-surface-success);
      border-color: var(--token-color-border-success);

      .hds-dropdown-list-item__copy-item-icon {
        color: var(--token-color-foreground-success);
      }
    }
  }
}

.hds-dropdown-list-item__copy-item-text {
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.hds-dropdown-list-item__copy-item-icon {
  color: var(--token-color-foreground-action);
  flex: none;
  margin-left: 8px;
}

.hds-dropdown-list-item--description {
  color: var(--token-color-foreground-faint);
  padding: 2px 16px 4px;
}

.hds-dropdown-list-item--generic {
  padding-left: 16px;
  padding-right: 16px;
}


.hds-dropdown-list-item--interactive {
  isolation: isolate; // used to create a new stacking context (needed to have the pseudo element below text/icon but not the parent container)
  min-height: 36px;
  position: relative;

  // need to reset a few extra things to make the button visually appear the same as the link
  button {
    background-color: transparent;
    width: 100%;

    &:hover {
      cursor: pointer;
    }

  }

  // shared styles for links and buttons
  a, button {
    align-items: center;
    border: 1px solid transparent; // because a border for the button is needed for a11y, we apply it to both the button and the link so they have the same height
    display: flex;
    outline-style: solid; // used to avoid double outline+focus-ring in Safari (see https://github.com/hashicorp/design-system-components/issues/161#issuecomment-1031548656)
    outline-color: transparent;
    padding: 7px 9px 7px 15px; // notice: we're subtracting 1px because of the transparent border
    text-decoration: none;

    // this is used for the left "hover" indicator
    &::before {
      border-radius: 1px;
      bottom: 6px;
      content: '';
      left: 4px;
      position: absolute;
      top: 6px;
      width: 2px;
      z-index: -1;
    }

    // Notice: this is used for the active/focus states which have very specific positions
    // and also has a background color, so we can't use the existing focus-ring mixins
    &::after {
      border-radius: 5px;
      bottom: 0px;
      content: '';
      left: 10px;
      position: absolute;
      right: 4px;
      top: 0;
      z-index: -1;
    }

    // Notice: to avoid too much duplication we define two local CSS variables
    // and define their values in the color variants below

    &:hover,
    &.is-hover {
      color: var(--current-color-hover);
      &::before {
        background-color: currentColor;
      }
    }

    // default focus for browsers that still rely on ":focus"
    &:focus,
    &.is-focus {
      color: var(--current-color-focus);
      &::after {
        background-color: var(--current-background-color);
        box-shadow: var(--current-focus-ring-box-shadow);
        left: 4px;
      }
    }
    // undo the previous declaration for browsers that support ":focus-visible" but wouldn't normally show default focus styles
    &:focus:not(:focus-visible) {
      &::after {
        background-color: transparent;
        box-shadow: none;
      }
    }
    // set focus for browsers that support ":focus-visible"
    &:focus-visible {
      color: var(--current-color-focus);
      &::after {
        background-color: var(--current-background-color);
        box-shadow: var(--current-focus-ring-box-shadow);
        left: 4px;
      }
    }

    // remove the focus ring on "active + focused" state (by design)
    &:focus:active,
    &:focus-visible:active,
    &.is-focus.is-active {
      &::after {
        background-color: var(--current-background-color);
        box-shadow: none;
        left: 10px;
      }
    }

    &:active,
    &.is-active {
      color: var(--current-color-active);
      &::before {
        background-color: currentColor;
      }
      &::after {
        background-color: var(--current-background-color);
      }
    }
  }
}

.hds-dropdown-list-item__interactive-text {
  text-align: left; // the button element was centering text
}

.hds-dropdown-list-item__interactive-icon {
  margin-right: 8px;
}

.hds-dropdown-list-item--color-action {
  a, button {
    color: var(--token-color-foreground-primary);

    // assign the values to the local CSS variables used above
    --current-color-hover: var(--token-color-foreground-action-hover);
    --current-color-focus: var(--token-color-foreground-action-active);
    --current-color-active: var(--token-color-foreground-action-active);
    &::after {
      --current-background-color: var(--token-color-surface-action);
      --current-focus-ring-box-shadow: var(--token-focus-ring-action-box-shadow);
    }
  }
}

.hds-dropdown-list-item--color-critical {
  a, button {
    color: var(--token-color-foreground-critical);

    // assign the values to the local CSS variables used above
    --current-color-hover: var(--token-color-palette-red-300);
    --current-color-focus: var(--token-color-palette-red-400);
    --current-color-active: var(--token-color-palette-red-400);
    &::after {
      --current-background-color: var(--token-color-surface-critical);
      --current-focus-ring-box-shadow: var(--token-focus-ring-critical-box-shadow);
    }
  }
}

.hds-dropdown-list-item--separator {
  height: 4px;
  position: relative;
  width: 100%;

  &::before {
    border-bottom: 1px solid var(--token-color-border-primary);
    bottom: 0;
    content: '';
    left: 6px;
    position: absolute;
    right: 6px;
  }
}

.hds-dropdown-list-item--title {
  color: var(--token-color-foreground-strong);
  padding: 10px 16px 4px;
}

