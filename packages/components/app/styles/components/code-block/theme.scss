// THEMING

.hds-code-block--theme-dark {
  // COLORS

  // Descriptive color names:

  --blue: #2d8eff;
  --cyan: #32fff7;
  --matrix-green: #86ff13;
  --orange: #ffa800;
  --purple: #c76cff;
  --red: #ff3b20;

  // Semantic color names:

  // Base UI colors:
  --foreground-primary: #efeff1;
  --foreground-faint: #b2b6bd;
  --surface-primary: #0d0e12;
  --surface-faint: #15181e;
  // status ----
  --foreground-success: #009241;
  --foreground-critical: #ef3016;
  // interactive ---
  --foreground-interactive: #dedfe3;
  --foreground-interactive-hover: #fff;
  --foreground-interactive-active: #f1f2f3;
  // actions ---
  --foreground-action-default: #2b89ff;
  --foreground-action-hover: #389aff;
  --foreground-action-active: #4ca1ff;
  // borders (TODO: Names are confusing) ----
  --border-strong: rgba(178, 182, 189, 40%); // #b2b6bd66
  --border-primary: rgba(178, 182, 189, 20%); // #b2b6bd33

  // CodeBlock UI:
  // borders ----
  // (TODO: Should this reference one of the basic border colors above or be replaced?)
  --code-block-border: rgba(97, 104, 117, 40%);
  // lines of code - highlighted ----
  --line-highlight: rgba(0, 74, 222, 30%);
  --line-highlight-left-border: #0046d1;

  // Syntax highlighting tokens:
  // general ----
  --token: var(--matrix-green);
  // specific ----
  --atrule: var(--blue);
  --attr-name: var(--blue);
  --attr-value: var(--blue);
  --boolean: var(--purple);
  --builtin: var(--orange);
  --char: var(--orange);
  --class-name: var(--matrix-green);
  --comment: var(--foreground-faint);
  --control: var(--cyan);
  --constant: var(--purple);
  --deleted: var(--red);
  --entity: var(--matrix-green);
  --function: var(--blue);
  --important: var(--red);
  --keyword: var(--matrix-green);
  --namespace: var(--red);
  --number: var(--purple);
  --operator: var(--cyan);
  --prolog: var(--foreground-primary);
  --property: var(--blue);
  --punctuation: var(--foreground-primary);
  --regex: var(--orange);
  --script: var(--foreground-primary);
  --selector: var(--matrix-green);
  --string: var(--orange);
  --symbol: var(--orange);
  --tag: var(--matrix-green);
  --url: var(--cyan);
  // language-scoped:
  // css ----
  --lang-css: var(--purple);
  --lang-css-token: var(--matrix-green);
  --lang-css-atrule: var(--purple);
  --lang-css-entity: var(--blue);
  --lang-css-function: var(--cyan);
  --lang-css-property: var(--cyan);
  --lang-css-punctuation: var(--orange);
  --lang-css-not-atrule: var(--foreground-primary);
  --lang-css-selector: var(--blue);
  --lang-css-url: var(--orange);
  // javascript ----
  --lang-js-constant: var(--orange);
  // markup/html ----
  --lang-markup-attr-value: var(--yellow);
  --lang-markup-entity-named: var(--purple);
  --lang-markup-entity-not-named: var(--matrix-green);
}


.hds-code-block {
  color: var(--foreground-primary);
  background-color: var(--surface-primary);

  // Lines ----

  .line-numbers .line-numbers-rows {
    border-color: var(--code-block-border);
  }

  .line-highlight {
    // Overlays code text so needs to be semi-transparent
    background: var(--line-highlight);
    border-left: 4px solid var(--line-highlight-left-border);
  }

  // Syntax highlighting ----

  // General tokens
  .token { color: var(--token); }

  .token.atrule { color: var(--atrule); }
  .token.attr-name { color: var(--attr-name); }
  .token.attr-value { color: var(--attr-value); }
  .token.boolean { color: var(--boolean); }
  .token.builtin { color: var(--builtin); }
  .token.char { color: var(--char); }
  .token.class-name { color: var(--class-name); }
  .token.comment { color: var(--comment); }
  .token.constant { color: var(--constant); }
  .token.deleted { color: var(--deleted); }
  .token.entity { color: var(--entity); }
  .token.function { color: var(--function); }
  .token.important { color: var(--important); }
  .token.keyword { color: var(--keyword); }
  .token.namespace { color: var(--namespace); }
  .token.number { color: var(--number); }
  .token.operator { color: var(--operator); }
  .token.punctuation { color: var(--punctuation); }
  .token.prolog { color: var(--prolog); }
  .token.property { color: var(--property); }
  .token.regex { color: var(--regex); }
  .token.script { color: var(--script); }
  .token.selector { color: var(--selector); }
  .token.string { color: var(--string); }
  .token.symbol { color: var(--symbol); }
  .token.tag { color: var(--tag); }
  .token.url { color: var(--url); }
  .token.variable { color: var(--comment); }

  // Language-specific
  .language-css {
    color: var(--lang-css);

    .token { color: var(--lang-css-token); }
    .token.atrule { color: var(--lang-css-atrule); }
    .token.rule:not(.atrule) { color: var(--lang-css-not-atrule); }
    .token.entity { color: var(--lang-css-entity); }
    .token.function { color: var(--lang-css-function); }
    .token.property { color: var(--lang-css-property); }
    .token.punctuation { color: var(--lang-css-punctuatione); }
    .token.selector { color: var(--lang-css-selector); }
    .token.url { color: var(--lang-css-url); }
  }

  .language-javascript {
    .token.constant { color: var(--lang-js-constant); }
  }

  .language-markup,
  .language-html {
    .token.attr-value { color: var(--lang-markup-attr-value); }
    .token.entity.named-entity { color: var(--lang-markup-entity-named); }
    .token.entity:not(.named-entity) { color: var(--lang-markup-entity-not-named); }
  }
}
