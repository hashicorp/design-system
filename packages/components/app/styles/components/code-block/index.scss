/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

//
// CODE-BLOCK
//


// Note: For now, the "theme" contains mainly color styles
@import "theme";

.hds-code-block {
  // DIMENSIONS
  // Q: Change to sass variables? (probably no need to expose...)
  --code-block-line-numbers-width: 49px; // 3em = 49px
  --code-block-code-padding: 16px;
}

// CODE-BLOCK PARENT/WRAPPER

.hds-code-block {
  position: relative;
  overflow: hidden; // So header corners don't poke out from container
  font-family: var(--hds-typography-code-200);
  // Note: may change border-radius to be toggled by an "@isRounded" property
  border-radius: 6px;

  pre,
  code {
    line-height: 1.5;
    white-space: pre;
    text-align: left;
    text-shadow: none;
    word-wrap: normal;
    word-break: normal;
    word-spacing: normal;
    tab-size: 4;
    hyphens: none;

    @media print { text-shadow: none; }
  }
}

// CHILD COMPONENTS / ELEMENTS

// Header (contains title & description)
.hds-code-block__header {
  display: flex;
  flex-flow: column;
  gap: 4px;
  padding: 8px var(--code-block-code-padding);
  background-color: var(--surface-faint);
  border-bottom: 1px solid var(--code-block-border);
}

.hds-code-block__description { color: var(--foreground-faint); }

// Code
.code-block__code {
  display: block;
  margin: 0;
  padding: var(--code-block-code-padding);
  overflow: auto;
}

// CopyButton
.hds-code-block__copy-button {
  // Overriding default colors
  color: var(--foreground-primary);
  background-color: var(--surface-faint);
  border: 1px solid var(--border-strong);

  &:hover,
  &.mock-hover {
    background-color: var(--surface-primary);
    border-color: var(--border-strong);
  }

  &:active,
  &.mock-active {
    background-color: #2b303c; // TODO: can't find color defined in Figma
  }

  &:focus,
  &.mock-focus,
  &:focus-visible {
    background-color: var(--surface-faint);
  }

  &.hds-copy-button--status-success {
    .flight-icon {
      color: var(--foreground-success);
    }
  }

  &.hds-copy-button--status-error {
    .flight-icon {
      color: var(--foreground-critical);
    }
  }

  .flight-icon { color: var(--foreground-primary); }
}

// VARIANTS

// hasCopyButton
.hds-code-block--has-copy-button {
  .hds-code-block__copy-button {
    position: absolute;
    top: 8px;
    right: 8px;
  }
}

// LineWrapping
.hds-code-block--has-line-wrapping {
  pre,
  code { white-space: pre-wrap; }
}

// Linenumbers
.hds-code-block {
  // LineNumbers plugin styles ---------------
  &.line-numbers {
    counter-reset: linenumber;

    .code-block__code {
      position: relative;
      // reserve space for line numbers
      padding-left: calc(var(--code-block-line-numbers-width) + var(--code-block-code-padding));
    }

    .line-numbers-rows {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: var(--code-block-line-numbers-width);
      padding: var(--code-block-code-padding) 0;
      border-right-width: 1px;
      border-right-style: solid;
      user-select: none;
      pointer-events: none;

      > span {
        display: block;
        counter-increment: linenumber;

        &::before {
          display: block;
          padding-right: var(--code-block-code-padding);
          text-align: right;
          content: counter(linenumber);
        }
      }
    }
  }

  .line-numbers-rows .line-numbers-rows > span
  // LineHighlight plugin styles (works with lineNumbers) ------------
  pre[data-line] {
    position: relative;
    padding: 1em 0 1em 3em;
  }

  // Highlighted Lines
  .line-highlight {
    position: absolute;
    right: 0;
    left: 0;
    margin-top: calc(var(--code-block-code-padding) * -1);
    line-height: inherit;
    pointer-events: none;
  }

  @media print {
    .line-highlight {
      /*
       * This will prevent browsers from replacing the background color with white.
       * It's necessary because the element is layered on top of the displayed code.
       */
      -webkit-print-color-adjust: exact;
      color-adjust: exact;
    }
  }

  &.line-numbers .line-highlight::before,
  &.line-numbers .line-highlight::after {
    content: none;
  }

  // not using currently...
  pre[id].linkable-line-numbers span.line-numbers-rows {
    pointer-events: all;
  }

  pre[id].linkable-line-numbers span.line-numbers-rows > span::before {
    cursor: pointer;
  }
}

// Commmon tokens

.token.bold { font-weight: bold; }
.token.italic { font-style: italic; }
