/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

//
// CODE-EDITOR
//

.hds-code-editor {
  overflow: auto;
  overscroll-behavior: contain;
  border: 1px solid;

  // -----------------------------------------
  // Copied from codemiror:

  /* BASICS */

  .CodeMirror {
    height: auto;
    padding: 4px;
    color: black;

    /* Set height, width, borders, and global font properties here */
    font-family: monospace;
    direction: ltr;
  }

  /* PADDING */

  .CodeMirror-lines {
    padding: 4px 0; /* Vertical padding around content */
  }

  .CodeMirror pre.CodeMirror-line,
  .CodeMirror pre.CodeMirror-line-like {
    padding: 0 4px; /* Horizontal padding of content */
  }

  .CodeMirror-scrollbar-filler,
  .CodeMirror-gutter-filler {
    background-color: white; /* The little square between H and V scrollbars */
  }

  /* GUTTER */

  .CodeMirror-gutters {
    white-space: nowrap;
    background-color: #f7f7f7;
    border-right: 1px solid #ddd;
  }

  // background of line-numbers column
  // .CodeMirror-linenumbers {}

  .CodeMirror-linenumber {
    min-width: 20px;
    padding: 0 3px 0 5px;
    color: #999;
    white-space: nowrap;
    text-align: right;
  }

  .CodeMirror-guttermarker { color: black; }
  .CodeMirror-guttermarker-subtle { color: #999; }

  /* CURSOR */

  .CodeMirror-cursor {
    width: 0;
    border-right: none;
    border-left: 1px solid black;
  }

  /* Shown when moving in bi-directional text */
  .CodeMirror div.CodeMirror-secondarycursor {
    border-left: 1px solid silver;
  }

  .cm-fat-cursor .CodeMirror-cursor {
    width: auto;
    background: #7e7;
    border: 0 !important;
  }

  .cm-fat-cursor div.CodeMirror-cursors {
    z-index: 1;
  }

  .cm-fat-cursor .CodeMirror-line::selection,
  .cm-fat-cursor .CodeMirror-line > span::selection,
  .cm-fat-cursor .CodeMirror-line > span > span::selection { background: transparent; }

  .cmcursor .CodeMirror-line::selection,
  .cmcursor .CodeMirror-line > span::selection,
  .cmcursor .CodeMirror-line > span > span::selection { background: transparent; }
  .cm-fat-cursor { caret-color: transparent; }

  // @keyframes blink {
  //   0% {}
  //   50% { background-color: transparent; }
  //   100% {}
  // }

  // @keyframes blink {
  //   0% {}
  //   50% { background-color: transparent; }
  //   100% {}
  // }

  // @keyframes blink {
  //   0% {}
  //   50% { background-color: transparent; }
  //   100% {}
  // }

  /* Can style cursor different in overwrite (non-insert) mode */
  // .CodeMirror-overwrite .CodeMirror-cursor {}

  .cm-tab {
    display: inline-block;
    text-decoration: inherit;
  }

  .CodeMirror-rulers {
    position: absolute;
    top: -50px;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
  }

  .CodeMirror-ruler {
    position: absolute;
    top: 0;
    bottom: 0;
    border-left: 1px solid #ccc;
  }

  /* DEFAULT THEME */

  .cm-s-default .cm-header { color: blue; }
  .cm-s-default .cm-quote { color: #090; }
  .cm-negative { color: #d44; }
  .cm-positive { color: #292; }

  .cm-header,
  .cm-strong { font-weight: bold; }
  .cm-em { font-style: italic; }
  .cm-link { text-decoration: underline; }
  .cm-strikethrough { text-decoration: line-through; }

  .cm-s-default .cm-keyword { color: #708; }
  .cm-s-default .cm-atom { color: #219; }
  .cm-s-default .cm-number { color: #164; }
  .cm-s-default .cm-def { color: #00f; }

  .cm-s-default .cm-variable,
  .cm-s-default .cm-punctuation,
  .cm-s-default .cm-property,
  .cm-s-default .cm-variable-2 {
    color: #05a;
  }

  .cm-s-default .cm-variable-3,
  .cm-s-default .cm-type { color: #085; }
  .cm-s-default .cm-comment { color: #a50; }
  .cm-s-default .cm-string { color: #a11; }
  .cm-s-default .cm-string-2 { color: #f50; }
  .cm-s-default .cm-meta { color: #555; }
  .cm-s-default .cm-qualifier { color: #555; }
  .cm-s-default .cm-builtin { color: #30a; }
  .cm-s-default .cm-bracket { color: #997; }
  .cm-s-default .cm-tag { color: #170; }
  .cm-s-default .cm-attribute { color: #00c; }
  .cm-s-default .cm-hr { color: #999; }
  .cm-s-default .cm-link { color: #00c; }

  .cm-s-default .cm-error { color: #f00; }
  .cm-invalidchar { color: #f00; }

  .CodeMirror-composing { border-bottom: 2px solid; }

  /* Default styles for common addons */

  div.CodeMirror span.CodeMirror-matchingbracket { color: #0b0; }
  div.CodeMirror span.CodeMirror-nonmatchingbracket { color: #a22; }
  .CodeMirror-matchingtag { background: rgba(255, 150, 0, 30%); }
  .CodeMirror-activeline-background { background: #e8f2ff; }

  /* STOP */

  /* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

  .CodeMirror {
    position: relative;
    overflow: hidden;
    background: white;
  }

  .CodeMirror-scroll {
    position: relative;
    z-index: 0;
    height: 100%;
    margin-right: -50px;

    /* 50px is the magic margin used to hide the element's real scrollbars */

    /* See overflow: hidden in .CodeMirror */
    margin-bottom: -50px;
    padding-bottom: 50px;
    overflow: scroll !important; /* Things will break if this is overridden */
    outline: none; /* Prevent dragging from highlighting the element */
  }

  .CodeMirror-sizer {
    position: relative;
    border-right: 50px solid transparent;
  }

  /* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
  .CodeMirror-vscrollbar,
  .CodeMirror-hscrollbar,
  .CodeMirror-scrollbar-filler,
  .CodeMirror-gutter-filler {
    position: absolute;
    z-index: 6;
    display: none;
    outline: none;
  }

  .CodeMirror-vscrollbar {
    top: 0;
    right: 0;
    overflow-x: hidden;
    overflow-y: scroll;
  }

  .CodeMirror-hscrollbar {
    bottom: 0;
    left: 0;
    overflow-x: scroll;
    overflow-y: hidden;
  }

  .CodeMirror-scrollbar-filler {
    right: 0;
    bottom: 0;
  }

  .CodeMirror-gutter-filler {
    bottom: 0;
    left: 0;
  }

  .CodeMirror-gutters {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 3;
    min-height: 100%;
  }

  .CodeMirror-gutter {
    display: inline-block;
    height: 100%;
    margin-bottom: -50px;
    white-space: normal;
    vertical-align: top;
  }

  .CodeMirror-gutter-wrapper {
    position: absolute;
    z-index: 4;
    background: none !important;
    border: none !important;
  }

  .CodeMirror-gutter-background {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 4;
  }

  .CodeMirror-gutter-elt {
    position: absolute;
    z-index: 4;
    cursor: default;
  }
  .CodeMirror-gutter-wrapper ::selection { background-color: transparent; }
  .CodeMirrorwrapper ::selection { background-color: transparent; }

  .CodeMirror-lines {
    min-height: 1px; /* prevents collapsing before first draw */
    cursor: text;
  }

  .CodeMirror pre.CodeMirror-line,
  .CodeMirror pre.CodeMirror-line-like {
    position: relative;
    z-index: 2;
    margin: 0;
    overflow: visible;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    white-space: pre;
    word-wrap: normal;
    background: transparent;
    border-width: 0;

    /* Reset some styles that the rest of the page might have set */
    border-radius: 0;
    -webkit-tap-highlight-color: transparent;
    font-variant-ligatures: contextual;
  }

  .CodeMirror-wrap pre.CodeMirror-line,
  .CodeMirror-wrap pre.CodeMirror-line-like {
    white-space: pre-wrap;
    word-wrap: break-word;
    word-break: normal;
  }

  .CodeMirror-linebackground {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 0;
  }

  .CodeMirror-linewidget {
    position: relative;
    z-index: 2;
    padding: 0.1px; /* Force widget margins to stay inside of the container */
  }

  // .CodeMirror-widget {}

  .CodeMirror-rtl pre { direction: rtl; }

  .CodeMirror-code {
    outline: none;
  }

  /* Force content-box sizing for the elements where we expect it */
  .CodeMirror-scroll,
  .CodeMirror-sizer,
  .CodeMirror-gutter,
  .CodeMirror-gutters,
  .CodeMirror-linenumber {
    box-sizing: content-box;
  }

  .CodeMirror-measure {
    position: absolute;
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden;
  }

  .CodeMirror-cursor {
    position: absolute;
    pointer-events: none;
  }
  .CodeMirror-measure pre { position: static; }

  div.CodeMirror-cursors {
    position: relative;
    z-index: 3;
    visibility: hidden;
  }

  div.CodeMirror-dragcursors {
    visibility: visible;
  }

  .CodeMirror-focused div.CodeMirror-cursors {
    visibility: visible;
  }

  .CodeMirror-selected { background: #d9d9d9; }
  .CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
  .CodeMirror-crosshair { cursor: crosshair; }

  .CodeMirror-line::selection,
  .CodeMirror-line > span::selection,
  .CodeMirror-line > span > span::selection { background: #d7d4f0; }

  .CodeMirror-line::selection,
  .CodeMirror-line > span::selection,
  .CodeMirror-line > span > span::selection { background: #d7d4f0; }

  .cm-searching {
    background-color: #ffa;
    background-color: rgba(255, 255, 0, 40%);
  }

  /* Used to force a border model for a node */
  .cm-force-border { padding-right: 0.1px; }

  @media print {
    /* Hide the cursor when printing */
    .CodeMirror div.CodeMirror-cursors {
      visibility: hidden;
    }
  }

  /* See issue #2901 */
  .cm-tab-wrap-hack::after { content: ""; }

  /* Help users use markselection to safely style text background */
  span.CodeMirror-selectedtext { background: none; }


  // THEME ------------------------------------------

  /*

    Name:       dracula
    Author:     Michael Kaminsky (http://github.com/mkaminsky11)

    Original dracula color scheme by Zeno Rocha (https://github.com/zenorocha/dracula-theme)

*/

  .cm-s-dracula.CodeMirror,
  .cm-s-dracula .CodeMirror-gutters {
    color: #f8f8f2 !important;
    background-color: #282a36 !important;
    border: none;
  }
  .cm-s-dracula .CodeMirror-gutters { color: #282a36; }
  .cm-s-dracula .CodeMirror-cursor { border-left: solid thin #f8f8f0; }
  .cm-s-dracula .CodeMirror-linenumber { color: #6d8a88; }
  .cm-s-dracula .CodeMirror-selected { background: rgba(255, 255, 255, 10%); }

  .cm-s-dracula .CodeMirror-line::selection,
  .cm-s-dracula .CodeMirror-line > span::selection,
  .cm-s-dracula .CodeMirror-line > span > span::selection { background: rgba(255, 255, 255, 10%); }

  .cmdracula .CodeMirror-line::selection,
  .cmdracula .CodeMirror-line > span::selection {
    background: rgba(255, 255, 255, 10%);
  }
  .cm-s-dracula span.cm-comment { color: #6272a4; }

  .cm-s-dracula span.cm-string,
  .cm-s-dracula span.cm-string-2 { color: #f1fa8c; }
  .cm-s-dracula span.cm-number { color: #bd93f9; }
  .cm-s-dracula span.cm-variable { color: #50fa7b; }
  .cm-s-dracula span.cm-variable-2 { color: white; }
  .cm-s-dracula span.cm-def { color: #50fa7b; }
  .cm-s-dracula span.cm-operator { color: #ff79c6; }
  .cm-s-dracula span.cm-keyword { color: #ff79c6; }
  .cm-s-dracula span.cm-atom { color: #bd93f9; }
  .cm-s-dracula span.cm-meta { color: #f8f8f2; }
  .cm-s-dracula span.cm-tag { color: #ff79c6; }
  .cm-s-dracula span.cm-attribute { color: #50fa7b; }
  .cm-s-dracula span.cm-qualifier { color: #50fa7b; }
  .cm-s-dracula span.cm-property { color: #66d9ef; }
  .cm-s-dracula span.cm-builtin { color: #50fa7b; }

  .cm-s-dracula span.cm-variable-3,
  .cm-s-dracula span.cm-type { color: #ffb86c; }

  .cm-s-dracula .CodeMirror-activeline-background { background: rgba(255, 255, 255, 10%); }

  .cm-s-dracula .CodeMirror-matchingbracket {
    color: white !important;
    text-decoration: underline;
  }
}