/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

// SUPER-SELECT

// Style overrides:

.hds-super-select .ember-basic-dropdown {

  // TRIGGER

  .ember-basic-dropdown-trigger,
  .ember-power-select-trigger {
    max-width: 100%;
    min-height: 36px;
    padding: var(--token-form-control-padding);
    padding-right: calc(var(--token-form-control-padding) + 24px); // extra space for the icon
    padding-left: 11px; // (To match Figma visual padding seems it should be 11px vs. 12px)
    color: var(--token-form-control-base-foreground-value-color);
    line-height: var(--token-typography-body-200-line-height);
    background-color: var(--token-form-control-base-surface-color-default);
    background-image: var(--token-form-select-background-image-data-url);
    background-repeat: no-repeat;
    background-position: right var(--token-form-select-background-image-position-right-x) center, top 8px left 20px;
    background-size: var(--token-form-select-background-image-size) var(--token-form-select-background-image-size);
    border: var(--token-form-control-border-width) solid var(--token-form-control-base-border-color-default);
    border-radius: var(--token-form-control-border-radius);
    box-shadow: var(--token-elevation-low-box-shadow);

    &:hover,
    &.mock-hover {
      border-color: var(--token-form-control-base-border-color-hover);
    }

    &:focus,
    &.mock-focus {
      border-color: var(--token-color-focus-action-internal);
      outline: 3px solid var(--token-color-focus-action-external);
      outline-offset: 0;
    }

    &[aria-expanded="true"] {
      &.ember-basic-dropdown-trigger--in-place {
        border-radius: var(--token-form-control-border-radius);
      }
    }

    // Hide default trigger dropdown arrow
    .ember-power-select-status-icon {
      display: none;
    }

    // Trigger content (Single Select):
    .ember-power-select-placeholder,
    .ember-power-select-selected-item {
      margin-left: 0;
    }

    .ember-power-select-placeholder {
      color: var(--token-form-control-base-foreground-placeholder-color);
    }

    &[aria-disabled="true"] {
      color: var(--token-form-control-disabled-foreground-color);
      background-color: var(--token-form-control-disabled-surface-color);
      background-image: var(--token-form-select-background-image-data-url-disabled);
      border-color: var(--token-form-control-disabled-border-color);
      box-shadow: none;
      cursor: not-allowed;
      opacity: 1;

      .ember-power-select-selected-item {
        opacity: inherit;
      }
    }
  }

  // DROPDOWN

  .ember-basic-dropdown-content {
    margin: 4px 0;
    border: var(--token-form-control-border-width) solid var(--token-form-control-base-border-color-default);
    border-radius: var(--token-form-control-border-radius);

    &.ember-basic-dropdown-content--below,
    &.ember-basic-dropdown-content--in-place {
      box-shadow: var(--token-elevation-high-box-shadow), var(--token-elevation-high-box-shadow);
    }

    &.ember-basic-dropdown-content--above {
      top: unset !important; // override inline style (TODO: update in JS)
      bottom: 100%;
    }
  }

  // Options List
  .ember-power-select-options {
    padding: 3px;
  }

  // Options Item
  .ember-power-select-option {
    position: relative;
    min-height: 36px;
    padding: 7px;
    padding-left: 36px;
    line-height: var(--token-typography-body-200-line-height);
    overflow-wrap: break-word; // when used in combination with flex parent, content may overflow (therefore not using flex layout on parent)

    + .ember-power-select-option {
      margin-top: 8px;
    }

    // states
    &[aria-current="true"] {
      color: var(--token-form-control-base-foreground-value-color);
      background-color: var(--token-form-control-base-surface-color-default);
    }

    &[aria-selected="true"] {
      background-color: var(--token-form-control-base-surface-color-default);
    }
  }

  // Search
  // (Single select, to be added to Multiple | in @beforeOptionsComponent area)
  .ember-power-select-search {
    margin-bottom: 3px;
    padding: 11px 11px 0 11px;
    border-radius: var(--token-form-control-border-radius);
  }

  .ember-power-select-search-input {
    width: 100%;
    padding: var(--token-form-control-padding);
    color: var(--token-form-control-base-foreground-value-color);
    line-height: 1rem;
    background-color: var(--token-form-control-base-surface-color-default);
    border: var(--token-form-control-border-width) solid var(--token-form-control-base-border-color-default);
    border-radius: var(--token-form-control-border-radius);
    box-shadow: var(--token-elevation-inset-box-shadow);

    // placeholder
    &::placeholder {
      color: var(--token-form-control-base-foreground-placeholder-color);
    }

    // status
    &:hover,
    &.mock-hover {
      border-color: var(--token-form-control-base-border-color-hover);
    }

    // focus (same for all the states)
    &:focus,
    &.mock-focus {
      border-color: var(--token-color-focus-action-internal);
      // Notice: Safari doesn't apply a rounded border
      outline: 3px solid var(--token-color-focus-action-external);
      outline-offset: 0;
    }

    &[type="search"] {
      padding-left: calc(var(--token-form-control-padding) + 24px); // extra space for the icon
      background-image: var(--token-form-text-input-background-image-data-url-search);
      background-repeat: no-repeat;
      background-position: var(--token-form-text-input-background-image-position-x) 50%;
      background-size: var(--token-form-text-input-background-image-size);

      &::-webkit-search-cancel-button {
        width: var(--token-form-text-input-background-image-size);
        height: var(--token-form-text-input-background-image-size);
        background-image: var(--token-form-text-input-background-image-data-url-search-cancel);
        background-position: center center;
        background-size: var(--token-form-text-input-background-image-size);
        appearance: none;
      }
    }
  }

  // Multiple Select
  // Tag List (Note: May be replaced with HDS Tag component in the future)
  .ember-power-select-multiple-options {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
    list-style: none;
  }

  // tag items
  .ember-power-select-multiple-option {
    float: none;
    margin: 0;
    font-size: var(--token-typography-body-100-font-size);
    line-height: var(--token-typography-body-100-line-height);
    background-color: var(--token-form-control-base-surface-color-default);
    border-radius: 500px;
  }
}


// SUBCOMPONENTS

// SINGLE
.hds-super-select-single .ember-basic-dropdown {

  // Options Item
  .ember-power-select-option {
    &[aria-selected="true"] {
      color: var(--token-color-foreground-action);

      // checkmark icon:
      background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14.78 4.28a.75.75 0 00-1.06-1.06l-7.97 7.97-3.47-3.47a.75.75 0 00-1.06 1.06l4 4a.75.75 0 001.06 0l8.5-8.5z' fill='%231060ff'/%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: left 12px center;
      background-size: var(--token-form-select-background-image-size) var(--token-form-select-background-image-size);
    }

    &:hover {
      color: var(--token-color-foreground-action-hover);

      // left border
      &::before {
        position: absolute;
        top: 6px;
        bottom: 6px;
        left: 0;
        width: 2px;
        background-color: var(--token-color-foreground-action-hover);
        border-radius: 500px; // Makes it look slightly rounded on the ends (doesn't match Figma exactly)
        content: "";
      }
    }

    &:active {
      color: var(--token-color-foreground-action-active);

      // left border
      &::before {
        background-color: var(--token-color-foreground-action-active);
      }
    }
  }
}

// MULTIPLE
.hds-super-select-multiple .ember-basic-dropdown {

  // Options Item
  .ember-power-select-option {
    // image of unchecked checkbox
    background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg fill='none' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg filter='url(%23a)'%3E%3Crect width='16' height='16' rx='3' fill='%23fff'/%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' stroke='%238C909C'/%3E%3C/g%3E%3Cdefs%3E%3Cfilter id='a' x='0' y='0' width='16' height='17' color-interpolation-filters='sRGB' filterUnits='userSpaceOnUse'%3E%3CfeFlood flood-opacity='0' result='BackgroundImageFix'/%3E%3CfeBlend in='SourceGraphic' in2='BackgroundImageFix' result='shape'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeMorphology in='SourceAlpha' radius='1' result='effect1_innerShadow_55445_78129'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='1'/%3E%3CfeComposite in2='hardAlpha' k2='-1' k3='1' operator='arithmetic'/%3E%3CfeColorMatrix values='0 0 0 0 0.396078 0 0 0 0 0.415686 0 0 0 0 0.462745 0 0 0 0.1 0'/%3E%3CfeBlend in2='shape' result='effect1_innerShadow_55445_78129'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: left 12px center;
    background-size: var(--token-form-select-background-image-size) var(--token-form-select-background-image-size);

    &:hover {
      // image of hover checkbox
      background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg fill='none' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg filter='url(%23a)'%3E%3Crect width='16' height='16' rx='3' fill='%23F1F2F3'/%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' stroke='%23656A76'/%3E%3C/g%3E%3Cdefs%3E%3Cfilter id='a' x='0' y='0' width='16' height='17' color-interpolation-filters='sRGB' filterUnits='userSpaceOnUse'%3E%3CfeFlood flood-opacity='0' result='BackgroundImageFix'/%3E%3CfeBlend in='SourceGraphic' in2='BackgroundImageFix' result='shape'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeMorphology in='SourceAlpha' radius='1' result='effect1_innerShadow_55445_78120'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='1'/%3E%3CfeComposite in2='hardAlpha' k2='-1' k3='1' operator='arithmetic'/%3E%3CfeColorMatrix values='0 0 0 0 0.396078 0 0 0 0 0.415686 0 0 0 0 0.462745 0 0 0 0.1 0'/%3E%3CfeBlend in2='shape' result='effect1_innerShadow_55445_78120'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E");
    }

    &[aria-disabled="true"] {
      // image of disabled checkbox
      background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg fill='none' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='16' height='16' rx='3' fill='%23FAFAFA'/%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' stroke='%23656A76' stroke-opacity='.2'/%3E%3C/svg%3E");
    }

    &[aria-selected="true"] {
      // image of checked checkbox
      background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg fill='none' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' fill='%231060FF'/%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' stroke='%230C56E9'/%3E%3Cpath d='m11.125 5.875-4.25 4.25' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3Cpath d='m4.875 8.125 2 2' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3C/svg%3E");

      &:hover {
        // image of checked checkbox hover state
        background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg fill='none' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' fill='%230C56E9'/%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' stroke='%230046D1'/%3E%3Cpath d='m11.125 5.875-4.25 4.25' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3Cpath d='m4.875 8.125 2 2' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3C/svg%3E");
      }

      &[aria-disabled="true"] {
        // image of checked checkbox disabled state
        background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg fill='none' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='16' height='16' rx='3' fill='%23FAFAFA'/%3E%3Crect x='.5' y='.5' width='15' height='15' rx='2.5' stroke='%23656A76' stroke-opacity='.2'/%3E%3Cpath d='m11.125 5.875-4.25 4.25' stroke='%238C909C' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3Cpath d='m4.875 8.125 2 2' stroke='%238C909C' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3C/svg%3E");
      }
    }
  }
}

// VARIANTS

// When renderInPlace=true, matchTriggerWidth=false has no effect unless we override the width of the dropdown content
// (fixes bug with ember-power-select)
.hds-super-select--match-trigger-width-false {
  .ember-power-select-dropdown.ember-basic-dropdown-content--in-place {
      width: auto;
  }
}
