{"version":3,"file":"hds-code-editor.js","sources":["../../src/modifiers/hds-code-editor.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Modifier from 'ember-modifier';\nimport { assert, warn } from '@ember/debug';\nimport { registerDestructor } from '@ember/destroyable';\nimport { task } from 'ember-concurrency';\nimport config from 'ember-get-config';\n\n// hds-dark theme\nimport hdsDarkTheme from './hds-code-editor/themes/hds-dark-theme.ts';\nimport hdsDarkHighlightStyle from './hds-code-editor/highlight-styles/hds-dark-highlight-style.ts';\n\nimport type { HdsCodeEditorLanguages } from './hds-code-editor/types.ts';\nimport type { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport type {\n  StreamLanguage as StreamLanguageType,\n  StreamParser as StreamParserType,\n} from '@codemirror/language';\nimport type { Extension } from '@codemirror/state';\nimport type { EditorView, ViewUpdate } from '@codemirror/view';\nimport type Owner from '@ember/owner';\n\ntype HdsCodeEditorBlurHandler = (editor: EditorView, event: FocusEvent) => void;\n\nexport interface HdsCodeEditorSignature {\n  Args: {\n    Named: {\n      ariaDescribedBy?: string;\n      ariaLabel?: string;\n      ariaLabelledBy?: string;\n      language?: HdsCodeEditorLanguages;\n      value?: string;\n      onInput?: (newVal: string) => void;\n      onBlur?: HdsCodeEditorBlurHandler;\n      onSetup?: (editor: EditorView) => unknown;\n    };\n  };\n}\n\nasync function defineStreamLanguage(streamParser: StreamParserType<unknown>) {\n  const { StreamLanguage } = await import('@codemirror/language');\n\n  return StreamLanguage.define(streamParser);\n}\n\nconst LOADER_HEIGHT = '164px';\n\nconst LANGUAGES: Record<\n  HdsCodeEditorLanguages,\n  { load: () => Promise<Extension | StreamLanguageType<unknown>> }\n> = {\n  ruby: {\n    load: async () => {\n      const { ruby } = await import('@codemirror/legacy-modes/mode/ruby');\n      return defineStreamLanguage(ruby);\n    },\n  },\n  sentinel: {\n    load: async () => {\n      const { sentinel } = await import(\n        './hds-code-editor/languages/sentinel.ts'\n      );\n      return defineStreamLanguage(sentinel);\n    },\n  },\n  shell: {\n    load: async () => {\n      const { shell } = await import('@codemirror/legacy-modes/mode/shell');\n      return defineStreamLanguage(shell);\n    },\n  },\n  go: {\n    load: async () => (await import('@codemirror/lang-go')).go(),\n  },\n  hcl: {\n    load: async () => (await import('codemirror-lang-hcl')).hcl(),\n  },\n  json: {\n    load: async () => (await import('@codemirror/lang-json')).json(),\n  },\n  sql: {\n    load: async () => (await import('@codemirror/lang-sql')).sql(),\n  },\n  yaml: {\n    load: async () => (await import('@codemirror/lang-yaml')).yaml(),\n  },\n} as const;\n\nexport default class HdsCodeEditorModifier extends Modifier<HdsCodeEditorSignature> {\n  editor!: EditorView;\n  element!: HTMLElement;\n\n  onBlur: HdsCodeEditorSignature['Args']['Named']['onBlur'];\n  onInput: HdsCodeEditorSignature['Args']['Named']['onInput'];\n\n  blurHandler!: (event: FocusEvent) => void;\n  observer!: IntersectionObserver;\n\n  constructor(owner: Owner, args: ArgsFor<HdsCodeEditorSignature>) {\n    super(owner, args);\n\n    registerDestructor(this, () => {\n      this.observer?.disconnect();\n\n      if (this.onBlur !== undefined) {\n        this.element.removeEventListener('blur', this.blurHandler);\n      }\n    });\n  }\n\n  modify(\n    element: HTMLElement,\n    positional: PositionalArgs<HdsCodeEditorSignature>,\n    named: NamedArgs<HdsCodeEditorSignature>\n  ): void {\n    // the intersection observer makes loading unreliable in tests\n    if (config.environment === 'test') {\n      this._setupTask.perform(element, positional, named);\n    } else {\n      this.observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            const setupHasNotRun = this._setupTask.performCount === 0;\n\n            if (entry.isIntersecting && setupHasNotRun) {\n              this._setupTask.perform(element, positional, named);\n            }\n          });\n        },\n        {\n          rootMargin: LOADER_HEIGHT,\n        }\n      );\n\n      this.observer.observe(element);\n    }\n  }\n\n  private _setupEditorBlurHandler(\n    element: HTMLElement,\n    onBlur: HdsCodeEditorBlurHandler\n  ) {\n    const inputElement = element.querySelector('.cm-content');\n\n    if (inputElement === null) {\n      return;\n    }\n\n    this.blurHandler = (event: FocusEvent) => onBlur(this.editor, event);\n\n    (inputElement as HTMLElement).addEventListener('blur', this.blurHandler);\n  }\n\n  private _setupEditorAriaLabel(\n    editor: EditorView,\n    {\n      ariaLabel,\n      ariaLabelledBy,\n    }: Pick<\n      HdsCodeEditorSignature['Args']['Named'],\n      'ariaLabel' | 'ariaLabelledBy'\n    >\n  ) {\n    assert(\n      '`hds-code-editor` modifier - Either `ariaLabel` or `ariaLabelledBy` must be provided',\n      ariaLabel !== undefined || ariaLabelledBy !== undefined\n    );\n\n    if (ariaLabel !== undefined) {\n      editor.dom\n        .querySelector('[role=\"textbox\"]')\n        ?.setAttribute('aria-label', ariaLabel);\n    } else if (ariaLabelledBy !== undefined) {\n      editor.dom\n        .querySelector('[role=\"textbox\"]')\n        ?.setAttribute('aria-labelledby', ariaLabelledBy);\n    }\n  }\n\n  private _setupEditorAriaDescribedBy(\n    editor: EditorView,\n    ariaDescribedBy?: string\n  ) {\n    if (ariaDescribedBy === undefined) {\n      return;\n    }\n\n    editor.dom\n      .querySelector('[role=\"textbox\"]')\n      ?.setAttribute('aria-describedby', ariaDescribedBy);\n  }\n\n  private _setupEditorAriaAttributes(\n    editor: EditorView,\n    {\n      ariaDescribedBy,\n      ariaLabel,\n      ariaLabelledBy,\n    }: Pick<\n      HdsCodeEditorSignature['Args']['Named'],\n      'ariaDescribedBy' | 'ariaLabel' | 'ariaLabelledBy'\n    >\n  ) {\n    this._setupEditorAriaLabel(editor, { ariaLabel, ariaLabelledBy });\n    this._setupEditorAriaDescribedBy(editor, ariaDescribedBy);\n  }\n\n  private _loadLanguageTask = task(\n    { drop: true },\n    async (language?: HdsCodeEditorLanguages) => {\n      if (language === undefined) {\n        return;\n      }\n\n      try {\n        const validLanguageKeys = Object.keys(LANGUAGES);\n\n        assert(\n          `\\`hds-code-editor\\` modifier - \\`language\\` must be one of the following: ${validLanguageKeys.join(\n            ', '\n          )}; received: ${language}`,\n          validLanguageKeys.includes(language)\n        );\n\n        return LANGUAGES[language].load();\n      } catch (error) {\n        warn(\n          `\\`hds-code-editor\\` modifier - Failed to dynamically import the CodeMirror language module for '${language}'. Error: ${JSON.stringify(\n            error\n          )}`,\n          {\n            id: 'hds-code-editor.load-language-task.import-failed',\n          }\n        );\n      }\n    }\n  );\n\n  private _buildExtensionsTask = task({ drop: true }, async ({ language }) => {\n    const [\n      {\n        EditorView,\n        keymap,\n        lineNumbers,\n        highlightActiveLineGutter,\n        highlightSpecialChars,\n        highlightActiveLine,\n      },\n      { defaultKeymap, history, historyKeymap },\n      { bracketMatching, syntaxHighlighting },\n    ] = await Promise.all([\n      import('@codemirror/view'),\n      import('@codemirror/commands'),\n      import('@codemirror/language'),\n    ]);\n\n    const languageExtension = await this._loadLanguageTask.perform(language);\n\n    const handleUpdateExtension = EditorView.updateListener.of(\n      (update: ViewUpdate) => {\n        // toggle a class if the update has/does not have a selection\n        if (update.selectionSet) {\n          update.view.dom.classList.toggle(\n            'cm-hasSelection',\n            !update.state.selection.main.empty\n          );\n        }\n\n        // call the onInput callback if the document has changed\n        if (!update.docChanged || this.onInput === undefined) {\n          return;\n        }\n        this.onInput(update.state.doc.toString());\n      }\n    );\n\n    let extensions = [\n      bracketMatching(),\n      highlightActiveLine(),\n      highlightActiveLineGutter(),\n      highlightSpecialChars(),\n      history(),\n      lineNumbers(),\n      keymap.of([...defaultKeymap, ...historyKeymap]),\n      // custom extensions\n      handleUpdateExtension,\n      // hds dark theme\n      hdsDarkTheme,\n      syntaxHighlighting(hdsDarkHighlightStyle),\n    ];\n\n    if (languageExtension !== undefined) {\n      extensions = [languageExtension, ...extensions];\n    }\n\n    return extensions;\n  });\n\n  private _createEditorTask = task(\n    { drop: true },\n    async (\n      element: HTMLElement,\n      {\n        language,\n        value,\n      }: Pick<HdsCodeEditorSignature['Args']['Named'], 'language' | 'value'>\n    ) => {\n      try {\n        const { EditorState } = await import('@codemirror/state');\n        const { EditorView } = await import('@codemirror/view');\n\n        const extensions = await this._buildExtensionsTask.perform({\n          language,\n        });\n\n        const state = EditorState.create({\n          doc: value,\n          extensions,\n        });\n\n        const editor = new EditorView({\n          state,\n          parent: element,\n        });\n\n        return editor;\n      } catch (error) {\n        console.error(\n          `\\`hds-code-editor\\` modifier - Failed to setup the CodeMirror editor. Error: ${JSON.stringify(error)}`\n        );\n      }\n    }\n  );\n\n  private _setupTask = task(\n    { drop: true },\n    async (\n      element: HTMLElement,\n      _positional: PositionalArgs<HdsCodeEditorSignature>,\n      named: NamedArgs<HdsCodeEditorSignature>\n    ) => {\n      const {\n        onBlur,\n        onInput,\n        onSetup,\n        ariaDescribedBy,\n        ariaLabel,\n        ariaLabelledBy,\n        language,\n        value,\n      } = named;\n\n      this.onInput = onInput;\n      this.onBlur = onBlur;\n\n      this.element = element;\n\n      const editor = await this._createEditorTask.perform(element, {\n        language,\n        value,\n      });\n\n      if (editor === undefined) {\n        return;\n      }\n\n      this.editor = editor;\n\n      if (onBlur !== undefined) {\n        this._setupEditorBlurHandler(element, onBlur);\n      }\n\n      this._setupEditorAriaAttributes(editor, {\n        ariaDescribedBy,\n        ariaLabel,\n        ariaLabelledBy,\n      });\n\n      onSetup?.(this.editor);\n    }\n  );\n}\n"],"names":["defineStreamLanguage","streamParser","StreamLanguage","define","LOADER_HEIGHT","LANGUAGES","ruby","load","sentinel","shell","go","hcl","json","sql","yaml","HdsCodeEditorModifier","Modifier","constructor","owner","args","_defineProperty","_buildTask","context","generator","language","undefined","validLanguageKeys","Object","keys","assert","join","includes","error","warn","JSON","stringify","id","drop","EditorView","keymap","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","highlightActiveLine","defaultKeymap","history","historyKeymap","bracketMatching","syntaxHighlighting","Promise","all","languageExtension","_loadLanguageTask","perform","handleUpdateExtension","updateListener","of","update","selectionSet","view","dom","classList","toggle","state","selection","main","empty","docChanged","onInput","doc","toString","extensions","hdsDarkTheme","hdsDarkHighlightStyle","element","value","EditorState","_buildExtensionsTask","create","editor","parent","console","_positional","named","onBlur","onSetup","ariaDescribedBy","ariaLabel","ariaLabelledBy","_createEditorTask","_setupEditorBlurHandler","_setupEditorAriaAttributes","registerDestructor","observer","disconnect","removeEventListener","blurHandler","modify","positional","config","environment","_setupTask","IntersectionObserver","entries","forEach","entry","setupHasNotRun","performCount","isIntersecting","rootMargin","observe","inputElement","querySelector","event","addEventListener","_setupEditorAriaLabel","setAttribute","_setupEditorAriaDescribedBy"],"mappings":"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"}