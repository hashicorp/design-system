{"version":3,"file":"hds-code-editor.js","sources":["../../src/modifiers/hds-code-editor.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Modifier from 'ember-modifier';\nimport { assert, warn } from '@ember/debug';\nimport { registerDestructor } from '@ember/destroyable';\nimport { task } from 'ember-concurrency';\nimport config from 'ember-get-config';\nimport { Compartment } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n\n// hds-dark theme\nimport hdsDarkTheme from './hds-code-editor/themes/hds-dark-theme.ts';\nimport hdsDarkHighlightStyle from './hds-code-editor/highlight-styles/hds-dark-highlight-style.ts';\n\nimport type { HdsCodeEditorLanguages } from './hds-code-editor/types.ts';\nimport type { ArgsFor, PositionalArgs, NamedArgs } from 'ember-modifier';\nimport type {\n  StreamLanguage as StreamLanguageType,\n  StreamParser as StreamParserType,\n} from '@codemirror/language';\nimport type { Extension } from '@codemirror/state';\nimport type {\n  EditorView as EditorViewType,\n  ViewUpdate,\n} from '@codemirror/view';\nimport type Owner from '@ember/owner';\n\ntype HdsCodeEditorBlurHandler = (\n  editor: EditorViewType,\n  event: FocusEvent\n) => void;\n\nexport interface HdsCodeEditorSignature {\n  Args: {\n    Named: {\n      ariaDescribedBy?: string;\n      ariaLabel?: string;\n      ariaLabelledBy?: string;\n      cspNonce?: string;\n      hasLineWrapping?: boolean;\n      language?: HdsCodeEditorLanguages;\n      value?: string;\n      onInput?: (newVal: string) => void;\n      onBlur?: HdsCodeEditorBlurHandler;\n      onSetup?: (editor: EditorViewType) => unknown;\n    };\n  };\n}\n\nasync function defineStreamLanguage(streamParser: StreamParserType<unknown>) {\n  const { StreamLanguage } = await import('@codemirror/language');\n\n  return StreamLanguage.define(streamParser);\n}\n\nexport function getCSPNonceFromMeta(): string | undefined {\n  const meta = document.querySelector(\n    'meta[http-equiv=\"Content-Security-Policy\"]'\n  );\n\n  if (meta === null) {\n    return undefined;\n  }\n\n  const content = meta.getAttribute('content');\n\n  if (content === null) {\n    return undefined;\n  }\n\n  // searches for either \"style-src\" or \"script-src\" followed by anything until a token like 'nonce-<value>'\n  const match = content.match(/(?:style-src|script-src)[^;]*'nonce-([^']+)'/);\n\n  return match ? match[1] : undefined;\n}\n\nconst LOADER_HEIGHT = '164px';\n\nconst LANGUAGES: Record<\n  HdsCodeEditorLanguages,\n  { load: () => Promise<Extension | StreamLanguageType<unknown>> }\n> = {\n  rego: {\n    load: async () => {\n      const { rego } = await import('./hds-code-editor/languages/rego.ts');\n      return defineStreamLanguage(rego);\n    },\n  },\n  ruby: {\n    load: async () => {\n      const { ruby } = await import('@codemirror/legacy-modes/mode/ruby');\n      return defineStreamLanguage(ruby);\n    },\n  },\n  sentinel: {\n    load: async () => {\n      const { sentinel } = await import(\n        './hds-code-editor/languages/sentinel.ts'\n      );\n      return defineStreamLanguage(sentinel);\n    },\n  },\n  shell: {\n    load: async () => {\n      const { shell } = await import('@codemirror/legacy-modes/mode/shell');\n      return defineStreamLanguage(shell);\n    },\n  },\n  go: {\n    load: async () => (await import('@codemirror/lang-go')).go(),\n  },\n  hcl: {\n    load: async () => (await import('codemirror-lang-hcl')).hcl(),\n  },\n  javascript: {\n    load: async () =>\n      (await import('@codemirror/lang-javascript')).javascript(),\n  },\n  json: {\n    load: async () => (await import('@codemirror/lang-json')).json(),\n  },\n  markdown: {\n    load: async () => (await import('@codemirror/lang-markdown')).markdown(),\n  },\n  sql: {\n    load: async () => (await import('@codemirror/lang-sql')).sql(),\n  },\n  yaml: {\n    load: async () => (await import('@codemirror/lang-yaml')).yaml(),\n  },\n} as const;\n\nexport default class HdsCodeEditorModifier extends Modifier<HdsCodeEditorSignature> {\n  editor!: EditorViewType;\n  element!: HTMLElement;\n\n  onBlur: HdsCodeEditorSignature['Args']['Named']['onBlur'];\n  onInput: HdsCodeEditorSignature['Args']['Named']['onInput'];\n\n  blurHandler!: (event: FocusEvent) => void;\n  observer!: IntersectionObserver;\n\n  lineWrappingCompartment = new Compartment();\n\n  constructor(owner: Owner, args: ArgsFor<HdsCodeEditorSignature>) {\n    super(owner, args);\n\n    registerDestructor(this, () => {\n      this.observer?.disconnect();\n\n      if (this.onBlur !== undefined) {\n        this.element.removeEventListener('blur', this.blurHandler);\n      }\n    });\n  }\n\n  modify(\n    element: HTMLElement,\n    positional: PositionalArgs<HdsCodeEditorSignature>,\n    named: NamedArgs<HdsCodeEditorSignature>\n  ): void {\n    const { hasLineWrapping = false } = named;\n\n    // if the editor already exists, update the line wrapping\n    if (this.editor) {\n      this.editor.dispatch({\n        effects: this.lineWrappingCompartment.reconfigure(\n          hasLineWrapping ? EditorView.lineWrapping : []\n        ),\n      });\n    }\n    // if the editor does not exist, setup the editor\n    else {\n      // the intersection observer makes loading unreliable in tests\n      if (config.environment === 'test') {\n        this._setupTask.perform(element, positional, named);\n      } else {\n        this.observer = new IntersectionObserver(\n          (entries) => {\n            entries.forEach((entry) => {\n              if (entry.isIntersecting && this.editor === undefined) {\n                this._setupTask.perform(element, positional, named);\n              }\n            });\n          },\n          {\n            rootMargin: LOADER_HEIGHT,\n          }\n        );\n\n        this.observer.observe(element);\n      }\n    }\n  }\n\n  private _setupEditorBlurHandler(\n    element: HTMLElement,\n    onBlur: HdsCodeEditorBlurHandler\n  ) {\n    const inputElement = element.querySelector('.cm-content');\n\n    if (inputElement === null) {\n      return;\n    }\n\n    this.blurHandler = (event: FocusEvent) => onBlur(this.editor, event);\n\n    (inputElement as HTMLElement).addEventListener('blur', this.blurHandler);\n  }\n\n  private _setupEditorAriaLabel(\n    editor: EditorViewType,\n    {\n      ariaLabel,\n      ariaLabelledBy,\n    }: Pick<\n      HdsCodeEditorSignature['Args']['Named'],\n      'ariaLabel' | 'ariaLabelledBy'\n    >\n  ) {\n    assert(\n      '`hds-code-editor` modifier - Either `ariaLabel` or `ariaLabelledBy` must be provided',\n      ariaLabel !== undefined || ariaLabelledBy !== undefined\n    );\n\n    if (ariaLabel !== undefined) {\n      editor.dom\n        .querySelector('[role=\"textbox\"]')\n        ?.setAttribute('aria-label', ariaLabel);\n    } else if (ariaLabelledBy !== undefined) {\n      editor.dom\n        .querySelector('[role=\"textbox\"]')\n        ?.setAttribute('aria-labelledby', ariaLabelledBy);\n    }\n  }\n\n  private _setupEditorAriaDescribedBy(\n    editor: EditorViewType,\n    ariaDescribedBy?: string\n  ) {\n    if (ariaDescribedBy === undefined) {\n      return;\n    }\n\n    editor.dom\n      .querySelector('[role=\"textbox\"]')\n      ?.setAttribute('aria-describedby', ariaDescribedBy);\n  }\n\n  private _setupEditorAriaAttributes(\n    editor: EditorViewType,\n    {\n      ariaDescribedBy,\n      ariaLabel,\n      ariaLabelledBy,\n    }: Pick<\n      HdsCodeEditorSignature['Args']['Named'],\n      'ariaDescribedBy' | 'ariaLabel' | 'ariaLabelledBy'\n    >\n  ) {\n    this._setupEditorAriaLabel(editor, { ariaLabel, ariaLabelledBy });\n    this._setupEditorAriaDescribedBy(editor, ariaDescribedBy);\n  }\n\n  private _loadLanguageTask = task(\n    { drop: true },\n    async (language?: HdsCodeEditorLanguages) => {\n      if (language === undefined) {\n        return;\n      }\n\n      try {\n        const validLanguageKeys = Object.keys(LANGUAGES);\n\n        assert(\n          `\\`hds-code-editor\\` modifier - \\`language\\` must be one of the following: ${validLanguageKeys.join(\n            ', '\n          )}; received: ${language}`,\n          validLanguageKeys.includes(language)\n        );\n\n        return LANGUAGES[language].load();\n      } catch (error) {\n        warn(\n          `\\`hds-code-editor\\` modifier - Failed to dynamically import the CodeMirror language module for '${language}'. Error: ${JSON.stringify(\n            error\n          )}`,\n          {\n            id: 'hds-code-editor.load-language-task.import-failed',\n          }\n        );\n      }\n    }\n  );\n\n  private _buildExtensionsTask = task(\n    { drop: true },\n    async ({ cspNonce, language, hasLineWrapping }) => {\n      const [\n        {\n          keymap,\n          lineNumbers,\n          highlightActiveLineGutter,\n          highlightSpecialChars,\n          highlightActiveLine,\n        },\n        { defaultKeymap, history, historyKeymap },\n        { bracketMatching, syntaxHighlighting },\n      ] = await Promise.all([\n        import('@codemirror/view'),\n        import('@codemirror/commands'),\n        import('@codemirror/language'),\n      ]);\n\n      const languageExtension = await this._loadLanguageTask.perform(language);\n\n      const handleUpdateExtension = EditorView.updateListener.of(\n        (update: ViewUpdate) => {\n          // toggle a class if the update has/does not have a selection\n          if (update.selectionSet) {\n            update.view.dom.classList.toggle(\n              'cm-hasSelection',\n              !update.state.selection.main.empty\n            );\n          }\n\n          // call the onInput callback if the document has changed\n          if (!update.docChanged || this.onInput === undefined) {\n            return;\n          }\n          this.onInput(update.state.doc.toString());\n        }\n      );\n\n      const lineWrappingExtension = this.lineWrappingCompartment.of(\n        hasLineWrapping ? EditorView.lineWrapping : []\n      );\n\n      let extensions = [\n        lineWrappingExtension,\n        bracketMatching(),\n        highlightActiveLine(),\n        highlightActiveLineGutter(),\n        highlightSpecialChars(),\n        history(),\n        lineNumbers(),\n        keymap.of([...defaultKeymap, ...historyKeymap]),\n        // custom extensions\n        handleUpdateExtension,\n        // hds dark theme\n        hdsDarkTheme,\n        syntaxHighlighting(hdsDarkHighlightStyle),\n      ];\n\n      if (languageExtension !== undefined) {\n        extensions = [languageExtension, ...extensions];\n      }\n\n      // add nonce to the editor view if it exists\n      const nonce = cspNonce ?? getCSPNonceFromMeta();\n\n      if (nonce !== undefined) {\n        extensions = [...extensions, EditorView.cspNonce.of(nonce)];\n      }\n\n      return extensions;\n    }\n  );\n\n  private _createEditorTask = task(\n    { drop: true },\n    async (\n      element: HTMLElement,\n      {\n        cspNonce,\n        language,\n        value,\n        hasLineWrapping,\n      }: Pick<\n        HdsCodeEditorSignature['Args']['Named'],\n        'cspNonce' | 'language' | 'value' | 'hasLineWrapping'\n      >\n    ) => {\n      try {\n        const { EditorState } = await import('@codemirror/state');\n\n        const extensions = await this._buildExtensionsTask.perform({\n          cspNonce,\n          language,\n          hasLineWrapping: hasLineWrapping ?? false,\n        });\n\n        const state = EditorState.create({\n          doc: value,\n          extensions,\n        });\n\n        const editor = new EditorView({\n          state,\n          parent: element,\n        });\n\n        return editor;\n      } catch (error) {\n        console.error(\n          `\\`hds-code-editor\\` modifier - Failed to setup the CodeMirror editor. Error: ${JSON.stringify(error)}`\n        );\n      }\n    }\n  );\n\n  private _setupTask = task(\n    { drop: true },\n    async (\n      element: HTMLElement,\n      _positional: PositionalArgs<HdsCodeEditorSignature>,\n      named: NamedArgs<HdsCodeEditorSignature>\n    ) => {\n      const {\n        onBlur,\n        onInput,\n        onSetup,\n        ariaDescribedBy,\n        ariaLabel,\n        ariaLabelledBy,\n        cspNonce,\n        hasLineWrapping,\n        language,\n        value,\n      } = named;\n\n      this.onInput = onInput;\n      this.onBlur = onBlur;\n\n      this.element = element;\n\n      const editor = await this._createEditorTask.perform(element, {\n        cspNonce,\n        language,\n        value,\n        hasLineWrapping,\n      });\n\n      if (editor === undefined) {\n        return;\n      }\n\n      this.editor = editor;\n\n      if (onBlur !== undefined) {\n        this._setupEditorBlurHandler(element, onBlur);\n      }\n\n      this._setupEditorAriaAttributes(editor, {\n        ariaDescribedBy,\n        ariaLabel,\n        ariaLabelledBy,\n      });\n\n      onSetup?.(this.editor);\n    }\n  );\n}\n"],"names":["defineStreamLanguage","streamParser","StreamLanguage","define","getCSPNonceFromMeta","meta","document","querySelector","undefined","content","getAttribute","match","LOADER_HEIGHT","LANGUAGES","rego","load","ruby","sentinel","shell","go","hcl","javascript","json","markdown","sql","yaml","HdsCodeEditorModifier","Modifier","editor","element","onBlur","onInput","blurHandler","observer","lineWrappingCompartment","Compartment","constructor","owner","args","registerDestructor","disconnect","removeEventListener","modify","positional","named","hasLineWrapping","dispatch","effects","reconfigure","EditorView","lineWrapping","config","environment","_setupTask","perform","IntersectionObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","_setupEditorBlurHandler","inputElement","event","addEventListener","_setupEditorAriaLabel","ariaLabel","ariaLabelledBy","assert","dom","setAttribute","_setupEditorAriaDescribedBy","ariaDescribedBy","_setupEditorAriaAttributes","_loadLanguageTask","_buildTask","context","generator","language","validLanguageKeys","Object","keys","join","includes","error","warn","JSON","stringify","id","drop","_buildExtensionsTask","cspNonce","keymap","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","highlightActiveLine","defaultKeymap","history","historyKeymap","bracketMatching","syntaxHighlighting","Promise","all","languageExtension","handleUpdateExtension","updateListener","of","update","selectionSet","view","classList","toggle","state","selection","main","empty","docChanged","doc","toString","lineWrappingExtension","extensions","hdsDarkTheme","hdsDarkHighlightStyle","nonce","_createEditorTask","value","EditorState","create","parent","console","_positional","onSetup"],"mappings":"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"}