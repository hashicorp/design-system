{"version":3,"file":"hds-code-editor.js","sources":["../../src/modifiers/hds-code-editor.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport { assert } from '@ember/debug';\nimport Modifier from 'ember-modifier';\nimport { task } from 'ember-concurrency';\nimport config from 'ember-get-config';\n\nimport hdsDarkTheme from './hds-code-editor/themes/hds-dark-theme.ts';\nimport hdsDarkHighlightStyle from './hds-code-editor/highlight-styles/hds-dark-highlight-style.ts';\n\nimport type { PositionalArgs, NamedArgs } from 'ember-modifier';\nimport type { EditorView, ViewUpdate } from '@codemirror/view';\nimport type {\n  HdsCodeEditorLanguages,\n  CodemirrorGoModule,\n  CodemirrorJsonModule,\n  CodemirrorSqlModule,\n  CodemirrorHclModule,\n  CodemirrorLanguageModule,\n} from 'src/types/hds-code-editor.types';\n\nexport interface HdsCodeEditorSignature {\n  Args: {\n    Named: {\n      language?: HdsCodeEditorLanguages;\n      value?: string;\n      onInput?: (newVal: string) => void;\n      onBlur?: (editor: EditorView, event: FocusEvent) => void;\n      onSetup?: (editor: EditorView) => unknown;\n    };\n  };\n}\n\nconst LOADER_HEIGHT = '164px';\n\nexport default class HdsCodeEditorModifier extends Modifier<HdsCodeEditorSignature> {\n  editor!: EditorView;\n  element!: HTMLElement;\n\n  onInput: HdsCodeEditorSignature['Args']['Named']['onInput'];\n\n  observer!: IntersectionObserver;\n\n  modify(\n    element: HTMLElement,\n    positional: PositionalArgs<HdsCodeEditorSignature>,\n    named: NamedArgs<HdsCodeEditorSignature>\n  ): void {\n    assert('HdsCodeEditor must have an element', element);\n    // the intersection observer makes loading unreliable in tests\n    if (config.environment === 'test') {\n      this.setupTask.perform(element, positional, named);\n    } else {\n      this.observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting && this.setupTask.performCount === 0) {\n              this.setupTask.perform(element, positional, named);\n            }\n          });\n        },\n        {\n          rootMargin: LOADER_HEIGHT,\n        }\n      );\n\n      this.observer.observe(element);\n    }\n  }\n\n  willRemove() {\n    this.observer.disconnect();\n  }\n\n  loadLanguageTask = task(\n    { drop: true },\n    async (language?: HdsCodeEditorLanguages) => {\n      if (language === undefined) {\n        return;\n      }\n\n      let module: CodemirrorLanguageModule | null = null;\n      let languageFunction = null;\n\n      switch (language) {\n        case 'go':\n          module = await import('@codemirror/lang-go');\n          languageFunction = (module as CodemirrorGoModule).go;\n          break;\n        case 'json':\n          module = await import('@codemirror/lang-json');\n          languageFunction = (module as CodemirrorJsonModule).json;\n          break;\n        case 'sql':\n          module = await import('@codemirror/lang-sql');\n          languageFunction = (module as CodemirrorSqlModule).sql;\n          break;\n        case 'hcl':\n          module = await import('codemirror-lang-hcl');\n          languageFunction = (module as CodemirrorHclModule).hcl;\n          break;\n        default:\n          throw new Error(`Language ${language} is not supported`);\n      }\n\n      return languageFunction();\n    }\n  );\n\n  setupTask = task(\n    { drop: true },\n    async (\n      element: HTMLElement,\n      _positional: PositionalArgs<HdsCodeEditorSignature>,\n      named: NamedArgs<HdsCodeEditorSignature>\n    ) => {\n      const { onInput, onSetup, language, value } = named;\n\n      const [\n        {\n          EditorView,\n          keymap,\n          lineNumbers,\n          highlightActiveLineGutter,\n          highlightSpecialChars,\n          highlightActiveLine,\n        },\n        { EditorState },\n        { defaultKeymap, history, historyKeymap },\n        { bracketMatching, syntaxHighlighting },\n      ] = await Promise.all([\n        import('@codemirror/view'),\n        import('@codemirror/state'),\n        import('@codemirror/commands'),\n        import('@codemirror/language'),\n      ]);\n\n      this.onInput = onInput;\n\n      const languageExtension = await this.loadLanguageTask.perform(language);\n\n      let extensions = [\n        lineNumbers(),\n        highlightActiveLineGutter(),\n        highlightSpecialChars(),\n        highlightActiveLine(),\n        EditorView.updateListener.of((update: ViewUpdate) => {\n          // toggle a class if the update has/does not have a selection\n          if (update.selectionSet) {\n            update.view.dom.classList.toggle(\n              'cm-hasSelection',\n              !update.state.selection.main.empty\n            );\n          }\n\n          // call the onInput callback if the document has changed\n          if (!update.docChanged || this.onInput === undefined) {\n            return;\n          }\n          this.onInput(update.state.doc.toString());\n        }),\n        hdsDarkTheme,\n        keymap.of([...defaultKeymap, ...historyKeymap]),\n        bracketMatching(),\n        syntaxHighlighting(hdsDarkHighlightStyle),\n        history(),\n      ];\n\n      if (languageExtension !== undefined) {\n        extensions = [languageExtension, ...extensions];\n      }\n\n      const state = EditorState.create({\n        doc: value,\n        extensions,\n      });\n\n      const editor = new EditorView({ state, parent: element });\n\n      this.editor = editor;\n      this.element = element;\n\n      onSetup?.(this.editor);\n    }\n  );\n}\n"],"names":["LOADER_HEIGHT","HdsCodeEditorModifier","Modifier","constructor","args","_defineProperty","_buildTask","context","generator","language","undefined","module","languageFunction","go","json","sql","hcl","Error","drop","element","_positional","named","onInput","onSetup","value","EditorView","keymap","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","highlightActiveLine","EditorState","defaultKeymap","history","historyKeymap","bracketMatching","syntaxHighlighting","Promise","all","languageExtension","loadLanguageTask","perform","extensions","updateListener","of","update","selectionSet","view","dom","classList","toggle","state","selection","main","empty","docChanged","doc","toString","hdsDarkTheme","hdsDarkHighlightStyle","create","editor","parent","modify","positional","assert","config","environment","setupTask","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","performCount","rootMargin","observe","willRemove","disconnect"],"mappings":"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"}