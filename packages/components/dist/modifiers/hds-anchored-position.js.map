{"version":3,"file":"hds-anchored-position.js","sources":["../../src/modifiers/hds-anchored-position.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport { modifier } from 'ember-modifier';\nimport { assert } from '@ember/debug';\n\nimport {\n  autoUpdate,\n  computePosition,\n  offset,\n  flip,\n  shift,\n  limitShift,\n  autoPlacement,\n  arrow,\n  // ---\n  // this could be used in the future if we want to give consumers an option to hide the \"floating\" element when the \"anchor\" hides from the viewport\n  // see: https://floating-ui.com/docs/hide\n  // hide,\n  // ---\n  // this could be used in the future if we want to give consumers an option to:\n  // - let the \"floating\" element auto-resize when there is not enough space (usually vertical) in the viewport to contain the entire \"floating\" element\n  // - let the \"floating\" element match the width of the \"trigger\" (it may have min/max width/heigh via CSS too)\n  // see: https://floating-ui.com/docs/size\n  // notice: below you can find a preliminary code implementation that was tested and worked relatively well\n  // size,\n  // ---\n} from '@floating-ui/dom';\n\nimport type {\n  Placement,\n  Strategy,\n  OffsetOptions,\n  FlipOptions,\n  ShiftOptions,\n  AutoPlacementOptions,\n  ArrowOptions,\n  Middleware,\n} from '@floating-ui/dom';\n\nexport const DEFAULT_PLACEMENT = 'bottom';\nexport const PLACEMENTS: Placement[] = [\n  'top',\n  'top-start',\n  'top-end',\n  'right',\n  'right-start',\n  'right-end',\n  'bottom',\n  'bottom-start',\n  'bottom-end',\n  'left',\n  'left-start',\n  'left-end',\n];\n\n// share the same default value of \"padding\" for `flip/shift/autoPlacement` options\n// this refers to the minimum distance from the boundaries' edges (the viewport)\n// before the floating element changes its position (flips, shifts, or autoplace itself)\nconst DEFAULT_EDGE_DISTANCE = 8;\n\nexport type FloatingUIOptions = {\n  placement?: Placement;\n  strategy?: Strategy;\n  offsetOptions?: OffsetOptions;\n  flipOptions?: FlipOptions;\n  shiftOptions?: ShiftOptions;\n  autoPlacementOptions?: AutoPlacementOptions;\n  middlewareExtra?: Middleware[];\n  enableCollisionDetection?: boolean | 'shift' | 'flip' | 'auto';\n  arrowElement?: ArrowOptions['element'];\n  arrowPadding?: ArrowOptions['padding'];\n};\n\n// we use this function to process all the options provided to the modifier in a single place,\n// in relation to the Floating UI APIs, and keep the modifier code more clean/simple\nexport const getFloatingUIOptions = (\n  options: FloatingUIOptions\n): {\n  placement: Placement;\n  strategy: Strategy;\n  middleware: Middleware[];\n} => {\n  const {\n    placement = DEFAULT_PLACEMENT,\n    strategy = 'absolute', // we don't need to use `fixed` if we use the Popover API for the \"floating\" element (it puts the element in the `top-layer`)\n    offsetOptions,\n    flipOptions = { padding: DEFAULT_EDGE_DISTANCE },\n    shiftOptions = { padding: DEFAULT_EDGE_DISTANCE, limiter: limitShift() },\n    autoPlacementOptions = { padding: DEFAULT_EDGE_DISTANCE },\n    middlewareExtra = [],\n    enableCollisionDetection,\n    arrowElement,\n    arrowPadding,\n  } = options;\n\n  // we build dynamically the list of middleware functions to invoke, depending on the options provided\n\n  const middleware = [];\n\n  // https://floating-ui.com/docs/offset\n  middleware.push(offset(offsetOptions));\n\n  // https://floating-ui.com/docs/flip\n  // https://floating-ui.com/docs/shift\n  // https://floating-ui.com/docs/autoPlacement\n  if (\n    enableCollisionDetection === true ||\n    enableCollisionDetection === 'flip'\n  ) {\n    middleware.push(flip(flipOptions));\n  }\n  if (\n    enableCollisionDetection === true ||\n    enableCollisionDetection === 'shift'\n  ) {\n    middleware.push(shift(shiftOptions));\n  }\n  if (enableCollisionDetection === 'auto') {\n    middleware.push(autoPlacement(autoPlacementOptions));\n  }\n\n  // https://floating-ui.com/docs/arrow\n  if (arrowElement) {\n    middleware.push(\n      arrow({\n        element: arrowElement,\n        padding: arrowPadding ?? 0,\n      })\n    );\n  }\n\n  // TODO? commenting this for now, will need to make this conditional to some argument (and understand how this relates to the `@height` argument)\n  // https://floating-ui.com/docs/size#match-reference-width\n  // size({\n  //   apply({ rects, elements }) {\n  //     Object.assign(elements.floating.style, {\n  //       width: `${rects.reference.width}px`,\n  //     });\n  //   },\n  // });\n  // size({\n  //   apply: ({ availableWidth, availableHeight, middlewareData }) => {\n  //     middlewareData.size = { availableWidth, availableHeight };\n  //   },\n  // }),\n\n  middleware.push(...middlewareExtra);\n\n  return {\n    placement,\n    strategy,\n    middleware,\n  };\n};\n\ninterface HdsAnchoredPositionSignature {\n  Element: HTMLElement;\n  Args: {\n    Positional: [HTMLElement | SVGElement];\n    Named: FloatingUIOptions & { arrowSelector?: string };\n  };\n}\n\n// Notice: we use a function-based modifier here instead of a class-based one\n// because it's quite simple in its logic, and doesn't require injecting services\n// see: https://github.com/ember-modifier/ember-modifier#function-based-modifiers\n\nexport default modifier<HdsAnchoredPositionSignature>(\n  (element, positional, named = {}) => {\n    // the element that \"floats\" next to the \"anchor\" (whose position is calculated in relation to the anchor)\n    // notice: this is the element the Ember modifier is attached to\n    const floatingElement = element;\n\n    // the element that acts as an \"anchor\" for the \"floating\" element\n    // it can be a DOM (string) selector or a DOM element\n    // notice: it's expressed as \"positional\" argument (array of arguments) for the modifier\n    const _anchorTarget = positional[0];\n    const anchorElement =\n      typeof _anchorTarget === 'string'\n        ? document.querySelector(_anchorTarget)\n        : _anchorTarget;\n\n    assert(\n      '`hds-anchored-position` modifier - the provided \"anchoring\" element is not defined correctly',\n      anchorElement instanceof HTMLElement ||\n        anchorElement instanceof SVGElement\n    );\n\n    // the \"arrow\" element (optional) associated with the \"floating\" element\n    // it can be a DOM selector (string) or a DOM element\n    // notice: it's declared inside the \"named\" argument (object) for the modifier\n    // but we need to extract it also here so it can be used to assign inline styles to it\n    let arrowElement: HTMLElement | SVGElement | undefined;\n\n    if (named.arrowElement) {\n      assert(\n        '`hds-anchored-position` modifier - the `element` provided for the \"arrow\" element is not a valid DOM node',\n        named.arrowElement instanceof HTMLElement ||\n          named.arrowElement instanceof SVGElement\n      );\n\n      arrowElement = named.arrowElement;\n    } else if (named.arrowSelector) {\n      assert(\n        '`hds-anchored-position` modifier - the `selector` provided for the \"arrow\" element must be a string',\n        typeof named.arrowSelector === 'string'\n      );\n\n      const selectedArrowElement = document.querySelector(named.arrowSelector);\n      if (selectedArrowElement instanceof HTMLElement) {\n        arrowElement = selectedArrowElement;\n      } else {\n        assert(\n          '`hds-anchored-position` modifier - the `selector` provided for the \"arrow\" element is not a valid DOM selector'\n        );\n      }\n    }\n\n    // the Floating UI \"options\" to apply to the \"floating\" element\n    // notice: we spread the `named` argument and override its `arrowElement` value instead of setting it directly because Ember complains that modifier's arguments must be immutable\n    const floatingOptions = getFloatingUIOptions({ ...named, arrowElement });\n\n    const computeFloatingPosition = async () => {\n      // important to know: `computePosition()` is not stateful, it only positions the \"floating\" element once\n      // see: https://floating-ui.com/docs/computePosition\n      const state = await computePosition(\n        anchorElement,\n        floatingElement,\n        floatingOptions\n      );\n\n      const { x, y, placement, strategy, middlewareData } = state;\n\n      Object.assign(floatingElement.style, {\n        position: strategy,\n        top: `${y}px`,\n        left: `${x}px`,\n        // TODO? commenting this for now, will need to make this conditional to some argument (and understand how this relates to the `@height` argument)\n        // maxHeight: `${middlewareData.size.availableHeight - 10}px`,\n      });\n\n      if (arrowElement && middlewareData.arrow) {\n        // we assign a \"data\" attribute to the \"arrow\" element so we can use CSS (in the consuming components) to position/rotate it accordingly and we avoid calculating at runtime values that technically we already know\n        // (similar to what Tippy.js does: https://github.com/atomiks/tippyjs/blob/master/src/scss/svg-arrow.scss)\n        // IMPORTANT: floating-ui assumes the \"arrow\" container is square!\n        arrowElement.setAttribute(\n          'data-hds-anchored-arrow-placement',\n          placement\n        );\n\n        // we set `x` or `y` value (depends on the position of the arrow in relation to the \"floating\" element placement)\n        // see: https://floating-ui.com/docs/arrow#usage\n        Object.assign(arrowElement.style, {\n          left:\n            middlewareData.arrow.x != null ? `${middlewareData.arrow.x}px` : '',\n          top:\n            middlewareData.arrow.y != null ? `${middlewareData.arrow.y}px` : '',\n        });\n      }\n    };\n\n    // the `autoUpdate` function automatically updates the position of the floating element when necessary.\n    // it should only be called when the floating element is mounted on the DOM or visible on the screen.\n    // it returns a \"cleanup\" function that should be invoked when the floating element is removed from the DOM or hidden from the screen.\n    // see: https://floating-ui.com/docs/autoUpdate\n    const cleanupFloatingUI = autoUpdate(\n      anchorElement,\n      floatingElement,\n      computeFloatingPosition\n    );\n\n    // this (teardown) function is run when the element is removed from the DOM\n    return (): void => {\n      cleanupFloatingUI();\n    };\n  }\n);\n"],"names":["DEFAULT_PLACEMENT","PLACEMENTS","DEFAULT_EDGE_DISTANCE","getFloatingUIOptions","options","placement","strategy","offsetOptions","flipOptions","padding","shiftOptions","limiter","limitShift","autoPlacementOptions","middlewareExtra","enableCollisionDetection","arrowElement","arrowPadding","middleware","push","offset","flip","shift","autoPlacement","arrow","element","modifier","positional","named","floatingElement","_anchorTarget","anchorElement","document","querySelector","assert","HTMLElement","SVGElement","arrowSelector","selectedArrowElement","floatingOptions","computeFloatingPosition","state","computePosition","x","y","middlewareData","Object","assign","style","position","top","left","setAttribute","cleanupFloatingUI","autoUpdate"],"mappings":";;;;AAAA;AACA;AACA;AACA;;AAuCO,MAAMA,iBAAiB,GAAG,SAAQ;AAClC,MAAMC,UAAuB,GAAG,CACrC,KAAK,EACL,WAAW,EACX,SAAS,EACT,OAAO,EACP,aAAa,EACb,WAAW,EACX,QAAQ,EACR,cAAc,EACd,YAAY,EACZ,MAAM,EACN,YAAY,EACZ,UAAU,EACX;;AAED;AACA;AACA;AACA,MAAMC,qBAAqB,GAAG,CAAC,CAAA;AAe/B;AACA;AACaC,MAAAA,oBAAoB,GAC/BC,OAA0B,IAKvB;EACH,MAAM;AACJC,IAAAA,SAAS,GAAGL,iBAAiB;AAC7BM,IAAAA,QAAQ,GAAG,UAAU;AAAE;IACvBC,aAAa;AACbC,IAAAA,WAAW,GAAG;AAAEC,MAAAA,OAAO,EAAEP,qBAAAA;KAAuB;AAChDQ,IAAAA,YAAY,GAAG;AAAED,MAAAA,OAAO,EAAEP,qBAAqB;MAAES,OAAO,EAAEC,UAAU,EAAC;KAAG;AACxEC,IAAAA,oBAAoB,GAAG;AAAEJ,MAAAA,OAAO,EAAEP,qBAAAA;KAAuB;AACzDY,IAAAA,eAAe,GAAG,EAAE;IACpBC,wBAAwB;IACxBC,YAAY;AACZC,IAAAA,YAAAA;AACF,GAAC,GAAGb,OAAO,CAAA;;AAEX;;EAEA,MAAMc,UAAU,GAAG,EAAE,CAAA;;AAErB;AACAA,EAAAA,UAAU,CAACC,IAAI,CAACC,MAAM,CAACb,aAAa,CAAC,CAAC,CAAA;;AAEtC;AACA;AACA;AACA,EAAA,IACEQ,wBAAwB,KAAK,IAAI,IACjCA,wBAAwB,KAAK,MAAM,EACnC;AACAG,IAAAA,UAAU,CAACC,IAAI,CAACE,IAAI,CAACb,WAAW,CAAC,CAAC,CAAA;AACpC,GAAA;AACA,EAAA,IACEO,wBAAwB,KAAK,IAAI,IACjCA,wBAAwB,KAAK,OAAO,EACpC;AACAG,IAAAA,UAAU,CAACC,IAAI,CAACG,KAAK,CAACZ,YAAY,CAAC,CAAC,CAAA;AACtC,GAAA;EACA,IAAIK,wBAAwB,KAAK,MAAM,EAAE;AACvCG,IAAAA,UAAU,CAACC,IAAI,CAACI,aAAa,CAACV,oBAAoB,CAAC,CAAC,CAAA;AACtD,GAAA;;AAEA;AACA,EAAA,IAAIG,YAAY,EAAE;AAChBE,IAAAA,UAAU,CAACC,IAAI,CACbK,KAAK,CAAC;AACJC,MAAAA,OAAO,EAAET,YAAY;MACrBP,OAAO,EAAEQ,YAAY,IAAI,CAAA;AAC3B,KAAC,CACH,CAAC,CAAA;AACH,GAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,UAAU,CAACC,IAAI,CAAC,GAAGL,eAAe,CAAC,CAAA;EAEnC,OAAO;IACLT,SAAS;IACTC,QAAQ;AACRY,IAAAA,UAAAA;GACD,CAAA;AACH,EAAC;AAUD;AACA;AACA;;AAEA,+BAAeQ,QAAQ,CACrB,CAACD,OAAO,EAAEE,UAAU,EAAEC,KAAK,GAAG,EAAE,KAAK;AACnC;AACA;EACA,MAAMC,eAAe,GAAGJ,OAAO,CAAA;;AAE/B;AACA;AACA;AACA,EAAA,MAAMK,aAAa,GAAGH,UAAU,CAAC,CAAC,CAAC,CAAA;AACnC,EAAA,MAAMI,aAAa,GACjB,OAAOD,aAAa,KAAK,QAAQ,GAC7BE,QAAQ,CAACC,aAAa,CAACH,aAAa,CAAC,GACrCA,aAAa,CAAA;EAEnBI,MAAM,CACJ,8FAA8F,EAC9FH,aAAa,YAAYI,WAAW,IAClCJ,aAAa,YAAYK,UAC7B,CAAC,CAAA;;AAED;AACA;AACA;AACA;AACA,EAAA,IAAIpB,YAAkD,CAAA;EAEtD,IAAIY,KAAK,CAACZ,YAAY,EAAE;AACtBkB,IAAAA,MAAM,CACJ,2GAA2G,EAC3GN,KAAK,CAACZ,YAAY,YAAYmB,WAAW,IACvCP,KAAK,CAACZ,YAAY,YAAYoB,UAClC,CAAC,CAAA;IAEDpB,YAAY,GAAGY,KAAK,CAACZ,YAAY,CAAA;AACnC,GAAC,MAAM,IAAIY,KAAK,CAACS,aAAa,EAAE;IAC9BH,MAAM,CACJ,qGAAqG,EACrG,OAAON,KAAK,CAACS,aAAa,KAAK,QACjC,CAAC,CAAA;IAED,MAAMC,oBAAoB,GAAGN,QAAQ,CAACC,aAAa,CAACL,KAAK,CAACS,aAAa,CAAC,CAAA;IACxE,IAAIC,oBAAoB,YAAYH,WAAW,EAAE;AAC/CnB,MAAAA,YAAY,GAAGsB,oBAAoB,CAAA;AACrC,KAAC,MAAM;MACLJ,MAAM,CACJ,gHACF,CAAC,CAAA;AACH,KAAA;AACF,GAAA;;AAEA;AACA;EACA,MAAMK,eAAe,GAAGpC,oBAAoB,CAAC;AAAE,IAAA,GAAGyB,KAAK;AAAEZ,IAAAA,YAAAA;AAAa,GAAC,CAAC,CAAA;AAExE,EAAA,MAAMwB,uBAAuB,GAAG,YAAY;AAC1C;AACA;IACA,MAAMC,KAAK,GAAG,MAAMC,eAAe,CACjCX,aAAa,EACbF,eAAe,EACfU,eACF,CAAC,CAAA;IAED,MAAM;MAAEI,CAAC;MAAEC,CAAC;MAAEvC,SAAS;MAAEC,QAAQ;AAAEuC,MAAAA,cAAAA;AAAe,KAAC,GAAGJ,KAAK,CAAA;AAE3DK,IAAAA,MAAM,CAACC,MAAM,CAAClB,eAAe,CAACmB,KAAK,EAAE;AACnCC,MAAAA,QAAQ,EAAE3C,QAAQ;MAClB4C,GAAG,EAAE,CAAGN,EAAAA,CAAC,CAAI,EAAA,CAAA;MACbO,IAAI,EAAE,GAAGR,CAAC,CAAA,EAAA,CAAA;AACV;AACA;AACF,KAAC,CAAC,CAAA;AAEF,IAAA,IAAI3B,YAAY,IAAI6B,cAAc,CAACrB,KAAK,EAAE;AACxC;AACA;AACA;AACAR,MAAAA,YAAY,CAACoC,YAAY,CACvB,mCAAmC,EACnC/C,SACF,CAAC,CAAA;;AAED;AACA;AACAyC,MAAAA,MAAM,CAACC,MAAM,CAAC/B,YAAY,CAACgC,KAAK,EAAE;AAChCG,QAAAA,IAAI,EACFN,cAAc,CAACrB,KAAK,CAACmB,CAAC,IAAI,IAAI,GAAG,CAAA,EAAGE,cAAc,CAACrB,KAAK,CAACmB,CAAC,CAAA,EAAA,CAAI,GAAG,EAAE;AACrEO,QAAAA,GAAG,EACDL,cAAc,CAACrB,KAAK,CAACoB,CAAC,IAAI,IAAI,GAAG,CAAA,EAAGC,cAAc,CAACrB,KAAK,CAACoB,CAAC,IAAI,GAAG,EAAA;AACrE,OAAC,CAAC,CAAA;AACJ,KAAA;GACD,CAAA;;AAED;AACA;AACA;AACA;EACA,MAAMS,iBAAiB,GAAGC,UAAU,CAClCvB,aAAa,EACbF,eAAe,EACfW,uBACF,CAAC,CAAA;;AAED;AACA,EAAA,OAAO,MAAY;AACjBa,IAAAA,iBAAiB,EAAE,CAAA;GACpB,CAAA;AACH,CACF,CAAC;;;;"}