{"version":3,"file":"json-linter.js","sources":["../../../../src/modifiers/hds-code-editor/linters/json-linter.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport type { Diagnostic as DiagnosticType } from '@codemirror/lint';\nimport type { HdsCodeEditorSignature } from '../../hds-code-editor';\nimport type { Extension, Text } from '@codemirror/state';\n\nexport enum HdsCodeEditorJsonLintingError {\n  InvalidSyntax = 'Invalid syntax',\n  KeyExpected = 'Key expected',\n  KeyMustBeDoubleQuoted = 'Key must be double quoted',\n  MissingComma = 'Missing comma',\n  TrailingComma = 'Trailing comma',\n  ValueExpected = 'Value expected',\n}\n\nexport function findNextToken(\n  doc: Text,\n  index: number,\n  step: number = 1\n): string {\n  while (index >= 0 && index < doc.length) {\n    const token = doc.sliceString(index, index + 1);\n\n    if (token.trim() !== '') {\n      return token;\n    }\n\n    index += step;\n  }\n  return '';\n}\n\nexport function determineErrorMessage({\n  previousToken,\n  nextToken,\n  errorToken,\n}: {\n  previousToken: string;\n  nextToken: string;\n  errorToken: string;\n}): HdsCodeEditorJsonLintingError {\n  let message: HdsCodeEditorJsonLintingError =\n    HdsCodeEditorJsonLintingError.InvalidSyntax;\n\n  if (errorToken === '') {\n    if (previousToken === '{' && nextToken === ':') {\n      message = HdsCodeEditorJsonLintingError.KeyExpected;\n    } else if (previousToken === '\"' && nextToken === '\"') {\n      message = HdsCodeEditorJsonLintingError.MissingComma;\n    } else if (\n      previousToken === ',' &&\n      (nextToken === '}' || nextToken === ']')\n    ) {\n      message = HdsCodeEditorJsonLintingError.TrailingComma;\n    }\n  } else {\n    if (\n      (previousToken === '{' || previousToken === ',') &&\n      (nextToken === '\"' || nextToken === ':')\n    ) {\n      message = HdsCodeEditorJsonLintingError.KeyMustBeDoubleQuoted;\n    } else if (\n      previousToken === ':' &&\n      (nextToken === ',' || nextToken === '}' || nextToken === ']')\n    ) {\n      message = HdsCodeEditorJsonLintingError.ValueExpected;\n    }\n  }\n\n  return message;\n}\n\n// this renders the error message for both the tooltip and the drawer item\nexport function renderErrorMessage(\n  message: string,\n  lineNumber: number\n): HTMLElement {\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('cm-diagnosticText-inner');\n\n  const icon = document.createElement('div');\n  icon.classList.add('cm-lint-marker-error');\n  icon.setAttribute('aria-hidden', 'true');\n\n  const text = document.createElement('span');\n  text.textContent = `Line ${lineNumber}: ${message}`;\n\n  wrapper.append(icon, text);\n\n  return wrapper;\n}\n\n// lezer JSON parser uses '⚠' as a placeholder for syntax errors\nconst errorNodeName = '⚠';\n\nexport default async function jsonLinter(\n  onLint: HdsCodeEditorSignature['Args']['Named']['onLint']\n): Promise<Extension[]> {\n  const [\n    { EditorView, keymap },\n    { syntaxTree },\n    { linter, lintGutter, lintKeymap },\n  ] = await Promise.all([\n    import('@codemirror/view'),\n    import('@codemirror/language'),\n    import('@codemirror/lint'),\n  ]);\n\n  const jsonLinter = linter((editor) => {\n    const diagnostics: DiagnosticType[] = [];\n    const doc = editor.state.doc;\n    const tree = syntaxTree(editor.state);\n    const seenLines = new Set();\n\n    tree.cursor().iterate((node) => {\n      if (node.name === errorNodeName) {\n        const lineNumber = doc.lineAt(node.from).number;\n\n        if (seenLines.has(lineNumber)) {\n          return;\n        }\n\n        const message = determineErrorMessage({\n          previousToken: findNextToken(doc, node.from - 1, -1),\n          nextToken: findNextToken(doc, node.to),\n          errorToken: doc.sliceString(node.from, node.to),\n        });\n\n        diagnostics.push({\n          from: node.from,\n          to: node.to,\n          message,\n          severity: 'error',\n          renderMessage: () => renderErrorMessage(message, lineNumber),\n        });\n\n        seenLines.add(lineNumber);\n      }\n    });\n\n    onLint?.(diagnostics, doc.toString(), editor);\n\n    return diagnostics;\n  });\n\n  return [\n    jsonLinter,\n    lintGutter(),\n    keymap.of([...lintKeymap]),\n    EditorView.editorAttributes.of({ class: 'cm-lintingEnabled' }),\n  ];\n}\n"],"names":["HdsCodeEditorJsonLintingError","findNextToken","doc","index","step","length","token","sliceString","trim","determineErrorMessage","previousToken","nextToken","errorToken","message","InvalidSyntax","KeyExpected","MissingComma","TrailingComma","KeyMustBeDoubleQuoted","ValueExpected","renderErrorMessage","lineNumber","wrapper","document","createElement","classList","add","icon","setAttribute","text","textContent","append","errorNodeName","jsonLinter","onLint","EditorView","keymap","syntaxTree","linter","lintGutter","lintKeymap","Promise","all","editor","diagnostics","state","tree","seenLines","Set","cursor","iterate","node","name","lineAt","from","number","has","to","push","severity","renderMessage","toString","of","editorAttributes","class"],"mappings":"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"}