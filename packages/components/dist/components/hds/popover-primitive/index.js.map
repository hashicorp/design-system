{"version":3,"file":"index.js","sources":["../../../../src/components/hds/popover-primitive/index.hbs","../../../../src/components/hds/popover-primitive/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{yield\\n  (hash\\n    setupPrimitiveContainer=this.setupPrimitiveContainer\\n    setupPrimitiveToggle=this.setupPrimitiveToggle\\n    setupPrimitivePopover=this.setupPrimitivePopover\\n    toggleElement=this._toggleElement\\n    popoverElement=this._popoverElement\\n    isOpen=this._isOpen\\n    showPopover=this.showPopover\\n    hidePopover=this.hidePopover\\n    togglePopover=this.togglePopover\\n  )\\n}}\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { assert, warn } from '@ember/debug';\nimport { next } from '@ember/runloop';\nimport { guidFor } from '@ember/object/internals';\nimport { modifier } from 'ember-modifier';\n\nimport registerEvent from '../../../modifiers/hds-register-event.ts';\nimport anchoredPositionModifier from '../../../modifiers/hds-anchored-position.ts';\n\nimport type { FloatingUIOptions } from '../../../modifiers/hds-anchored-position.ts';\nimport type { ModifierLike } from '@glint/template';\n\nexport interface HdsPopoverPrimitiveSignature {\n  Args: {\n    isOpen?: boolean;\n    enableSoftEvents?: boolean;\n    enableClickEvents?: boolean;\n    onOpen?: () => void;\n    onClose?: () => void;\n  };\n  Blocks: {\n    default: [\n      {\n        setupPrimitiveContainer: ModifierLike<SetupPrimitiveContainerModifier>;\n        setupPrimitiveToggle: ModifierLike<SetupPrimitiveToggleModifier>;\n        setupPrimitivePopover: ModifierLike<SetupPrimitivePopoverModifier>;\n        toggleElement?: HTMLButtonElement;\n        popoverElement?: HTMLElement;\n        isOpen: boolean;\n        showPopover: () => void;\n        hidePopover: () => void;\n        togglePopover: () => void;\n      },\n    ];\n  };\n}\n\ninterface SetupPrimitiveContainerModifier {\n  Element: HTMLElement;\n}\n\nexport interface SetupPrimitiveToggleModifier {\n  Element: HTMLButtonElement;\n}\n\nexport interface SetupPrimitivePopoverModifier {\n  Element: HTMLElement;\n  Args: {\n    Positional: [];\n    Named: { anchoredPositionOptions: FloatingUIOptions };\n  };\n}\n\nexport default class HdsPopoverPrimitive extends Component<HdsPopoverPrimitiveSignature> {\n  @tracked private _isOpen;\n  @tracked private _isClosing = false;\n  private _containerElement?: HTMLElement;\n  private _toggleElement?: HTMLButtonElement;\n  private _popoverElement?: HTMLElement;\n  // this will enable \"soft\" events for the toggle (\"hover\" and \"focus\")\n  enableSoftEvents = this.args.enableSoftEvents ?? false;\n  // this will enable \"click\" events for the toggle\n  enableClickEvents = this.args.enableClickEvents ?? false;\n  private _timer?: ReturnType<typeof setTimeout> | null;\n\n  constructor(owner: unknown, args: HdsPopoverPrimitiveSignature['Args']) {\n    super(owner, args);\n    this._isOpen = this.args.isOpen ?? false;\n  }\n\n  setupPrimitiveContainer = modifier<SetupPrimitiveContainerModifier>(\n    (element: HTMLElement): void => {\n      this._containerElement = element;\n\n      // we register the \"soft\" events\n      if (this.enableSoftEvents) {\n        // @ts-expect-error: known issue with type of invocation\n        registerEvent(this._containerElement, [\n          'mouseenter',\n          this.onMouseEnter,\n        ]);\n        // @ts-expect-error: known issue with type of invocation\n        registerEvent(this._containerElement, [\n          'mouseleave',\n          this.onMouseLeave,\n        ]);\n        // @ts-expect-error: known issue with type of invocation\n        registerEvent(this._containerElement, ['focusin', this.onFocusIn]);\n      }\n      // we always want the focusOut event\n      // @ts-expect-error: known issue with type of invocation\n      registerEvent(this._containerElement, ['focusout', this.onFocusOut]);\n    }\n  );\n\n  setupPrimitiveToggle = modifier<SetupPrimitiveToggleModifier>(\n    (element: HTMLButtonElement): void => {\n      this._toggleElement = element;\n\n      assert(\n        `The toggle element of \"Hds::PopoverPrimitive\" must be a <button>; element received: <${element.tagName.toLowerCase()}>`,\n        element instanceof HTMLButtonElement\n      );\n    }\n  );\n\n  setupPrimitivePopover = modifier(\n    (\n      element: HTMLElement,\n      _positional,\n      named: { anchoredPositionOptions: FloatingUIOptions }\n    ): void => {\n      this._popoverElement = element;\n\n      // for the click events we don't use `onclick` event listeners, but we rely on the `popovertarget` attribute\n      // provided by the Popover API which does all the magic for us without needing JS code\n      // (important: to work it needs to be applied to a button)\n      if (this.enableClickEvents) {\n        let popoverId;\n        if (this._popoverElement.id) {\n          popoverId = this._popoverElement.id;\n        } else {\n          // we need a DOM id for the `popovertarget` attribute\n          popoverId = guidFor(this);\n          this._popoverElement.id = popoverId;\n        }\n        if (this._toggleElement) {\n          this._toggleElement.setAttribute('popovertarget', popoverId);\n        }\n      }\n\n      // this should be an extremely edge case, but in the case the popover needs to be initially forced to be open\n      // we need to use the \"manual\" state to support the case of multiple \"menus\" opened at the same time\n      // IMPORTANT! if a \"popover\" is set to \"open\" with a \"manual\" state, then it can't be closed via `esc` and `click outside`\n      if (this.args.isOpen) {\n        this._popoverElement.popover = 'manual';\n        this._popoverElement.showPopover();\n      } else {\n        this._popoverElement.popover = 'auto';\n      }\n\n      // Register \"onBeforeToggle\" + \"onToggle\" callback functions to be called when a native 'toggle' event is dispatched\n      // @ts-expect-error: known issue with type of invocation\n      registerEvent(this._popoverElement, [\n        'beforetoggle',\n        this.onBeforeTogglePopover,\n      ]);\n      // @ts-expect-error: known issue with type of invocation\n      registerEvent(this._popoverElement, ['toggle', this.onTogglePopover]);\n\n      // we need to spread the argument because if it's set via `{{ hash â€¦ }}` Ember complains when we overwrite one of its values\n      const anchoredPositionOptions: FloatingUIOptions = {\n        ...named.anchoredPositionOptions,\n      };\n\n      // Apply the `hds-anchored-position` modifier to the \"popover\" element\n      // (notice: this function runs the first time when the element the modifier was applied to is inserted into the DOM, and it autotracks while running.\n      // Any tracked values that it accesses will be tracked, including the arguments it receives, and if any of them changes, the function will run again)\n      // This modifiers uses the Floating UI library to provide:\n      // - positioning of the \"popover\" in relation to the \"toggle\"\n      // - collision detection (optional)\n      // eslint-disable-next-line ember/no-runloop\n      next((): void => {\n        // @ts-expect-error: known issue with type of invocation\n        anchoredPositionModifier(\n          this._popoverElement, // element the modifier is attached to\n          [this._toggleElement], // positional arguments\n          anchoredPositionOptions // named arguments\n        );\n      });\n    }\n  );\n\n  @action\n  showPopover(): void {\n    try {\n      if (this._popoverElement) {\n        this._popoverElement.showPopover();\n      }\n    } catch (error) {\n      warn(\n        `The invocation of \\`showPopover\\` for the popover element caused an unexpected error: ${JSON.stringify(\n          error\n        )}`,\n        {\n          id: 'hds-popover.show-popover-action.invocation-failed',\n        }\n      );\n    }\n  }\n\n  @action\n  hidePopover(): void {\n    try {\n      if (this._popoverElement) {\n        this._popoverElement.hidePopover();\n      }\n    } catch (error) {\n      warn(\n        `The invocation of \\`hidePopover\\` for the popover element caused an unexpected error: ${JSON.stringify(\n          error\n        )}`,\n        {\n          id: 'hds-popover.hide-popover-action.invocation-failed',\n        }\n      );\n    }\n  }\n\n  @action\n  togglePopover(): void {\n    try {\n      if (this._popoverElement) {\n        this._popoverElement.togglePopover();\n      }\n    } catch (error) {\n      warn(\n        `The invocation of \\`togglePopover\\` for the popover element caused an unexpected error: ${JSON.stringify(\n          error\n        )}`,\n        {\n          id: 'hds-popover.toggle-popover-action.invocation-failed',\n        }\n      );\n    }\n  }\n\n  // fired just _before_ the \"popover\" is shown or hidden\n  @action\n  onBeforeTogglePopover(event: ToggleEvent): void {\n    if (event.newState === 'closed') {\n      // we need this flag to check if it's in the \"closing\" process,\n      // because the browser automatically returns the focus to the \"trigger\" button\n      // and this would re-open immediately the popover because of the `focusin` event\n      this._isClosing = true;\n    }\n  }\n\n  // fired just _after_ the \"popover\" is shown or hidden\n  @action\n  onTogglePopover(event: ToggleEvent): void {\n    if (event.newState === 'open') {\n      this._isOpen = true;\n\n      // we call the \"onOpen\" callback if it exists (and is a function)\n      const { onOpen } = this.args;\n      if (typeof onOpen === 'function') {\n        onOpen();\n      }\n    } else {\n      this._isOpen = false;\n\n      // reset the \"isClosing\" flag (the `toggle` event is fired _after_ the popover is closed)\n      this._isClosing = false;\n\n      // if the popover was initially forced to be open (using the \"manual\" state) then revert its status to `auto` once the user interacts with it\n      if (this.args.isOpen) {\n        if (this._popoverElement) {\n          this._popoverElement.popover = 'auto';\n        }\n      }\n\n      // we call the \"onClose\" callback if it exists (and is a function)\n      const { onClose } = this.args;\n      if (typeof onClose === 'function') {\n        onClose();\n      }\n    }\n  }\n\n  @action\n  onMouseEnter(): void {\n    if (this._timer) {\n      clearTimeout(this._timer);\n    }\n    this.showPopover();\n  }\n\n  @action\n  onFocusIn(): void {\n    // don't re-open the popover if the focus is returned because the closing\n    if (!this._isClosing) {\n      if (this._timer) {\n        clearTimeout(this._timer);\n      }\n      this.showPopover();\n    }\n  }\n\n  @action\n  onMouseLeave(): void {\n    this._timer = setTimeout((): void => this.hidePopover(), 500);\n  }\n\n  @action\n  onFocusOut(event: FocusEvent): void {\n    if (this._containerElement) {\n      let isFocusStillInside = false;\n      if (\n        event.relatedTarget &&\n        // if the related target is not part of the disclosed content we close the disclosed container\n        this._containerElement.contains(event.relatedTarget as Node)\n      ) {\n        isFocusStillInside = true;\n      } else if (\n        document.activeElement &&\n        // due to inconsistent implementation of relatedTarget across browsers we use the activeElement as a fallback\n        this._containerElement.contains(document.activeElement)\n      ) {\n        isFocusStillInside = true;\n      }\n      // if the target receiving the focus is _not_ part of the disclosed content we close the disclosed container\n      if (!isFocusStillInside) {\n        this.hidePopover();\n      }\n    }\n  }\n}\n"],"names":["HdsPopoverPrimitive","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","_descriptor2","_defineProperty","enableSoftEvents","enableClickEvents","modifier","element","_containerElement","registerEvent","onMouseEnter","onMouseLeave","onFocusIn","onFocusOut","_toggleElement","assert","tagName","toLowerCase","HTMLButtonElement","_positional","named","_popoverElement","popoverId","id","guidFor","setAttribute","isOpen","popover","showPopover","onBeforeTogglePopover","onTogglePopover","anchoredPositionOptions","next","anchoredPositionModifier","_isOpen","error","warn","JSON","stringify","hidePopover","togglePopover","event","newState","_isClosing","onOpen","onClose","_timer","clearTimeout","setTimeout","isFocusStillInside","relatedTarget","contains","document","activeElement","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}