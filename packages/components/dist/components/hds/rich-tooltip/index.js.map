{"version":3,"file":"index.js","sources":["../../../../src/components/hds/rich-tooltip/index.hbs","../../../../src/components/hds/rich-tooltip/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{! @glint-nocheck: not typesafe yet }}\\n{{!\\n  Copyright (c) HashiCorp, InPP.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! IMPORTANT: we need to add \\\"squishies\\\" here (~) because otherwise the whitespace added by Ember becomes visible in the underlined text (being an inline element) - See https://handlebarsjs.com/guide/expressions.html#whitespace-control }}\\n<Hds::PopoverPrimitive\\n  @isOpen={{@isOpen}}\\n  @onOpen={{@onOpen}}\\n  @onClose={{@onClose}}\\n  @enableSoftEvents={{this.enableSoftEvents}}\\n  @enableClickEvents={{this.enableClickEvents}}\\n  as |PP|\\n><div class=\\\"hds-rich-tooltip\\\" ...attributes {{PP.setupPrimitiveContainer}}>\\n    {{~yield\\n      (hash\\n        Toggle=(component\\n          \\\"hds/rich-tooltip/toggle\\\"\\n          popoverId=this.popoverId\\n          setupPrimitiveToggle=PP.setupPrimitiveToggle\\n          isOpen=PP.isOpen\\n        )\\n        Bubble=(component\\n          \\\"hds/rich-tooltip/bubble\\\"\\n          arrowId=this.arrowId\\n          popoverId=this.popoverId\\n          setupPrimitivePopover=PP.setupPrimitivePopover\\n          isOpen=PP.isOpen\\n        )\\n        isOpen=PP.isOpen\\n        close=PP.hidePopover\\n      )\\n    ~}}\\n  </div></Hds::PopoverPrimitive>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { getElementId } from '../../../utils/hds-get-element-id.js';\n\nexport default class HdsRichTooltipIndexComponent extends Component {\n  elementId = getElementId(this);\n  arrowId = `arrow-${this.elementId}`;\n  popoverId = `popover-${this.elementId}`;\n\n  get enableSoftEvents() {\n    return this.args.enableClickEvents !== true;\n  }\n\n  get enableClickEvents() {\n    return this.args.enableClickEvents ?? false;\n  }\n}\n"],"names":["HdsRichTooltipIndexComponent","Component","constructor","args","_defineProperty","getElementId","elementId","enableSoftEvents","enableClickEvents","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;AACA,eAAe,kBAAkB,CAAC,wrCAAwrC;;ACO3sC,MAAMA,4BAA4B,SAASC,SAAS,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,CACtDC,IAAAA,EAAAA,WAAAA,EAAAA,YAAY,CAAC,IAAI,CAAC,CAAA,CAAA;AAAAD,IAAAA,eAAA,CACpB,IAAA,EAAA,SAAA,EAAA,CAAA,MAAA,EAAS,IAAI,CAACE,SAAS,CAAE,CAAA,CAAA,CAAA;AAAAF,IAAAA,eAAA,CACvB,IAAA,EAAA,WAAA,EAAA,CAAA,QAAA,EAAW,IAAI,CAACE,SAAS,CAAE,CAAA,CAAA,CAAA;AAAA,GAAA;EAEvC,IAAIC,gBAAgBA,GAAG;AACrB,IAAA,OAAO,IAAI,CAACJ,IAAI,CAACK,iBAAiB,KAAK,IAAI,CAAA;AAC7C,GAAA;EAEA,IAAIA,iBAAiBA,GAAG;AACtB,IAAA,OAAO,IAAI,CAACL,IAAI,CAACK,iBAAiB,IAAI,KAAK,CAAA;AAC7C,GAAA;AACF,CAAA;AAACC,oBAAA,CAAAC,QAAA,EAZoBV,4BAA4B,CAAA;;;;"}