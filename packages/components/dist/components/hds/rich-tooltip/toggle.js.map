{"version":3,"file":"toggle.js","sources":["../../../../src/components/hds/rich-tooltip/toggle.hbs","../../../../src/components/hds/rich-tooltip/toggle.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{! @glint-nocheck: not typesafe yet }}\\n{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! IMPORTANT: we need to add \\\"squishies\\\" here (~) because otherwise the whitespace added by Ember becomes visible in the underlined text (being an inline element) - See https://handlebarsjs.com/guide/expressions.html#whitespace-control }}\\n<button\\n  class={{this.classNames}}\\n  ...attributes\\n  type=\\\"button\\\"\\n  aria-controls={{@popoverId}}\\n  aria-describedby={{@popoverId}}\\n  aria-expanded={{if @isOpen \\\"true\\\" \\\"false\\\"}}\\n  {{@setupPrimitiveToggle}}\\n>\\n  {{~#if (has-block)~}}\\n    {{yield}}\\n  {{~else~}}\\n    {{~#if (and @icon (eq this.iconPosition \\\"leading\\\"))~}}\\n      <FlightIcon class=\\\"hds-rich-tooltip__toggle-icon\\\" @name={{@icon}} @isInlineBlock={{this.isInline}} />\\n    {{~/if~}}\\n    {{~#if @text~}}\\n      <span class=\\\"hds-rich-tooltip__toggle-text\\\">{{~@text~}}</span>\\n    {{~/if~}}\\n    {{~#if (and @icon (eq this.iconPosition \\\"trailing\\\"))~}}\\n      <FlightIcon class=\\\"hds-rich-tooltip__toggle-icon\\\" @name={{@icon}} @isInlineBlock={{this.isInline}} />\\n    {{~/if~}}\\n  {{~/if~}}\\n</button>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nimport {\n  HdsRichTooltipToggleIconPositionValues,\n  HdsRichTooltipToggleSizeValues,\n} from './types.ts';\nimport type {\n  HdsRichTooltipToggleIconPositions,\n  HdsRichTooltipToggleSizes,\n} from './types.ts';\nimport type { FlightIconSignature } from '@hashicorp/ember-flight-icons/components/flight-icon';\nimport type { ModifierLike } from '@glint/template';\nimport type { SetupPrimitiveToggleModifier } from '../popover-primitive';\n\nexport const ICONPOSITIONS: string[] = Object.values(\n  HdsRichTooltipToggleIconPositionValues\n);\nexport const DEFAULT_ICONPOSITION =\n  HdsRichTooltipToggleIconPositionValues.Trailing;\nexport const SIZES: string[] = Object.values(HdsRichTooltipToggleSizeValues);\n\nexport interface HdsRichTooltipToggleSignature {\n  Args: {\n    text?: string;\n    icon?: FlightIconSignature['Args']['name'];\n    iconPosition?: HdsRichTooltipToggleIconPositions;\n    size?: undefined | HdsRichTooltipToggleSizes;\n    isInline?: boolean;\n    isOpen?: boolean;\n    popoverId: string;\n    setupPrimitiveToggle: ModifierLike<SetupPrimitiveToggleModifier>;\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLButtonElement;\n}\n\nexport default class HdsRichTooltipToggleComponent extends Component<HdsRichTooltipToggleSignature> {\n  /**\n   * @param isInline\n   * @type {boolean}\n   * @default true\n   * @description sets display inline for the element\n   */\n  get isInline(): boolean {\n    const { isInline = false } = this.args;\n    return isInline;\n  }\n\n  /**\n   * @param iconPosition\n   * @type {string}\n   * @default leading\n   * @description Positions the icon before or after the text; allowed values are `leading` or `trailing`\n   */\n  get iconPosition(): HdsRichTooltipToggleIconPositions {\n    const { iconPosition = DEFAULT_ICONPOSITION } = this.args;\n\n    assert(\n      `@iconPosition for \"Hds::RichTooltip::Toggle\" must be one of the following: ${ICONPOSITIONS.join(\n        ', '\n      )}; received: ${iconPosition}`,\n      ICONPOSITIONS.includes(iconPosition)\n    );\n\n    return iconPosition;\n  }\n\n  /**\n   * @param size\n   * @type {string}\n   * @default medium\n   * @description The size of the \"info\" text; acceptable values are `small`, `medium`, `large`\n   */\n  get size(): HdsRichTooltipToggleSizes | undefined {\n    let size;\n\n    // we assign a \"size\" only if `@text` is provided\n    if (this.args.text) {\n      size = this.args.size;\n\n      assert(\n        `@size for \"Hds::RichTooltip::Toggle\" must be one of the following: ${SIZES.join(\n          ', '\n        )}; received: ${size}`,\n        size === undefined || SIZES.includes(size)\n      );\n    }\n\n    return size;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-rich-tooltip__toggle'];\n\n    // add a class based on the @isInline argument\n    if (this.isInline) {\n      classes.push('hds-rich-tooltip__toggle--is-inline');\n    } else {\n      classes.push('hds-rich-tooltip__toggle--is-block');\n    }\n\n    // add a class based on the @size argument (if provided)\n    if (this.size) {\n      classes.push(`hds-rich-tooltip__toggle--size-${this.size}`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["ICONPOSITIONS","Object","values","HdsRichTooltipToggleIconPositionValues","DEFAULT_ICONPOSITION","Trailing","SIZES","HdsRichTooltipToggleSizeValues","HdsRichTooltipToggleComponent","Component","isInline","args","iconPosition","assert","join","includes","size","text","undefined","classNames","classes","push","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;AACA,eAAe,kBAAkB,CAAC,6nCAA6nC;;ACD/pC;AACA;AACA;AACA;;AAiBO,MAAMA,aAAuB,GAAGC,MAAM,CAACC,MAAM,CAClDC,sCACF,EAAC;AACYC,MAAAA,oBAAoB,GAC/BD,sCAAsC,CAACE,SAAQ;AAC1C,MAAMC,KAAe,GAAGL,MAAM,CAACC,MAAM,CAACK,8BAA8B,EAAC;AAmB7D,MAAMC,6BAA6B,SAASC,SAAS,CAAgC;AAClG;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,QAAQA,GAAY;IACtB,MAAM;AAAEA,MAAAA,QAAQ,GAAG,KAAA;KAAO,GAAG,IAAI,CAACC,IAAI,CAAA;AACtC,IAAA,OAAOD,QAAQ,CAAA;AACjB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAIE,YAAYA,GAAsC;IACpD,MAAM;AAAEA,MAAAA,YAAY,GAAGR,oBAAAA;KAAsB,GAAG,IAAI,CAACO,IAAI,CAAA;AAEzDE,IAAAA,MAAM,CACJ,CAA8Eb,2EAAAA,EAAAA,aAAa,CAACc,IAAI,CAC9F,IACF,CAAC,CAAA,YAAA,EAAeF,YAAY,CAAA,CAAE,EAC9BZ,aAAa,CAACe,QAAQ,CAACH,YAAY,CACrC,CAAC,CAAA;AAED,IAAA,OAAOA,YAAY,CAAA;AACrB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAII,IAAIA,GAA0C;AAChD,IAAA,IAAIA,IAAI,CAAA;;AAER;AACA,IAAA,IAAI,IAAI,CAACL,IAAI,CAACM,IAAI,EAAE;AAClBD,MAAAA,IAAI,GAAG,IAAI,CAACL,IAAI,CAACK,IAAI,CAAA;MAErBH,MAAM,CACJ,sEAAsEP,KAAK,CAACQ,IAAI,CAC9E,IACF,CAAC,CAAA,YAAA,EAAeE,IAAI,CAAA,CAAE,EACtBA,IAAI,KAAKE,SAAS,IAAIZ,KAAK,CAACS,QAAQ,CAACC,IAAI,CAC3C,CAAC,CAAA;AACH,KAAA;AAEA,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;EACE,IAAIG,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,0BAA0B,CAAC,CAAA;;AAE5C;IACA,IAAI,IAAI,CAACV,QAAQ,EAAE;AACjBU,MAAAA,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC,CAAA;AACrD,KAAC,MAAM;AACLD,MAAAA,OAAO,CAACC,IAAI,CAAC,oCAAoC,CAAC,CAAA;AACpD,KAAA;;AAEA;IACA,IAAI,IAAI,CAACL,IAAI,EAAE;MACbI,OAAO,CAACC,IAAI,CAAC,CAAA,+BAAA,EAAkC,IAAI,CAACL,IAAI,EAAE,CAAC,CAAA;AAC7D,KAAA;AAEA,IAAA,OAAOI,OAAO,CAACN,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACQ,oBAAA,CAAAC,QAAA,EA5EoBf,6BAA6B,CAAA;;;;"}