{"version":3,"file":"index.js","sources":["../../../../src/components/hds/dropdown/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\n\nimport {\n  // map Dropdown's `listPosition` values to PopoverPrimitive's `placement` values\n  HdsDropdownPositionToPlacementValues,\n  // Dropdown's `listPosition` values\n  HdsDropdownPositionValues,\n} from './types.ts';\n\nimport type { ComponentLike } from '@glint/template';\nimport type { MenuPrimitiveSignature } from '../menu-primitive';\nimport type { HdsDropdownFooterSignature } from './footer';\nimport type { HdsDropdownHeaderSignature } from './header';\nimport type { HdsDropdownListItemCheckboxSignature } from './list-item/checkbox';\nimport type { HdsDropdownListItemCheckmarkSignature } from './list-item/checkmark';\nimport type { HdsDropdownListItemCopyItemSignature } from './list-item/copy-item';\nimport type { HdsDropdownListItemDescriptionSignature } from './list-item/description';\nimport type { HdsDropdownListItemGenericSignature } from './list-item/generic';\nimport type { HdsDropdownListItemInteractiveSignature } from './list-item/interactive';\nimport type { HdsDropdownListItemRadioSignature } from './list-item/radio';\nimport type { HdsDropdownListItemSeparatorSignature } from './list-item/separator';\nimport type { HdsDropdownListItemTitleSignature } from './list-item/title';\nimport type { HdsDropdownToggleButtonSignature } from './toggle/button';\nimport type { HdsDropdownToggleIconSignature } from './toggle/icon';\nimport type { HdsDropdownPositions } from './types';\n\nimport type { HdsAnchoredPositionOptions } from '../../../modifiers/hds-anchored-position.ts';\n\nexport const DEFAULT_POSITION = HdsDropdownPositionValues.BottomRight;\nexport const POSITIONS: HdsDropdownPositions[] = Object.values(\n  HdsDropdownPositionValues\n);\n\nexport interface HdsDropdownSignature {\n  Args: MenuPrimitiveSignature['Args'] & {\n    height?: string;\n    isInline?: boolean;\n    isOpen?: boolean;\n    listPosition?: HdsDropdownPositions;\n    width?: string;\n    enableCollisionDetection?: HdsAnchoredPositionOptions['enableCollisionDetection'];\n    preserveContentInDom?: boolean;\n    matchToggleWidth?: boolean;\n  };\n  Blocks: {\n    default: [\n      {\n        Footer?: ComponentLike<HdsDropdownFooterSignature>;\n        Header?: ComponentLike<HdsDropdownHeaderSignature>;\n        Checkbox?: ComponentLike<HdsDropdownListItemCheckboxSignature>;\n        Checkmark?: ComponentLike<HdsDropdownListItemCheckmarkSignature>;\n        CopyItem?: ComponentLike<HdsDropdownListItemCopyItemSignature>;\n        Description?: ComponentLike<HdsDropdownListItemDescriptionSignature>;\n        Generic?: ComponentLike<HdsDropdownListItemGenericSignature>;\n        Interactive?: ComponentLike<HdsDropdownListItemInteractiveSignature>;\n        Radio?: ComponentLike<HdsDropdownListItemRadioSignature>;\n        Separator?: ComponentLike<HdsDropdownListItemSeparatorSignature>;\n        Title?: ComponentLike<HdsDropdownListItemTitleSignature>;\n        ToggleButton?: ComponentLike<HdsDropdownToggleButtonSignature>;\n        ToggleIcon?: ComponentLike<HdsDropdownToggleIconSignature>;\n        close?: () => void;\n      },\n    ];\n  };\n  Element: MenuPrimitiveSignature['Element'];\n}\n\nexport default class HdsDropdown extends Component<HdsDropdownSignature> {\n  /**\n   * @param listPosition\n   * @type {string}\n   * @default bottom-right\n   * @description Determines the position of the \"list\"\n   */\n  get listPosition(): HdsDropdownPositions {\n    const { listPosition = DEFAULT_POSITION } = this.args;\n\n    assert(\n      `@listPosition for \"Hds::Dropdown::Index\" must be one of the following: ${POSITIONS.join(\n        ', '\n      )}; received: ${listPosition}`,\n      POSITIONS.includes(listPosition)\n    );\n\n    return listPosition;\n  }\n\n  get enableCollisionDetection(): HdsAnchoredPositionOptions['enableCollisionDetection'] {\n    return this.args.enableCollisionDetection ?? false;\n  }\n\n  get matchToggleWidth(): HdsAnchoredPositionOptions['matchToggleWidth'] {\n    return this.args.matchToggleWidth ?? false;\n  }\n\n  get anchoredPositionOptions(): {\n    placement: HdsAnchoredPositionOptions['placement'];\n    offsetOptions: HdsAnchoredPositionOptions['offsetOptions'];\n    enableCollisionDetection: HdsAnchoredPositionOptions['enableCollisionDetection'];\n    matchToggleWidth: HdsAnchoredPositionOptions['matchToggleWidth'];\n  } {\n    // custom options specific for the `RichTooltip` component\n    // for details see the `hds-anchored-position` modifier\n    return {\n      placement: HdsDropdownPositionToPlacementValues[this.listPosition],\n      offsetOptions: 4,\n      enableCollisionDetection: this.enableCollisionDetection ? 'flip' : false,\n      matchToggleWidth: this.matchToggleWidth,\n    };\n  }\n\n  /**\n   * Get the class names to apply to the element\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the root element\n   */\n  get classNames(): string {\n    const classes = ['hds-dropdown'];\n\n    // add a class based on the @isInline argument\n    if (this.args.isInline) {\n      classes.push('hds-dropdown--is-inline');\n    }\n\n    return classes.join(' ');\n  }\n\n  /**\n   * Get the class names to apply to the content\n   * @method classNamesContent\n   * @return {string} The \"class\" attribute to apply to the disclosed content\n   */\n  get classNamesContent(): string {\n    const classes = ['hds-dropdown__content'];\n\n    // add a class based on the @listPosition argument\n    // TODO: we preserved these classes to avoid introducing breaking changes for consumers who rely on these classes for tests, but we aim to remove them in the next major release\n    // context: https://github.com/hashicorp/design-system/pull/2309#discussion_r1706941892\n    classes.push(`hds-dropdown__content--position-${this.listPosition}`);\n\n    // add a class based on the @width or @matchToggleWidth arguments\n    if (this.args.width || this.args.matchToggleWidth) {\n      classes.push('hds-dropdown__content--fixed-width');\n    }\n\n    return classes.join(' ');\n  }\n\n  @action\n  didInsertList(element: HTMLUListElement): void {\n    const checkmarkItems = element.querySelectorAll(`[role=\"option\"]`);\n    if (checkmarkItems.length) {\n      const toggleButtonId = element\n        .closest('.hds-dropdown')\n        ?.querySelector('.hds-dropdown-toggle-button')\n        ?.getAttribute('id');\n\n      element.setAttribute('role', 'listbox');\n\n      if (toggleButtonId) {\n        element.setAttribute('aria-labelledby', toggleButtonId);\n      }\n    }\n  }\n}\n"],"names":["DEFAULT_POSITION","HdsDropdownPositionValues","BottomRight","POSITIONS","Object","values","HdsDropdown","Component","listPosition","args","assert","join","includes","enableCollisionDetection","matchToggleWidth","anchoredPositionOptions","placement","HdsDropdownPositionToPlacementValues","offsetOptions","classNames","classes","isInline","push","classNamesContent","width","didInsertList","element","checkmarkItems","querySelectorAll","length","toggleButtonId","closest","querySelector","getAttribute","setAttribute","n","prototype","action","setComponentTemplate","TEMPLATE"],"mappings":"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"}