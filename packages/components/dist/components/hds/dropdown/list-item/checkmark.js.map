{"version":3,"file":"checkmark.js","sources":["../../../../../src/components/hds/dropdown/list-item/checkmark.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport type { HdsIconSignature } from '../../icon';\nimport type { HdsInteractiveSignature } from '../../interactive';\n\nexport interface HdsDropdownListItemCheckmarkSignature {\n  Args: HdsInteractiveSignature['Args'] & {\n    count?: string | number;\n    icon?: HdsIconSignature['Args']['name'];\n    selected?: boolean;\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HdsInteractiveSignature['Element'];\n}\n\nexport default class HdsDropdownListItemCheckmark extends Component<HdsDropdownListItemCheckmarkSignature> {\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = [\n      'hds-dropdown-list-item',\n      'hds-dropdown-list-item--color-action',\n      'hds-dropdown-list-item--variant-checkmark',\n    ];\n\n    // add a class based on the @selected argument\n    if (this.args.selected) {\n      classes.push('hds-dropdown-list-item--variant-checkmark-selected');\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["HdsDropdownListItemCheckmark","Component","classNames","classes","args","selected","push","join","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;AAkBe,MAAMA,4BAA4B,SAASC,SAAS,CAAwC;AACzG;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAW;IACvB,MAAMC,OAAO,GAAG,CACd,wBAAwB,EACxB,sCAAsC,EACtC,2CAA2C,CAC5C;;AAED;AACA,IAAA,IAAI,IAAI,CAACC,IAAI,CAACC,QAAQ,EAAE;AACtBF,MAAAA,OAAO,CAACG,IAAI,CAAC,oDAAoD,CAAC;AACpE;AAEA,IAAA,OAAOH,OAAO,CAACI,IAAI,CAAC,GAAG,CAAC;AAC1B;AACF;AAACC,oBAAA,CAAAC,QAAA,EApBoBT,4BAA4B,CAAA;;;;"}