{"version":3,"file":"icon.js","sources":["../../../../../src/components/hds/dropdown/toggle/icon.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { tracked } from '@glimmer/tracking';\nimport { HdsDropdownToggleIconSizeValues } from './types.ts';\n\nimport type { HdsIconSignature } from '../../icon';\nimport type { HdsDropdownToggleIconSizes } from './types';\nimport type { ModifierLike } from '@glint/template';\nimport type { SetupPrimitiveToggleModifier } from '../../popover-primitive/index.ts';\nimport type Owner from '@ember/owner';\n\nexport const DEFAULT_SIZE = HdsDropdownToggleIconSizeValues.Medium;\nexport const SIZES: string[] = Object.values(HdsDropdownToggleIconSizeValues);\n\nexport interface HdsDropdownToggleIconSignature {\n  Args: {\n    hasChevron?: boolean;\n    icon?: HdsIconSignature['Args']['name'];\n    imageSrc?: string;\n    isOpen?: boolean;\n    size?: HdsDropdownToggleIconSizes;\n    text: string;\n    setupPrimitiveToggle?: ModifierLike<SetupPrimitiveToggleModifier>;\n  };\n  Element: HTMLButtonElement;\n}\n\nexport default class HdsDropdownToggleIcon extends Component<HdsDropdownToggleIconSignature> {\n  @tracked private _hasImage = true;\n\n  constructor(owner: Owner, args: HdsDropdownToggleIconSignature['Args']) {\n    super(owner, args);\n    if (!(this.args.icon || this.args.imageSrc)) {\n      assert(\n        '@icon or @imageSrc must be defined for \"Hds::Dropdown::Toggle::Icon\"'\n      );\n    }\n  }\n\n  @action\n  onDidUpdateImageSrc(): void {\n    this._hasImage = true;\n  }\n\n  @action\n  onImageLoadError(): void {\n    this._hasImage = false;\n  }\n\n  /**\n   * @param text\n   * @type {string}\n   * @description The text of the `aria-label` applied to the toggle\n   */\n  get text(): string {\n    const { text } = this.args;\n\n    assert(\n      '@text for \"Hds::Dropdown::Toggle::Icon\" must have a valid value',\n      text !== undefined\n    );\n\n    return text;\n  }\n\n  /**\n   * @param size\n   * @type {string}\n   * @default medium\n   * @description The size of the button; acceptable values are `small` and `medium`\n   */\n  get size(): HdsDropdownToggleIconSizes {\n    const { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Dropdown::Toggle::Icon\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * @param iconSize\n   * @type {string}\n   * @default 24\n   * @description ensures that the correct icon size is used\n   */\n  get iconSize(): HdsIconSignature['Args']['size'] {\n    if (this.args.size === 'medium' && !this.hasChevron) {\n      // in this special case we use a larger SVG\n      return '24';\n    } else {\n      // this is the default size (notice: for the \"small\" variant with chevron, we set the actual size to `12px` via CSS)\n      return '16';\n    }\n  }\n\n  /**\n   * Indicates if a dropdown chevron icon should be displayed; should be displayed unless the \"more-horizontal\" icon is used.\n   *\n   * @param hasChevron\n   * @type {boolean}\n   * @default true\n   */\n  get hasChevron(): boolean {\n    return this.args.hasChevron ?? true;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method ToggleIcon#classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-dropdown-toggle-icon'];\n\n    // add a class based on the @size argument\n    classes.push(`hds-dropdown-toggle-icon--size-${this.size}`);\n\n    // add a class based on the @isOpen argument\n    if (this.args.isOpen) {\n      classes.push('hds-dropdown-toggle-icon--is-open');\n    }\n\n    // add a class based on the @hasChevron argument\n    if (this.hasChevron) {\n      classes.push('hds-dropdown-toggle-icon--has-chevron');\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_SIZE","HdsDropdownToggleIconSizeValues","Medium","SIZES","Object","values","HdsDropdownToggleIcon","Component","g","prototype","tracked","i","void 0","constructor","owner","args","icon","imageSrc","assert","onDidUpdateImageSrc","_hasImage","n","action","onImageLoadError","text","undefined","size","join","includes","iconSize","hasChevron","classNames","classes","push","isOpen","setComponentTemplate","TEMPLATE"],"mappings":"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"}