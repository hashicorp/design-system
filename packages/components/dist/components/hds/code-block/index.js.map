{"version":3,"file":"index.js","sources":["../../../../src/components/hds/code-block/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\nimport { assert } from '@ember/debug';\nimport { next, schedule } from '@ember/runloop';\nimport { htmlSafe } from '@ember/template';\nimport { guidFor } from '@ember/object/internals';\n\nimport Prism from 'prismjs';\n\nimport type { SafeString } from '@ember/template';\nimport type { ComponentLike } from '@glint/template';\n\nimport type { HdsCodeBlockTitleSignature } from './title';\nimport type { HdsCodeBlockDescriptionSignature } from './description';\nimport { HdsCodeBlockLanguageValues } from './types.ts';\nimport type { HdsCodeBlockLanguages } from './types.ts';\nimport type { HdsCopyButtonSignature } from '../copy/button/index.ts';\n\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\nimport 'prismjs/plugins/line-highlight/prism-line-highlight';\n\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-go';\nimport 'prismjs/components/prism-hcl';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/components/prism-log';\nimport 'prismjs/components/prism-ruby';\nimport 'prismjs/components/prism-shell-session';\nimport 'prismjs/components/prism-yaml';\n\n// These imports are required to overcome a global variable clash in Helios website\n// where language import are overriden by the Prism instance in `CodeBlock`\n// Note that `prism-handlebars` is dependant on `prism-markup-templating`\nimport 'prismjs/components/prism-markup-templating';\nimport 'prismjs/components/prism-handlebars';\n\nexport const LANGUAGES: string[] = Object.values(HdsCodeBlockLanguageValues);\n\nexport interface HdsCodeBlockSignature {\n  Args: {\n    hasCopyButton?: boolean;\n    hasLineNumbers?: boolean;\n    hasLineWrapping?: boolean;\n    highlightLines?: string;\n    lineNumberStart?: number;\n    isStandalone?: boolean;\n    language?: HdsCodeBlockLanguages;\n    maxHeight?: string;\n    value: string;\n    copyButtonText?: HdsCopyButtonSignature['Args']['text'];\n  };\n  Blocks: {\n    default: [\n      {\n        Title?: ComponentLike<HdsCodeBlockTitleSignature>;\n        Description?: ComponentLike<HdsCodeBlockDescriptionSignature>;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsCodeBlock extends Component<HdsCodeBlockSignature> {\n  @tracked private _prismCode: SafeString = htmlSafe('');\n\n  /**\n   * Generates a unique ID for the code content\n   *\n   * @param _preCodeId\n   */\n  private _preCodeId = 'pre-code-' + guidFor(this);\n\n  /**\n   * @param code\n   * @type {string}\n   * @description code text content for the CodeBlock\n   */\n  get code(): string {\n    const code = this.args.value;\n\n    assert(\n      '@code for \"Hds::CodeBlock\" must have a valid value',\n      code !== undefined\n    );\n\n    if (Prism?.plugins?.['NormalizeWhitespace']) {\n      return Prism.plugins['NormalizeWhitespace'].normalize(code);\n    }\n\n    return code;\n  }\n\n  /**\n   * @param language\n   * @type {string}\n   * @default undefined\n   * @description name of coding language used within CodeBlock for syntax highlighting\n   */\n  get language(): HdsCodeBlockLanguages | undefined {\n    return this.args.language ?? undefined;\n  }\n\n  /**\n   * @param hasLineNumbers\n   * @type {boolean}\n   * @default true\n   * @description Displays line numbers if true\n   */\n  get hasLineNumbers(): boolean {\n    return this.args.hasLineNumbers ?? true;\n  }\n\n  /**\n   * @param isStandalone\n   * @type {boolean}\n   * @default true\n   * @description Make CodeBlock container corners appear rounded\n   */\n  get isStandalone(): boolean {\n    return this.args.isStandalone ?? true;\n  }\n\n  /**\n   * @param hasLineWrapping\n   * @type {boolean}\n   * @default false\n   * @description Make text content wrap on multiple lines\n   */\n  get hasLineWrapping(): boolean {\n    return this.args.hasLineWrapping ?? false;\n  }\n\n  get copyButtonText(): HdsCopyButtonSignature['Args']['text'] {\n    return this.args.copyButtonText ? this.args.copyButtonText : 'Copy';\n  }\n\n  @action\n  setPrismCode(element: HTMLElement): void {\n    const code = this.code;\n    const language = this.language;\n    const grammar = language ? Prism.languages[language] : undefined;\n\n    if (code) {\n      // eslint-disable-next-line ember/no-runloop\n      next(() => {\n        if (language && grammar) {\n          this._prismCode = htmlSafe(Prism.highlight(code, grammar, language));\n        } else {\n          this._prismCode = htmlSafe(Prism.util.encode(code).toString());\n        }\n\n        // Force prism-line-numbers plugin initialization, required for Prism.highlight usage\n        // See https://github.com/PrismJS/prism/issues/1234\n        Prism.hooks.run('complete', {\n          code,\n          element,\n        });\n\n        // Force prism-line-highlight plugin initialization\n        // Context: https://github.com/hashicorp/design-system/pull/1749#discussion_r1374288785\n        if (this.args.highlightLines) {\n          // we need to delay re-evaluating the context for prism-line-highlight for as much as possible, and `afterRender` is the 'latest' we can use in the component lifecycle\n          // eslint-disable-next-line ember/no-runloop\n          schedule('afterRender', () => {\n            // we piggy-back on the plugin's `resize` event listener to trigger a new call of the `highlightLines` function: https://github.com/PrismJS/prism/blob/master/plugins/line-highlight/prism-line-highlight.js#L337\n            if (window) window.dispatchEvent(new Event('resize'));\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    // Currently there is only one theme so the class name is hard-coded.\n    // In the future, additional themes such as a \"light\" theme could be added.\n    const classes = ['hds-code-block', 'hds-code-block--theme-dark'];\n\n    if (this.language) {\n      classes.push(`language-${this.language}`);\n    }\n\n    if (this.isStandalone === true) {\n      classes.push('hds-code-block--is-standalone');\n    }\n\n    if (this.hasLineWrapping === true) {\n      classes.push('hds-code-block--has-line-wrapping');\n    }\n\n    // Note: Prism.js is using the specific class name \"line-numbers\" to determine implementation of line numbers in the UI\n    if (this.hasLineNumbers) {\n      classes.push('line-numbers');\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["LANGUAGES","Object","values","HdsCodeBlockLanguageValues","HdsCodeBlock","Component","g","prototype","tracked","htmlSafe","i","void 0","_preCodeId","guidFor","code","args","value","assert","undefined","Prism","plugins","normalize","language","hasLineNumbers","isStandalone","hasLineWrapping","copyButtonText","setPrismCode","element","grammar","languages","next","_prismCode","highlight","util","encode","toString","hooks","run","highlightLines","schedule","window","dispatchEvent","Event","n","action","classNames","classes","push","join","setComponentTemplate","TEMPLATE"],"mappings":"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"}