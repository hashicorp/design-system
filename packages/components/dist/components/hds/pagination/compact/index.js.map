{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/pagination/compact/index.hbs","../../../../../src/components/hds/pagination/compact/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{! @glint-nocheck: not typesafe yet }}\\n{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class=\\\"hds-pagination\\\" ...attributes>\\n  <nav class=\\\"hds-pagination-nav\\\" aria-label={{this.ariaLabel}}>\\n    <Hds::Pagination::Nav::Arrow\\n      @direction=\\\"prev\\\"\\n      @showLabel={{this.showLabels}}\\n      @route={{this.routing.route}}\\n      @query={{this.routing.queryPrev}}\\n      @model={{this.routing.model}}\\n      @models={{this.routing.models}}\\n      @replace={{this.routing.replace}}\\n      @onClick={{this.onPageChange}}\\n      @disabled={{@isDisabledPrev}}\\n    />\\n    <Hds::Pagination::Nav::Arrow\\n      @direction=\\\"next\\\"\\n      @showLabel={{this.showLabels}}\\n      @route={{this.routing.route}}\\n      @query={{this.routing.queryNext}}\\n      @model={{this.routing.model}}\\n      @models={{this.routing.models}}\\n      @replace={{this.routing.replace}}\\n      @onClick={{this.onPageChange}}\\n      @disabled={{@isDisabledNext}}\\n    />\\n  </nav>\\n\\n  {{#if this.showSizeSelector}}\\n    <Hds::Pagination::SizeSelector\\n      @pageSizes={{this.pageSizes}}\\n      @label={{@sizeSelectorLabel}}\\n      @selectedSize={{this.currentPageSize}}\\n      @onChange={{this.onPageSizeChange}}\\n    />\\n  {{/if}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\n\n// for context about the decision to use these values, see:\n// https://hashicorp.slack.com/archives/C03A0N1QK8S/p1673546329082759\nexport const DEFAULT_PAGE_SIZES = [10, 30, 50];\n\nexport default class HdsPaginationCompactIndexComponent extends Component {\n  // This private variable is used to differentiate between\n  // \"uncontrolled\" component (where the state is handled internally) and\n  // \"controlled\" component (where the state is handled externally, by the consumer's code).\n  // In the first case, the variable stores the internal state of the component at any moment,\n  // and its value is updated internally according to the user's interaction with the component.\n  // In the second case, the variable stores *only* the initial state of the component (coming from the arguments)\n  // at rendering time, but from that moment on it's not updated anymore, no matter what interaction the user\n  // has with the component (the state is controlled externally, eg. via query parameters)\n  @tracked _currentPageSize = this.args.currentPageSize ?? this.pageSizes[0];\n  @tracked isControlled;\n\n  showLabels = this.args.showLabels ?? true; // if the labels for the \"prev/next\" controls are visible\n  showSizeSelector = this.args.showSizeSelector ?? false; // if the \"size selector\" block is visible\n\n  constructor() {\n    super(...arguments);\n\n    let { queryFunction } = this.args;\n\n    // This component works in two different ways, depending if we need to support\n    // routing through links (`LinkTo`) for the \"navigation controls\", or not.\n    // If there's no routing then the component behaves as \"uncontrolled\"\n    // (the state updates are handled by its internal logic).\n    // If instead the component needs to update the routing (and we infer this via the \"query\" arguments)\n    // then the component behaves as \"controlled\", where the state is\n    // initialized and updated using the arguments passed to it.\n\n    if (queryFunction === undefined) {\n      this.isControlled = false;\n    } else {\n      assert(\n        '@queryFunction for \"Hds::Pagination::Numbered\" must be a function',\n        typeof queryFunction === 'function'\n      );\n      this.isControlled = true;\n    }\n  }\n\n  /**\n   * @param ariaLabel\n   * @type {string}\n   * @default 'Pagination'\n   */\n  get ariaLabel() {\n    return this.args.ariaLabel ?? 'Pagination';\n  }\n\n  // This very specific `get/set` pattern is used to handle the two different use cases of the component\n  // being \"controlled\" (when it has routing, meaning it needs to support pagination controls as links/`LinkTo`)\n  // vs being \"uncontrolled\" (see comments above for details).\n  //\n  // If it has routing (and so it's \"controlled\"), than the value (\"state\") of the `currentPageSize` variable\n  // is *always* determined by the controller via arguments (most of the times, connected to query parameters in the URL).\n  // For this reason the \"get\" method always returns the value from the `args`,\n  // while the \"set\" method never updates the private internal state (_variable).\n  //\n  // If instead it doesn't have routing (and so it's \"uncontrolled\") than the value (\"state\") of the `currentPageSize` variables\n  // is *always* determined by the component's internal logic (and updated according to the user interaction with it).\n  // For this reason the \"get\" and \"set\" methods always read from or write to the private internal state (_variable).\n\n  get currentPageSize() {\n    if (this.isControlled) {\n      return this.args.currentPageSize;\n    } else {\n      return this._currentPageSize;\n    }\n  }\n\n  set currentPageSize(value) {\n    if (this.isControlled) {\n      // noop\n    } else {\n      this._currentPageSize = value;\n    }\n  }\n\n  /**\n   * @param pageSizes\n   * @type {array of numbers}\n   * @description Set the page sizes users can select from.\n   * @default [10, 30, 50]\n   */\n  get pageSizes() {\n    let { pageSizes = DEFAULT_PAGE_SIZES } = this.args;\n\n    assert(\n      `pageSizes argument must be an array. Received: ${pageSizes}`,\n      Array.isArray(pageSizes) === true\n    );\n\n    return pageSizes;\n  }\n\n  buildQueryParamsObject(page, pageSize) {\n    if (this.isControlled) {\n      return this.args.queryFunction(page, pageSize);\n    } else {\n      return {};\n    }\n  }\n\n  get routing() {\n    let routing = {\n      route: this.args.route ?? undefined,\n      model: this.args.model ?? undefined,\n      models: this.args.models ?? undefined,\n      replace: this.args.replace ?? undefined,\n    };\n\n    // the \"query\" is dynamic and needs to be calculated\n    if (this.isControlled) {\n      routing.queryPrev = this.buildQueryParamsObject(\n        'prev',\n        this.currentPageSize\n      );\n      routing.queryNext = this.buildQueryParamsObject(\n        'next',\n        this.currentPageSize\n      );\n    } else {\n      routing.queryPrev = undefined;\n      routing.queryNext = undefined;\n    }\n\n    return routing;\n  }\n\n  @action\n  onPageChange(newPage) {\n    this.currentPage = newPage;\n\n    let { onPageChange } = this.args;\n\n    if (typeof onPageChange === 'function') {\n      onPageChange(newPage);\n    }\n  }\n\n  @action\n  onPageSizeChange(newPageSize) {\n    let { onPageSizeChange } = this.args;\n\n    // invoke the callback function\n    if (typeof onPageSizeChange === 'function') {\n      onPageSizeChange(newPageSize);\n    }\n  }\n}\n"],"names":["DEFAULT_PAGE_SIZES","HdsPaginationCompactIndexComponent","_class","Component","constructor","arguments","_initializerDefineProperty","_descriptor","_descriptor2","_defineProperty","args","showLabels","showSizeSelector","queryFunction","undefined","isControlled","assert","ariaLabel","currentPageSize","_currentPageSize","value","pageSizes","Array","isArray","buildQueryParamsObject","page","pageSize","routing","route","model","models","replace","queryPrev","queryNext","onPageChange","newPage","currentPage","onPageSizeChange","newPageSize","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}