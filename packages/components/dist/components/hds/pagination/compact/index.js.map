{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/pagination/compact/index.hbs","../../../../../src/components/hds/pagination/compact/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class=\\\"hds-pagination\\\" ...attributes>\\n  <nav class=\\\"hds-pagination-nav\\\" aria-label={{this.ariaLabel}}>\\n    <Hds::Pagination::Nav::Arrow\\n      @direction=\\\"prev\\\"\\n      @showLabel={{this.showLabels}}\\n      @route={{this.routing.route}}\\n      @query={{this.routing.queryPrev}}\\n      @model={{this.routing.model}}\\n      @models={{this.routing.models}}\\n      @replace={{this.routing.replace}}\\n      @onClick={{this.onPageChange}}\\n      @disabled={{@isDisabledPrev}}\\n    />\\n    <Hds::Pagination::Nav::Arrow\\n      @direction=\\\"next\\\"\\n      @showLabel={{this.showLabels}}\\n      @route={{this.routing.route}}\\n      @query={{this.routing.queryNext}}\\n      @model={{this.routing.model}}\\n      @models={{this.routing.models}}\\n      @replace={{this.routing.replace}}\\n      @onClick={{this.onPageChange}}\\n      @disabled={{@isDisabledNext}}\\n    />\\n  </nav>\\n\\n  {{#if this.showSizeSelector}}\\n    <Hds::Pagination::SizeSelector\\n      @pageSizes={{this.pageSizes}}\\n      @label={{@sizeSelectorLabel}}\\n      @selectedSize={{this.currentPageSize}}\\n      @onChange={{this.onPageSizeChange}}\\n    />\\n  {{/if}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { HdsPaginationDirectionValues } from '../types.ts';\n\nimport type {\n  HdsPaginationRoutingProps,\n  HdsPaginationDirections,\n} from '../types';\nimport type { HdsInteractiveSignature } from '../../interactive';\n\ntype HdsInteractiveQuery = HdsInteractiveSignature['Args']['query'];\n\ntype HdsPaginationCompactRoutingQueryProps = HdsPaginationRoutingProps & {\n  queryNext?: HdsInteractiveQuery;\n  queryPrev?: HdsInteractiveQuery;\n};\n\ntype HdsPaginationQueryFunction = (\n  page: HdsPaginationDirections,\n  pageSize?: number\n) => HdsInteractiveQuery;\n\ninterface HdsPaginationCompactArgs extends HdsPaginationRoutingProps {\n  ariaLabel?: string;\n  showLabels?: boolean;\n  isDisabledPrev?: boolean;\n  isDisabledNext?: boolean;\n  showSizeSelector?: boolean;\n  sizeSelectorLabel?: string;\n  pageSizes?: number[];\n  currentPageSize?: number;\n  queryFunction?: HdsPaginationQueryFunction;\n  onPageChange?: (page: HdsPaginationDirections) => void;\n  onPageSizeChange?: (pageSize: number) => void;\n}\n\ninterface HdsPaginationCompactArgsControlledBase\n  extends HdsPaginationCompactArgs {\n  queryFunction: HdsPaginationQueryFunction;\n}\n\ninterface HdsPaginationCompactArgsControlledWithModel\n  extends HdsPaginationCompactArgsControlledBase {\n  model: string | number;\n}\n\ninterface HdsPaginationCompactArgsControlledWithModels\n  extends HdsPaginationCompactArgsControlledBase {\n  models: Array<string | number>;\n}\ninterface HdsPaginationCompactArgsControlledWithRoute\n  extends HdsPaginationCompactArgsControlledBase {\n  route: string;\n}\n\ntype HdsPaginationCompactArgsControlled =\n  | HdsPaginationCompactArgsControlledWithModel\n  | HdsPaginationCompactArgsControlledWithModels\n  | HdsPaginationCompactArgsControlledWithRoute;\n\ninterface HdsPaginationCompactArgsUncontrolled\n  extends HdsPaginationCompactArgs {\n  queryFunction?: undefined;\n}\n\nexport interface HdsPaginationCompactSignature {\n  Args:\n    | HdsPaginationCompactArgsControlled\n    | HdsPaginationCompactArgsUncontrolled;\n  Element: HTMLDivElement;\n}\n\n// for context about the decision to use these values, see:\n// https://hashicorp.slack.com/archives/C03A0N1QK8S/p1673546329082759\nexport const DEFAULT_PAGE_SIZES = [10, 30, 50];\nexport default class HdsPaginationCompact extends Component<HdsPaginationCompactSignature> {\n  // This private variable is used to differentiate between\n  // \"uncontrolled\" component (where the state is handled internally) and\n  // \"controlled\" component (where the state is handled externally, by the consumer's code).\n  // In the first case, the variable stores the internal state of the component at any moment,\n  // and its value is updated internally according to the user's interaction with the component.\n  // In the second case, the variable stores *only* the initial state of the component (coming from the arguments)\n  // at rendering time, but from that moment on it's not updated anymore, no matter what interaction the user\n  // has with the component (the state is controlled externally, eg. via query parameters)\n  @tracked private _currentPageSize;\n  @tracked private _isControlled;\n\n  showLabels = this.args.showLabels ?? true; // if the labels for the \"prev/next\" controls are visible\n  showSizeSelector = this.args.showSizeSelector ?? false; // if the \"size selector\" block is visible\n\n  constructor(owner: unknown, args: HdsPaginationCompactSignature['Args']) {\n    super(owner, args);\n\n    const { queryFunction } = this.args;\n\n    // This component works in two different ways, depending if we need to support\n    // routing through links (`LinkTo`) for the \"navigation controls\", or not.\n    // If there's no routing then the component behaves as \"uncontrolled\"\n    // (the state updates are handled by its internal logic).\n    // If instead the component needs to update the routing (and we infer this via the \"query\" arguments)\n    // then the component behaves as \"controlled\", where the state is\n    // initialized and updated using the arguments passed to it.\n\n    if (queryFunction === undefined) {\n      this._isControlled = false;\n    } else {\n      assert(\n        '@model, @models, or @route for \"Hds::Pagination::Compact\" must be provided when using the `@queryFunction` argument',\n        this.args.model !== undefined ||\n          this.args.models !== undefined ||\n          this.args.route !== undefined\n      );\n      assert(\n        '@queryFunction for \"Hds::Pagination::Compact\" must be a function',\n        typeof queryFunction === 'function'\n      );\n      this._isControlled = true;\n    }\n\n    // we assert that `this.pageSizes` will always be an array with at least one item\n    this._currentPageSize = this.args.currentPageSize ?? this.pageSizes[0];\n  }\n\n  get ariaLabel(): string {\n    return this.args.ariaLabel ?? 'Pagination';\n  }\n\n  // This very specific `get/set` pattern is used to handle the two different use cases of the component\n  // being \"controlled\" (when it has routing, meaning it needs to support pagination controls as links/`LinkTo`)\n  // vs being \"uncontrolled\" (see comments above for details).\n  //\n  // If it has routing (and so it's \"controlled\"), than the value (\"state\") of the `currentPageSize` variable\n  // is *always* determined by the controller via arguments (most of the times, connected to query parameters in the URL).\n  // For this reason the \"get\" method always returns the value from the `args`,\n  // while the \"set\" method never updates the private internal state (_variable).\n  //\n  // If instead it doesn't have routing (and so it's \"uncontrolled\") than the value (\"state\") of the `currentPageSize` variables\n  // is *always* determined by the component's internal logic (and updated according to the user interaction with it).\n  // For this reason the \"get\" and \"set\" methods always read from or write to the private internal state (_variable).\n\n  get currentPageSize(): number | undefined {\n    if (this._isControlled) {\n      return this.args.currentPageSize;\n    } else {\n      return this._currentPageSize;\n    }\n  }\n  set currentPageSize(value) {\n    if (this._isControlled) {\n      // noop\n    } else {\n      this._currentPageSize = value;\n    }\n  }\n\n  get pageSizes(): number[] {\n    const { pageSizes = DEFAULT_PAGE_SIZES } = this.args;\n\n    assert(\n      `pageSizes argument must be an array. Received: ${pageSizes}`,\n      Array.isArray(pageSizes) === true && pageSizes.length > 0\n    );\n\n    return pageSizes;\n  }\n\n  buildQueryParamsObject(\n    page: HdsPaginationDirections,\n    pageSize?: number\n  ): HdsInteractiveQuery {\n    if (this._isControlled) {\n      // if the component is controlled, we can assert that the queryFunction is defined\n      return this.args.queryFunction!(page, pageSize);\n    } else {\n      return {};\n    }\n  }\n\n  get routing(): HdsPaginationCompactRoutingQueryProps {\n    const routing: HdsPaginationCompactRoutingQueryProps = {\n      route: this.args.route ?? undefined,\n      model: this.args.model ?? undefined,\n      models: this.args.models ?? undefined,\n      replace: this.args.replace ?? undefined,\n    };\n\n    // the \"query\" is dynamic and needs to be calculated\n    if (this._isControlled) {\n      routing.queryPrev = this.buildQueryParamsObject(\n        HdsPaginationDirectionValues.Prev,\n        this.currentPageSize\n      );\n      routing.queryNext = this.buildQueryParamsObject(\n        HdsPaginationDirectionValues.Next,\n        this.currentPageSize\n      );\n    } else {\n      routing.queryPrev = undefined;\n      routing.queryNext = undefined;\n    }\n\n    return routing;\n  }\n\n  @action\n  onPageChange(newPage: HdsPaginationDirections): void {\n    const { onPageChange } = this.args;\n\n    if (typeof onPageChange === 'function') {\n      onPageChange(newPage);\n    }\n  }\n\n  @action\n  onPageSizeChange(newPageSize: number): void {\n    const { onPageSizeChange } = this.args;\n\n    // invoke the callback function\n    if (typeof onPageSizeChange === 'function') {\n      onPageSizeChange(newPageSize);\n    }\n  }\n}\n"],"names":["DEFAULT_PAGE_SIZES","HdsPaginationCompact","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","_descriptor2","_defineProperty","showLabels","showSizeSelector","queryFunction","undefined","_isControlled","assert","model","models","route","_currentPageSize","currentPageSize","pageSizes","ariaLabel","value","Array","isArray","length","buildQueryParamsObject","page","pageSize","routing","replace","queryPrev","HdsPaginationDirectionValues","Prev","queryNext","Next","onPageChange","newPage","onPageSizeChange","newPageSize","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}