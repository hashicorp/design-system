{"version":3,"file":"range.js","sources":["../../../../src/components/hds/time/range.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { inject as service } from '@ember/service';\nimport type TimeService from '../../../services/hds-time';\n\nexport interface HdsTimeRangeSignature {\n  Args: {\n    startDate?: Date;\n    endDate?: Date;\n  };\n  Element: HTMLElement;\n}\n\nexport default class HdsTimeRange extends Component<HdsTimeRangeSignature> {\n  @service declare readonly hdsTime: TimeService;\n\n  get startDateIsoUtcString(): string | undefined {\n    const { startDate } = this.args;\n    if (startDate) {\n      return this.hdsTime.toIsoUtcString(startDate);\n    }\n  }\n\n  get endDateIsoUtcString(): string | undefined {\n    const { endDate } = this.args;\n    if (endDate) {\n      return this.hdsTime.toIsoUtcString(endDate);\n    }\n  }\n\n  get startDateDisplayFormat(): {\n    month: Intl.DateTimeFormatOptions['month'];\n    day: Intl.DateTimeFormatOptions['day'];\n    year?: Intl.DateTimeFormatOptions['year'];\n    hour?: Intl.DateTimeFormatOptions['hour'];\n    minute?: Intl.DateTimeFormatOptions['minute'];\n    second?: Intl.DateTimeFormatOptions['second'];\n  } {\n    const { startDate, endDate } = this.args;\n\n    if (startDate?.getFullYear() !== endDate?.getFullYear()) {\n      return {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      };\n    } else {\n      return {\n        month: 'short',\n        day: 'numeric',\n        year: undefined,\n      };\n    }\n  }\n\n  get endDateDisplayFormat(): {\n    month: Intl.DateTimeFormatOptions['month'];\n    day: Intl.DateTimeFormatOptions['day'];\n    year?: Intl.DateTimeFormatOptions['year'];\n    hour?: Intl.DateTimeFormatOptions['hour'];\n    minute?: Intl.DateTimeFormatOptions['minute'];\n    second?: Intl.DateTimeFormatOptions['second'];\n  } {\n    return {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    };\n  }\n}\n"],"names":["HdsTimeRange","Component","g","prototype","service","i","void 0","startDateIsoUtcString","startDate","args","hdsTime","toIsoUtcString","endDateIsoUtcString","endDate","startDateDisplayFormat","getFullYear","month","day","year","undefined","endDateDisplayFormat","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAce,MAAMA,YAAY,SAASC,SAAS,CAAwB;AAAA,EAAA;IAAAC,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,SAAA,EAAA,CACxEC,MAAO,CAAA,CAAA;AAAA;AAAA,EAAA,QAAA,IAAAC,CAAA,CAAA,IAAA,EAAA,SAAA,CAAA,EAAAC,SAAA;EAER,IAAIC,qBAAqBA,GAAuB;IAC9C,MAAM;AAAEC,MAAAA;KAAW,GAAG,IAAI,CAACC,IAAI;AAC/B,IAAA,IAAID,SAAS,EAAE;AACb,MAAA,OAAO,IAAI,CAACE,OAAO,CAACC,cAAc,CAACH,SAAS,CAAC;AAC/C;AACF;EAEA,IAAII,mBAAmBA,GAAuB;IAC5C,MAAM;AAAEC,MAAAA;KAAS,GAAG,IAAI,CAACJ,IAAI;AAC7B,IAAA,IAAII,OAAO,EAAE;AACX,MAAA,OAAO,IAAI,CAACH,OAAO,CAACC,cAAc,CAACE,OAAO,CAAC;AAC7C;AACF;EAEA,IAAIC,sBAAsBA,GAOxB;IACA,MAAM;MAAEN,SAAS;AAAEK,MAAAA;KAAS,GAAG,IAAI,CAACJ,IAAI;IAExC,IAAID,SAAS,EAAEO,WAAW,EAAE,KAAKF,OAAO,EAAEE,WAAW,EAAE,EAAE;MACvD,OAAO;AACLC,QAAAA,KAAK,EAAE,OAAO;AACdC,QAAAA,GAAG,EAAE,SAAS;AACdC,QAAAA,IAAI,EAAE;OACP;AACH,KAAC,MAAM;MACL,OAAO;AACLF,QAAAA,KAAK,EAAE,OAAO;AACdC,QAAAA,GAAG,EAAE,SAAS;AACdC,QAAAA,IAAI,EAAEC;OACP;AACH;AACF;EAEA,IAAIC,oBAAoBA,GAOtB;IACA,OAAO;AACLJ,MAAAA,KAAK,EAAE,OAAO;AACdC,MAAAA,GAAG,EAAE,SAAS;AACdC,MAAAA,IAAI,EAAE;KACP;AACH;AACF;AAACG,oBAAA,CAAAC,QAAA,EAxDoBtB,YAAY,CAAA;;;;"}