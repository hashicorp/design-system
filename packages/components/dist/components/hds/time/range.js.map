{"version":3,"file":"range.js","sources":["../../../../src/components/hds/time/range.hbs","../../../../src/components/hds/time/range.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! IMPORTANT: we need to add \\\"squishies\\\" here (~) because otherwise the whitespace added by Ember causes extra space around the time element - See https://handlebarsjs.com/guide/expressions.html#whitespace-control }}\\n<span class=\\\"hds-time hds-time--range\\\" ...attributes>\\n  <time datetime={{this.startDateIsoUtcString}}>\\n    {{~hds-format-date @startDate this.startDateDisplayFormat~}}\\n  </time>\\n  â€“\\n  <time datetime={{this.endDateIsoUtcString}}>\\n    {{~hds-format-date @endDate this.endDateDisplayFormat~}}\\n  </time>\\n</span>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { inject as service } from '@ember/service';\nimport type TimeService from '../../../services/hds-time';\n\nexport interface HdsTimeRangeSignature {\n  Args: {\n    startDate?: Date;\n    endDate?: Date;\n  };\n  Element: HTMLElement;\n}\n\nexport default class HdsTimeRange extends Component<HdsTimeRangeSignature> {\n  @service declare readonly hdsTime: TimeService;\n\n  get startDateIsoUtcString(): string | undefined {\n    const { startDate } = this.args;\n    if (startDate) {\n      return this.hdsTime.toIsoUtcString(startDate);\n    }\n  }\n\n  get endDateIsoUtcString(): string | undefined {\n    const { endDate } = this.args;\n    if (endDate) {\n      return this.hdsTime.toIsoUtcString(endDate);\n    }\n  }\n\n  get startDateDisplayFormat(): {\n    month: Intl.DateTimeFormatOptions['month'];\n    day: Intl.DateTimeFormatOptions['day'];\n    year?: Intl.DateTimeFormatOptions['year'];\n    hour?: Intl.DateTimeFormatOptions['hour'];\n    minute?: Intl.DateTimeFormatOptions['minute'];\n    second?: Intl.DateTimeFormatOptions['second'];\n  } {\n    const { startDate, endDate } = this.args;\n\n    if (startDate?.getFullYear() !== endDate?.getFullYear()) {\n      return {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      };\n    } else {\n      return {\n        month: 'short',\n        day: 'numeric',\n        year: undefined,\n      };\n    }\n  }\n\n  get endDateDisplayFormat(): {\n    month: Intl.DateTimeFormatOptions['month'];\n    day: Intl.DateTimeFormatOptions['day'];\n    year?: Intl.DateTimeFormatOptions['year'];\n    hour?: Intl.DateTimeFormatOptions['hour'];\n    minute?: Intl.DateTimeFormatOptions['minute'];\n    second?: Intl.DateTimeFormatOptions['second'];\n  } {\n    return {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    };\n  }\n}\n"],"names":["HdsTimeRange","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","startDateIsoUtcString","startDate","hdsTime","toIsoUtcString","endDateIsoUtcString","endDate","startDateDisplayFormat","getFullYear","month","day","year","undefined","endDateDisplayFormat","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;AACA,eAAe,kBAAkB,CAAC,0mBAA0mB;;;ACgBvnBA,IAAAA,YAAY,IAAAC,MAAA,GAAlB,MAAMD,YAAY,SAASE,SAAS,CAAwB;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA;AAAAC,IAAAA,0BAAA,kBAAAC,WAAA,EAAA,IAAA,CAAA;AAAA;EAGzE,IAAIC,qBAAqBA,GAAuB;IAC9C,MAAM;AAAEC,MAAAA;KAAW,GAAG,IAAI,CAACJ,IAAI;AAC/B,IAAA,IAAII,SAAS,EAAE;AACb,MAAA,OAAO,IAAI,CAACC,OAAO,CAACC,cAAc,CAACF,SAAS,CAAC;AAC/C;AACF;EAEA,IAAIG,mBAAmBA,GAAuB;IAC5C,MAAM;AAAEC,MAAAA;KAAS,GAAG,IAAI,CAACR,IAAI;AAC7B,IAAA,IAAIQ,OAAO,EAAE;AACX,MAAA,OAAO,IAAI,CAACH,OAAO,CAACC,cAAc,CAACE,OAAO,CAAC;AAC7C;AACF;EAEA,IAAIC,sBAAsBA,GAOxB;IACA,MAAM;MAAEL,SAAS;AAAEI,MAAAA;KAAS,GAAG,IAAI,CAACR,IAAI;IAExC,IAAII,SAAS,EAAEM,WAAW,EAAE,KAAKF,OAAO,EAAEE,WAAW,EAAE,EAAE;MACvD,OAAO;AACLC,QAAAA,KAAK,EAAE,OAAO;AACdC,QAAAA,GAAG,EAAE,SAAS;AACdC,QAAAA,IAAI,EAAE;OACP;AACH,KAAC,MAAM;MACL,OAAO;AACLF,QAAAA,KAAK,EAAE,OAAO;AACdC,QAAAA,GAAG,EAAE,SAAS;AACdC,QAAAA,IAAI,EAAEC;OACP;AACH;AACF;EAEA,IAAIC,oBAAoBA,GAOtB;IACA,OAAO;AACLJ,MAAAA,KAAK,EAAE,OAAO;AACdC,MAAAA,GAAG,EAAE,SAAS;AACdC,MAAAA,IAAI,EAAE;KACP;AACH;AACF,CAAC,EAAAX,WAAA,GAAAc,yBAAA,CAAAnB,MAAA,CAAAoB,SAAA,EAAA,SAAA,EAAA,CAvDEC,MAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA;AAAA,CAAA,CAAA,EAAAzB,MAAA;AADuB0B,oBAAA,CAAAC,QAAA,EAAZ5B,YAAY,CAAA;;;;"}