{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/copy/button/index.hbs","../../../../../src/components/hds/copy/button/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<Hds::Button\\n  class={{this.classNames}}\\n  @size={{this.size}}\\n  @isFullWidth={{@isFullWidth}}\\n  @text={{@text}}\\n  @icon={{this.icon}}\\n  @isIconOnly={{@isIconOnly}}\\n  @color=\\\"secondary\\\"\\n  @iconPosition=\\\"trailing\\\"\\n  {{hds-clipboard text=@textToCopy target=@targetToCopy onSuccess=this.onSuccess onError=this.onError}}\\n  ...attributes\\n/>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { HdsCopyButtonSizeValues } from './types.ts';\nimport type { HdsCopyButtonSizes } from './types.ts';\nimport type { HdsButtonSignature } from '../../button/';\nimport type { HdsClipboardModifierSignature } from '../../../../modifiers/hds-clipboard.ts';\nimport type { FlightIconSignature } from '@hashicorp/ember-flight-icons/components/flight-icon';\n\nexport const DEFAULT_SIZE = HdsCopyButtonSizeValues.Medium;\nexport const SIZES: string[] = Object.values(HdsCopyButtonSizeValues);\nexport const DEFAULT_ICON = 'clipboard-copy';\nexport const SUCCESS_ICON = 'clipboard-checked';\nexport const ERROR_ICON = 'clipboard-x';\nexport const DEFAULT_STATUS = 'idle';\n\nexport interface HdsCopyButtonSignature {\n  Args: HdsButtonSignature['Args'] & {\n    size?: HdsCopyButtonSizes;\n    textToCopy?: HdsClipboardModifierSignature['Args']['Named']['text'];\n    targetToCopy?: HdsClipboardModifierSignature['Args']['Named']['target'];\n    onSuccess?: HdsClipboardModifierSignature['Args']['Named']['onSuccess'];\n    onError?: HdsClipboardModifierSignature['Args']['Named']['onError'];\n  };\n  Element: HdsButtonSignature['Element'];\n}\n\nexport default class HdsCopyButtonComponent extends Component<HdsCopyButtonSignature> {\n  @tracked status = DEFAULT_STATUS;\n  @tracked timer: ReturnType<typeof setTimeout> | undefined;\n\n  /**\n   * @param icon\n   * @type {string}\n   * @description The icon to be displayed for each status; automatically calculated based on the tracked property `status`.\n   */\n  get icon(): FlightIconSignature['Args']['name'] {\n    let icon: FlightIconSignature['Args']['name'] = DEFAULT_ICON;\n    if (this.status === 'success') {\n      icon = SUCCESS_ICON;\n    } else if (this.status === 'error') {\n      icon = ERROR_ICON;\n    }\n    return icon;\n  }\n\n  /**\n   * @param size\n   * @type {string}\n   * @default medium\n   * @description The size of the copy/button; acceptable values are `small` and `medium`\n   */\n  get size(): HdsCopyButtonSizes {\n    const { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Copy::Button\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method CopyButton#classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-copy-button'];\n\n    // add a class based on the @size argument\n    classes.push(`hds-button--size-${this.size}`);\n\n    classes.push(`hds-copy-button--status-${this.status}`);\n\n    return classes.join(' ');\n  }\n\n  @action\n  onSuccess(\n    args: HdsClipboardModifierSignature['Args']['Named']['onSuccess']\n  ): void {\n    this.status = 'success';\n    this.resetStatusDelayed();\n\n    const { onSuccess } = this.args;\n\n    if (typeof onSuccess === 'function') {\n      onSuccess(args);\n    }\n  }\n\n  @action\n  onError(\n    args: HdsClipboardModifierSignature['Args']['Named']['onError']\n  ): void {\n    this.status = 'error';\n    this.resetStatusDelayed();\n\n    const { onError } = this.args;\n\n    if (typeof onError === 'function') {\n      onError(args);\n    }\n  }\n\n  resetStatusDelayed(): void {\n    clearTimeout(this.timer);\n    // make it fade back to the default state\n    this.timer = setTimeout((): void => {\n      this.status = DEFAULT_STATUS;\n    }, 1500);\n  }\n}\n"],"names":["DEFAULT_SIZE","HdsCopyButtonSizeValues","Medium","SIZES","Object","values","DEFAULT_ICON","SUCCESS_ICON","ERROR_ICON","DEFAULT_STATUS","HdsCopyButtonComponent","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","icon","status","size","assert","join","includes","classNames","classes","push","onSuccess","resetStatusDelayed","onError","clearTimeout","timer","setTimeout","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;AACA,eAAe,kBAAkB,CAAC,8aAA8a;;;ACcncA,MAAAA,YAAY,GAAGC,uBAAuB,CAACC,OAAM;AACnD,MAAMC,KAAe,GAAGC,MAAM,CAACC,MAAM,CAACJ,uBAAuB,EAAC;AAC9D,MAAMK,YAAY,GAAG,iBAAgB;AACrC,MAAMC,YAAY,GAAG,oBAAmB;AACxC,MAAMC,UAAU,GAAG,cAAa;AAChC,MAAMC,cAAc,GAAG,OAAM;AAafC,IAAAA,sBAAsB,IAAAC,MAAA,GAA5B,MAAMD,sBAAsB,SAASE,SAAS,CAAyB;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,iBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAAD,IAAAA,0BAAA,gBAAAE,YAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;AAIpF;AACF;AACA;AACA;AACA;EACE,IAAIC,IAAIA,GAAwC;IAC9C,IAAIA,IAAyC,GAAGZ,YAAY,CAAA;AAC5D,IAAA,IAAI,IAAI,CAACa,MAAM,KAAK,SAAS,EAAE;AAC7BD,MAAAA,IAAI,GAAGX,YAAY,CAAA;AACrB,KAAC,MAAM,IAAI,IAAI,CAACY,MAAM,KAAK,OAAO,EAAE;AAClCD,MAAAA,IAAI,GAAGV,UAAU,CAAA;AACnB,KAAA;AACA,IAAA,OAAOU,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAIE,IAAIA,GAAuB;IAC7B,MAAM;AAAEA,MAAAA,IAAI,GAAGpB,YAAAA;KAAc,GAAG,IAAI,CAACc,IAAI,CAAA;AAEzCO,IAAAA,MAAM,CACJ,CAA+DlB,4DAAAA,EAAAA,KAAK,CAACmB,IAAI,CACvE,IACF,CAAC,CAAA,YAAA,EAAeF,IAAI,CAAA,CAAE,EACtBjB,KAAK,CAACoB,QAAQ,CAACH,IAAI,CACrB,CAAC,CAAA;AAED,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAII,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,iBAAiB,CAAC,CAAA;;AAEnC;IACAA,OAAO,CAACC,IAAI,CAAC,CAAA,iBAAA,EAAoB,IAAI,CAACN,IAAI,EAAE,CAAC,CAAA;IAE7CK,OAAO,CAACC,IAAI,CAAC,CAAA,wBAAA,EAA2B,IAAI,CAACP,MAAM,EAAE,CAAC,CAAA;AAEtD,IAAA,OAAOM,OAAO,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;EAGAK,SAASA,CACPb,IAAiE,EAC3D;IACN,IAAI,CAACK,MAAM,GAAG,SAAS,CAAA;IACvB,IAAI,CAACS,kBAAkB,EAAE,CAAA;IAEzB,MAAM;AAAED,MAAAA,SAAAA;KAAW,GAAG,IAAI,CAACb,IAAI,CAAA;AAE/B,IAAA,IAAI,OAAOa,SAAS,KAAK,UAAU,EAAE;MACnCA,SAAS,CAACb,IAAI,CAAC,CAAA;AACjB,KAAA;AACF,GAAA;EAGAe,OAAOA,CACLf,IAA+D,EACzD;IACN,IAAI,CAACK,MAAM,GAAG,OAAO,CAAA;IACrB,IAAI,CAACS,kBAAkB,EAAE,CAAA;IAEzB,MAAM;AAAEC,MAAAA,OAAAA;KAAS,GAAG,IAAI,CAACf,IAAI,CAAA;AAE7B,IAAA,IAAI,OAAOe,OAAO,KAAK,UAAU,EAAE;MACjCA,OAAO,CAACf,IAAI,CAAC,CAAA;AACf,KAAA;AACF,GAAA;AAEAc,EAAAA,kBAAkBA,GAAS;AACzBE,IAAAA,YAAY,CAAC,IAAI,CAACC,KAAK,CAAC,CAAA;AACxB;AACA,IAAA,IAAI,CAACA,KAAK,GAAGC,UAAU,CAAC,MAAY;MAClC,IAAI,CAACb,MAAM,GAAGV,cAAc,CAAA;KAC7B,EAAE,IAAI,CAAC,CAAA;AACV,GAAA;AACF,CAAC,GAAAO,WAAA,GAAAiB,yBAAA,CAAAtB,MAAA,CAAAuB,SAAA,EAAA,QAAA,EAAA,CAxFEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAU9B,cAAc,CAAA;AAAA,GAAA;AAAA,CAAAQ,CAAAA,EAAAA,YAAA,GAAAgB,yBAAA,CAAAtB,MAAA,CAAAuB,SAAA,YAC/BC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAA,CAAA,EAAAN,yBAAA,CAAAtB,MAAA,CAAAuB,SAAA,EAAA,WAAA,EAAA,CAoDPM,MAAM,CAAApC,EAAAA,MAAA,CAAAqC,wBAAA,CAAA9B,MAAA,CAAAuB,SAAA,EAAAvB,WAAAA,CAAAA,EAAAA,MAAA,CAAAuB,SAAA,CAAA,EAAAD,yBAAA,CAAAtB,MAAA,CAAAuB,SAAA,cAcNM,MAAM,CAAA,EAAApC,MAAA,CAAAqC,wBAAA,CAAA9B,MAAA,CAAAuB,SAAA,EAAA,SAAA,CAAA,EAAAvB,MAAA,CAAAuB,SAAA,IAAAvB,MAAA,EAAA;AApEkC+B,oBAAA,CAAAC,QAAA,EAAtBjC,sBAAsB,CAAA;;;;"}