{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/copy/snippet/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { HdsCopySnippetColorValues } from './types.ts';\nimport type { HdsCopySnippetColors } from './types.ts';\nimport type { HdsClipboardModifierSignature } from '../../../../modifiers/hds-clipboard.ts';\nimport type { HdsIconSignature } from '../../icon';\n\nexport const DEFAULT_COLOR = HdsCopySnippetColorValues.Primary;\nexport const COLORS: string[] = Object.values(HdsCopySnippetColorValues);\n\nexport const DEFAULT_ICON = 'clipboard-copy';\nexport const SUCCESS_ICON = 'clipboard-checked';\nexport const ERROR_ICON = 'clipboard-x';\nexport const DEFAULT_STATUS = 'idle';\n\nexport interface HdsCopySnippetSignature {\n  Args: {\n    color?: HdsCopySnippetColors;\n    isFullWidth?: boolean;\n    textToCopy: HdsClipboardModifierSignature['Args']['Named']['text'];\n    isTruncated?: boolean;\n    onSuccess?: HdsClipboardModifierSignature['Args']['Named']['onSuccess'];\n    onError?: HdsClipboardModifierSignature['Args']['Named']['onError'];\n  };\n  Element: HTMLButtonElement;\n}\n\nexport default class HdsCopySnippet extends Component<HdsCopySnippetSignature> {\n  @tracked private _status = DEFAULT_STATUS;\n  @tracked private _timer: ReturnType<typeof setTimeout> | undefined;\n\n  /**\n   * @method textToShow\n   * @return {string}\n   */\n  get textToShow(): string {\n    const { textToCopy = '' } = this.args;\n\n    if (typeof textToCopy === 'string') {\n      return textToCopy;\n    } else {\n      return textToCopy.toString();\n    }\n  }\n\n  /**\n   * @param icon\n   * @type {string}\n   * @default clipboard-copy\n   * @description Determines the icon to be used, based on the success state. Note that this is auto-tracked because it depends on a tracked property (status).\n   */\n  get icon(): HdsIconSignature['Args']['name'] {\n    let icon: HdsIconSignature['Args']['name'] = DEFAULT_ICON;\n    if (this._status === 'success') {\n      icon = SUCCESS_ICON;\n    } else if (this._status === 'error') {\n      icon = ERROR_ICON;\n    }\n    return icon;\n  }\n\n  /**\n   * @param color\n   * @type {string}\n   * @default primary\n   * @description Determines the color of button to be used; acceptable values are `primary` and `secondary`\n   */\n  get color(): HdsCopySnippetColors {\n    const { color = DEFAULT_COLOR } = this.args;\n\n    assert(\n      `@color for \"Hds::Copy::Snippet\" must be one of the following: ${COLORS.join(\n        ', '\n      )}; received: ${color}`,\n      COLORS.includes(color)\n    );\n\n    return color;\n  }\n\n  /**\n   * @param isFullWidth\n   * @type {boolean}\n   * @default false\n   * @description Indicates that the component should take up the full width of the parent container.\n   */\n  get isFullWidth(): boolean {\n    return this.args.isFullWidth ?? false;\n  }\n\n  /**\n   * @param isTruncated\n   * @type {boolean}\n   * @default false\n   * @description Indicates that the component should be truncated instead of wrapping text and using multiple lines.\n   */\n  get isTruncated(): boolean {\n    return this.args.isTruncated ?? false;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method CopySnippet#classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-copy-snippet'];\n\n    // add a class based on the @color argument\n    classes.push(`hds-copy-snippet--color-${this.color}`);\n\n    // add a class based on the tracked status (idle/success/error)\n    classes.push(`hds-copy-snippet--status-${this._status}`);\n\n    // add a class based on the @isTruncated argument\n    if (this.isTruncated) {\n      classes.push('hds-copy-snippet--is-truncated');\n    }\n\n    // add a class based on the @isFullWidth argument\n    if (this.isFullWidth) {\n      classes.push('hds-copy-snippet--width-full');\n    }\n\n    return classes.join(' ');\n  }\n\n  @action\n  onSuccess(\n    args: HdsClipboardModifierSignature['Args']['Named']['onSuccess']\n  ): void {\n    this._status = 'success';\n    this.resetStatusDelayed();\n\n    const { onSuccess } = this.args;\n\n    if (typeof onSuccess === 'function') {\n      onSuccess(args);\n    }\n  }\n\n  @action\n  onError(\n    args: HdsClipboardModifierSignature['Args']['Named']['onError']\n  ): void {\n    this._status = 'error';\n    this.resetStatusDelayed();\n\n    const { onError } = this.args;\n\n    if (typeof onError === 'function') {\n      onError(args);\n    }\n  }\n\n  resetStatusDelayed(): void {\n    clearTimeout(this._timer);\n    // make it fade back to the default state\n    this._timer = setTimeout((): void => {\n      this._status = DEFAULT_STATUS;\n    }, 1500);\n  }\n}\n"],"names":["DEFAULT_COLOR","HdsCopySnippetColorValues","Primary","COLORS","Object","values","DEFAULT_ICON","SUCCESS_ICON","ERROR_ICON","DEFAULT_STATUS","HdsCopySnippet","Component","g","prototype","tracked","i","void 0","textToShow","textToCopy","args","toString","icon","_status","color","assert","join","includes","isFullWidth","isTruncated","classNames","classes","push","onSuccess","resetStatusDelayed","n","action","onError","clearTimeout","_timer","setTimeout","setComponentTemplate","TEMPLATE"],"mappings":"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"}