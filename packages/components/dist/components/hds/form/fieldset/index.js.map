{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/form/fieldset/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { getElementId } from '../../../../utils/hds-get-element-id.ts';\nimport {\n  ariaDescribedBy,\n  registerAriaDescriptionElement,\n  unregisterAriaDescriptionElement,\n} from '../../../../utils/hds-aria-described-by.ts';\nimport { HdsFormFieldsetLayoutValues } from './types.ts';\nimport HdsFormLegendComponent from '../legend/index.ts';\nimport HdsFormHelperTextComponent from '../helper-text/index.ts';\nimport HdsFormErrorComponent from '../error/index.ts';\n\nimport type { ComponentLike, WithBoundArgs } from '@glint/template';\nimport type { HdsFormFieldsetLayouts } from './types.ts';\nimport type { HdsYieldSignature } from '../../yield/index.ts';\nimport type { AriaDescribedByComponent } from '../../../../utils/hds-aria-described-by.ts';\n\nexport const LAYOUT_TYPES: HdsFormFieldsetLayouts[] = Object.values(\n  HdsFormFieldsetLayoutValues\n);\n\nexport interface HdsFormFieldsetSignature {\n  Args: {\n    extraAriaDescribedBy?: string;\n    isOptional?: boolean;\n    isRequired?: boolean;\n    layout?: HdsFormFieldsetLayouts;\n  };\n  Blocks: {\n    default: [\n      {\n        Legend?: WithBoundArgs<\n          typeof HdsFormLegendComponent,\n          'contextualClass' | 'isRequired' | 'isOptional'\n        >;\n        HelperText?: WithBoundArgs<\n          typeof HdsFormHelperTextComponent,\n          'contextualClass' | 'controlId' | 'onInsert'\n        >;\n        Control?: ComponentLike<HdsYieldSignature>;\n        Error?: WithBoundArgs<\n          typeof HdsFormErrorComponent,\n          'contextualClass' | 'controlId' | 'onInsert' | 'onRemove'\n        >;\n        id?: string;\n        ariaDescribedBy?: string;\n      },\n    ];\n  };\n  Element: HTMLElement;\n}\n\n// @ts-expect-error: decorator function return type 'ClassOf<AriaDescribedByComponent>' is not assignable to 'typeof HdsFormFieldComponent'\n@ariaDescribedBy\nexport default class HdsFormFieldset extends Component<HdsFormFieldsetSignature> {\n  /**\n   * Sets the layout of the group\n   *\n   * @param layout\n   * @type {enum}\n   * @default 'vertical'\n   */\n  get layout(): HdsFormFieldsetLayouts {\n    return this.args.layout ?? HdsFormFieldsetLayoutValues.Vertical;\n  }\n\n  /**\n   * Calculates the unique ID to assign to the fieldset\n   */\n  get id(): string {\n    return getElementId(this);\n  }\n\n  /**\n   * @param isRequired\n   * @type {boolean}\n   * @default false\n   */\n  get isRequired(): boolean {\n    return this.args.isRequired || false;\n  }\n\n  /**\n   * @param isOptional\n   * @type {boolean}\n   * @default false\n   */\n  get isOptional(): boolean {\n    return this.args.isOptional || false;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    // we just need a class for the layout\n    const classes = ['hds-form-group'];\n\n    // add a class based on the @layout argument\n    classes.push(`hds-form-group--layout-${this.layout}`);\n\n    return classes.join(' ');\n  }\n\n  @action\n  appendDescriptor(element: HTMLElement): void {\n    registerAriaDescriptionElement(this as AriaDescribedByComponent, element);\n  }\n\n  @action removeDescriptor(element: HTMLElement): void {\n    unregisterAriaDescriptionElement(this as AriaDescribedByComponent, element);\n  }\n}\n"],"names":["LAYOUT_TYPES","Object","values","HdsFormFieldsetLayoutValues","HdsFormFieldset","c","Component","layout","args","Vertical","id","getElementId","isRequired","isOptional","classNames","classes","push","join","appendDescriptor","element","registerAriaDescriptionElement","n","prototype","action","removeDescriptor","unregisterAriaDescriptionElement","ariaDescribedBy","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAoBO,MAAMA,YAAsC,GAAGC,MAAM,CAACC,MAAM,CACjEC,2BACF;AAAE,MAmCmBC,eAAe,GAAAC,CAAA,OAAfD,eAAe,SAASE,SAAS,CAA2B;AAC/E;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,MAAMA,GAA2B;IACnC,OAAO,IAAI,CAACC,IAAI,CAACD,MAAM,IAAIJ,2BAA2B,CAACM,QAAQ;AACjE;;AAEA;AACF;AACA;EACE,IAAIC,EAAEA,GAAW;IACf,OAAOC,YAAY,CAAC,IAAI,CAAC;AAC3B;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAY;AACxB,IAAA,OAAO,IAAI,CAACJ,IAAI,CAACI,UAAU,IAAI,KAAK;AACtC;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAY;AACxB,IAAA,OAAO,IAAI,CAACL,IAAI,CAACK,UAAU,IAAI,KAAK;AACtC;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAW;AACvB;AACA,IAAA,MAAMC,OAAO,GAAG,CAAC,gBAAgB,CAAC;;AAElC;IACAA,OAAO,CAACC,IAAI,CAAC,CAAA,uBAAA,EAA0B,IAAI,CAACT,MAAM,EAAE,CAAC;AAErD,IAAA,OAAOQ,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;AAC1B;EAGAC,gBAAgBA,CAACC,OAAoB,EAAQ;AAC3CC,IAAAA,8BAA8B,CAAC,IAAI,EAA8BD,OAAO,CAAC;AAC3E;AAAC,EAAA;IAAAE,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,kBAAA,EAAA,CAHAC,MAAM,CAAA,CAAA;AAAA;EAKCC,gBAAgBA,CAACL,OAAoB,EAAQ;AACnDM,IAAAA,gCAAgC,CAAC,IAAI,EAA8BN,OAAO,CAAC;AAC7E;AAAC,EAAA;IAAAE,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,kBAAA,EAAA,CAFAC,MAAM,CAAA,CAAA;AAAA;AAGT,CAAC,GA7DAG,eAAe,CAAA;AACoBC,oBAAA,CAAAC,QAAA,EAAfxB,eAAe,CAAA;;;;"}