{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/form/field/index.hbs","../../../../../src/components/hds/form/field/index.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{! @glint-nocheck: not typesafe yet }}\\n{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class={{this.classNames}} ...attributes>\\n  {{yield\\n    (hash\\n      Label=(component\\n        \\\"hds/form/label\\\"\\n        controlId=this.id\\n        isRequired=this.isRequired\\n        isOptional=this.isOptional\\n        contextualClass=\\\"hds-form-field__label\\\"\\n      )\\n    )\\n  }}\\n  {{yield\\n    (hash\\n      HelperText=(component\\n        \\\"hds/form/helper-text\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        contextualClass=\\\"hds-form-field__helper-text\\\"\\n      )\\n    )\\n  }}\\n  <div class=\\\"hds-form-field__control\\\">\\n    {{yield (hash Control=(component \\\"hds/yield\\\") id=this.id ariaDescribedBy=this.ariaDescribedBy)}}\\n  </div>\\n  {{yield\\n    (hash\\n      CharacterCount=(component\\n        \\\"hds/form/character-count\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        contextualClass=\\\"hds-form-field__character-count\\\"\\n      )\\n    )\\n  }}\\n  {{yield\\n    (hash\\n      Error=(component\\n        \\\"hds/form/error\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        onRemove=this.removeDescriptor\\n        contextualClass=\\\"hds-form-field__error\\\"\\n      )\\n    )\\n  }}\\n</div>\\n\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { action } from '@ember/object';\nimport { getElementId } from '../../../../utils/hds-get-element-id.js';\nimport {\n  ariaDescribedBy,\n  registerAriaDescriptionElement,\n  unregisterAriaDescriptionElement,\n} from '../../../../utils/hds-aria-described-by.ts';\n\nexport const LAYOUT_TYPES = ['vertical', 'flag'];\n\n@ariaDescribedBy\nclass HdsFormFieldIndexComponent extends Component {\n  @action\n  appendDescriptor(element) {\n    registerAriaDescriptionElement(this, element);\n  }\n\n  @action removeDescriptor(element) {\n    unregisterAriaDescriptionElement(this, element);\n  }\n\n  /**\n   * Sets the layout of the field\n   *\n   * @param layout\n   * @type {string}\n   */\n  get layout() {\n    let { layout } = this.args;\n\n    assert(\n      `@layout for \"Hds::Form::Field\" must be one of the following: ${LAYOUT_TYPES.join(\n        ', '\n      )}; received: ${layout}`,\n      LAYOUT_TYPES.includes(layout)\n    );\n\n    return layout;\n  }\n\n  /**\n   * Calculates the unique ID to assign to the form control\n   */\n  get id() {\n    return getElementId(this);\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = [];\n\n    if (this.args.layout) {\n      classes.push(`hds-form-field--layout-${this.layout}`);\n    }\n\n    // add a class based on the @contextualClass argument\n    // notice: this will *not* be documented for public use\n    if (this.args.contextualClass) {\n      classes.push(this.args.contextualClass);\n    }\n\n    return classes.join(' ');\n  }\n\n  /**\n   * @param isRequired\n   * @type {boolean}\n   * @default false\n   */\n  get isRequired() {\n    return this.args.isRequired || false;\n  }\n\n  /**\n   * @param isOptional\n   * @type {boolean}\n   * @default false\n   */\n  get isOptional() {\n    return this.args.isOptional || false;\n  }\n}\n\nexport default HdsFormFieldIndexComponent;\n"],"names":["LAYOUT_TYPES","HdsFormFieldIndexComponent","c","_class","Component","appendDescriptor","element","registerAriaDescriptionElement","removeDescriptor","unregisterAriaDescriptionElement","layout","args","assert","join","includes","id","getElementId","classNames","classes","push","contextualClass","isRequired","isOptional","_applyDecoratedDescriptor","prototype","action","Object","getOwnPropertyDescriptor","ariaDescribedBy","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;;AACA,eAAe,kBAAkB,CAAC,2xCAA2xC;;;MCchzCA,YAAY,GAAG,CAAC,UAAU,EAAE,MAAM,EAAC;AAAC,MAG3CC,0BAA0B,GAAAC,CAAA,EAAAC,MAAA,GAA1BF,MAAAA,0BAA0B,SAASG,SAAS,CAAC;EAEjDC,gBAAgBA,CAACC,OAAO,EAAE;AACxBC,IAAAA,8BAA8B,CAAC,IAAI,EAAED,OAAO,CAAC,CAAA;AAC/C,GAAA;EAEQE,gBAAgBA,CAACF,OAAO,EAAE;AAChCG,IAAAA,gCAAgC,CAAC,IAAI,EAAEH,OAAO,CAAC,CAAA;AACjD,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAII,MAAMA,GAAG;IACX,IAAI;AAAEA,MAAAA,MAAAA;KAAQ,GAAG,IAAI,CAACC,IAAI,CAAA;AAE1BC,IAAAA,MAAM,CACJ,CAAgEZ,6DAAAA,EAAAA,YAAY,CAACa,IAAI,CAC/E,IACF,CAAC,CAAA,YAAA,EAAeH,MAAM,CAAA,CAAE,EACxBV,YAAY,CAACc,QAAQ,CAACJ,MAAM,CAC9B,CAAC,CAAA;AAED,IAAA,OAAOA,MAAM,CAAA;AACf,GAAA;;AAEA;AACF;AACA;EACE,IAAIK,EAAEA,GAAG;IACP,OAAOC,YAAY,CAAC,IAAI,CAAC,CAAA;AAC3B,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAG;IACf,IAAIC,OAAO,GAAG,EAAE,CAAA;AAEhB,IAAA,IAAI,IAAI,CAACP,IAAI,CAACD,MAAM,EAAE;MACpBQ,OAAO,CAACC,IAAI,CAAC,CAAA,uBAAA,EAA0B,IAAI,CAACT,MAAM,EAAE,CAAC,CAAA;AACvD,KAAA;;AAEA;AACA;AACA,IAAA,IAAI,IAAI,CAACC,IAAI,CAACS,eAAe,EAAE;MAC7BF,OAAO,CAACC,IAAI,CAAC,IAAI,CAACR,IAAI,CAACS,eAAe,CAAC,CAAA;AACzC,KAAA;AAEA,IAAA,OAAOF,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIQ,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAACV,IAAI,CAACU,UAAU,IAAI,KAAK,CAAA;AACtC,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAACX,IAAI,CAACW,UAAU,IAAI,KAAK,CAAA;AACtC,GAAA;AACF,CAAC,GAAAC,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,uBAzEEC,MAAM,CAAA,EAAAC,MAAA,CAAAC,wBAAA,CAAAxB,MAAA,CAAAqB,SAAA,EAAArB,kBAAAA,CAAAA,EAAAA,MAAA,CAAAqB,SAAA,CAAA,EAAAD,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,EAAA,kBAAA,EAAA,CAKNC,MAAM,CAAAC,EAAAA,MAAA,CAAAC,wBAAA,CAAAxB,MAAA,CAAAqB,SAAA,uBAAArB,MAAA,CAAAqB,SAAA,CAAArB,GAAAA,MAAA,IAPRyB,eAAe,CAAA,CAAA,CAAA;AA6EhB,YAAAC,oBAAA,CAAAC,QAAA,EAAe7B,0BAA0B,CAAA;;;;"}