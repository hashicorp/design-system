{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/form/field/index.hbs","../../../../../src/components/hds/form/field/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class={{this.classNames}} ...attributes>\\n  {{yield\\n    (hash\\n      Label=(component\\n        \\\"hds/form/label\\\"\\n        controlId=this.id\\n        isRequired=this.isRequired\\n        isOptional=this.isOptional\\n        contextualClass=\\\"hds-form-field__label\\\"\\n      )\\n    )\\n  }}\\n  {{yield\\n    (hash\\n      HelperText=(component\\n        \\\"hds/form/helper-text\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        contextualClass=\\\"hds-form-field__helper-text\\\"\\n      )\\n    )\\n  }}\\n  <div class=\\\"hds-form-field__control\\\">\\n    {{! @glint-expect-error }}\\n    {{yield (hash Control=(component \\\"hds/yield\\\") id=this.id ariaDescribedBy=this.ariaDescribedBy)}}\\n  </div>\\n  {{yield\\n    (hash\\n      CharacterCount=(component\\n        \\\"hds/form/character-count\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        contextualClass=\\\"hds-form-field__character-count\\\"\\n      )\\n    )\\n  }}\\n  {{yield\\n    (hash\\n      Error=(component\\n        \\\"hds/form/error\\\"\\n        controlId=this.id\\n        onInsert=this.appendDescriptor\\n        onRemove=this.removeDescriptor\\n        contextualClass=\\\"hds-form-field__error\\\"\\n      )\\n    )\\n  }}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { action } from '@ember/object';\nimport { getElementId } from '../../../../utils/hds-get-element-id.ts';\nimport {\n  ariaDescribedBy,\n  registerAriaDescriptionElement,\n  unregisterAriaDescriptionElement,\n} from '../../../../utils/hds-aria-described-by.ts';\nimport { HdsFormFieldLayoutValues } from './types.ts';\nimport HdsFormLabelComponent from '../label/index.ts';\nimport HdsFormHelperTextComponent from '../helper-text/index.ts';\nimport HdsFormCharacterCountComponent from '../character-count/index.ts';\nimport HdsFormErrorComponent from '../error/index.ts';\n\nimport type { HdsFormFieldLayouts } from './types.ts';\nimport type { ComponentLike, WithBoundArgs } from '@glint/template';\nimport type { HdsYieldSignature } from '../../yield/index.ts';\nimport type { AriaDescribedByComponent } from '../../../../utils/hds-aria-described-by.ts';\n\nexport const LAYOUT_TYPES = Object.values(HdsFormFieldLayoutValues);\n\nexport interface HdsFormFieldSignature {\n  Args: {\n    id?: string;\n    extraAriaDescribedBy?: string;\n    contextualClass?: string;\n    isOptional?: boolean;\n    isRequired?: boolean;\n    layout?: HdsFormFieldLayouts;\n  };\n  Blocks: {\n    default: [\n      {\n        Label?: WithBoundArgs<\n          typeof HdsFormLabelComponent,\n          'contextualClass' | 'controlId' | 'isRequired' | 'isOptional'\n        >;\n        HelperText?: WithBoundArgs<\n          typeof HdsFormHelperTextComponent,\n          'contextualClass' | 'controlId' | 'onInsert'\n        >;\n        Control?: ComponentLike<HdsYieldSignature>;\n        CharacterCount?: WithBoundArgs<\n          typeof HdsFormCharacterCountComponent,\n          'contextualClass' | 'controlId' | 'onInsert'\n        >;\n        Error?: WithBoundArgs<\n          typeof HdsFormErrorComponent,\n          'contextualClass' | 'controlId' | 'onInsert' | 'onRemove'\n        >;\n        id?: string;\n        ariaDescribedBy?: string;\n      },\n    ];\n  };\n  Element: HTMLElement;\n}\n\n// @ts-expect-error: decorator function return type 'ClassOf<AriaDescribedBy>' is not assignable to 'typeof HdsFormField'\n@ariaDescribedBy\nexport default class HdsFormField extends Component<HdsFormFieldSignature> {\n  /**\n   * Sets the layout of the field\n   *\n   * @param layout\n   * @type {string}\n   */\n  get layout(): HdsFormFieldLayouts | undefined {\n    const { layout } = this.args;\n\n    assert(\n      `@layout for \"Hds::Form::Field\" must be one of the following: ${LAYOUT_TYPES.join(\n        ', '\n      )}; received: ${layout}`,\n      LAYOUT_TYPES.includes(layout as HdsFormFieldLayoutValues)\n    );\n\n    return layout;\n  }\n\n  /**\n   * Calculates the unique ID to assign to the form control\n   */\n  get id(): string {\n    return getElementId(this);\n  }\n\n  /**\n   * @param isRequired\n   * @type {boolean}\n   * @default false\n   */\n  get isRequired(): boolean {\n    return this.args.isRequired || false;\n  }\n\n  /**\n   * @param isOptional\n   * @type {boolean}\n   * @default false\n   */\n  get isOptional(): boolean {\n    return this.args.isOptional || false;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes: string[] = [];\n\n    if (this.args.layout) {\n      classes.push(`hds-form-field--layout-${this.layout}`);\n    }\n\n    // add a class based on the @contextualClass argument\n    // notice: this will *not* be documented for public use\n    if (this.args.contextualClass) {\n      classes.push(this.args.contextualClass);\n    }\n\n    return classes.join(' ');\n  }\n\n  @action\n  appendDescriptor(element: HTMLElement): void {\n    registerAriaDescriptionElement(this as AriaDescribedByComponent, element);\n  }\n\n  @action removeDescriptor(element: HTMLElement): void {\n    unregisterAriaDescriptionElement(this as AriaDescribedByComponent, element);\n  }\n}\n"],"names":["LAYOUT_TYPES","Object","values","HdsFormFieldLayoutValues","HdsFormField","c","_class","Component","layout","args","assert","join","includes","id","getElementId","isRequired","isOptional","classNames","classes","push","contextualClass","appendDescriptor","element","registerAriaDescriptionElement","removeDescriptor","unregisterAriaDescriptionElement","_applyDecoratedDescriptor","prototype","action","getOwnPropertyDescriptor","ariaDescribedBy","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;;;;;;;AACA,eAAe,kBAAkB,CAAC,gxCAAgxC;;;ACwB3yC,MAAMA,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACC,wBAAwB;AAuClE;AAEqBC,IAAAA,YAAY,GAAAC,CAAA,EAAAC,MAAA,GADjC,MACqBF,YAAY,SAASG,SAAS,CAAwB;AACzE;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,MAAMA,GAAoC;IAC5C,MAAM;AAAEA,MAAAA;KAAQ,GAAG,IAAI,CAACC,IAAI;AAE5BC,IAAAA,MAAM,CACJ,CAAgEV,6DAAAA,EAAAA,YAAY,CAACW,IAAI,CAC/E,IACF,CAAC,CAAA,YAAA,EAAeH,MAAM,CAAA,CAAE,EACxBR,YAAY,CAACY,QAAQ,CAACJ,MAAkC,CAC1D,CAAC;AAED,IAAA,OAAOA,MAAM;AACf;;AAEA;AACF;AACA;EACE,IAAIK,EAAEA,GAAW;IACf,OAAOC,YAAY,CAAC,IAAI,CAAC;AAC3B;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAY;AACxB,IAAA,OAAO,IAAI,CAACN,IAAI,CAACM,UAAU,IAAI,KAAK;AACtC;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAY;AACxB,IAAA,OAAO,IAAI,CAACP,IAAI,CAACO,UAAU,IAAI,KAAK;AACtC;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,UAAUA,GAAW;IACvB,MAAMC,OAAiB,GAAG,EAAE;AAE5B,IAAA,IAAI,IAAI,CAACT,IAAI,CAACD,MAAM,EAAE;MACpBU,OAAO,CAACC,IAAI,CAAC,CAAA,uBAAA,EAA0B,IAAI,CAACX,MAAM,EAAE,CAAC;AACvD;;AAEA;AACA;AACA,IAAA,IAAI,IAAI,CAACC,IAAI,CAACW,eAAe,EAAE;MAC7BF,OAAO,CAACC,IAAI,CAAC,IAAI,CAACV,IAAI,CAACW,eAAe,CAAC;AACzC;AAEA,IAAA,OAAOF,OAAO,CAACP,IAAI,CAAC,GAAG,CAAC;AAC1B;EAGAU,gBAAgBA,CAACC,OAAoB,EAAQ;AAC3CC,IAAAA,8BAA8B,CAAC,IAAI,EAA8BD,OAAO,CAAC;AAC3E;EAEQE,gBAAgBA,CAACF,OAAoB,EAAQ;AACnDG,IAAAA,gCAAgC,CAAC,IAAI,EAA8BH,OAAO,CAAC;AAC7E;AACF,CAAC,GAAAI,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,uBAREC,MAAM,CAAA,EAAA3B,MAAA,CAAA4B,wBAAA,CAAAvB,MAAA,CAAAqB,SAAA,EAAArB,kBAAAA,CAAAA,EAAAA,MAAA,CAAAqB,SAAA,CAAA,EAAAD,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,EAAA,kBAAA,EAAA,CAKNC,MAAM,CAAA3B,EAAAA,MAAA,CAAA4B,wBAAA,CAAAvB,MAAA,CAAAqB,SAAA,uBAAArB,MAAA,CAAAqB,SAAA,CAAArB,GAAAA,MAAA,IAxERwB,eAAe,CAAA;AACiBC,oBAAA,CAAAC,QAAA,EAAZ5B,YAAY,CAAA;;;;"}