{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/form/key-value-inputs/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport type { ComponentLike, WithBoundArgs } from '@glint/template';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { schedule } from '@ember/runloop';\nimport { modifier } from 'ember-modifier';\n\nimport {\n  ariaDescribedBy,\n  registerAriaDescriptionElement,\n  unregisterAriaDescriptionElement,\n} from '../../../../utils/hds-aria-described-by.ts';\nimport { guidFor } from '@ember/object/internals';\n\nimport HdsAlertComponent from '../../alert/index.ts';\nimport HdsFormErrorComponent from '../error/index.ts';\nimport HdsFormHelperTextComponent from '../helper-text/index.ts';\nimport HdsFormKeyValueInputsDeleteRowButtonComponent from './delete-row-button.ts';\nimport HdsFormKeyValueInputsFieldComponent from './field.ts';\nimport HdsFormKeyValueInputsGenericComponent from './generic.ts';\nimport HdsFormLegendComponent from '../legend/index.ts';\n\nimport type { AriaDescribedByComponent } from '../../../../utils/hds-aria-described-by.ts';\nimport type { HdsFormKeyValueInputsAddRowButtonSignature } from './add-row-button.ts';\nimport type { HdsYieldSignature } from '../../yield/index.ts';\n\nconst KEY_VALUE_INPUTS_FIELD_SELECTOR = '.hds-form-key-value-inputs__field';\nconst KEY_VALUE_INPUTS_GENERIC_SELECTOR =\n  '.hds-form-key-value-inputs__generic-container';\nconst KEY_VALUE_INPUTS_FIRST_ROW_SELECTOR =\n  '.hds-form-key-value-inputs__row--first';\nconst KEY_VALUE_INPUTS_DELETE_ROW_CONTAINER_SELECTOR =\n  '.hds-form-key-value-inputs__delete-row-button-container';\n\nexport interface HdsFormKeyValueInputsSignature {\n  Args: {\n    data: Array<unknown>;\n    extraAriaDescribedBy?: string;\n    isOptional?: boolean;\n    isRequired?: boolean;\n  };\n  Blocks: {\n    header?: [\n      {\n        Legend?: WithBoundArgs<\n          typeof HdsFormLegendComponent,\n          'contextualClass' | 'id' | 'isOptional' | 'isRequired'\n        >;\n        HelperText?: WithBoundArgs<\n          typeof HdsFormHelperTextComponent,\n          'contextualClass' | 'controlId' | 'onInsert'\n        >;\n        Generic?: ComponentLike<HdsYieldSignature>;\n      },\n    ];\n    row: [\n      {\n        Field?: WithBoundArgs<\n          typeof HdsFormKeyValueInputsFieldComponent,\n          'onInsert' | 'onRemove' | 'rowIndex'\n        >;\n        Generic?: WithBoundArgs<\n          typeof HdsFormKeyValueInputsGenericComponent,\n          'onInsert' | 'onRemove'\n        >;\n        DeleteRowButton?: WithBoundArgs<\n          typeof HdsFormKeyValueInputsDeleteRowButtonComponent,\n          'onInsert' | 'onRemove' | 'returnFocusTo' | 'rowData' | 'rowIndex'\n        >;\n        rowData?: unknown;\n        rowIndex?: number;\n      },\n    ];\n    footer?: [\n      {\n        AddRowButton?: ComponentLike<HdsFormKeyValueInputsAddRowButtonSignature>;\n        Alert?: WithBoundArgs<typeof HdsAlertComponent, 'color' | 'type'>;\n        Error?: WithBoundArgs<\n          typeof HdsFormErrorComponent,\n          'contextualClass' | 'controlId' | 'onInsert' | 'onRemove'\n        >;\n      },\n    ];\n  };\n  Element: HTMLFieldSetElement;\n}\n\n// @ts-expect-error: decorator function return type 'ClassOf<AriaDescribedBy>' is not assignable to 'typeof HdsFormField'\n@ariaDescribedBy\nexport default class HdsFormKeyValueInputs extends Component<HdsFormKeyValueInputsSignature> {\n  private _element!: HTMLFieldSetElement;\n  @tracked _gridTemplateColumns = '';\n\n  // this is not a specific DOM id, but a value that is used to \"glue\" together\n  // different fieldsset-related elements (legend, helper text, error) with the fieldset itself\n  get glueId(): string {\n    return guidFor(this);\n  }\n\n  @action\n  _setUpColumn(): void {\n    // eslint-disable-next-line ember/no-runloop\n    schedule('afterRender', (): void => {\n      this._updateColumns();\n    });\n  }\n\n  @action\n  _removeColumn(): void {\n    // eslint-disable-next-line ember/no-runloop\n    schedule('afterRender', (): void => {\n      this._updateColumns();\n    });\n  }\n\n  @action\n  appendDescriptor(element: HTMLElement): void {\n    registerAriaDescriptionElement(this as AriaDescribedByComponent, element);\n  }\n\n  @action\n  removeDescriptor(element: HTMLElement): void {\n    unregisterAriaDescriptionElement(this as AriaDescribedByComponent, element);\n  }\n\n  private _setUpKeyValueInputs = modifier((element: HTMLFieldSetElement) => {\n    this._element = element;\n  });\n\n  // Update the column array based on how they are ordered in the DOM\n  private _updateColumns = () => {\n    const columns = this._element\n      .querySelector(KEY_VALUE_INPUTS_FIRST_ROW_SELECTOR)\n      ?.querySelectorAll(\n        `${KEY_VALUE_INPUTS_FIELD_SELECTOR}, ${KEY_VALUE_INPUTS_GENERIC_SELECTOR}, ${KEY_VALUE_INPUTS_DELETE_ROW_CONTAINER_SELECTOR}`\n      );\n\n    let updatedGridTemplateColumns = '';\n\n    columns?.forEach((column, index) => {\n      const columnElement = column as HTMLElement;\n\n      // FIELD\n\n      if (\n        // do substring to remove the leading dot from the class selector\n        column.classList.contains(KEY_VALUE_INPUTS_FIELD_SELECTOR.substring(1))\n      ) {\n        if (columnElement.dataset['width']) {\n          updatedGridTemplateColumns += `${columnElement.dataset['width']} `;\n        } else {\n          updatedGridTemplateColumns += '1fr ';\n        }\n      }\n\n      // GENERIC\n\n      if (\n        // do substring to remove the leading dot from the class selector\n        column.classList.contains(\n          KEY_VALUE_INPUTS_GENERIC_SELECTOR.substring(1)\n        )\n      ) {\n        updatedGridTemplateColumns += 'auto ';\n\n        // Set grid-column so generic content appears in the correct column when grid-row is set; otherwise, browsers default it to the first column.\n        columnElement.style.setProperty(\n          '--hds-key-value-inputs-column-index',\n          `${index + 1}`\n        );\n      }\n\n      // DELETE BUTTON\n\n      if (\n        column.classList.contains(\n          KEY_VALUE_INPUTS_DELETE_ROW_CONTAINER_SELECTOR.substring(1)\n        )\n      ) {\n        // Set grid-column so generic content appears in the correct column when grid-row is set; otherwise, browsers default it to the first column.\n        columnElement.style.setProperty(\n          '--hds-key-value-inputs-column-index',\n          `${index + 1}`\n        );\n      }\n    });\n\n    // we always set aside the space for the delete button (it's always the last element)\n    // even when it's not rendered, to avoid layout shifts when moving to/from an empty state\n    updatedGridTemplateColumns += '2.25rem ';\n\n    this._gridTemplateColumns = updatedGridTemplateColumns;\n  };\n}\n"],"names":["KEY_VALUE_INPUTS_FIELD_SELECTOR","KEY_VALUE_INPUTS_GENERIC_SELECTOR","KEY_VALUE_INPUTS_FIRST_ROW_SELECTOR","KEY_VALUE_INPUTS_DELETE_ROW_CONTAINER_SELECTOR","HdsFormKeyValueInputs","c","Component","_element","g","prototype","tracked","i","void 0","glueId","guidFor","_setUpColumn","schedule","_updateColumns","n","action","_removeColumn","appendDescriptor","element","registerAriaDescriptionElement","removeDescriptor","unregisterAriaDescriptionElement","_setUpKeyValueInputs","modifier","columns","querySelector","querySelectorAll","updatedGridTemplateColumns","forEach","column","index","columnElement","classList","contains","substring","dataset","style","setProperty","_gridTemplateColumns","ariaDescribedBy","setComponentTemplate","TEMPLATE"],"mappings":"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"}