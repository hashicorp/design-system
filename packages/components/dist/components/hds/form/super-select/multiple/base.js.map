{"version":3,"file":"base.js","sources":["../../../../../../src/components/hds/form/super-select/multiple/base.hbs","../../../../../../src/components/hds/form/super-select/multiple/base.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! Important: if an argument is added in base.hbs, it must also be added/processed in the Base component used in field.hbs }}\\n<div class={{this.classNames}} {{style this.dropdownMaxWidthStyle}}>\\n  <PowerSelectMultiple\\n    @afterOptionsComponent={{if\\n      this.showAfterOptions\\n      (or\\n        @afterOptionsComponent\\n        (component\\n          \\\"hds/form/super-select/after-options\\\"\\n          content=@afterOptionsContent\\n          resultCountMessage=this.resultCountMessage\\n          showNoSelectedMessage=this.showNoSelectedMessage\\n          showOnlySelected=this.showOnlySelected\\n          showSelected=this.showSelected\\n          showAll=this.showAll\\n          clearSelected=this.clearSelected\\n          selectedCount=this.selectedCount\\n        )\\n      )\\n    }}\\n    @ariaDescribedBy={{@ariaDescribedBy}}\\n    @ariaInvalid={{@ariaInvalid}}\\n    @ariaLabel={{@ariaLabel}}\\n    @ariaLabelledBy={{@ariaLabelledBy}}\\n    @beforeOptionsComponent={{@beforeOptionsComponent}}\\n    @calculatePosition={{if @verticalPosition undefined this.calculatePosition}}\\n    @closeOnSelect={{false}}\\n    @disabled={{@disabled}}\\n    @dropdownClass={{@dropdownClass}}\\n    @extra={{@extra}}\\n    @groupComponent={{component \\\"hds/form/super-select/option-group\\\"}}\\n    @horizontalPosition={{@horizontalPosition}}\\n    @initiallyOpened={{@initiallyOpened}}\\n    @labelText={{@labelText}}\\n    @loadingMessage={{@loadingMessage}}\\n    @matcher={{@matcher}}\\n    @matchTriggerWidth={{if @dropdownMaxWidth false @matchTriggerWidth}}\\n    @noMatchesMessage={{@noMatchesMessage}}\\n    @onBlur={{@onBlur}}\\n    @onChange={{@onChange}}\\n    @onClose={{@onClose}}\\n    @onFocus={{@onFocus}}\\n    @onInput={{@onInput}}\\n    @onKeydown={{@onKeydown}}\\n    @onOpen={{@onOpen}}\\n    @options={{@options}}\\n    @optionsComponent={{@optionsComponent}}\\n    @placeholder={{@placeholder}}\\n    @placeholderComponent={{@placeholderComponent}}\\n    @preventScroll={{@preventScroll}}\\n    @registerAPI={{this.setPowerSelectAPI}}\\n    @renderInPlace={{true}}\\n    @resultCountMessage={{@resultCountMessage}}\\n    @scrollTo={{@scrollTo}}\\n    @search={{@search}}\\n    @searchEnabled={{@searchEnabled}}\\n    @searchField={{@searchField}}\\n    @searchMessage={{@searchMessage}}\\n    @searchPlaceholder={{this.searchPlaceholder}}\\n    @selected={{@selected}}\\n    @selectedItemComponent={{@selectedItemComponent}}\\n    @tabindex={{@tabindex}}\\n    @triggerClass={{@triggerClass}}\\n    @triggerComponent={{@triggerComponent}}\\n    @triggerId={{@triggerId}}\\n    @triggerRole={{@triggerRole}}\\n    @typeAheadMatcher={{@typeAheadMatcher}}\\n    @verticalPosition={{@verticalPosition}}\\n    ...attributes\\n    as |option select|\\n  >\\n    {{! even if technically what is yielded here are _a list_ of options, we\\'ve decided to keep the `option` name for consistency with the existing `PowerSelect` API }}\\n    {{yield option select}}\\n  </PowerSelectMultiple>\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport PowerSelectComponent from 'ember-power-select/components/power-select';\nimport anchoredPositionModifier from '../../../../../modifiers/hds-anchored-position.ts';\nimport { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\n\nconst DEFAULT_HORIZONTAL_POSITION = 'bottom-start';\nconst HORIZONTAL_POSITION_MAPPING = {\n  left: 'bottom-start',\n  center: 'bottom',\n  right: 'bottom-end',\n};\n\nexport default class HdsSuperSelectMultipleBaseComponent extends PowerSelectComponent {\n  @tracked powerSelectAPI;\n  @tracked showOnlySelected = false;\n  @tracked showNoSelectedMessage = false;\n\n  get selectedCount() {\n    return this.selected?.length || '0';\n  }\n\n  get optionsCount() {\n    return this.options?.length || '0';\n  }\n\n  get resultCountMessage() {\n    return `${this.selectedCount} selected of ${this.optionsCount} total`;\n  }\n\n  @action calculatePosition(trigger, content) {\n    // use `hds-anchored-position` to calculate and set position\n    anchoredPositionModifier(content, [trigger], {\n      placement: this.args.horizontalPosition\n        ? HORIZONTAL_POSITION_MAPPING[this.args.horizontalPosition]\n        : DEFAULT_HORIZONTAL_POSITION,\n      offsetOptions: 4,\n      enableCollisionDetection: true,\n    });\n    // prevent PowerSelect from setting position\n    return {};\n  }\n\n  /**\n   * This action sets the powerSelectAPI property and optionally calls a registerAPI function.\n   *\n   * @param {Object} powerSelectAPI - The API object for the PowerSelect component.\n   *\n   * If a `registerAPI` function is passed in through the component's arguments,\n   * this function will be called with the `powerSelectAPI` as its argument.\n   * This allows parent components or controllers to have access to the PowerSelect API.\n   *\n   * The `powerSelectAPI` is also stored on the component instance and used in `clearSelected`\n   */\n  @action\n  setPowerSelectAPI(powerSelectAPI) {\n    if (typeof this.args.registerAPI === 'function') {\n      this.args.registerAPI(powerSelectAPI);\n    }\n    this.powerSelectAPI = powerSelectAPI;\n  }\n\n  @action showSelected() {\n    this.showNoSelectedMessage = this.selectedCount === '0';\n    this.showOnlySelected = true;\n  }\n\n  @action showAll() {\n    this.showNoSelectedMessage = false;\n    this.showOnlySelected = false;\n  }\n\n  @action clearSelected() {\n    this.powerSelectAPI.actions.select(null);\n    // show all options after clearing all selection\n    this.showNoSelectedMessage = false;\n    this.showOnlySelected = false;\n  }\n\n  /**\n   * Determine if `@afterOptionsComponent` gets displayed\n   * @param showAfterOptions\n   * @type {boolean}\n   * @default true\n   */\n  get showAfterOptions() {\n    return this.args.showAfterOptions ?? true;\n  }\n\n  // NOTE: The searchPlaceholder doesn't currently work for the multiple select\n  /**\n   * Get the search placeholder text\n   * @param searchPlaceholder\n   * @type {string}\n   * @default 'Search'\n   */\n  get searchPlaceholder() {\n    return this.args.searchPlaceholder ?? 'Search';\n  }\n\n  /**\n   * Get the maxWidth to apply to the dropdown\n   * @param dropdownMaxWidth\n   * @type {string}\n   * @default 'none'\n   */\n  get dropdownMaxWidthStyle() {\n    const maxWidthStyle = {};\n    if (this.args.dropdownMaxWidth) {\n      maxWidthStyle['--hds-form-super-select-dropdown-max-width'] =\n        this.args.dropdownMaxWidth;\n    }\n    return maxWidthStyle;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-form-super-select', 'hds-form-super-select-multiple'];\n\n    // add a class based on the @matchTriggerWidth argument or whether dropdownMaxWidth is set\n    if (this.args.matchTriggerWidth === false || this.args.dropdownMaxWidth) {\n      classes.push('hds-form-super-select--dropdown-content-auto-width');\n    }\n\n    // add a class based on the @isInvalid argument\n    if (this.args.isInvalid) {\n      classes.push(`hds-form-super-select--is-invalid`);\n    }\n\n    // add a class based on the showOnlySelected\n    if (this.showOnlySelected) {\n      classes.push(`hds-form-super-select--show-only-selected`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_HORIZONTAL_POSITION","HORIZONTAL_POSITION_MAPPING","left","center","right","HdsSuperSelectMultipleBaseComponent","_class","PowerSelectComponent","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","selectedCount","selected","length","optionsCount","options","resultCountMessage","calculatePosition","trigger","content","anchoredPositionModifier","placement","horizontalPosition","offsetOptions","enableCollisionDetection","setPowerSelectAPI","powerSelectAPI","registerAPI","showSelected","showNoSelectedMessage","showOnlySelected","showAll","clearSelected","actions","select","showAfterOptions","searchPlaceholder","dropdownMaxWidthStyle","maxWidthStyle","dropdownMaxWidth","classNames","classes","matchTriggerWidth","push","isInvalid","join","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}