{"version":3,"file":"base.js","sources":["../../../../../../src/components/hds/form/super-select/multiple/base.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport anchoredPositionModifier from '../../../../../modifiers/hds-anchored-position.ts';\n\nimport { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\nimport {\n  HdsFormSuperSelectHorizontalPositionValues,\n  HdsFormSuperSelectHorizontalPositionToPlacementValues,\n} from '../types.ts';\n\nimport type { PowerSelectSignature } from 'ember-power-select/components/power-select';\nimport type { Select as PowerSelect } from 'ember-power-select/components/power-select';\nimport type { CalculatePositionResult } from 'ember-basic-dropdown/utils/calculate-position';\nimport type { HdsFormSuperSelectHorizontalPositions } from '../types.ts';\n\nexport const DEFAULT_HORIZONTAL_POSITION: string =\n  HdsFormSuperSelectHorizontalPositionValues.Left;\nexport const HORIZONTAL_POSITION_MAPPING =\n  HdsFormSuperSelectHorizontalPositionToPlacementValues;\n\nexport interface HdsFormSuperSelectMultipleBaseSignature {\n  Args: PowerSelectSignature['Args'] & {\n    showAfterOptions?: boolean;\n    afterOptionsContent?: string;\n    resultCountMessage?: string;\n    dropdownMaxWidth?: string;\n    matchTriggerWidth?: boolean;\n    isInvalid?: boolean;\n  };\n  Blocks: PowerSelectSignature['Blocks'];\n  Element: PowerSelectSignature['Element'];\n}\n\nexport default class HdsFormSuperSelectMultipleBase extends Component<HdsFormSuperSelectMultipleBaseSignature> {\n  @tracked private _powerSelectAPI?: PowerSelect;\n  @tracked private _showOnlySelected = false;\n  @tracked private _showNoSelectedMessage = false;\n\n  get horizontalPosition(): HdsFormSuperSelectHorizontalPositions {\n    const { horizontalPosition = DEFAULT_HORIZONTAL_POSITION } = this.args;\n    return horizontalPosition as HdsFormSuperSelectHorizontalPositions;\n  }\n\n  get selectedCount(): string {\n    return this._powerSelectAPI?.selected?.length || '0';\n  }\n\n  get optionsCount(): string {\n    return this._powerSelectAPI?.resultsCount.toString() || '0';\n  }\n\n  get resultCountMessage(): string {\n    return (\n      this.args.resultCountMessage ||\n      `${this.selectedCount} selected of ${this.optionsCount} total`\n    );\n  }\n\n  @action calculatePosition(\n    trigger: Element,\n    content: HTMLElement\n  ): CalculatePositionResult {\n    // use `hds-anchored-position` to calculate and set position\n    // @ts-expect-error: known issue with type of invocation\n    anchoredPositionModifier(content, [trigger], {\n      placement: HORIZONTAL_POSITION_MAPPING[this.horizontalPosition],\n      offsetOptions: 4,\n      enableCollisionDetection: true,\n    });\n    // prevent PowerSelect from setting position\n    return {\n      horizontalPosition: 'auto',\n      verticalPosition: 'auto',\n      style: {},\n    };\n  }\n\n  /**\n   * This action sets the powerSelectAPI property and optionally calls a registerAPI function.\n   *\n   * @param {Object} powerSelectAPI - The API object for the PowerSelect component.\n   *\n   * If a `registerAPI` function is passed in through the component's arguments,\n   * this function will be called with the `powerSelectAPI` as its argument.\n   * This allows parent components or controllers to have access to the PowerSelect API.\n   *\n   * The `powerSelectAPI` is also stored on the component instance and used in `clearSelected`\n   */\n  @action\n  setPowerSelectAPI(powerSelectAPI: PowerSelect): void {\n    if (typeof this.args.registerAPI === 'function') {\n      this.args.registerAPI(powerSelectAPI);\n    }\n    this._powerSelectAPI = powerSelectAPI;\n  }\n\n  @action showSelected(): void {\n    this._showNoSelectedMessage = this.selectedCount === '0';\n    this._showOnlySelected = true;\n  }\n\n  @action showAll(): void {\n    this._showNoSelectedMessage = false;\n    this._showOnlySelected = false;\n  }\n\n  @action clearSelected(): void {\n    this._powerSelectAPI?.actions.select(null);\n    // show all options after clearing all selection\n    this._showNoSelectedMessage = false;\n    this._showOnlySelected = false;\n  }\n\n  /**\n   * Determine if `@afterOptionsComponent` gets displayed\n   * @param showAfterOptions\n   * @type {boolean}\n   * @default true\n   */\n  get showAfterOptions(): boolean {\n    return this.args.showAfterOptions ?? true;\n  }\n\n  // NOTE: The searchPlaceholder doesn't currently work for the multiple select\n  /**\n   * Get the search placeholder text\n   * @param searchPlaceholder\n   * @type {string}\n   * @default 'Search'\n   */\n  get searchPlaceholder(): string {\n    return this.args.searchPlaceholder ?? 'Search';\n  }\n\n  /**\n   * Get the maxWidth to apply to the dropdown\n   * @param dropdownMaxWidth\n   * @type {string}\n   * @default 'none'\n   */\n  get dropdownMaxWidthStyle(): Record<string, string> {\n    const maxWidthStyle: { [key: string]: string } = {};\n    if (this.args.dropdownMaxWidth) {\n      maxWidthStyle['--hds-form-super-select-dropdown-max-width'] =\n        this.args.dropdownMaxWidth;\n    }\n    return maxWidthStyle;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-form-super-select', 'hds-form-super-select-multiple'];\n\n    // add a class based on the @matchTriggerWidth argument or whether dropdownMaxWidth is set\n    if (this.args.matchTriggerWidth === false || this.args.dropdownMaxWidth) {\n      classes.push('hds-form-super-select--dropdown-content-auto-width');\n    }\n\n    // add a class based on the @isInvalid argument\n    if (this.args.isInvalid) {\n      classes.push(`hds-form-super-select--is-invalid`);\n    }\n\n    // add a class based on the showOnlySelected\n    if (this._showOnlySelected) {\n      classes.push(`hds-form-super-select--show-only-selected`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_HORIZONTAL_POSITION","HdsFormSuperSelectHorizontalPositionValues","Left","HORIZONTAL_POSITION_MAPPING","HdsFormSuperSelectHorizontalPositionToPlacementValues","HdsFormSuperSelectMultipleBase","Component","g","prototype","tracked","i","void 0","horizontalPosition","args","selectedCount","_powerSelectAPI","selected","length","optionsCount","resultsCount","toString","resultCountMessage","calculatePosition","trigger","content","anchoredPositionModifier","placement","offsetOptions","enableCollisionDetection","verticalPosition","style","n","action","setPowerSelectAPI","powerSelectAPI","registerAPI","showSelected","_showNoSelectedMessage","_showOnlySelected","showAll","clearSelected","actions","select","showAfterOptions","searchPlaceholder","dropdownMaxWidthStyle","maxWidthStyle","dropdownMaxWidth","classNames","classes","matchTriggerWidth","push","isInvalid","join","setComponentTemplate","TEMPLATE"],"mappings":"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"}