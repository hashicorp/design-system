{"version":3,"file":"base.js","sources":["../../../../../../src/components/hds/form/super-select/multiple/base.hbs","../../../../../../src/components/hds/form/super-select/multiple/base.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! Important: if an argument is added in base.hbs, it must also be added/processed in the Base component used in field.hbs }}\\n<div class={{this.classNames}} {{style this.dropdownMaxWidthStyle}}>\\n  <PowerSelectMultiple\\n    @afterOptionsComponent={{if\\n      this.showAfterOptions\\n      (or\\n        @afterOptionsComponent\\n        (component\\n          \\\"hds/form/super-select/after-options\\\"\\n          content=@afterOptionsContent\\n          resultCountMessage=this.resultCountMessage\\n          showNoSelectedMessage=this.showNoSelectedMessage\\n          showOnlySelected=this.showOnlySelected\\n          showSelected=this.showSelected\\n          showAll=this.showAll\\n          clearSelected=this.clearSelected\\n          selectedCount=this.selectedCount\\n        )\\n      )\\n    }}\\n    @ariaDescribedBy={{@ariaDescribedBy}}\\n    @ariaInvalid={{@ariaInvalid}}\\n    @ariaLabel={{@ariaLabel}}\\n    @ariaLabelledBy={{@ariaLabelledBy}}\\n    @beforeOptionsComponent={{@beforeOptionsComponent}}\\n    @calculatePosition={{if @verticalPosition undefined this.calculatePosition}}\\n    @closeOnSelect={{false}}\\n    @disabled={{@disabled}}\\n    @dropdownClass={{@dropdownClass}}\\n    @extra={{@extra}}\\n    @groupComponent={{component \\\"hds/form/super-select/option-group\\\"}}\\n    @horizontalPosition={{@horizontalPosition}}\\n    @initiallyOpened={{@initiallyOpened}}\\n    @labelText={{@labelText}}\\n    @loadingMessage={{@loadingMessage}}\\n    @matcher={{@matcher}}\\n    @matchTriggerWidth={{if @dropdownMaxWidth false @matchTriggerWidth}}\\n    @noMatchesMessage={{@noMatchesMessage}}\\n    @onBlur={{@onBlur}}\\n    @onChange={{@onChange}}\\n    @onClose={{@onClose}}\\n    @onFocus={{@onFocus}}\\n    @onInput={{@onInput}}\\n    @onKeydown={{@onKeydown}}\\n    @onOpen={{@onOpen}}\\n    @options={{@options}}\\n    @optionsComponent={{@optionsComponent}}\\n    @placeholder={{@placeholder}}\\n    @placeholderComponent={{@placeholderComponent}}\\n    @preventScroll={{@preventScroll}}\\n    @registerAPI={{this.setPowerSelectAPI}}\\n    @renderInPlace={{true}}\\n    @resultCountMessage={{@resultCountMessage}}\\n    @scrollTo={{@scrollTo}}\\n    @search={{@search}}\\n    @searchEnabled={{@searchEnabled}}\\n    @searchField={{@searchField}}\\n    @searchMessage={{@searchMessage}}\\n    @searchPlaceholder={{this.searchPlaceholder}}\\n    @selected={{@selected}}\\n    @selectedItemComponent={{@selectedItemComponent}}\\n    @tabindex={{@tabindex}}\\n    @triggerClass={{@triggerClass}}\\n    @triggerComponent={{@triggerComponent}}\\n    @triggerId={{@triggerId}}\\n    @triggerRole={{@triggerRole}}\\n    @typeAheadOptionMatcher={{@typeAheadOptionMatcher}}\\n    @verticalPosition={{@verticalPosition}}\\n    ...attributes\\n    as |option select|\\n  >\\n    {{! even if technically what is yielded here are _a list_ of options, we\\'ve decided to keep the `option` name for consistency with the existing `PowerSelect` API }}\\n    {{yield option select}}\\n  </PowerSelectMultiple>\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport anchoredPositionModifier from '../../../../../modifiers/hds-anchored-position.ts';\n\nimport { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\nimport {\n  HdsFormSuperSelectHorizontalPositionValues,\n  HdsFormSuperSelectHorizontalPositionToPlacementValues,\n} from '../types.ts';\n\nimport type { PowerSelectSignature } from 'ember-power-select/components/power-select';\nimport type { Select as PowerSelect } from 'ember-power-select/components/power-select';\nimport type { CalculatePositionResult } from 'ember-basic-dropdown/utils/calculate-position';\nimport type { HdsFormSuperSelectHorizontalPositions } from '../types.ts';\n\nexport const DEFAULT_HORIZONTAL_POSITION: string =\n  HdsFormSuperSelectHorizontalPositionValues.Left;\nexport const HORIZONTAL_POSITION_MAPPING =\n  HdsFormSuperSelectHorizontalPositionToPlacementValues;\n\nexport interface HdsFormSuperSelectMultipleBaseSignature {\n  Args: PowerSelectSignature['Args'] & {\n    showAfterOptions?: boolean;\n    afterOptionsContent?: string;\n    resultCountMessage?: string;\n    dropdownMaxWidth?: string;\n    matchTriggerWidth?: boolean;\n    isInvalid?: boolean;\n  };\n  Blocks: PowerSelectSignature['Blocks'];\n  Element: PowerSelectSignature['Element'];\n}\n\nexport default class HdsFormSuperSelectMultipleBase extends Component<HdsFormSuperSelectMultipleBaseSignature> {\n  @tracked powerSelectAPI?: PowerSelect;\n  @tracked showOnlySelected = false;\n  @tracked showNoSelectedMessage = false;\n\n  get horizontalPosition(): HdsFormSuperSelectHorizontalPositions {\n    const { horizontalPosition = DEFAULT_HORIZONTAL_POSITION } = this.args;\n    return horizontalPosition as HdsFormSuperSelectHorizontalPositions;\n  }\n\n  get selectedCount(): string {\n    return this.powerSelectAPI?.selected?.length || '0';\n  }\n\n  get optionsCount(): string {\n    return this.powerSelectAPI?.resultsCount.toString() || '0';\n  }\n\n  get resultCountMessage(): string {\n    return `${this.selectedCount} selected of ${this.optionsCount} total`;\n  }\n\n  @action calculatePosition(\n    trigger: Element,\n    content: HTMLElement\n  ): CalculatePositionResult {\n    // use `hds-anchored-position` to calculate and set position\n    // @ts-expect-error: known issue with type of invocation\n    anchoredPositionModifier(content, [trigger], {\n      placement: HORIZONTAL_POSITION_MAPPING[this.horizontalPosition],\n      offsetOptions: 4,\n      enableCollisionDetection: true,\n    });\n    // prevent PowerSelect from setting position\n    return {\n      horizontalPosition: 'auto',\n      verticalPosition: 'auto',\n      style: {},\n    };\n  }\n\n  /**\n   * This action sets the powerSelectAPI property and optionally calls a registerAPI function.\n   *\n   * @param {Object} powerSelectAPI - The API object for the PowerSelect component.\n   *\n   * If a `registerAPI` function is passed in through the component's arguments,\n   * this function will be called with the `powerSelectAPI` as its argument.\n   * This allows parent components or controllers to have access to the PowerSelect API.\n   *\n   * The `powerSelectAPI` is also stored on the component instance and used in `clearSelected`\n   */\n  @action\n  setPowerSelectAPI(powerSelectAPI: PowerSelect): void {\n    if (typeof this.args.registerAPI === 'function') {\n      this.args.registerAPI(powerSelectAPI);\n    }\n    this.powerSelectAPI = powerSelectAPI;\n  }\n\n  @action showSelected(): void {\n    this.showNoSelectedMessage = this.selectedCount === '0';\n    this.showOnlySelected = true;\n  }\n\n  @action showAll(): void {\n    this.showNoSelectedMessage = false;\n    this.showOnlySelected = false;\n  }\n\n  @action clearSelected(): void {\n    this.powerSelectAPI?.actions.select(null);\n    // show all options after clearing all selection\n    this.showNoSelectedMessage = false;\n    this.showOnlySelected = false;\n  }\n\n  /**\n   * Determine if `@afterOptionsComponent` gets displayed\n   * @param showAfterOptions\n   * @type {boolean}\n   * @default true\n   */\n  get showAfterOptions(): boolean {\n    return this.args.showAfterOptions ?? true;\n  }\n\n  // NOTE: The searchPlaceholder doesn't currently work for the multiple select\n  /**\n   * Get the search placeholder text\n   * @param searchPlaceholder\n   * @type {string}\n   * @default 'Search'\n   */\n  get searchPlaceholder(): string {\n    return this.args.searchPlaceholder ?? 'Search';\n  }\n\n  /**\n   * Get the maxWidth to apply to the dropdown\n   * @param dropdownMaxWidth\n   * @type {string}\n   * @default 'none'\n   */\n  get dropdownMaxWidthStyle(): Record<string, string> {\n    const maxWidthStyle: { [key: string]: string } = {};\n    if (this.args.dropdownMaxWidth) {\n      maxWidthStyle['--hds-form-super-select-dropdown-max-width'] =\n        this.args.dropdownMaxWidth;\n    }\n    return maxWidthStyle;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-form-super-select', 'hds-form-super-select-multiple'];\n\n    // add a class based on the @matchTriggerWidth argument or whether dropdownMaxWidth is set\n    if (this.args.matchTriggerWidth === false || this.args.dropdownMaxWidth) {\n      classes.push('hds-form-super-select--dropdown-content-auto-width');\n    }\n\n    // add a class based on the @isInvalid argument\n    if (this.args.isInvalid) {\n      classes.push(`hds-form-super-select--is-invalid`);\n    }\n\n    // add a class based on the showOnlySelected\n    if (this.showOnlySelected) {\n      classes.push(`hds-form-super-select--show-only-selected`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_HORIZONTAL_POSITION","HdsFormSuperSelectHorizontalPositionValues","Left","HORIZONTAL_POSITION_MAPPING","HdsFormSuperSelectHorizontalPositionToPlacementValues","HdsFormSuperSelectMultipleBase","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","horizontalPosition","selectedCount","powerSelectAPI","selected","length","optionsCount","resultsCount","toString","resultCountMessage","calculatePosition","trigger","content","anchoredPositionModifier","placement","offsetOptions","enableCollisionDetection","verticalPosition","style","setPowerSelectAPI","registerAPI","showSelected","showNoSelectedMessage","showOnlySelected","showAll","clearSelected","actions","select","showAfterOptions","searchPlaceholder","dropdownMaxWidthStyle","maxWidthStyle","dropdownMaxWidth","classNames","classes","matchTriggerWidth","push","isInvalid","join","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}