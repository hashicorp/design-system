{"version":3,"file":"base.js","sources":["../../../../../../src/components/hds/form/super-select/single/base.hbs","../../../../../../src/components/hds/form/super-select/single/base.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! Important: if an argument is added in base.hbs, it must also be added/processed in the Base component used in field.hbs }}\\n<div class={{this.classNames}} {{style this.dropdownMaxWidthStyle}}>\\n  <PowerSelect\\n    @afterOptionsComponent={{if\\n      this.showAfterOptions\\n      (or\\n        @afterOptionsComponent\\n        (component\\n          \\\"hds/form/super-select/after-options\\\" content=@afterOptionsContent resultCountMessage=this.resultCountMessage\\n        )\\n      )\\n    }}\\n    @ariaDescribedBy={{@ariaDescribedBy}}\\n    @ariaInvalid={{@ariaInvalid}}\\n    @ariaLabel={{@ariaLabel}}\\n    @ariaLabelledBy={{@ariaLabelledBy}}\\n    @beforeOptionsComponent={{@beforeOptionsComponent}}\\n    @calculatePosition={{if @verticalPosition undefined this.calculatePosition}}\\n    @closeOnSelect={{@closeOnSelect}}\\n    @disabled={{@disabled}}\\n    @dropdownClass={{@dropdownClass}}\\n    @extra={{@extra}}\\n    @groupComponent={{component \\\"hds/form/super-select/option-group\\\"}}\\n    @horizontalPosition={{@horizontalPosition}}\\n    @initiallyOpened={{@initiallyOpened}}\\n    @labelText={{@labelText}}\\n    @loadingMessage={{@loadingMessage}}\\n    @matcher={{@matcher}}\\n    @matchTriggerWidth={{if @dropdownMaxWidth false @matchTriggerWidth}}\\n    @noMatchesMessage={{@noMatchesMessage}}\\n    @onBlur={{@onBlur}}\\n    @onChange={{@onChange}}\\n    @onClose={{@onClose}}\\n    @onFocus={{@onFocus}}\\n    @onInput={{@onInput}}\\n    @onKeydown={{@onKeydown}}\\n    @onOpen={{@onOpen}}\\n    @options={{@options}}\\n    @optionsComponent={{@optionsComponent}}\\n    @placeholder={{@placeholder}}\\n    @placeholderComponent={{component \\\"hds/form/super-select/placeholder\\\"}}\\n    @preventScroll={{@preventScroll}}\\n    @registerAPI={{@registerAPI}}\\n    @renderInPlace={{true}}\\n    @resultCountMessage={{@resultCountMessage}}\\n    @scrollTo={{@scrollTo}}\\n    @search={{@search}}\\n    @searchEnabled={{@searchEnabled}}\\n    @searchField={{@searchField}}\\n    @searchMessage={{@searchMessage}}\\n    @searchPlaceholder={{this.searchPlaceholder}}\\n    @selected={{@selected}}\\n    @selectedItemComponent={{@selectedItemComponent}}\\n    @tabindex={{@tabindex}}\\n    @triggerClass={{@triggerClass}}\\n    @triggerComponent={{@triggerComponent}}\\n    @triggerId={{@triggerId}}\\n    @triggerRole={{@triggerRole}}\\n    @typeAheadMatcher={{@typeAheadMatcher}}\\n    @verticalPosition={{@verticalPosition}}\\n    ...attributes\\n    as |option select|\\n  >\\n    <Hds::Text::Body>{{yield option select}}</Hds::Text::Body>\\n  </PowerSelect>\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport PowerSelectComponent from 'ember-power-select/components/power-select';\nimport anchoredPositionModifier from '../../../../../modifiers/hds-anchored-position.ts';\n\nimport { action } from '@ember/object';\n\nconst DEFAULT_HORIZONTAL_POSITION = 'bottom-start';\nconst HORIZONTAL_POSITION_MAPPING = {\n  left: 'bottom-start',\n  center: 'bottom',\n  right: 'bottom-end',\n};\n\nexport default class HdsSuperSelectSingleBaseComponent extends PowerSelectComponent {\n  @action calculatePosition(trigger, content) {\n    // use `hds-anchored-position` to calculate and set position\n    anchoredPositionModifier(content, [trigger], {\n      placement: this.args.horizontalPosition\n        ? HORIZONTAL_POSITION_MAPPING[this.args.horizontalPosition]\n        : DEFAULT_HORIZONTAL_POSITION,\n      offsetOptions: 4,\n      enableCollisionDetection: true,\n    });\n    // prevent PowerSelect from setting position\n    return {};\n  }\n\n  /**\n   * Determine if `@afterOptionsComponent` gets displayed\n   * @param showAfterOptions\n   * @type {boolean}\n   * @default false\n   */\n  get showAfterOptions() {\n    return this.args.showAfterOptions ?? this.args.afterOptionsContent ?? false;\n  }\n\n  /**\n   * Get the search placeholder text\n   * @param searchPlaceholder\n   * @type {string}\n   * @default 'Search'\n   */\n  get searchPlaceholder() {\n    return this.args.searchPlaceholder ?? 'Search';\n  }\n\n  /**\n   * Get the maxWidth to apply to the dropdown\n   * @param dropdownMaxWidth\n   * @type {string}\n   * @default 'none'\n   */\n  get dropdownMaxWidthStyle() {\n    const maxWidthStyle = {};\n    if (this.args.dropdownMaxWidth) {\n      maxWidthStyle['--hds-form-super-select-dropdown-max-width'] =\n        this.args.dropdownMaxWidth;\n    }\n    return maxWidthStyle;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-form-super-select', 'hds-form-super-select-single'];\n\n    // add a class based on the @matchTriggerWidth argument or whether dropdownMaxWidth is set\n    if (this.args.matchTriggerWidth === false || this.args.dropdownMaxWidth) {\n      classes.push('hds-form-super-select--dropdown-content-auto-width');\n    }\n\n    // add a class based on the @isInvalid argument\n    if (this.args.isInvalid) {\n      classes.push(`hds-form-super-select--is-invalid`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_HORIZONTAL_POSITION","HORIZONTAL_POSITION_MAPPING","left","center","right","HdsSuperSelectSingleBaseComponent","_class","PowerSelectComponent","calculatePosition","trigger","content","anchoredPositionModifier","placement","args","horizontalPosition","offsetOptions","enableCollisionDetection","showAfterOptions","afterOptionsContent","searchPlaceholder","dropdownMaxWidthStyle","maxWidthStyle","dropdownMaxWidth","classNames","classes","matchTriggerWidth","push","isInvalid","join","_applyDecoratedDescriptor","prototype","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;AACA,eAAe,kBAAkB,CAAC,+iFAA+iF;;;ACSjlF,MAAMA,2BAA2B,GAAG,cAAc,CAAA;AAClD,MAAMC,2BAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE,cAAc;AACpBC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,KAAK,EAAE,YAAA;AACT,CAAC,CAAA;AAEoBC,IAAAA,iCAAiC,IAAAC,MAAA,GAAvC,MAAMD,iCAAiC,SAASE,oBAAoB,CAAC;AAC1EC,EAAAA,iBAAiBA,CAACC,OAAO,EAAEC,OAAO,EAAE;AAC1C;AACAC,IAAAA,wBAAwB,CAACD,OAAO,EAAE,CAACD,OAAO,CAAC,EAAE;AAC3CG,MAAAA,SAAS,EAAE,IAAI,CAACC,IAAI,CAACC,kBAAkB,GACnCb,2BAA2B,CAAC,IAAI,CAACY,IAAI,CAACC,kBAAkB,CAAC,GACzDd,2BAA2B;AAC/Be,MAAAA,aAAa,EAAE,CAAC;AAChBC,MAAAA,wBAAwB,EAAE,IAAA;AAC5B,KAAC,CAAC,CAAA;AACF;AACA,IAAA,OAAO,EAAE,CAAA;AACX,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,gBAAgBA,GAAG;AACrB,IAAA,OAAO,IAAI,CAACJ,IAAI,CAACI,gBAAgB,IAAI,IAAI,CAACJ,IAAI,CAACK,mBAAmB,IAAI,KAAK,CAAA;AAC7E,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,iBAAiBA,GAAG;AACtB,IAAA,OAAO,IAAI,CAACN,IAAI,CAACM,iBAAiB,IAAI,QAAQ,CAAA;AAChD,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,qBAAqBA,GAAG;IAC1B,MAAMC,aAAa,GAAG,EAAE,CAAA;AACxB,IAAA,IAAI,IAAI,CAACR,IAAI,CAACS,gBAAgB,EAAE;MAC9BD,aAAa,CAAC,4CAA4C,CAAC,GACzD,IAAI,CAACR,IAAI,CAACS,gBAAgB,CAAA;AAC9B,KAAA;AACA,IAAA,OAAOD,aAAa,CAAA;AACtB,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIE,UAAUA,GAAG;AACf,IAAA,IAAIC,OAAO,GAAG,CAAC,uBAAuB,EAAE,8BAA8B,CAAC,CAAA;;AAEvE;AACA,IAAA,IAAI,IAAI,CAACX,IAAI,CAACY,iBAAiB,KAAK,KAAK,IAAI,IAAI,CAACZ,IAAI,CAACS,gBAAgB,EAAE;AACvEE,MAAAA,OAAO,CAACE,IAAI,CAAC,oDAAoD,CAAC,CAAA;AACpE,KAAA;;AAEA;AACA,IAAA,IAAI,IAAI,CAACb,IAAI,CAACc,SAAS,EAAE;AACvBH,MAAAA,OAAO,CAACE,IAAI,CAAC,CAAA,iCAAA,CAAmC,CAAC,CAAA;AACnD,KAAA;AAEA,IAAA,OAAOF,OAAO,CAACI,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAC,GAAAC,yBAAA,CAAAvB,MAAA,CAAAwB,SAAA,EAAA,mBAAA,EAAA,CApEEC,MAAM,CAAAC,EAAAA,MAAA,CAAAC,wBAAA,CAAA3B,MAAA,CAAAwB,SAAA,wBAAAxB,MAAA,CAAAwB,SAAA,CAAA,GAAAxB,MAAA,EAAA;AAD6C4B,oBAAA,CAAAC,QAAA,EAAjC9B,iCAAiC,CAAA;;;;"}