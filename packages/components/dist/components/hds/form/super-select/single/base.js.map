{"version":3,"file":"base.js","sources":["../../../../../../src/components/hds/form/super-select/single/base.hbs","../../../../../../src/components/hds/form/super-select/single/base.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{! Important: if an argument is added in base.hbs, it must also be added/processed in the Base component used in field.hbs }}\\n<div class={{this.classNames}} {{style this.dropdownMaxWidthStyle}}>\\n  <PowerSelect\\n    @afterOptionsComponent={{if\\n      this.showAfterOptions\\n      (or\\n        @afterOptionsComponent\\n        (component\\n          \\\"hds/form/super-select/after-options\\\" content=@afterOptionsContent resultCountMessage=this.resultCountMessage\\n        )\\n      )\\n    }}\\n    @ariaDescribedBy={{@ariaDescribedBy}}\\n    @ariaInvalid={{@ariaInvalid}}\\n    @ariaLabel={{@ariaLabel}}\\n    @ariaLabelledBy={{@ariaLabelledBy}}\\n    @beforeOptionsComponent={{@beforeOptionsComponent}}\\n    @calculatePosition={{if @verticalPosition undefined this.calculatePosition}}\\n    @closeOnSelect={{@closeOnSelect}}\\n    @disabled={{@disabled}}\\n    @dropdownClass={{@dropdownClass}}\\n    @extra={{@extra}}\\n    @groupComponent={{component \\\"hds/form/super-select/option-group\\\"}}\\n    @horizontalPosition={{@horizontalPosition}}\\n    @initiallyOpened={{@initiallyOpened}}\\n    @labelText={{@labelText}}\\n    @loadingMessage={{@loadingMessage}}\\n    @matcher={{@matcher}}\\n    @matchTriggerWidth={{if @dropdownMaxWidth false @matchTriggerWidth}}\\n    @noMatchesMessage={{@noMatchesMessage}}\\n    @onBlur={{@onBlur}}\\n    @onChange={{@onChange}}\\n    @onClose={{@onClose}}\\n    @onFocus={{@onFocus}}\\n    @onInput={{@onInput}}\\n    @onKeydown={{@onKeydown}}\\n    @onOpen={{@onOpen}}\\n    @options={{@options}}\\n    @optionsComponent={{@optionsComponent}}\\n    @placeholder={{@placeholder}}\\n    @placeholderComponent={{component \\\"hds/form/super-select/placeholder\\\"}}\\n    @preventScroll={{@preventScroll}}\\n    @registerAPI={{this.setPowerSelectAPI}}\\n    @renderInPlace={{true}}\\n    @resultCountMessage={{@resultCountMessage}}\\n    @scrollTo={{@scrollTo}}\\n    @search={{@search}}\\n    @searchEnabled={{@searchEnabled}}\\n    @searchField={{@searchField}}\\n    @searchMessage={{@searchMessage}}\\n    @searchPlaceholder={{this.searchPlaceholder}}\\n    @selected={{@selected}}\\n    @selectedItemComponent={{@selectedItemComponent}}\\n    @tabindex={{@tabindex}}\\n    @triggerClass={{@triggerClass}}\\n    @triggerComponent={{@triggerComponent}}\\n    @triggerId={{@triggerId}}\\n    @triggerRole={{@triggerRole}}\\n    @typeAheadOptionMatcher={{@typeAheadOptionMatcher}}\\n    @verticalPosition={{@verticalPosition}}\\n    ...attributes\\n    as |option select|\\n  >\\n    <Hds::Text::Body>{{yield option select}}</Hds::Text::Body>\\n  </PowerSelect>\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport anchoredPositionModifier from '../../../../../modifiers/hds-anchored-position.ts';\n\nimport { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\nimport {\n  HdsFormSuperSelectHorizontalPositionValues,\n  HdsFormSuperSelectHorizontalPositionToPlacementValues,\n} from '../types.ts';\n\nimport type { PowerSelectSignature } from 'ember-power-select/components/power-select';\nimport type { Select as PowerSelect } from 'ember-power-select/components/power-select';\nimport type { CalculatePositionResult } from 'ember-basic-dropdown/utils/calculate-position';\nimport type { HdsFormSuperSelectHorizontalPositions } from '../types.ts';\n\nexport const DEFAULT_HORIZONTAL_POSITION: string =\n  HdsFormSuperSelectHorizontalPositionValues.Left;\nexport const HORIZONTAL_POSITION_MAPPING =\n  HdsFormSuperSelectHorizontalPositionToPlacementValues;\n\nexport interface HdsFormSuperSelectSingleBaseSignature {\n  Args: PowerSelectSignature['Args'] & {\n    showAfterOptions?: boolean;\n    afterOptionsContent?: string;\n    resultCountMessage?: string;\n    dropdownMaxWidth?: string;\n    matchTriggerWidth?: boolean;\n    isInvalid?: boolean;\n  };\n  Blocks: PowerSelectSignature['Blocks'];\n  Element: PowerSelectSignature['Element'];\n}\n\nexport default class HdsFormSuperSelectSingleBase extends Component<HdsFormSuperSelectSingleBaseSignature> {\n  @tracked powerSelectAPI?: PowerSelect;\n\n  get horizontalPosition(): HdsFormSuperSelectHorizontalPositions {\n    const { horizontalPosition = DEFAULT_HORIZONTAL_POSITION } = this.args;\n    return horizontalPosition as HdsFormSuperSelectHorizontalPositions;\n  }\n\n  get resultCountMessage(): string {\n    return `${this.powerSelectAPI?.resultsCount || 0} total`;\n  }\n\n  /**\n   * This action sets the powerSelectAPI property and optionally calls a registerAPI function.\n   *\n   * @param {Object} powerSelectAPI - The API object for the PowerSelect component.\n   *\n   * If a `registerAPI` function is passed in through the component's arguments,\n   * this function will be called with the `powerSelectAPI` as its argument.\n   * This allows parent components or controllers to have access to the PowerSelect API.\n   *\n   * The `powerSelectAPI` is also stored on the component instance and used in `clearSelected`\n   */\n  @action\n  setPowerSelectAPI(powerSelectAPI: PowerSelect): void {\n    if (typeof this.args.registerAPI === 'function') {\n      this.args.registerAPI(powerSelectAPI);\n    }\n    this.powerSelectAPI = powerSelectAPI;\n  }\n\n  @action calculatePosition(\n    trigger: Element,\n    content: HTMLElement\n  ): CalculatePositionResult {\n    // use `hds-anchored-position` to calculate and set position\n    // @ts-expect-error: known issue with type of invocation\n    anchoredPositionModifier(content, [trigger], {\n      placement: HORIZONTAL_POSITION_MAPPING[this.horizontalPosition],\n      offsetOptions: 4,\n      enableCollisionDetection: true,\n    });\n    // prevent PowerSelect from setting position\n    return {\n      horizontalPosition: 'auto',\n      verticalPosition: 'auto',\n      style: {},\n    };\n  }\n\n  /**\n   * Determine if `@afterOptionsComponent` gets displayed\n   * @param showAfterOptions\n   * @type {boolean}\n   * @default false\n   */\n  get showAfterOptions(): boolean | string {\n    return this.args.showAfterOptions ?? this.args.afterOptionsContent ?? false;\n  }\n\n  /**\n   * Get the search placeholder text\n   * @param searchPlaceholder\n   * @type {string}\n   * @default 'Search'\n   */\n  get searchPlaceholder(): string {\n    return this.args.searchPlaceholder ?? 'Search';\n  }\n\n  /**\n   * Get the maxWidth to apply to the dropdown\n   * @param dropdownMaxWidth\n   * @type {string}\n   * @default 'none'\n   */\n  get dropdownMaxWidthStyle(): Record<string, string> {\n    const maxWidthStyle: { [key: string]: string } = {};\n    if (this.args.dropdownMaxWidth) {\n      maxWidthStyle['--hds-form-super-select-dropdown-max-width'] =\n        this.args.dropdownMaxWidth;\n    }\n    return maxWidthStyle;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-form-super-select', 'hds-form-super-select-single'];\n\n    // add a class based on the @matchTriggerWidth argument or whether dropdownMaxWidth is set\n    if (this.args.matchTriggerWidth === false || this.args.dropdownMaxWidth) {\n      classes.push('hds-form-super-select--dropdown-content-auto-width');\n    }\n\n    // add a class based on the @isInvalid argument\n    if (this.args.isInvalid) {\n      classes.push(`hds-form-super-select--is-invalid`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_HORIZONTAL_POSITION","HdsFormSuperSelectHorizontalPositionValues","Left","HORIZONTAL_POSITION_MAPPING","HdsFormSuperSelectHorizontalPositionToPlacementValues","HdsFormSuperSelectSingleBase","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","horizontalPosition","resultCountMessage","powerSelectAPI","resultsCount","setPowerSelectAPI","registerAPI","calculatePosition","trigger","content","anchoredPositionModifier","placement","offsetOptions","enableCollisionDetection","verticalPosition","style","showAfterOptions","afterOptionsContent","searchPlaceholder","dropdownMaxWidthStyle","maxWidthStyle","dropdownMaxWidth","classNames","classes","matchTriggerWidth","push","isInvalid","join","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}