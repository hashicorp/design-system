{"version":3,"file":"base.js","sources":["../../../../../src/components/hds/form/masked-input/base.hbs","../../../../../src/components/hds/form/masked-input/base.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div class={{this.classNames}} {{style width=@width}}>\\n  {{#if @isMultiline}}\\n    <Hds::Form::Textarea::Base\\n      class=\\\"hds-form-masked-input__control\\\"\\n      @value={{@value}}\\n      @isInvalid={{@isInvalid}}\\n      @height={{@height}}\\n      id={{this.id}}\\n      ...attributes\\n    />\\n  {{else}}\\n    <Hds::Form::TextInput::Base\\n      class=\\\"hds-form-masked-input__control\\\"\\n      @value={{@value}}\\n      @isInvalid={{@isInvalid}}\\n      id={{this.id}}\\n      ...attributes\\n    />\\n  {{/if}}\\n  <Hds::Form::VisibilityToggle\\n    @isVisible={{this.isContentMasked}}\\n    @ariaLabel={{this.visibilityToggleAriaLabel}}\\n    @ariaMessageText={{this.visibilityToggleAriaMessageText}}\\n    aria-controls={{this.id}}\\n    class=\\\"hds-form-masked-input__toggle-button\\\"\\n    {{on \\\"click\\\" this.onClickToggleMasking}}\\n  />\\n  {{#if @hasCopyButton}}\\n    <Hds::Copy::Button\\n      class=\\\"hds-form-masked-input__copy-button\\\"\\n      @text={{this.copyButtonText}}\\n      @isIconOnly={{true}}\\n      @targetToCopy=\\\"#{{this.id}}\\\"\\n    />\\n  {{/if}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { getElementId } from '../../../../utils/hds-get-element-id.ts';\nimport type { HdsCopyButtonSignature } from '../../copy/button/index.ts';\nimport type { HdsFormVisibilityToggleSignature } from '../visibility-toggle/index.ts';\nimport { tracked } from '@glimmer/tracking';\n\nexport interface HdsFormMaskedInputBaseSignature {\n  Args: {\n    copyButtonText?: HdsCopyButtonSignature['Args']['text'];\n    hasCopyButton?: boolean;\n    isContentMasked?: boolean;\n    isInvalid?: boolean;\n    isMultiline?: boolean;\n    id?: string;\n    value?: string;\n    visibilityToggleAriaLabel?: HdsFormVisibilityToggleSignature['Args']['ariaLabel'];\n    visibilityToggleAriaMessageText?: HdsFormVisibilityToggleSignature['Args']['ariaMessageText'];\n    width?: string;\n    height?: string;\n  };\n  Element: HTMLElement;\n}\n\nexport default class HdsFormMaskedInputBase extends Component<HdsFormMaskedInputBaseSignature> {\n  @tracked isContentMasked;\n\n  constructor(owner: unknown, args: HdsFormMaskedInputBaseSignature['Args']) {\n    super(owner, args);\n    this.isContentMasked = this.args.isContentMasked ?? true;\n  }\n\n  @action\n  onClickToggleMasking(): void {\n    this.isContentMasked = !this.isContentMasked;\n  }\n\n  get id(): string {\n    return getElementId(this);\n  }\n\n  get visibilityToggleAriaLabel(): string {\n    if (this.args.visibilityToggleAriaLabel) {\n      return this.args.visibilityToggleAriaLabel;\n    } else if (this.isContentMasked) {\n      return 'Show masked content';\n    } else {\n      return 'Hide masked content';\n    }\n  }\n\n  get visibilityToggleAriaMessageText(): string {\n    if (this.args.visibilityToggleAriaMessageText) {\n      return this.args.visibilityToggleAriaMessageText;\n    } else if (this.isContentMasked) {\n      return 'Input content is hidden';\n    } else {\n      return 'Input content is visible';\n    }\n  }\n\n  get copyButtonText(): string {\n    if (this.args.copyButtonText) {\n      return this.args.copyButtonText;\n    } else {\n      return 'Copy masked content';\n    }\n  }\n\n  get classNames(): string {\n    const classes = ['hds-form-masked-input'];\n\n    if (this.isContentMasked) {\n      classes.push(`hds-form-masked-input--is-masked`);\n    } else {\n      classes.push(`hds-form-masked-input--is-not-masked`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["HdsFormMaskedInputBase","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","isContentMasked","onClickToggleMasking","id","getElementId","visibilityToggleAriaLabel","visibilityToggleAriaMessageText","copyButtonText","classNames","classes","push","join","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,unCAAunC;;;AC4BpoCA,IAAAA,sBAAsB,IAAAC,MAAA,GAA5B,MAAMD,sBAAsB,SAASE,SAAS,CAAkC;AAG7FC,EAAAA,WAAWA,CAACC,KAAc,EAAEC,IAA6C,EAAE;AACzE,IAAA,KAAK,CAACD,KAAK,EAAEC,IAAI,CAAC;AAACC,IAAAA,0BAAA,0BAAAC,WAAA,EAAA,IAAA,CAAA;IACnB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,IAAI,CAACG,eAAe,IAAI,IAAI;AAC1D;AAGAC,EAAAA,oBAAoBA,GAAS;AAC3B,IAAA,IAAI,CAACD,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;AAC9C;EAEA,IAAIE,EAAEA,GAAW;IACf,OAAOC,YAAY,CAAC,IAAI,CAAC;AAC3B;EAEA,IAAIC,yBAAyBA,GAAW;AACtC,IAAA,IAAI,IAAI,CAACP,IAAI,CAACO,yBAAyB,EAAE;AACvC,MAAA,OAAO,IAAI,CAACP,IAAI,CAACO,yBAAyB;AAC5C,KAAC,MAAM,IAAI,IAAI,CAACJ,eAAe,EAAE;AAC/B,MAAA,OAAO,qBAAqB;AAC9B,KAAC,MAAM;AACL,MAAA,OAAO,qBAAqB;AAC9B;AACF;EAEA,IAAIK,+BAA+BA,GAAW;AAC5C,IAAA,IAAI,IAAI,CAACR,IAAI,CAACQ,+BAA+B,EAAE;AAC7C,MAAA,OAAO,IAAI,CAACR,IAAI,CAACQ,+BAA+B;AAClD,KAAC,MAAM,IAAI,IAAI,CAACL,eAAe,EAAE;AAC/B,MAAA,OAAO,yBAAyB;AAClC,KAAC,MAAM;AACL,MAAA,OAAO,0BAA0B;AACnC;AACF;EAEA,IAAIM,cAAcA,GAAW;AAC3B,IAAA,IAAI,IAAI,CAACT,IAAI,CAACS,cAAc,EAAE;AAC5B,MAAA,OAAO,IAAI,CAACT,IAAI,CAACS,cAAc;AACjC,KAAC,MAAM;AACL,MAAA,OAAO,qBAAqB;AAC9B;AACF;EAEA,IAAIC,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,uBAAuB,CAAC;IAEzC,IAAI,IAAI,CAACR,eAAe,EAAE;AACxBQ,MAAAA,OAAO,CAACC,IAAI,CAAC,CAAA,gCAAA,CAAkC,CAAC;AAClD,KAAC,MAAM;AACLD,MAAAA,OAAO,CAACC,IAAI,CAAC,CAAA,oCAAA,CAAsC,CAAC;AACtD;AAEA,IAAA,OAAOD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;AAC1B;AACF,CAAC,GAAAX,WAAA,GAAAY,yBAAA,CAAAlB,MAAA,CAAAmB,SAAA,EAAA,iBAAA,EAAA,CAvDEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA;AAAA,CAAAN,CAAAA,EAAAA,yBAAA,CAAAlB,MAAA,CAAAmB,SAAA,EAOPM,sBAAAA,EAAAA,CAAAA,MAAM,GAAAC,MAAA,CAAAC,wBAAA,CAAA3B,MAAA,CAAAmB,SAAA,EAAA,sBAAA,CAAA,EAAAnB,MAAA,CAAAmB,SAAA,IAAAnB,MAAA;AARkC4B,oBAAA,CAAAC,QAAA,EAAtB9B,sBAAsB,CAAA;;;;"}