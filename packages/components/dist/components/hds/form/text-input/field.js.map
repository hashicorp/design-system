{"version":3,"file":"field.js","sources":["../../../../../src/components/hds/form/text-input/field.hbs","../../../../../src/components/hds/form/text-input/field.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<Hds::Form::Field\\n  @layout=\\\"vertical\\\"\\n  @extraAriaDescribedBy={{@extraAriaDescribedBy}}\\n  @isRequired={{@isRequired}}\\n  @isOptional={{@isOptional}}\\n  @id={{@id}}\\n  as |F|\\n>\\n  {{! Notice: the order of the elements is not relevant here, because is controlled at \\\"Hds::Form::Field\\\" component level }}\\n  {{yield (hash Label=F.Label HelperText=F.HelperText Error=F.Error)}}\\n  {{#if F.CharacterCount}}\\n    {{yield (hash CharacterCount=(component F.CharacterCount value=@value))}}\\n  {{/if}}\\n  <F.Control>\\n    <div class=\\\"hds-form-text-input__wrapper\\\" {{style width=@width}}>\\n      <Hds::Form::TextInput::Base\\n        @type={{this.type}}\\n        @value={{@value}}\\n        @isInvalid={{@isInvalid}}\\n        @isLoading={{@isLoading}}\\n        @hasVisibilityToggle={{this.showVisibilityToggle}}\\n        required={{@isRequired}}\\n        ...attributes\\n        id={{F.id}}\\n        aria-describedby={{F.ariaDescribedBy}}\\n      />\\n      {{#if this.showVisibilityToggle}}\\n        <Hds::Form::VisibilityToggle\\n          @isVisible={{this.isPasswordMasked}}\\n          @ariaLabel={{this.visibilityToggleAriaLabel}}\\n          @ariaMessageText={{this.visibilityToggleAriaMessageText}}\\n          aria-controls={{F.id}}\\n          class=\\\"hds-form-text-input__visibility-toggle\\\"\\n          {{on \\\"click\\\" this.onClickTogglePasswordReadability}}\\n        />\\n      {{/if}}\\n    </div>\\n  </F.Control>\\n</Hds::Form::Field>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nimport type { ComponentLike, WithBoundArgs } from '@glint/template';\nimport type { HdsFormFieldSignature } from '../field';\nimport type { HdsFormTextInputBaseSignature } from './base';\nimport type { HdsFormErrorSignature } from '../error';\nimport type { HdsFormHelperTextSignature } from '../helper-text';\nimport type { HdsFormLabelSignature } from '../label';\nimport type { HdsFormVisibilityToggleSignature } from '../visibility-toggle';\nimport HdsFormCharacterCountComponent from '../character-count/index.ts';\n\nexport interface HdsFormTextInputFieldSignature {\n  Args: Omit<HdsFormFieldSignature['Args'], 'contextualClass' | 'layout'> &\n    HdsFormTextInputBaseSignature['Args'] & {\n      visibilityToggleAriaLabel?: HdsFormVisibilityToggleSignature['Args']['ariaLabel'];\n      visibilityToggleAriaMessageText?: HdsFormVisibilityToggleSignature['Args']['ariaMessageText'];\n    };\n  Blocks: {\n    default: [\n      {\n        Label?: ComponentLike<HdsFormLabelSignature>;\n        HelperText?: ComponentLike<HdsFormHelperTextSignature>;\n        Error?: ComponentLike<HdsFormErrorSignature>;\n        CharacterCount?: WithBoundArgs<\n          typeof HdsFormCharacterCountComponent,\n          'value'\n        >;\n      },\n    ];\n  };\n  Element: HdsFormFieldSignature['Element'];\n}\n\nexport default class HdsFormTextInputField extends Component<HdsFormTextInputFieldSignature> {\n  @tracked isPasswordMasked = true;\n  @tracked type;\n\n  constructor(owner: unknown, args: HdsFormTextInputFieldSignature['Args']) {\n    super(owner, args);\n    this.type = this.args.type ?? 'text';\n  }\n\n  get hasVisibilityToggle(): boolean {\n    return this.args.hasVisibilityToggle ?? true;\n  }\n\n  get showVisibilityToggle(): boolean {\n    return this.args.type === 'password' && this.hasVisibilityToggle;\n  }\n\n  get visibilityToggleAriaLabel(): string | undefined {\n    if (this.args.visibilityToggleAriaLabel) {\n      return this.args.visibilityToggleAriaLabel;\n    } else if (this.isPasswordMasked) {\n      return 'Show password';\n    } else {\n      return 'Hide password';\n    }\n  }\n\n  get visibilityToggleAriaMessageText(): string | undefined {\n    if (this.args.visibilityToggleAriaMessageText) {\n      return this.args.visibilityToggleAriaMessageText;\n    } else if (this.isPasswordMasked) {\n      return 'Password is hidden';\n    } else {\n      return 'Password is visible';\n    }\n  }\n\n  @action\n  onClickTogglePasswordReadability(): void {\n    this.isPasswordMasked = !this.isPasswordMasked;\n    this.type = this.isPasswordMasked ? 'password' : 'text';\n  }\n}\n"],"names":["HdsFormTextInputField","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","_descriptor2","type","hasVisibilityToggle","showVisibilityToggle","visibilityToggleAriaLabel","isPasswordMasked","visibilityToggleAriaMessageText","onClickTogglePasswordReadability","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,0+CAA0+C;;;ACuCv/CA,IAAAA,qBAAqB,IAAAC,MAAA,GAA3B,MAAMD,qBAAqB,SAASE,SAAS,CAAiC;AAI3FC,EAAAA,WAAWA,CAACC,KAAc,EAAEC,IAA4C,EAAE;AACxE,IAAA,KAAK,CAACD,KAAK,EAAEC,IAAI,CAAC,CAAA;AAACC,IAAAA,0BAAA,2BAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAAD,IAAAA,0BAAA,eAAAE,YAAA,EAAA,IAAA,CAAA,CAAA;IACnB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,IAAI,CAACI,IAAI,IAAI,MAAM,CAAA;AACtC,GAAA;EAEA,IAAIC,mBAAmBA,GAAY;AACjC,IAAA,OAAO,IAAI,CAACL,IAAI,CAACK,mBAAmB,IAAI,IAAI,CAAA;AAC9C,GAAA;EAEA,IAAIC,oBAAoBA,GAAY;IAClC,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,KAAK,UAAU,IAAI,IAAI,CAACC,mBAAmB,CAAA;AAClE,GAAA;EAEA,IAAIE,yBAAyBA,GAAuB;AAClD,IAAA,IAAI,IAAI,CAACP,IAAI,CAACO,yBAAyB,EAAE;AACvC,MAAA,OAAO,IAAI,CAACP,IAAI,CAACO,yBAAyB,CAAA;AAC5C,KAAC,MAAM,IAAI,IAAI,CAACC,gBAAgB,EAAE;AAChC,MAAA,OAAO,eAAe,CAAA;AACxB,KAAC,MAAM;AACL,MAAA,OAAO,eAAe,CAAA;AACxB,KAAA;AACF,GAAA;EAEA,IAAIC,+BAA+BA,GAAuB;AACxD,IAAA,IAAI,IAAI,CAACT,IAAI,CAACS,+BAA+B,EAAE;AAC7C,MAAA,OAAO,IAAI,CAACT,IAAI,CAACS,+BAA+B,CAAA;AAClD,KAAC,MAAM,IAAI,IAAI,CAACD,gBAAgB,EAAE;AAChC,MAAA,OAAO,oBAAoB,CAAA;AAC7B,KAAC,MAAM;AACL,MAAA,OAAO,qBAAqB,CAAA;AAC9B,KAAA;AACF,GAAA;AAGAE,EAAAA,gCAAgCA,GAAS;AACvC,IAAA,IAAI,CAACF,gBAAgB,GAAG,CAAC,IAAI,CAACA,gBAAgB,CAAA;IAC9C,IAAI,CAACJ,IAAI,GAAG,IAAI,CAACI,gBAAgB,GAAG,UAAU,GAAG,MAAM,CAAA;AACzD,GAAA;AACF,CAAC,GAAAN,WAAA,GAAAS,yBAAA,CAAAf,MAAA,CAAAgB,SAAA,EAAA,kBAAA,EAAA,CAzCEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAoB,IAAI,CAAA;AAAA,GAAA;AAAA,CAAAd,CAAAA,EAAAA,YAAA,GAAAQ,yBAAA,CAAAf,MAAA,CAAAgB,SAAA,WAC/BC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAAN,CAAAA,EAAAA,yBAAA,CAAAf,MAAA,CAAAgB,SAAA,EAmCPM,kCAAAA,EAAAA,CAAAA,MAAM,GAAAC,MAAA,CAAAC,wBAAA,CAAAxB,MAAA,CAAAgB,SAAA,EAAA,kCAAA,CAAA,EAAAhB,MAAA,CAAAgB,SAAA,IAAAhB,MAAA,EAAA;AArCiCyB,oBAAA,CAAAC,QAAA,EAArB3B,qBAAqB,CAAA;;;;"}