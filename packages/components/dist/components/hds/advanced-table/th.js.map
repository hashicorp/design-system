{"version":3,"file":"th.js","sources":["../../../../src/components/hds/advanced-table/th.hbs","../../../../src/components/hds/advanced-table/th.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<div\\n  class={{this.classNames}}\\n  ...attributes\\n  scope={{this.scope}}\\n  role={{this.role}}\\n  aria-rowspan={{@rowspan}}\\n  aria-colspan={{@colspan}}\\n  {{did-insert this.didInsert}}\\n  aria-describedby={{@parentId}}\\n  {{style grid-row=this.rowspan grid-column=this.colspan padding-left=this.paddingLeft}}\\n>\\n  {{#if @isVisuallyHidden}}\\n    <span class=\\\"sr-only\\\">{{yield}}</span>\\n  {{else}}\\n    {{#if @tooltip}}\\n      <div class=\\\"hds-advanced-table__th-content\\\">\\n        {{#if @isExpandable}}\\n          <Hds::AdvancedTable::ThButtonExpand @labelId={{this.labelId}} />\\n        {{/if}}\\n        <span id={{this.labelId}} class=\\\"hds-typography-body-200 hds-font-weight-semibold\\\">{{yield}}</span>\\n        <Hds::AdvancedTable::ThButtonTooltip @tooltip={{@tooltip}} @labelId={{this.labelId}} />\\n      </div>\\n    {{else}}\\n      <div class=\\\"hds-advanced-table__th-content\\\">\\n        {{#if @isExpandable}}\\n          <Hds::AdvancedTable::ThButtonExpand\\n            @labelId={{this.labelId}}\\n            @onToggle={{@onClickToggle}}\\n            @isExpanded={{@isExpanded}}\\n          />\\n        {{/if}}\\n        <span class=\\\"hds-typography-body-200 hds-font-weight-semibold\\\" id={{this.labelId}}>{{yield}}</span>\\n      </div>\\n    {{/if}}\\n  {{/if}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { guidFor } from '@ember/object/internals';\nimport { assert } from '@ember/debug';\nimport { action } from '@ember/object';\n\nimport type {\n  HdsAdvancedTableHorizontalAlignment,\n  HdsAdvancedTableScope,\n} from './types.ts';\nimport { HdsAdvancedTableHorizontalAlignmentValues } from './types.ts';\nimport { didInsertGridCell, handleGridCellKeyPress } from './helpers.ts';\n\nexport const ALIGNMENTS: string[] = Object.values(\n  HdsAdvancedTableHorizontalAlignmentValues\n);\nexport const DEFAULT_ALIGN = HdsAdvancedTableHorizontalAlignmentValues.Left;\n\nexport interface HdsAdvancedTableThSignature {\n  Args: {\n    align?: HdsAdvancedTableHorizontalAlignment;\n    isVisuallyHidden?: boolean;\n    scope?: HdsAdvancedTableScope;\n    tooltip?: string;\n    rowspan?: number;\n    colspan?: number;\n    isExpandable?: boolean;\n    newLabel?: string;\n    parentId?: string;\n    onClickToggle?: () => void;\n    isExpanded?: boolean;\n    depth?: number;\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAdvancedTableTh extends Component<HdsAdvancedTableThSignature> {\n  labelId = this.args.newLabel ? this.args.newLabel : guidFor(this);\n\n  @action\n  didInsert(element: HTMLDivElement): void {\n    didInsertGridCell(element);\n    element.addEventListener('keydown', handleGridCellKeyPress);\n  }\n\n  get scope(): HdsAdvancedTableScope {\n    const { scope = 'col' } = this.args;\n    return scope;\n  }\n\n  get role(): string {\n    if (this.scope === 'col') return 'columnheader';\n    else return 'rowheader';\n  }\n\n  get align(): HdsAdvancedTableHorizontalAlignment {\n    const { align = DEFAULT_ALIGN } = this.args;\n\n    assert(\n      `@align for \"Hds::Table::Th\" must be one of the following: ${ALIGNMENTS.join(\n        ', '\n      )}; received: ${align}`,\n      ALIGNMENTS.includes(align)\n    );\n    return align;\n  }\n\n  // rowspan and colspan have to return 'auto' if not defined because otherwise the style modifier sets grid-area: undefined on the cell, which breaks the grid styles\n  get rowspan(): string {\n    if (this.args.rowspan) {\n      return `span ${this.args.rowspan}`;\n    }\n    return 'auto';\n  }\n\n  get colspan(): string | undefined {\n    if (this.args.colspan) {\n      return `span ${this.args.colspan}`;\n    }\n    return 'auto';\n  }\n\n  get paddingLeft(): string | undefined {\n    if (this.args.depth) {\n      return `calc(${this.args.depth} * 32px + 16px)`;\n    }\n  }\n\n  get classNames(): string {\n    const classes = ['hds-advanced-table__th'];\n\n    // add a class based on the @align argument\n    if (this.align) {\n      classes.push(`hds-advanced-table__th--align-${this.align}`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["ALIGNMENTS","Object","values","HdsAdvancedTableHorizontalAlignmentValues","DEFAULT_ALIGN","Left","HdsAdvancedTableTh","_class","Component","constructor","args","_defineProperty","newLabel","guidFor","didInsert","element","didInsertGridCell","addEventListener","handleGridCellKeyPress","scope","role","align","assert","join","includes","rowspan","colspan","paddingLeft","depth","classNames","classes","push","_applyDecoratedDescriptor","prototype","action","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}