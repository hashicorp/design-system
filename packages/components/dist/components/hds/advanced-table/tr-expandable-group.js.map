{"version":3,"file":"tr-expandable-group.js","sources":["../../../../src/components/hds/advanced-table/tr-expandable-group.hbs","../../../../src/components/hds/advanced-table/tr-expandable-group.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{yield\\n  (hash\\n    data=@record\\n    isExpandable=this.hasChildren\\n    id=this.id\\n    depth=this.depth\\n    onClickToggle=this.onClickToggle\\n    isExpanded=this.isExpanded\\n    parentId=@parentId\\n  )\\n}}\\n{{#if (and this.hasChildren this.isExpanded)}}\\n  <div class=\\\"hds-advanced-table__tr-expandable-group\\\">\\n    {{#each this.children as |childRecord|}}\\n      <Hds::AdvancedTable::TrExpandableGroup\\n        @record={{childRecord}}\\n        @depth={{this.childrenDepth}}\\n        @align={{@align}}\\n        @parentId={{this.id}}\\n        as |T|\\n      >\\n        {{yield\\n          (hash\\n            data=T.data\\n            isExpandable=T.isExpandable\\n            depth=T.depth\\n            onClickToggle=T.onClickToggle\\n            isExpanded=T.isExpanded\\n            parentId=T.parentId\\n            id=T.id\\n          )\\n        }}\\n      </Hds::AdvancedTable::TrExpandableGroup>\\n    {{/each}}\\n  </div>\\n{{/if}}\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\nimport Component from '@glimmer/component';\nimport { guidFor } from '@ember/object/internals';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nimport type { HdsAdvancedTableHorizontalAlignment } from './types';\nexport interface HdsAdvancedTableTrExpandableGroupSignature {\n  Args: {\n    align?: HdsAdvancedTableHorizontalAlignment;\n    depth?: number;\n    record: Record<string, unknown>;\n    parentId?: string;\n    childrenKey?: string;\n  };\n  Blocks: {\n    default?: [\n      {\n        data: Record<string, unknown>;\n        isExpandable: boolean;\n        id?: string;\n        parentId?: string;\n        depth: number;\n        onClickToggle?: () => void;\n        isExpanded?: boolean;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAdvancedTableTrExpandableGroup extends Component<HdsAdvancedTableTrExpandableGroupSignature> {\n  id = guidFor(this);\n\n  @tracked isExpanded = false;\n\n  constructor(\n    owner: unknown,\n    args: HdsAdvancedTableTrExpandableGroupSignature['Args']\n  ) {\n    super(owner, args);\n\n    this.isExpanded =\n      this.args.record['isExpanded'] &&\n      typeof this.args.record['isExpanded'] === 'boolean'\n        ? this.args.record['isExpanded']\n        : false;\n  }\n\n  get childrenKey(): string {\n    const { childrenKey = 'children' } = this.args;\n\n    return childrenKey;\n  }\n\n  get children(): Array<Record<string, unknown>> | undefined {\n    const { record } = this.args;\n\n    if (record[this.childrenKey]) {\n      const children = record[this.childrenKey];\n\n      if (Array.isArray(children)) {\n        return children;\n      }\n    }\n    return undefined;\n  }\n\n  get hasChildren(): boolean {\n    if (!this.children) return false;\n    return true;\n  }\n\n  get depth(): number {\n    const { depth = 0 } = this.args;\n\n    return depth;\n  }\n\n  get childrenDepth(): number {\n    return this.depth + 1;\n  }\n\n  @action onClickToggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n"],"names":["HdsAdvancedTableTrExpandableGroup","_class","Component","constructor","owner","args","_defineProperty","guidFor","_initializerDefineProperty","_descriptor","isExpanded","record","childrenKey","children","Array","isArray","undefined","hasChildren","depth","childrenDepth","onClickToggle","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,o/BAAo/B;;;ACiCjgCA,IAAAA,iCAAiC,IAAAC,MAAA,GAAvC,MAAMD,iCAAiC,SAASE,SAAS,CAA6C;AAKnHC,EAAAA,WAAWA,CACTC,KAAc,EACdC,IAAwD,EACxD;AACA,IAAA,KAAK,CAACD,KAAK,EAAEC,IAAI,CAAC,CAAA;AAACC,IAAAA,eAAA,CARhBC,IAAAA,EAAAA,IAAAA,EAAAA,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA;AAAAC,IAAAA,0BAAA,qBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAUhB,IAAA,IAAI,CAACC,UAAU,GACb,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,YAAY,CAAC,IAC9B,OAAO,IAAI,CAACN,IAAI,CAACM,MAAM,CAAC,YAAY,CAAC,KAAK,SAAS,GAC/C,IAAI,CAACN,IAAI,CAACM,MAAM,CAAC,YAAY,CAAC,GAC9B,KAAK,CAAA;AACb,GAAA;EAEA,IAAIC,WAAWA,GAAW;IACxB,MAAM;AAAEA,MAAAA,WAAW,GAAG,UAAA;KAAY,GAAG,IAAI,CAACP,IAAI,CAAA;AAE9C,IAAA,OAAOO,WAAW,CAAA;AACpB,GAAA;EAEA,IAAIC,QAAQA,GAA+C;IACzD,MAAM;AAAEF,MAAAA,MAAAA;KAAQ,GAAG,IAAI,CAACN,IAAI,CAAA;AAE5B,IAAA,IAAIM,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;AAC5B,MAAA,MAAMC,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC,CAAA;AAEzC,MAAA,IAAIE,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;AAC3B,QAAA,OAAOA,QAAQ,CAAA;AACjB,OAAA;AACF,KAAA;AACA,IAAA,OAAOG,SAAS,CAAA;AAClB,GAAA;EAEA,IAAIC,WAAWA,GAAY;AACzB,IAAA,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE,OAAO,KAAK,CAAA;AAChC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;EAEA,IAAIK,KAAKA,GAAW;IAClB,MAAM;AAAEA,MAAAA,KAAK,GAAG,CAAA;KAAG,GAAG,IAAI,CAACb,IAAI,CAAA;AAE/B,IAAA,OAAOa,KAAK,CAAA;AACd,GAAA;EAEA,IAAIC,aAAaA,GAAW;AAC1B,IAAA,OAAO,IAAI,CAACD,KAAK,GAAG,CAAC,CAAA;AACvB,GAAA;AAEQE,EAAAA,aAAaA,GAAG;AACtB,IAAA,IAAI,CAACV,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU,CAAA;AACpC,GAAA;AACF,CAAC,GAAAD,WAAA,GAAAY,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,EAAA,YAAA,EAAA,CApDEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAc,KAAK,CAAA;AAAA,GAAA;AAAA,CAAAN,CAAAA,EAAAA,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,EAiD1BM,eAAAA,EAAAA,CAAAA,MAAM,GAAAC,MAAA,CAAAC,wBAAA,CAAA7B,MAAA,CAAAqB,SAAA,EAAA,eAAA,CAAA,EAAArB,MAAA,CAAAqB,SAAA,IAAArB,MAAA,EAAA;AApD6C8B,oBAAA,CAAAC,QAAA,EAAjChC,iCAAiC,CAAA;;;;"}