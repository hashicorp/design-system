{"version":3,"file":"table.js","sources":["../../../../../src/components/hds/advanced-table/models/table.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport HdsAdvancedTableRow from './row.ts';\nimport { action } from '@ember/object';\nimport { tracked } from '@glimmer/tracking';\nimport HdsAdvancedTableColumn from './column.ts';\nimport { HdsAdvancedTableThSortOrderValues } from '../types.ts';\n\nimport type { HdsAdvancedTableSignature } from '../index.ts';\nimport type {\n  HdsAdvancedTableExpandState,\n  HdsAdvancedTableSortingFunction,\n} from '../types';\n\ntype HdsAdvancedTableTableArgs = Pick<\n  HdsAdvancedTableSignature['Args'],\n  | 'model'\n  | 'columns'\n  | 'childrenKey'\n  | 'hasResizableColumns'\n  | 'sortBy'\n  | 'sortOrder'\n  | 'onSort'\n>;\n\nfunction getVisibleRows(rows: HdsAdvancedTableRow[]): HdsAdvancedTableRow[] {\n  return rows.reduce((acc, row) => {\n    acc.push(row);\n\n    if (row.isOpen && row.children) {\n      acc.push(...getVisibleRows(row.children));\n    }\n\n    return acc;\n  }, [] as HdsAdvancedTableRow[]);\n}\n\nfunction getChildrenCount(rows: HdsAdvancedTableRow[]): number {\n  return rows.reduce((acc, row) => acc + 1 + getChildrenCount(row.children), 0);\n}\n\nexport default class HdsAdvancedTableTableModel {\n  @tracked columns: HdsAdvancedTableColumn[] = [];\n  @tracked rows: HdsAdvancedTableRow[] = [];\n  @tracked sortBy: HdsAdvancedTableTableArgs['sortBy'] = undefined;\n  @tracked sortOrder: HdsAdvancedTableTableArgs['sortOrder'] =\n    HdsAdvancedTableThSortOrderValues.Asc;\n\n  childrenKey?: HdsAdvancedTableTableArgs['childrenKey'];\n  hasResizableColumns?: HdsAdvancedTableTableArgs['hasResizableColumns'];\n  onSort?: HdsAdvancedTableSignature['Args']['onSort'];\n\n  constructor(args: HdsAdvancedTableTableArgs) {\n    const {\n      model,\n      columns,\n      childrenKey,\n      hasResizableColumns,\n      sortBy,\n      sortOrder,\n      onSort,\n    } = args;\n\n    this.childrenKey = childrenKey;\n    this.hasResizableColumns = hasResizableColumns;\n    this.onSort = onSort;\n\n    this.setupData({ model, columns, sortBy, sortOrder });\n  }\n\n  get sortCriteria(): string | HdsAdvancedTableSortingFunction<unknown> {\n    // get the current column\n    const currentColumn = this.columns.find(\n      (column) => column.key === this.sortBy\n    );\n\n    if (\n      // check if there is a custom sorting function associated with the current `sortBy` column (we assume the column has `isSortable`)\n      currentColumn?.sortingFunction &&\n      typeof currentColumn.sortingFunction === 'function'\n    ) {\n      return currentColumn.sortingFunction;\n    } else {\n      // otherwise fallback to the default format \"sortBy:sortOrder\"\n      return `${this.sortBy}:${this.sortOrder}`;\n    }\n  }\n\n  get sortedRows(): HdsAdvancedTableRow[] {\n    const criteria = this.sortCriteria;\n    const rows = this.rows;\n\n    if (rows.length <= 1 || criteria === undefined) {\n      return rows;\n    }\n\n    if (typeof criteria === 'function') {\n      // Use custom sort function\n      return [...rows].sort(criteria);\n    } else {\n      // Parse the criteria string format \"sortBy:sortOrder\"\n      const [sortBy, sortOrder] = criteria.split(':');\n\n      if (!sortBy) {\n        return rows;\n      }\n\n      return [...rows].sort((a, b) => {\n        const valueA = a[sortBy] as string | number | boolean;\n        const valueB = b[sortBy] as string | number | boolean;\n\n        if (valueA < valueB) {\n          return sortOrder === 'asc' ? -1 : 1;\n        }\n        if (valueA > valueB) {\n          return sortOrder === 'asc' ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n  }\n\n  get totalRowCount(): number {\n    return getChildrenCount(this.sortedRows);\n  }\n\n  get flattenedVisibleRows(): HdsAdvancedTableRow[] {\n    return getVisibleRows(this.sortedRows);\n  }\n\n  get lastVisibleRow(): HdsAdvancedTableRow | undefined {\n    return this.flattenedVisibleRows[this.flattenedVisibleRows.length - 1];\n  }\n\n  get hasRowsWithChildren(): boolean {\n    return this.rows.some((row) => row.hasChildren);\n  }\n\n  get allRowsAreOpen(): boolean {\n    return this.flattenedVisibleRows.length === this.totalRowCount;\n  }\n\n  get expandState(): HdsAdvancedTableExpandState {\n    if (this.allRowsAreOpen) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  @action\n  setupData(\n    args: Pick<\n      HdsAdvancedTableTableArgs,\n      'model' | 'columns' | 'sortBy' | 'sortOrder'\n    >\n  ) {\n    const { model, columns, sortBy, sortOrder } = args;\n\n    this.sortBy = sortBy;\n    this.sortOrder = sortOrder ?? HdsAdvancedTableThSortOrderValues.Asc;\n\n    this.columns = columns.map(\n      (column) =>\n        new HdsAdvancedTableColumn({\n          column,\n          table: this,\n        })\n    );\n\n    this.rows = model.map((row) => {\n      return new HdsAdvancedTableRow({\n        ...row,\n        childrenKey: this.childrenKey,\n        columns,\n      });\n    });\n  }\n\n  @action\n  restoreColumnWidths(): void {\n    this.columns.forEach((column) => {\n      column.width = column.originalWidth;\n    });\n  }\n\n  @action\n  setSortBy(column: string): void {\n    if (this.sortBy === column) {\n      // check to see if the column is already sorted and invert the sort order if so\n      this.sortOrder =\n        this.sortOrder === HdsAdvancedTableThSortOrderValues.Asc\n          ? HdsAdvancedTableThSortOrderValues.Desc\n          : HdsAdvancedTableThSortOrderValues.Asc;\n    } else {\n      // otherwise, set the sort order to ascending\n      this.sortBy = column;\n      this.sortOrder = HdsAdvancedTableThSortOrderValues.Asc;\n    }\n\n    if (typeof this.onSort === 'function') {\n      this.onSort(this.sortBy, this.sortOrder);\n    }\n  }\n\n  @action\n  openAll() {\n    this.rows.forEach((row) => row.openAll());\n  }\n\n  @action\n  collapseAll() {\n    this.rows.forEach((row) => row.collapseAll());\n  }\n\n  @action\n  toggleAll() {\n    if (this.allRowsAreOpen) {\n      this.collapseAll();\n    } else {\n      this.openAll();\n    }\n  }\n}\n"],"names":["getVisibleRows","rows","reduce","acc","row","push","isOpen","children","getChildrenCount","HdsAdvancedTableTableModel","g","prototype","tracked","i","void 0","undefined","HdsAdvancedTableThSortOrderValues","Asc","childrenKey","hasResizableColumns","onSort","constructor","args","model","columns","sortBy","sortOrder","setupData","sortCriteria","currentColumn","find","column","key","sortingFunction","sortedRows","criteria","length","sort","split","a","b","valueA","valueB","totalRowCount","flattenedVisibleRows","lastVisibleRow","hasRowsWithChildren","some","hasChildren","allRowsAreOpen","expandState","map","HdsAdvancedTableColumn","table","HdsAdvancedTableRow","n","action","restoreColumnWidths","forEach","width","originalWidth","setSortBy","Desc","openAll","collapseAll","toggleAll"],"mappings":"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"}