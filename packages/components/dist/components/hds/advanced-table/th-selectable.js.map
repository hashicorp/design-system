{"version":3,"file":"th-selectable.js","sources":["../../../../src/components/hds/advanced-table/th-selectable.hbs","../../../../src/components/hds/advanced-table/th-selectable.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n\\n<Hds::AdvancedTable::Th\\n  class=\\\"hds-advanced-table__th--is-selectable\\\"\\n  aria-sort={{if this.isSortable this.ariaSort}}\\n  @scope={{@selectionScope}}\\n  ...attributes\\n>\\n  <div class=\\\"hds-advanced-table__th-content\\\">\\n    <Hds::Form::Checkbox::Base\\n      id={{this._checkboxId}}\\n      class=\\\"hds-advanced-table__checkbox\\\"\\n      checked={{@isSelected}}\\n      aria-label={{this.ariaLabel}}\\n      {{did-insert this.didInsertCheckbox}}\\n      {{will-destroy this.willDestroyNode}}\\n      {{on \\\"change\\\" this.onSelectionChange}}\\n    />\\n    {{#if this.isSortable}}\\n      <span id={{this._labelId}} class=\\\"sr-only\\\">selection state</span>\\n      <Hds::AdvancedTable::ThButtonSort\\n        @sortOrder={{@sortBySelectedOrder}}\\n        @onClick={{@onClickSortBySelected}}\\n        @labelId={{this._labelId}}\\n      />\\n    {{/if}}\\n  </div>\\n</Hds::AdvancedTable::Th>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { guidFor } from '@ember/object/internals';\nimport { tracked } from '@glimmer/tracking';\n\nimport {\n  HdsAdvancedTableThSortOrderValues,\n  HdsAdvancedTableThSortOrderLabelValues,\n} from './types.ts';\nimport type { HdsFormCheckboxBaseSignature } from '../form/checkbox/base';\nimport type {\n  HdsAdvancedTableScope,\n  HdsAdvancedTableThSortOrder,\n  HdsAdvancedTableThSortOrderLabels,\n} from './types.ts';\nimport type { HdsAdvancedTableThSignature } from './th.ts';\n\nexport interface HdsAdvancedTableThSelectableSignature {\n  Args: {\n    didInsert?: (\n      checkbox: HdsFormCheckboxBaseSignature['Element'],\n      selectionKey?: string\n    ) => void;\n    isSelected?: boolean;\n    onClickSortBySelected?: () => void;\n    onSelectionChange?: (\n      target: HdsFormCheckboxBaseSignature['Element'],\n      selectionKey: string | undefined\n    ) => void;\n    selectionAriaLabelSuffix?: string;\n    selectionKey?: string;\n    selectionScope?: HdsAdvancedTableScope;\n    sortBySelectedOrder?: HdsAdvancedTableThSortOrder;\n    willDestroy?: (selectionKey?: string) => void;\n  };\n  Element: HdsAdvancedTableThSignature['Element'];\n}\n\nexport default class HdsAdvancedTableThSelectable extends Component<HdsAdvancedTableThSelectableSignature> {\n  @tracked private _isSelected = this.args.isSelected ?? false;\n\n  private _guid = guidFor(this);\n  private _checkboxId = `checkbox-${this._guid}`;\n  private _labelId = `label-${this._guid}`;\n\n  get isSortable(): boolean {\n    return this.args.onClickSortBySelected !== undefined;\n  }\n\n  get ariaLabel(): string {\n    const { selectionAriaLabelSuffix = 'row' } = this.args;\n    return `Select ${selectionAriaLabelSuffix}`;\n  }\n\n  get ariaSort(): HdsAdvancedTableThSortOrderLabels | undefined {\n    switch (this.args.sortBySelectedOrder) {\n      case HdsAdvancedTableThSortOrderValues.Asc:\n        return HdsAdvancedTableThSortOrderLabelValues.Asc;\n      case HdsAdvancedTableThSortOrderValues.Desc:\n        return HdsAdvancedTableThSortOrderLabelValues.Desc;\n      default:\n        // none is the default per the spec.\n        return HdsAdvancedTableThSortOrderLabelValues.None;\n    }\n  }\n\n  @action\n  didInsertCheckbox(checkbox: HdsFormCheckboxBaseSignature['Element']): void {\n    const { didInsert } = this.args;\n    if (typeof didInsert === 'function') {\n      didInsert(checkbox, this.args.selectionKey);\n      // we need to use a custom event listener here because changing the `checked` value via JS\n      // (and this happens with the \"select all\") doesn't trigger the `change` event\n      // and consequently the `aria-label` won't be automatically updated (and so we have to force it)\n      checkbox.addEventListener(\n        'toggle',\n        this.updateAriaLabel.bind(this),\n        true\n      );\n    }\n  }\n\n  @action\n  willDestroyNode(checkbox: HdsFormCheckboxBaseSignature['Element']): void {\n    super.willDestroy();\n    const { willDestroy } = this.args;\n    if (typeof willDestroy === 'function') {\n      willDestroy(this.args.selectionKey);\n      if (checkbox) {\n        checkbox.removeEventListener(\n          'toggle',\n          this.updateAriaLabel.bind(this),\n          true\n        );\n      }\n    }\n  }\n\n  @action\n  onSelectionChange(event: Event): void {\n    // Assert event.target as HdsFormCheckboxBaseSignature['Element'] to access the 'checked' property\n    const target = event.target as HdsFormCheckboxBaseSignature['Element'];\n    this._isSelected = target.checked;\n    const { onSelectionChange } = this.args;\n    if (typeof onSelectionChange === 'function') {\n      onSelectionChange(target, this.args.selectionKey);\n    }\n  }\n\n  updateAriaLabel(event: Event): void {\n    // Assert event.target as HTMLInputElement to access the 'checked' property\n    const target = event.target as HdsFormCheckboxBaseSignature['Element'];\n    this._isSelected = target.checked;\n  }\n}\n"],"names":["HdsAdvancedTableThSelectable","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","guidFor","_guid","isSortable","onClickSortBySelected","undefined","ariaLabel","selectionAriaLabelSuffix","ariaSort","sortBySelectedOrder","HdsAdvancedTableThSortOrderValues","Asc","HdsAdvancedTableThSortOrderLabelValues","Desc","None","didInsertCheckbox","checkbox","didInsert","selectionKey","addEventListener","updateAriaLabel","bind","willDestroyNode","willDestroy","removeEventListener","onSelectionChange","event","target","_isSelected","checked","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","isSelected","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}