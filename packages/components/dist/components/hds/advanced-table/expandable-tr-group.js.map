{"version":3,"file":"expandable-tr-group.js","sources":["../../../../src/components/hds/advanced-table/expandable-tr-group.hbs","../../../../src/components/hds/advanced-table/expandable-tr-group.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n{{yield\\n  (hash\\n    data=@record\\n    isExpandable=this.hasChildren\\n    id=this._id\\n    depth=this.depth\\n    onClickToggle=this.onClickToggle\\n    isExpanded=this._isExpanded\\n    parentId=@parentId\\n    rowIndex=this.rowIndex\\n  )\\n}}\\n{{#if (and this.hasChildren this._isExpanded)}}\\n  {{#each this.children as |childRecord|}}\\n    <Hds::AdvancedTable::ExpandableTrGroup\\n      @record={{childRecord}}\\n      @depth={{this.childrenDepth}}\\n      @align={{@align}}\\n      @parentId={{this._id}}\\n      @childrenKey={{this.childrenKey}}\\n      @rowIndex=\\\"{{this.rowIndex}}.{{this.childrenDepth}}\\\"\\n      as |T|\\n    >\\n      {{yield\\n        (hash\\n          data=T.data\\n          isExpandable=T.isExpandable\\n          depth=T.depth\\n          onClickToggle=T.onClickToggle\\n          isExpanded=T.isExpanded\\n          parentId=T.parentId\\n          id=T.id\\n        )\\n      }}\\n    </Hds::AdvancedTable::ExpandableTrGroup>\\n  {{/each}}\\n{{/if}}\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\nimport Component from '@glimmer/component';\nimport { guidFor } from '@ember/object/internals';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\n\nimport type { HdsAdvancedTableHorizontalAlignment } from './types.ts';\nimport type Owner from '@ember/owner';\nexport interface HdsAdvancedTableExpandableTrGroupSignature {\n  Args: {\n    align?: HdsAdvancedTableHorizontalAlignment;\n    depth?: number;\n    record: Record<string, unknown>;\n    parentId?: string;\n    childrenKey?: string;\n    rowIndex: number | string;\n  };\n  Blocks: {\n    default?: [\n      {\n        data: Record<string, unknown>;\n        isExpandable: boolean;\n        id?: string;\n        parentId?: string;\n        depth: number;\n        onClickToggle?: () => void;\n        isExpanded?: boolean;\n        rowIndex?: string;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAdvancedTableExpandableTrGroup extends Component<HdsAdvancedTableExpandableTrGroupSignature> {\n  @tracked private _isExpanded = false;\n\n  private _id = guidFor(this);\n\n  constructor(\n    owner: Owner,\n    args: HdsAdvancedTableExpandableTrGroupSignature['Args']\n  ) {\n    super(owner, args);\n\n    this._isExpanded =\n      this.args.record['isOpen'] &&\n      typeof this.args.record['isOpen'] === 'boolean'\n        ? this.args.record['isOpen']\n        : false;\n  }\n\n  get childrenKey(): string {\n    const { childrenKey = 'children' } = this.args;\n\n    return childrenKey;\n  }\n\n  get children(): Array<Record<string, unknown>> | undefined {\n    const { record } = this.args;\n\n    if (record[this.childrenKey]) {\n      const children = record[this.childrenKey];\n\n      if (Array.isArray(children)) {\n        return children;\n      }\n    }\n    return undefined;\n  }\n\n  get hasChildren(): boolean {\n    if (!this.children) return false;\n    return true;\n  }\n\n  get depth(): number {\n    const { depth = 0 } = this.args;\n\n    return depth;\n  }\n\n  get rowIndex(): string {\n    const { rowIndex } = this.args;\n    return `${rowIndex}`;\n  }\n\n  get childrenDepth(): number {\n    return this.depth + 1;\n  }\n\n  @action onClickToggle() {\n    this._isExpanded = !this._isExpanded;\n  }\n}\n"],"names":["HdsAdvancedTableExpandableTrGroup","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","_defineProperty","guidFor","_isExpanded","record","childrenKey","children","Array","isArray","undefined","hasChildren","depth","rowIndex","childrenDepth","onClickToggle","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,4gCAA4gC;;;ACoCzhCA,IAAAA,iCAAiC,IAAAC,MAAA,GAAvC,MAAMD,iCAAiC,SAASE,SAAS,CAA6C;AAKnHC,EAAAA,WAAWA,CACTC,KAAY,EACZC,IAAwD,EACxD;AACA,IAAA,KAAK,CAACD,KAAK,EAAEC,IAAI,CAAC;AAACC,IAAAA,0BAAA,sBAAAC,WAAA,EAAA,IAAA,CAAA;AAAAC,IAAAA,eAAA,CANPC,IAAAA,EAAAA,KAAAA,EAAAA,OAAO,CAAC,IAAI,CAAC,CAAA;AAQzB,IAAA,IAAI,CAACC,WAAW,GACd,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,QAAQ,CAAC,IAC1B,OAAO,IAAI,CAACN,IAAI,CAACM,MAAM,CAAC,QAAQ,CAAC,KAAK,SAAS,GAC3C,IAAI,CAACN,IAAI,CAACM,MAAM,CAAC,QAAQ,CAAC,GAC1B,KAAK;AACb;EAEA,IAAIC,WAAWA,GAAW;IACxB,MAAM;AAAEA,MAAAA,WAAW,GAAG;KAAY,GAAG,IAAI,CAACP,IAAI;AAE9C,IAAA,OAAOO,WAAW;AACpB;EAEA,IAAIC,QAAQA,GAA+C;IACzD,MAAM;AAAEF,MAAAA;KAAQ,GAAG,IAAI,CAACN,IAAI;AAE5B,IAAA,IAAIM,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;AAC5B,MAAA,MAAMC,QAAQ,GAAGF,MAAM,CAAC,IAAI,CAACC,WAAW,CAAC;AAEzC,MAAA,IAAIE,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;AAC3B,QAAA,OAAOA,QAAQ;AACjB;AACF;AACA,IAAA,OAAOG,SAAS;AAClB;EAEA,IAAIC,WAAWA,GAAY;AACzB,IAAA,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE,OAAO,KAAK;AAChC,IAAA,OAAO,IAAI;AACb;EAEA,IAAIK,KAAKA,GAAW;IAClB,MAAM;AAAEA,MAAAA,KAAK,GAAG;KAAG,GAAG,IAAI,CAACb,IAAI;AAE/B,IAAA,OAAOa,KAAK;AACd;EAEA,IAAIC,QAAQA,GAAW;IACrB,MAAM;AAAEA,MAAAA;KAAU,GAAG,IAAI,CAACd,IAAI;IAC9B,OAAO,CAAA,EAAGc,QAAQ,CAAE,CAAA;AACtB;EAEA,IAAIC,aAAaA,GAAW;AAC1B,IAAA,OAAO,IAAI,CAACF,KAAK,GAAG,CAAC;AACvB;AAEQG,EAAAA,aAAaA,GAAG;AACtB,IAAA,IAAI,CAACX,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;AACtC;AACF,CAAC,EAAAH,WAAA,GAAAe,yBAAA,CAAArB,MAAA,CAAAsB,SAAA,EAAA,aAAA,EAAA,CA3DEC,OAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAuB,KAAK;AAAA;AAAA,CAAAN,CAAAA,EAAAA,yBAAA,CAAArB,MAAA,CAAAsB,SAAA,EAwDnCM,eAAAA,EAAAA,CAAAA,MAAM,GAAAC,MAAA,CAAAC,wBAAA,CAAA9B,MAAA,CAAAsB,SAAA,EAAA,eAAA,CAAA,EAAAtB,MAAA,CAAAsB,SAAA,GAAAtB,MAAA;AAzD6C+B,oBAAA,CAAAC,QAAA,EAAjCjC,iCAAiC,CAAA;;;;"}