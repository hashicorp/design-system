{"version":3,"file":"th-resize-handle.js","sources":["../../../../src/components/hds/advanced-table/th-resize-handle.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { modifier } from 'ember-modifier';\n\nimport type HdsAdvancedTableColumn from './models/column.ts';\nimport type { HdsAdvancedTableSignature } from './index.ts';\n\nconst TABLE_BORDER_WIDTH = 1;\nconst KEYBOARD_RESIZE_STEP = 10;\n\nfunction calculateEffectiveDelta(\n  deltaX: number,\n  col: HdsAdvancedTableColumn,\n  startColW: number,\n  nextCol: HdsAdvancedTableColumn,\n  startNextColW: number\n): number {\n  const colMin = col.pxMinWidth ?? 0;\n  const colMax = col.pxMaxWidth ?? Infinity;\n  const nextMin = nextCol.pxMinWidth ?? 0;\n  const nextMax = nextCol.pxMaxWidth ?? Infinity;\n\n  let effectiveDelta = 0;\n\n  // expanding col, shrinking nextCol\n  if (deltaX > 0) {\n    const maxCanExpandCol = colMax - startColW;\n    const maxCanShrinkNext = startNextColW - nextMin;\n\n    effectiveDelta = Math.min(deltaX, maxCanExpandCol, maxCanShrinkNext);\n    effectiveDelta = Math.max(0, effectiveDelta);\n  }\n  // shrinking col, expanding nextCol\n  else if (deltaX < 0) {\n    const absDeltaX = -deltaX;\n    const maxCanShrinkCol = startColW - colMin;\n    const maxCanExpandNext = nextMax - startNextColW;\n\n    effectiveDelta = -Math.min(absDeltaX, maxCanShrinkCol, maxCanExpandNext);\n    effectiveDelta = Math.min(0, effectiveDelta);\n  }\n\n  return effectiveDelta;\n}\n\nexport interface HdsAdvancedTableThResizeHandleSignature {\n  Args: {\n    column: HdsAdvancedTableColumn;\n    hasResizableColumns: HdsAdvancedTableSignature['Args']['hasResizableColumns'];\n    tableHeight?: number;\n    onColumnResize?: HdsAdvancedTableSignature['Args']['onColumnResize'];\n  };\n  Blocks: {\n    default?: [];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAdvancedTableThResizeHandle extends Component<HdsAdvancedTableThResizeHandleSignature> {\n  @tracked resizing: {\n    startX: number;\n    startColumnPxWidth: number;\n    startNextColumnPxWidth?: number;\n  } | null = null;\n  @tracked private _nextColumnDelta: number = 0;\n\n  private _handleElement!: HdsAdvancedTableThResizeHandleSignature['Element'];\n  private _boundResize: (event: PointerEvent) => void;\n  private _boundStopResize: () => void;\n\n  private _registerHandleElement = modifier(\n    (element: HdsAdvancedTableThResizeHandleSignature['Element']) => {\n      this._handleElement = element;\n    }\n  );\n\n  constructor(\n    owner: unknown,\n    args: HdsAdvancedTableThResizeHandleSignature['Args']\n  ) {\n    super(owner, args);\n\n    this._boundResize = this._resize.bind(this);\n    this._boundStopResize = this._stopResize.bind(this);\n  }\n\n  get height(): string | undefined {\n    const { tableHeight } = this.args;\n\n    if (tableHeight === undefined) {\n      return;\n    }\n\n    return `${tableHeight - TABLE_BORDER_WIDTH * 2}px`;\n  }\n\n  get classNames(): string {\n    const classes = ['hds-advanced-table__th-resize-handle'];\n\n    if (this.resizing !== null) {\n      classes.push('hds-advanced-table__th-resize-handle--resizing');\n    }\n\n    return classes.join(' ');\n  }\n\n  @action\n  onColumnResize(key?: string, width?: string): void {\n    const { onColumnResize } = this.args;\n\n    if (typeof onColumnResize === 'function' && key !== undefined) {\n      onColumnResize(key, width);\n    }\n  }\n\n  @action\n  handleKeydown(event: KeyboardEvent): void {\n    if (event.key !== 'ArrowLeft' && event.key !== 'ArrowRight') {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { column } = this.args;\n    const { next: nextColumn } = column.siblings;\n\n    const currentColumnPxWidth = column.pxWidth;\n    const currentNextColumnPxWidth = nextColumn?.pxWidth;\n\n    let deltaX = 0;\n    if (event.key === 'ArrowLeft') {\n      deltaX = -KEYBOARD_RESIZE_STEP;\n    } else if (event.key === 'ArrowRight') {\n      deltaX = KEYBOARD_RESIZE_STEP;\n    }\n\n    if (deltaX === 0) return;\n\n    this._applyResizeDelta(\n      deltaX,\n      column,\n      currentColumnPxWidth ?? 0, // Current width before keyboard step\n      nextColumn,\n      currentNextColumnPxWidth ?? 0 // Current next col width before keyboard step\n    );\n\n    this._setNextColumnImposedWidthDelta(nextColumn, this._nextColumnDelta);\n\n    this.onColumnResize(column.key, column.width);\n\n    this._handleElement.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'nearest',\n    });\n  }\n\n  @action\n  startResize(event: PointerEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { column } = this.args;\n    const { next: nextColumn } = column.siblings;\n\n    this.resizing = {\n      startX: event.clientX,\n      startColumnPxWidth: column.pxWidth ?? 0,\n      startNextColumnPxWidth: nextColumn?.pxWidth ?? 0,\n    };\n\n    window.addEventListener('pointermove', this._boundResize);\n    window.addEventListener('pointerup', this._boundStopResize);\n  }\n\n  private _applyResizeDelta(\n    deltaX: number,\n    column: HdsAdvancedTableColumn,\n    startColumnPxWidth: number,\n    nextColumn?: HdsAdvancedTableColumn,\n    startNextColumnPxWidth?: number\n  ): void {\n    const canResizeNeighbor =\n      nextColumn !== undefined && startNextColumnPxWidth !== undefined;\n\n    if (canResizeNeighbor) {\n      const effectiveDelta = calculateEffectiveDelta(\n        deltaX,\n        column,\n        startColumnPxWidth,\n        nextColumn,\n        startNextColumnPxWidth\n      );\n\n      column.setPxWidth(startColumnPxWidth + effectiveDelta);\n\n      // the actual new column width may differ from the intended width due to min/max constraints.\n      const actualNewColumnWidth = column.pxWidth ?? startColumnPxWidth;\n      const actualAppliedDelta = actualNewColumnWidth - startColumnPxWidth;\n\n      nextColumn.setPxWidth(startNextColumnPxWidth - actualAppliedDelta);\n      this._nextColumnDelta = actualAppliedDelta;\n    } else {\n      column.setPxWidth(startColumnPxWidth + deltaX);\n    }\n  }\n\n  private _resize(event: PointerEvent): void {\n    if (this.resizing === null) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const { column } = this.args;\n    const { next: nextColumn } = column.siblings;\n    const { startX, startColumnPxWidth, startNextColumnPxWidth } =\n      this.resizing;\n    const deltaX = event.clientX - startX;\n\n    this._applyResizeDelta(\n      deltaX,\n      column,\n      startColumnPxWidth, // Width at the start of the drag\n      nextColumn,\n      startNextColumnPxWidth // Width of next col at the start of the drag\n    );\n  }\n\n  private _stopResize(): void {\n    window.removeEventListener('pointermove', this._boundResize);\n    window.removeEventListener('pointerup', this._boundStopResize);\n\n    const { column } = this.args;\n    const { next: nextColumn } = column.siblings;\n\n    this._setNextColumnImposedWidthDelta(nextColumn, this._nextColumnDelta);\n\n    this.onColumnResize(column.key, column.width);\n\n    this.resizing = null;\n  }\n\n  private _setNextColumnImposedWidthDelta(\n    nextColumn: HdsAdvancedTableColumn | undefined,\n    delta: number\n  ): void {\n    if (nextColumn === undefined) {\n      return;\n    }\n\n    nextColumn.imposedWidthDelta = (nextColumn.imposedWidthDelta ?? 0) + delta;\n\n    this._nextColumnDelta = 0;\n  }\n}\n"],"names":["TABLE_BORDER_WIDTH","KEYBOARD_RESIZE_STEP","calculateEffectiveDelta","deltaX","col","startColW","nextCol","startNextColW","colMin","pxMinWidth","colMax","pxMaxWidth","Infinity","nextMin","nextMax","effectiveDelta","maxCanExpandCol","maxCanShrinkNext","Math","min","max","absDeltaX","maxCanShrinkCol","maxCanExpandNext","HdsAdvancedTableThResizeHandle","Component","g","prototype","tracked","i","void 0","_handleElement","_boundResize","_boundStopResize","_registerHandleElement","modifier","element","constructor","owner","args","_resize","bind","_stopResize","height","tableHeight","undefined","classNames","classes","resizing","push","join","onColumnResize","key","width","n","action","handleKeydown","event","preventDefault","stopPropagation","column","next","nextColumn","siblings","currentColumnPxWidth","pxWidth","currentNextColumnPxWidth","_applyResizeDelta","_setNextColumnImposedWidthDelta","_nextColumnDelta","scrollIntoView","behavior","block","inline","startResize","startX","clientX","startColumnPxWidth","startNextColumnPxWidth","window","addEventListener","canResizeNeighbor","setPxWidth","actualNewColumnWidth","actualAppliedDelta","removeEventListener","delta","imposedWidthDelta","setComponentTemplate","TEMPLATE"],"mappings":"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"}