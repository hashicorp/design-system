{"version":3,"file":"index.js","sources":["../../../../src/components/hds/advanced-table/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { tracked } from '@glimmer/tracking';\nimport type { ComponentLike } from '@glint/template';\nimport { guidFor } from '@ember/object/internals';\nimport { modifier } from 'ember-modifier';\n\nimport {\n  HdsAdvancedTableDensityValues,\n  HdsAdvancedTableThSortOrderValues,\n  HdsAdvancedTableVerticalAlignmentValues,\n} from './types.ts';\nimport type {\n  HdsAdvancedTableColumn,\n  HdsAdvancedTableDensities,\n  HdsAdvancedTableHorizontalAlignment,\n  HdsAdvancedTableOnSelectionChangeSignature,\n  HdsAdvancedTableSelectableRow,\n  HdsAdvancedTableSortingFunction,\n  HdsAdvancedTableThSortOrder,\n  HdsAdvancedTableVerticalAlignment,\n  HdsAdvancedTableModel,\n} from './types.ts';\nimport type { HdsFormCheckboxBaseSignature } from '../form/checkbox/base.ts';\nimport type { HdsAdvancedTableTdSignature } from './td.ts';\nimport type { HdsAdvancedTableThSignature } from './th.ts';\nimport type { HdsAdvancedTableTrSignature } from './tr.ts';\n\nexport const DENSITIES: HdsAdvancedTableDensities[] = Object.values(\n  HdsAdvancedTableDensityValues\n);\nexport const DEFAULT_DENSITY = HdsAdvancedTableDensityValues.Medium;\n\nexport const VALIGNMENTS: HdsAdvancedTableVerticalAlignment[] = Object.values(\n  HdsAdvancedTableVerticalAlignmentValues\n);\nexport const DEFAULT_VALIGN = HdsAdvancedTableVerticalAlignmentValues.Top;\n\nexport interface HdsAdvancedTableSignature {\n  Args: {\n    align?: HdsAdvancedTableHorizontalAlignment;\n    caption?: string;\n    columns: HdsAdvancedTableColumn[];\n    density?: HdsAdvancedTableDensities;\n    identityKey?: string;\n    isSelectable?: boolean;\n    isStriped?: boolean;\n    model: HdsAdvancedTableModel;\n    onSelectionChange?: (\n      selection: HdsAdvancedTableOnSelectionChangeSignature\n    ) => void;\n    onSort?: (sortBy: string, sortOrder: HdsAdvancedTableThSortOrder) => void;\n    selectionAriaLabelSuffix?: string;\n    sortBy?: string;\n    selectableColumnKey?: string;\n    sortedMessageText?: string;\n    sortOrder?: HdsAdvancedTableThSortOrder;\n    valign?: HdsAdvancedTableVerticalAlignment;\n    hasStickyHeader?: boolean;\n    childrenKey?: string;\n  };\n  Blocks: {\n    body?: [\n      {\n        Td?: ComponentLike<HdsAdvancedTableTdSignature>;\n        Tr?: ComponentLike<HdsAdvancedTableTrSignature>;\n        Th?: ComponentLike<HdsAdvancedTableThSignature>;\n        data?: Record<string, unknown>;\n        rowIndex?: number | string;\n        isOpen?: boolean;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAdvancedTable extends Component<HdsAdvancedTableSignature> {\n  @tracked private _sortBy = this.args.sortBy ?? undefined;\n  @tracked private _sortOrder =\n    this.args.sortOrder || HdsAdvancedTableThSortOrderValues.Asc;\n  @tracked\n  private _selectAllCheckbox?: HdsFormCheckboxBaseSignature['Element'] =\n    undefined;\n  @tracked private _isSelectAllCheckboxSelected?: boolean = undefined;\n\n  private _selectableRows: HdsAdvancedTableSelectableRow[] = [];\n  private _captionId = 'caption-' + guidFor(this);\n  private _observer: IntersectionObserver | undefined = undefined;\n\n  get getSortCriteria(): string | HdsAdvancedTableSortingFunction<unknown> {\n    // get the current column\n    const currentColumn = this.args?.columns?.find(\n      (column) => column.key === this._sortBy\n    );\n    if (\n      // check if there is a custom sorting function associated with the current `sortBy` column (we assume the column has `isSortable`)\n      currentColumn?.sortingFunction &&\n      typeof currentColumn.sortingFunction === 'function'\n    ) {\n      return currentColumn.sortingFunction;\n    } else {\n      // otherwise fallback to the default format \"sortBy:sortOrder\"\n      return `${this._sortBy}:${this._sortOrder}`;\n    }\n  }\n\n  get columnWidths(): string[] | undefined {\n    const { columns } = this.args;\n    const widths: string[] = new Array(columns.length);\n    let hasCustomColumnWidth = false;\n\n    for (let i = 0; i < columns.length; i++) {\n      const column = columns[i];\n\n      if (column?.['width']) {\n        widths[i] = column.width;\n        if (!hasCustomColumnWidth) hasCustomColumnWidth = true;\n      }\n    }\n\n    return hasCustomColumnWidth ? widths : undefined;\n  }\n\n  get identityKey(): string | undefined {\n    // we have to provide a way for the consumer to pass undefined because Ember tries to interpret undefined as missing an arg and therefore falls back to the default\n    if (this.args.identityKey === 'none') {\n      return undefined;\n    } else {\n      return this.args.identityKey ?? '@identity';\n    }\n  }\n\n  get childrenKey(): string {\n    const { childrenKey = 'children' } = this.args;\n\n    return childrenKey;\n  }\n\n  get hasNestedRows(): boolean {\n    const { model, columns } = this.args;\n    let hasNestedRows = false;\n    let isSortable = false;\n    const sortableColumns: string[] = [];\n\n    // if the model is not an array, assume there are no nested rows\n    if (!Array.isArray(model)) return false;\n\n    for (const column of columns) {\n      if (column.isSortable) {\n        isSortable = true;\n        sortableColumns.push(column.label);\n      }\n    }\n\n    for (const obj of model) {\n      if (this.childrenKey in obj) {\n        hasNestedRows = true;\n        break;\n      }\n    }\n\n    if (hasNestedRows) {\n      assert(\n        `Cannot have sortable columns if there are nested rows. Sortable columns are ${sortableColumns.toString()}`,\n        !isSortable\n      );\n    }\n\n    return hasNestedRows;\n  }\n\n  get sortedMessageText(): string {\n    if (this.args.sortedMessageText) {\n      return this.args.sortedMessageText;\n    } else if (this._sortBy && this._sortOrder) {\n      // we should allow the user to define a custom value here (e.g., for i18n) - tracked with HDS-965\n      return `Sorted by ${this._sortBy} ${this._sortOrder}ending`;\n    } else {\n      return '';\n    }\n  }\n\n  get isSelectable(): boolean {\n    const { isSelectable = false } = this.args;\n\n    if (this.hasNestedRows) {\n      assert(\n        '@isSelectable must not be true if there are nested rows.',\n        !isSelectable\n      );\n      return isSelectable;\n    }\n\n    return isSelectable;\n  }\n\n  get isStriped(): boolean {\n    const { isStriped = false } = this.args;\n\n    if (this.hasNestedRows) {\n      assert(\n        '@isStriped must not be true if there are nested rows.',\n        !isStriped\n      );\n      return isStriped;\n    }\n\n    return isStriped;\n  }\n\n  get density(): HdsAdvancedTableDensities {\n    const { density = DEFAULT_DENSITY } = this.args;\n\n    assert(\n      `@density for \"Hds::Table\" must be one of the following: ${DENSITIES.join(\n        ', '\n      )}; received: ${density}`,\n      DENSITIES.includes(density)\n    );\n\n    return density;\n  }\n\n  get valign(): HdsAdvancedTableVerticalAlignment {\n    const { valign = DEFAULT_VALIGN } = this.args;\n\n    assert(\n      `@valign for \"Hds::Table\" must be one of the following: ${VALIGNMENTS.join(\n        ', '\n      )}; received: ${valign}`,\n      VALIGNMENTS.includes(valign)\n    );\n\n    return valign;\n  }\n\n  // returns the grid-template-columns CSS attribute for the grid\n  get gridTemplateColumns(): string {\n    const { isSelectable, columns } = this.args;\n\n    // if there is no custom column widths, each column is the same width and they take up the available space (except the select checkbox)\n    if (!this.columnWidths) {\n      return `${isSelectable ? 'auto ' : ''}repeat(${columns.length}, 1fr)`;\n    }\n\n    // if there is a select checkbox, the first column is 'auto' width to hug the checkbox content\n    let style = isSelectable ? 'auto' : '';\n\n    // check the custom column widths, if the current column has a custom width use the custom width. otherwise take the available space.\n    for (let i = 0; i < this.columnWidths.length; i++) {\n      style += ` ${this.columnWidths[i] ? this.columnWidths[i] : '1fr'}`;\n    }\n\n    return style;\n  }\n\n  get classNames(): string {\n    const classes = ['hds-advanced-table'];\n\n    if (this.isStriped) {\n      classes.push('hds-advanced-table--striped');\n    }\n\n    if (this.density) {\n      classes.push(`hds-advanced-table--density-${this.density}`);\n    }\n\n    if (this.valign) {\n      classes.push(`hds-advanced-table--valign-${this.valign}`);\n    }\n\n    if (this.hasNestedRows) {\n      classes.push(`hds-advanced-table--nested`);\n    }\n\n    return classes.join(' ');\n  }\n\n  private _setUpObserver = modifier((element: HTMLElement) => {\n    const stickyGridHeader = element.querySelector(\n      '.hds-advanced-table__thead.hds-advanced-table__thead--sticky'\n    );\n\n    if (stickyGridHeader !== null) {\n      this._observer = new IntersectionObserver(\n        ([element]) =>\n          element?.target.classList.toggle(\n            'hds-advanced-table__thead--is-pinned',\n            element.intersectionRatio < 1\n          ),\n        { threshold: [1] }\n      );\n\n      this._observer.observe(stickyGridHeader);\n    }\n\n    return () => {\n      if (this._observer) {\n        this._observer.disconnect();\n      }\n    };\n  });\n\n  @action\n  setSortBy(column: string): void {\n    if (this._sortBy === column) {\n      // check to see if the column is already sorted and invert the sort order if so\n      this._sortOrder =\n        this._sortOrder === HdsAdvancedTableThSortOrderValues.Asc\n          ? HdsAdvancedTableThSortOrderValues.Desc\n          : HdsAdvancedTableThSortOrderValues.Asc;\n    } else {\n      // otherwise, set the sort order to ascending\n      this._sortBy = column;\n      this._sortOrder = HdsAdvancedTableThSortOrderValues.Asc;\n    }\n\n    const { onSort } = this.args;\n\n    if (typeof onSort === 'function') {\n      onSort(this._sortBy, this._sortOrder);\n    }\n  }\n\n  onSelectionChangeCallback(\n    checkbox?: HdsFormCheckboxBaseSignature['Element'],\n    selectionKey?: string\n  ): void {\n    const { onSelectionChange } = this.args;\n\n    if (typeof onSelectionChange !== 'function') return;\n\n    onSelectionChange({\n      selectionKey: selectionKey,\n      selectionCheckboxElement: checkbox,\n      selectedRowsKeys: this._selectableRows.reduce<string[]>((acc, row) => {\n        if (row.checkbox.checked) {\n          acc.push(row.selectionKey);\n        }\n        return acc;\n      }, []),\n      selectableRowsStates: this._selectableRows.reduce(\n        (\n          acc: { selectionKey: string; isSelected: boolean | undefined }[],\n          row\n        ) => {\n          acc.push({\n            selectionKey: row.selectionKey,\n            isSelected: row.checkbox.checked,\n          });\n          return acc;\n        },\n        []\n      ),\n    });\n  }\n\n  @action\n  onSelectionAllChange(): void {\n    this._selectableRows.forEach((row) => {\n      row.checkbox.checked = this._selectAllCheckbox?.checked ?? false;\n      row.checkbox.dispatchEvent(new Event('toggle', { bubbles: false }));\n    });\n    this._isSelectAllCheckboxSelected =\n      this._selectAllCheckbox?.checked ?? false;\n    this.onSelectionChangeCallback(this._selectAllCheckbox, 'all');\n  }\n\n  @action\n  onSelectionRowChange(\n    checkbox?: HdsFormCheckboxBaseSignature['Element'],\n    selectionKey?: string\n  ): void {\n    this.setSelectAllState();\n    this.onSelectionChangeCallback(checkbox, selectionKey);\n  }\n\n  @action\n  didInsertSelectAllCheckbox(\n    checkbox: HdsFormCheckboxBaseSignature['Element']\n  ): void {\n    this._selectAllCheckbox = checkbox;\n  }\n\n  @action\n  willDestroySelectAllCheckbox(): void {\n    this._selectAllCheckbox = undefined;\n  }\n\n  @action\n  didInsertRowCheckbox(\n    checkbox: HdsFormCheckboxBaseSignature['Element'],\n    selectionKey?: string\n  ): void {\n    if (selectionKey) {\n      this._selectableRows.push({ selectionKey, checkbox });\n    }\n    this.setSelectAllState();\n  }\n\n  @action\n  willDestroyRowCheckbox(selectionKey?: string): void {\n    this._selectableRows = this._selectableRows.filter(\n      (row) => row.selectionKey !== selectionKey\n    );\n    this.setSelectAllState();\n  }\n\n  @action\n  setSelectAllState(): void {\n    if (this._selectAllCheckbox) {\n      const selectableRowsCount = this._selectableRows.length;\n      const selectedRowsCount = this._selectableRows.filter(\n        (row) => row.checkbox.checked\n      ).length;\n\n      this._selectAllCheckbox.checked =\n        selectedRowsCount === selectableRowsCount;\n      this._selectAllCheckbox.indeterminate =\n        selectedRowsCount > 0 && selectedRowsCount < selectableRowsCount;\n      this._isSelectAllCheckboxSelected = this._selectAllCheckbox.checked;\n      this._selectAllCheckbox.dispatchEvent(\n        new Event('toggle', { bubbles: false })\n      );\n    }\n  }\n}\n"],"names":["DENSITIES","Object","values","HdsAdvancedTableDensityValues","DEFAULT_DENSITY","Medium","VALIGNMENTS","HdsAdvancedTableVerticalAlignmentValues","DEFAULT_VALIGN","Top","HdsAdvancedTable","Component","g","prototype","tracked","args","sortBy","undefined","i","void 0","sortOrder","HdsAdvancedTableThSortOrderValues","Asc","_selectableRows","_captionId","guidFor","_observer","getSortCriteria","currentColumn","columns","find","column","key","_sortBy","sortingFunction","_sortOrder","columnWidths","widths","Array","length","hasCustomColumnWidth","width","identityKey","childrenKey","hasNestedRows","model","isSortable","sortableColumns","isArray","push","label","obj","assert","toString","sortedMessageText","isSelectable","isStriped","density","join","includes","valign","gridTemplateColumns","style","classNames","classes","_setUpObserver","modifier","element","stickyGridHeader","querySelector","IntersectionObserver","target","classList","toggle","intersectionRatio","threshold","observe","disconnect","setSortBy","Desc","onSort","n","action","onSelectionChangeCallback","checkbox","selectionKey","onSelectionChange","selectionCheckboxElement","selectedRowsKeys","reduce","acc","row","checked","selectableRowsStates","isSelected","onSelectionAllChange","forEach","_selectAllCheckbox","dispatchEvent","Event","bubbles","_isSelectAllCheckboxSelected","onSelectionRowChange","setSelectAllState","didInsertSelectAllCheckbox","willDestroySelectAllCheckbox","didInsertRowCheckbox","willDestroyRowCheckbox","filter","selectableRowsCount","selectedRowsCount","indeterminate","setComponentTemplate","TEMPLATE"],"mappings":"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"}