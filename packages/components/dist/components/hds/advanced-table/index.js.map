{"version":3,"file":"index.js","sources":["../../../../src/components/hds/advanced-table/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { tracked } from '@glimmer/tracking';\nimport type { WithBoundArgs } from '@glint/template';\nimport { guidFor } from '@ember/object/internals';\nimport { modifier } from 'ember-modifier';\nimport type Owner from '@ember/owner';\nimport { schedule } from '@ember/runloop';\n\nimport HdsAdvancedTableTableModel from './models/table.ts';\n\nimport {\n  HdsAdvancedTableDensityValues,\n  HdsAdvancedTableVerticalAlignmentValues,\n} from './types.ts';\nimport type {\n  HdsAdvancedTableColumn,\n  HdsAdvancedTableDensities,\n  HdsAdvancedTableHorizontalAlignment,\n  HdsAdvancedTableOnSelectionChangeSignature,\n  HdsAdvancedTableSelectableRow,\n  HdsAdvancedTableThSortOrder,\n  HdsAdvancedTableVerticalAlignment,\n  HdsAdvancedTableModel,\n  HdsAdvancedTableExpandState,\n} from './types.ts';\nimport type HdsAdvancedTableColumnType from './models/column.ts';\nimport type { HdsFormCheckboxBaseSignature } from '../form/checkbox/base.ts';\nimport type HdsAdvancedTableTd from './td.ts';\nimport type HdsAdvancedTableTh from './th.ts';\nimport type HdsAdvancedTableTr from './tr.ts';\n\nexport const DENSITIES: HdsAdvancedTableDensities[] = Object.values(\n  HdsAdvancedTableDensityValues\n);\nexport const DEFAULT_DENSITY = HdsAdvancedTableDensityValues.Medium;\n\nexport const VALIGNMENTS: HdsAdvancedTableVerticalAlignment[] = Object.values(\n  HdsAdvancedTableVerticalAlignmentValues\n);\nexport const DEFAULT_VALIGN = HdsAdvancedTableVerticalAlignmentValues.Top;\n\nconst DEFAULT_SCROLL_DIMENSIONS = {\n  bottom: '0px',\n  height: '0px',\n  left: '0px',\n  right: '0px',\n  top: '0px',\n  width: '0px',\n};\n\nconst getScrollIndicatorDimensions = (\n  scrollWrapper: HTMLDivElement,\n  theadElement: HTMLDivElement,\n  hasStickyHeader: boolean,\n  hasStickyFirstColumn: boolean\n) => {\n  const horizontalScrollBarHeight =\n    scrollWrapper.offsetHeight - scrollWrapper.clientHeight;\n  const verticalScrollBarWidth =\n    scrollWrapper.offsetWidth - scrollWrapper.clientWidth;\n\n  let leftOffset = 0;\n\n  if (hasStickyFirstColumn) {\n    const stickyColumnHeaders = theadElement.querySelectorAll(\n      '.hds-advanced-table__th--is-sticky-column'\n    );\n\n    stickyColumnHeaders?.forEach((el) => {\n      // querySelectorAll returns Elements, which don't have offsetWidth\n      // need to use offsetWidth to account for the cell borders\n      const elAsHTMLElement = el as HTMLElement;\n      leftOffset += elAsHTMLElement.offsetWidth;\n    });\n\n    // offsets the left: -1px position if there are multiple sticky columns\n    if (stickyColumnHeaders.length > 1) {\n      leftOffset -= 1;\n    }\n  }\n\n  return {\n    bottom: `${horizontalScrollBarHeight}px`,\n    height: `${scrollWrapper.offsetHeight - horizontalScrollBarHeight}px`,\n    left: `${leftOffset}px`,\n    right: `${verticalScrollBarWidth}px`,\n    top: hasStickyHeader ? `${theadElement.offsetHeight}px` : '0px',\n    width: `${scrollWrapper.offsetWidth - verticalScrollBarWidth}px`,\n  };\n};\n\nconst getStickyColumnLeftOffset = (\n  theadElement: HTMLDivElement,\n  hasRowSelection: boolean\n) => {\n  // if there is no select checkbox column, the sticky column is all the way to the left\n  if (!hasRowSelection) return '0px';\n\n  const selectableCell = theadElement.querySelector(\n    '.hds-advanced-table__th--is-selectable'\n  ) as HTMLElement;\n\n  return `${selectableCell?.offsetWidth}px`;\n};\n\nexport interface HdsAdvancedTableSignature {\n  Args: {\n    align?: HdsAdvancedTableHorizontalAlignment;\n    caption?: string;\n    columns: HdsAdvancedTableColumn[];\n    density?: HdsAdvancedTableDensities;\n    identityKey?: string;\n    isSelectable?: boolean;\n    isStriped?: boolean;\n    model: HdsAdvancedTableModel;\n    selectionAriaLabelSuffix?: string;\n    sortBy?: string;\n    selectableColumnKey?: string;\n    sortedMessageText?: string;\n    sortOrder?: HdsAdvancedTableThSortOrder;\n    valign?: HdsAdvancedTableVerticalAlignment;\n    hasResizableColumns?: boolean;\n    hasStickyHeader?: boolean;\n    hasStickyFirstColumn?: boolean;\n    childrenKey?: string;\n    maxHeight?: string;\n    onColumnResize?: (columnKey: string, newWidth?: string) => void;\n    onSelectionChange?: (\n      selection: HdsAdvancedTableOnSelectionChangeSignature\n    ) => void;\n    onSort?: (sortBy: string, sortOrder: HdsAdvancedTableThSortOrder) => void;\n  };\n  Blocks: {\n    body?: [\n      {\n        Td?: WithBoundArgs<typeof HdsAdvancedTableTd, 'align'>;\n        Tr?: WithBoundArgs<\n          typeof HdsAdvancedTableTr,\n          | 'selectionScope'\n          | 'isLastRow'\n          | 'isSelectable'\n          | 'onSelectionChange'\n          | 'didInsert'\n          | 'willDestroy'\n          | 'selectionAriaLabelSuffix'\n          | 'hasStickyColumn'\n          | 'isStickyColumnPinned'\n          | 'isParentRow'\n          | 'depth'\n          | 'displayRow'\n        >;\n        Th?: WithBoundArgs<\n          typeof HdsAdvancedTableTh,\n          | 'depth'\n          | 'isExpandable'\n          | 'isExpanded'\n          | 'newLabel'\n          | 'parentId'\n          | 'scope'\n          | 'isStickyColumn'\n          | 'isStickyColumnPinned'\n          | 'onClickToggle'\n        >;\n        data?: Record<string, unknown>;\n        rowIndex?: number | string;\n        isOpen?: HdsAdvancedTableExpandState;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAdvancedTable extends Component<HdsAdvancedTableSignature> {\n  @tracked\n  private _selectAllCheckbox?: HdsFormCheckboxBaseSignature['Element'] =\n    undefined;\n  @tracked private _isSelectAllCheckboxSelected?: boolean = undefined;\n  @tracked private _tableHeight = 0;\n  private _selectableRows: HdsAdvancedTableSelectableRow[] = [];\n  private _captionId = 'caption-' + guidFor(this);\n  private _tableModel!: HdsAdvancedTableTableModel;\n  private _scrollHandler!: (event: Event) => void;\n  private _resizeObserver!: ResizeObserver;\n  private _theadElement!: HTMLDivElement;\n\n  @tracked scrollIndicatorDimensions = DEFAULT_SCROLL_DIMENSIONS;\n  @tracked isStickyColumnPinned = false;\n  @tracked isStickyHeaderPinned = false;\n  @tracked showScrollIndicatorLeft = false;\n  @tracked showScrollIndicatorRight = false;\n  @tracked showScrollIndicatorTop = false;\n  @tracked showScrollIndicatorBottom = false;\n  @tracked stickyColumnOffset = '0px';\n\n  constructor(owner: Owner, args: HdsAdvancedTableSignature['Args']) {\n    super(owner, args);\n\n    const {\n      model,\n      columns,\n      childrenKey,\n      hasResizableColumns,\n      sortBy,\n      sortOrder,\n      hasStickyFirstColumn,\n      onSort,\n    } = args;\n\n    this._tableModel = new HdsAdvancedTableTableModel({\n      model,\n      columns,\n      childrenKey,\n      hasResizableColumns,\n      sortBy,\n      sortOrder,\n      onSort,\n    });\n\n    if (this._tableModel.hasRowsWithChildren) {\n      const sortableColumns = columns.filter((column) => column.isSortable);\n      const sortableColumnLabels = sortableColumns.map(\n        (column) => column.label\n      );\n\n      assert(\n        `Cannot have sortable columns if there are nested rows. Sortable columns are ${sortableColumnLabels.toString()}`,\n        sortableColumns.length === 0\n      );\n\n      assert(\n        'Cannot have a sticky first column if there are nested rows.',\n        !hasStickyFirstColumn\n      );\n\n      assert(\n        `Cannot have resizable columns if there are nested rows.`,\n        !hasResizableColumns\n      );\n    }\n  }\n\n  get identityKey(): string | undefined {\n    // we have to provide a way for the consumer to pass undefined because Ember tries to interpret undefined as missing an arg and therefore falls back to the default\n    if (this.args.identityKey === 'none') {\n      return undefined;\n    } else {\n      return this.args.identityKey ?? '@identity';\n    }\n  }\n\n  get childrenKey(): string {\n    const { childrenKey = 'children' } = this.args;\n\n    return childrenKey;\n  }\n\n  get hasScrollIndicator(): boolean {\n    if (this.args.hasStickyFirstColumn) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get sortedMessageText(): string {\n    const { sortedMessageText } = this.args;\n    const { sortBy, sortOrder } = this._tableModel;\n\n    if (sortedMessageText !== undefined) {\n      return sortedMessageText;\n    } else if (sortBy !== undefined && sortOrder !== undefined) {\n      // we should allow the user to define a custom value here (e.g., for i18n) - tracked with HDS-965\n      return `Sorted by ${sortBy} ${sortOrder}ending`;\n    } else {\n      return '';\n    }\n  }\n\n  get isSelectable(): boolean {\n    const { isSelectable = false } = this.args;\n\n    if (this._tableModel.hasRowsWithChildren) {\n      assert(\n        '@isSelectable must not be true if there are nested rows.',\n        !isSelectable\n      );\n      return isSelectable;\n    }\n\n    return isSelectable;\n  }\n\n  get isStriped(): boolean {\n    const { isStriped = false } = this.args;\n\n    if (this._tableModel.hasRowsWithChildren) {\n      assert(\n        '@isStriped must not be true if there are nested rows.',\n        !isStriped\n      );\n      return isStriped;\n    }\n\n    return isStriped;\n  }\n\n  get density(): HdsAdvancedTableDensities {\n    const { density = DEFAULT_DENSITY } = this.args;\n\n    assert(\n      `@density for \"Hds::Table\" must be one of the following: ${DENSITIES.join(\n        ', '\n      )}; received: ${density}`,\n      DENSITIES.includes(density)\n    );\n\n    return density;\n  }\n\n  get hasStickyHeader(): boolean {\n    if (this.args.maxHeight && this.args.hasStickyHeader !== false) {\n      return true;\n    } else if (this.args.hasStickyHeader && !this.args.maxHeight) {\n      assert('Must set @maxHeight to use @hasStickyHeader.', false);\n    }\n\n    return false;\n  }\n\n  get valign(): HdsAdvancedTableVerticalAlignment {\n    const { valign = DEFAULT_VALIGN } = this.args;\n\n    assert(\n      `@valign for \"Hds::Table\" must be one of the following: ${VALIGNMENTS.join(\n        ', '\n      )}; received: ${valign}`,\n      VALIGNMENTS.includes(valign)\n    );\n\n    return valign;\n  }\n\n  // returns the grid-template-columns CSS attribute for the grid\n  get gridTemplateColumns(): string {\n    const { isSelectable } = this.args;\n    const { columns } = this._tableModel;\n\n    const DEFAULT_COLUMN_WIDTH = '1fr';\n\n    // if there is a select checkbox, the first column has a 'min-content' width to hug the checkbox content\n    let style = isSelectable ? 'min-content ' : '';\n\n    const hasCustomColumnWidths = columns.some(\n      (column) => column.width !== undefined\n    );\n\n    if (hasCustomColumnWidths) {\n      // check the custom column widths, if the current column has a custom width use the custom width. otherwise take the available space.\n      for (let i = 0; i < columns.length; i++) {\n        style += ` ${columns[i]!.width ?? DEFAULT_COLUMN_WIDTH}`;\n      }\n    } else {\n      // if there are no custom column widths, each column is the same width and they take up the available space\n      style += `repeat(${columns.length}, ${DEFAULT_COLUMN_WIDTH})`;\n    }\n\n    return style;\n  }\n\n  get classNames(): string {\n    const classes = ['hds-advanced-table'];\n\n    if (this.isStriped) {\n      classes.push('hds-advanced-table--striped');\n    }\n\n    if (this.density) {\n      classes.push(`hds-advanced-table--density-${this.density}`);\n    }\n\n    if (this.valign) {\n      classes.push(`hds-advanced-table--valign-${this.valign}`);\n    }\n\n    if (this._tableModel.hasRowsWithChildren) {\n      classes.push(`hds-advanced-table--nested`);\n    }\n\n    return classes.join(' ');\n  }\n\n  get theadClassNames(): string {\n    const classes = ['hds-advanced-table__thead'];\n\n    if (this.hasStickyHeader) {\n      classes.push('hds-advanced-table__thead--sticky');\n    }\n\n    if (this.isStickyHeaderPinned) {\n      classes.push('hds-advanced-table__thead--is-pinned');\n    }\n\n    if (this._tableModel.hasResizableColumns) {\n      classes.push('hds-advanced-table__thead--has-resizable-columns');\n    }\n\n    return classes.join(' ');\n  }\n\n  private _setColumnWidth = modifier(\n    (element: HTMLDivElement, [column]: [HdsAdvancedTableColumnType]) => {\n      // eslint-disable-next-line ember/no-runloop\n      schedule('afterRender', () => {\n        const width = element.offsetWidth;\n\n        if (column.width === undefined) {\n          column.setPxWidth(width);\n          column.originalWidth = `${width}px`;\n        }\n      });\n    }\n  );\n\n  private _setUpScrollWrapper = modifier((element: HTMLDivElement) => {\n    this._scrollHandler = () => {\n      // 6px as a buffer so the shadow doesn't appear over the border radius on the edge of the table\n      const SCROLL_BUFFER = 6;\n\n      // left scroll indicator and sticky column styles\n      if (element.scrollLeft > SCROLL_BUFFER && !this.showScrollIndicatorLeft) {\n        if (this.args.hasStickyFirstColumn) {\n          this.isStickyColumnPinned = true;\n        }\n        this.showScrollIndicatorLeft = true;\n      } else if (element.scrollLeft === 0 && this.showScrollIndicatorLeft) {\n        this.isStickyColumnPinned = false;\n        this.showScrollIndicatorLeft = false;\n      }\n\n      // the right edge is how far the user can scroll, which is the full width of the table - the visible section of the table (also subtract the buffer)\n      const rightEdge =\n        element.scrollWidth - element.clientWidth - SCROLL_BUFFER;\n\n      // right scroll indicator\n      if (element.scrollLeft < rightEdge) {\n        this.showScrollIndicatorRight = true;\n      } else {\n        this.showScrollIndicatorRight = false;\n      }\n\n      // sticky header\n      if (element.scrollTop > 0) {\n        if (this.hasStickyHeader) {\n          this.isStickyHeaderPinned = true;\n        }\n        this.showScrollIndicatorTop = true;\n      } else {\n        if (this.hasStickyHeader) {\n          this.isStickyHeaderPinned = false;\n        }\n        this.showScrollIndicatorTop = false;\n      }\n\n      // the bottom edge is how far the user can scroll, which is the full height of the table - the visible section of the table (also subtract the buffer)\n      const bottomEdge =\n        element.scrollHeight - element.clientHeight - SCROLL_BUFFER;\n\n      // bottom scroll indicator\n      if (element.scrollTop < bottomEdge) {\n        this.showScrollIndicatorBottom = true;\n      } else {\n        this.showScrollIndicatorBottom = false;\n      }\n    };\n\n    element.addEventListener('scroll', this._scrollHandler);\n\n    const updateMeasurements = () => {\n      this._tableHeight = element.clientHeight;\n\n      this.scrollIndicatorDimensions = getScrollIndicatorDimensions(\n        element,\n        this._theadElement,\n        this.hasStickyHeader,\n        hasStickyFirstColumn\n      );\n\n      if (hasStickyFirstColumn) {\n        this.stickyColumnOffset = getStickyColumnLeftOffset(\n          this._theadElement,\n          isSelectable\n        );\n      }\n    };\n\n    const { hasStickyFirstColumn = false, isSelectable = false } = this.args;\n\n    this._resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach(() => {\n        updateMeasurements();\n      });\n    });\n\n    this._resizeObserver.observe(element);\n\n    updateMeasurements();\n\n    // on render check if should show right scroll indicator\n    if (element.clientWidth < element.scrollWidth) {\n      this.showScrollIndicatorRight = true;\n    }\n\n    // on render check if should show bottom scroll indicator\n    if (element.clientHeight < element.scrollHeight) {\n      this.showScrollIndicatorBottom = true;\n    }\n\n    return () => {\n      element.removeEventListener('scroll', this._scrollHandler);\n      this._resizeObserver.disconnect();\n    };\n  });\n\n  private _setUpThead = modifier((element: HTMLDivElement) => {\n    this._theadElement = element;\n  });\n\n  onSelectionChangeCallback(\n    checkbox?: HdsFormCheckboxBaseSignature['Element'],\n    selectionKey?: string\n  ): void {\n    const { onSelectionChange } = this.args;\n\n    if (typeof onSelectionChange !== 'function') return;\n\n    onSelectionChange({\n      selectionKey: selectionKey,\n      selectionCheckboxElement: checkbox,\n      selectedRowsKeys: this._selectableRows.reduce<string[]>((acc, row) => {\n        if (row.checkbox.checked) {\n          acc.push(row.selectionKey);\n        }\n        return acc;\n      }, []),\n      selectableRowsStates: this._selectableRows.reduce(\n        (\n          acc: { selectionKey: string; isSelected: boolean | undefined }[],\n          row\n        ) => {\n          acc.push({\n            selectionKey: row.selectionKey,\n            isSelected: row.checkbox.checked,\n          });\n          return acc;\n        },\n        []\n      ),\n    });\n  }\n\n  @action\n  setupTableModelData(): void {\n    const { columns, model, sortBy, sortOrder } = this.args;\n\n    this._tableModel.setupData({ columns, model, sortBy, sortOrder });\n  }\n\n  @action\n  onSelectionAllChange(): void {\n    this._selectableRows.forEach((row) => {\n      row.checkbox.checked = this._selectAllCheckbox?.checked ?? false;\n    });\n    this._isSelectAllCheckboxSelected =\n      this._selectAllCheckbox?.checked ?? false;\n    this.onSelectionChangeCallback(this._selectAllCheckbox, 'all');\n  }\n\n  @action\n  onSelectionRowChange(\n    checkbox?: HdsFormCheckboxBaseSignature['Element'],\n    selectionKey?: string\n  ): void {\n    this.setSelectAllState();\n    this.onSelectionChangeCallback(checkbox, selectionKey);\n  }\n\n  @action\n  didInsertSelectAllCheckbox(\n    checkbox: HdsFormCheckboxBaseSignature['Element']\n  ): void {\n    this._selectAllCheckbox = checkbox;\n  }\n\n  @action\n  willDestroySelectAllCheckbox(): void {\n    this._selectAllCheckbox = undefined;\n  }\n\n  @action\n  didInsertRowCheckbox(\n    checkbox: HdsFormCheckboxBaseSignature['Element'],\n    selectionKey?: string\n  ): void {\n    if (selectionKey) {\n      this._selectableRows.push({ selectionKey, checkbox });\n    }\n    this.setSelectAllState();\n  }\n\n  @action\n  willDestroyRowCheckbox(selectionKey?: string): void {\n    this._selectableRows = this._selectableRows.filter(\n      (row) => row.selectionKey !== selectionKey\n    );\n    this.setSelectAllState();\n  }\n\n  @action\n  setSelectAllState(): void {\n    if (this._selectAllCheckbox) {\n      const selectableRowsCount = this._selectableRows.length;\n      const selectedRowsCount = this._selectableRows.filter(\n        (row) => row.checkbox.checked\n      ).length;\n\n      this._selectAllCheckbox.checked =\n        selectedRowsCount === selectableRowsCount;\n      this._selectAllCheckbox.indeterminate =\n        selectedRowsCount > 0 && selectedRowsCount < selectableRowsCount;\n      this._isSelectAllCheckboxSelected = this._selectAllCheckbox.checked;\n    }\n  }\n}\n"],"names":["DENSITIES","Object","values","HdsAdvancedTableDensityValues","DEFAULT_DENSITY","Medium","VALIGNMENTS","HdsAdvancedTableVerticalAlignmentValues","DEFAULT_VALIGN","Top","DEFAULT_SCROLL_DIMENSIONS","bottom","height","left","right","top","width","getScrollIndicatorDimensions","scrollWrapper","theadElement","hasStickyHeader","hasStickyFirstColumn","horizontalScrollBarHeight","offsetHeight","clientHeight","verticalScrollBarWidth","offsetWidth","clientWidth","leftOffset","stickyColumnHeaders","querySelectorAll","forEach","el","elAsHTMLElement","length","getStickyColumnLeftOffset","hasRowSelection","selectableCell","querySelector","HdsAdvancedTable","Component","g","prototype","tracked","undefined","i","void 0","_selectableRows","_captionId","guidFor","_tableModel","_scrollHandler","_resizeObserver","_theadElement","constructor","owner","args","model","columns","childrenKey","hasResizableColumns","sortBy","sortOrder","onSort","HdsAdvancedTableTableModel","hasRowsWithChildren","sortableColumns","filter","column","isSortable","sortableColumnLabels","map","label","assert","toString","identityKey","hasScrollIndicator","sortedMessageText","isSelectable","isStriped","density","join","includes","maxHeight","valign","gridTemplateColumns","DEFAULT_COLUMN_WIDTH","style","hasCustomColumnWidths","some","classNames","classes","push","theadClassNames","isStickyHeaderPinned","_setColumnWidth","modifier","element","schedule","setPxWidth","originalWidth","_setUpScrollWrapper","SCROLL_BUFFER","scrollLeft","showScrollIndicatorLeft","isStickyColumnPinned","rightEdge","scrollWidth","showScrollIndicatorRight","scrollTop","showScrollIndicatorTop","bottomEdge","scrollHeight","showScrollIndicatorBottom","addEventListener","updateMeasurements","_tableHeight","scrollIndicatorDimensions","stickyColumnOffset","ResizeObserver","entries","observe","removeEventListener","disconnect","_setUpThead","onSelectionChangeCallback","checkbox","selectionKey","onSelectionChange","selectionCheckboxElement","selectedRowsKeys","reduce","acc","row","checked","selectableRowsStates","isSelected","setupTableModelData","setupData","n","action","onSelectionAllChange","_selectAllCheckbox","_isSelectAllCheckboxSelected","onSelectionRowChange","setSelectAllState","didInsertSelectAllCheckbox","willDestroySelectAllCheckbox","didInsertRowCheckbox","willDestroyRowCheckbox","selectableRowsCount","selectedRowsCount","indeterminate","setComponentTemplate","TEMPLATE"],"mappings":"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"}