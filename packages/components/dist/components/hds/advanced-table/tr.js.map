{"version":3,"file":"tr.js","sources":["../../../../src/components/hds/advanced-table/tr.hbs","../../../../src/components/hds/advanced-table/tr.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n\\n<div class={{this.classNames}} role=\\\"row\\\" ...attributes id={{this.rowId}} data-depth={{@depth}}>\\n  {{#if @isSelectable}}\\n    <Hds::AdvancedTable::ThSelectable\\n      @isSelected={{@isSelected}}\\n      @selectionScope={{@selectionScope}}\\n      @selectionKey={{this.selectionKey}}\\n      @selectionAriaLabelSuffix={{@selectionAriaLabelSuffix}}\\n      @sortBySelectedOrder={{@sortBySelectedOrder}}\\n      @didInsertCheckbox={{@didInsertCheckbox}}\\n      @willDestroy={{@willDestroy}}\\n      @onClickSortBySelected={{@onClickSortBySelected}}\\n      @onSelectionChange={{@onSelectionChange}}\\n    />\\n  {{/if}}\\n\\n  {{yield}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { guidFor } from '@ember/object/internals';\n\nimport { HdsAdvancedTableScopeValues } from './types.ts';\nimport type {\n  HdsAdvancedTableScope,\n  HdsAdvancedTableThSortOrder,\n} from './types.ts';\nimport type { HdsFormCheckboxBaseSignature } from '../form/checkbox/base';\nimport type { HdsAdvancedTableSignature } from './index.ts';\nimport type { HdsAdvancedTableThSelectableSignature } from './th-selectable.ts';\n\nexport interface BaseHdsAdvancedTableTrSignature {\n  Args: {\n    selectableColumnKey?: HdsAdvancedTableSignature['Args']['selectableColumnKey'];\n    isSelectable?: boolean;\n    isSelected?: false;\n    selectionAriaLabelSuffix?: string;\n    selectionKey?: string;\n    selectionScope?: HdsAdvancedTableScope;\n    sortBySelectedOrder?: HdsAdvancedTableThSortOrder;\n    didInsertCheckbox?: (\n      checkbox: HdsFormCheckboxBaseSignature['Element'],\n      selectionKey?: string\n    ) => void;\n    onSelectionChange?: (\n      checkbox?: HdsFormCheckboxBaseSignature['Element'],\n      selectionKey?: string\n    ) => void;\n    willDestroy?: () => void;\n    onClickSortBySelected?: HdsAdvancedTableThSelectableSignature['Args']['onClickSortBySelected'];\n    depth?: number;\n    didInsertChildRow?: (id: string) => void;\n    childRowIds?: string[];\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLDivElement;\n}\n\n// Extended interface for selectable rows\nexport interface SelectableHdsAdvancedTableTrArgs\n  extends BaseHdsAdvancedTableTrSignature {\n  Args: BaseHdsAdvancedTableTrSignature['Args'] & {\n    isSelectable: true;\n    selectionScope?: HdsAdvancedTableScopeValues.Row;\n    selectionKey: string; // Now required for selectable rows\n  };\n}\n\n// Union type to combine both possible states\nexport type HdsAdvancedTableTrSignature =\n  | BaseHdsAdvancedTableTrSignature\n  | SelectableHdsAdvancedTableTrArgs;\nexport default class HdsAdvancedTableTr extends Component<HdsAdvancedTableTrSignature> {\n  rowId = guidFor(this);\n\n  get selectionKey(): string | undefined {\n    if (this.args.isSelectable && this.args.selectionScope === 'row') {\n      assert(\n        `@selectionKey must be defined on Table::Tr or B.Tr when @isSelectable is true`,\n        this.args.selectionKey\n      );\n      return this.args.selectionKey;\n    }\n    return undefined;\n  }\n\n  get classNames(): string {\n    const classes = ['hds-advanced-table__tr'];\n\n    const { depth } = this.args;\n    if (depth) {\n      classes.push(`hds-advanced-table__tr--depth-${depth}`);\n      if (depth % 2 === 0) {\n        classes.push(`hds-advanced-table__tr--depth-even`);\n      } else {\n        classes.push(`hds-advanced-table__tr--depth-odd`);\n      }\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["HdsAdvancedTableTr","Component","constructor","args","_defineProperty","guidFor","selectionKey","isSelectable","selectionScope","assert","undefined","classNames","classes","depth","push","join","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;AACA,eAAe,kBAAkB,CAAC,2sBAA2sB;;AC4D9tB,MAAMA,kBAAkB,SAASC,SAAS,CAA8B;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,CAC7EC,IAAAA,EAAAA,OAAAA,EAAAA,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA;AAAA,GAAA;EAErB,IAAIC,YAAYA,GAAuB;AACrC,IAAA,IAAI,IAAI,CAACH,IAAI,CAACI,YAAY,IAAI,IAAI,CAACJ,IAAI,CAACK,cAAc,KAAK,KAAK,EAAE;MAChEC,MAAM,CACJ,+EAA+E,EAC/E,IAAI,CAACN,IAAI,CAACG,YACZ,CAAC,CAAA;AACD,MAAA,OAAO,IAAI,CAACH,IAAI,CAACG,YAAY,CAAA;AAC/B,KAAA;AACA,IAAA,OAAOI,SAAS,CAAA;AAClB,GAAA;EAEA,IAAIC,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,wBAAwB,CAAC,CAAA;IAE1C,MAAM;AAAEC,MAAAA,KAAAA;KAAO,GAAG,IAAI,CAACV,IAAI,CAAA;AAC3B,IAAA,IAAIU,KAAK,EAAE;AACTD,MAAAA,OAAO,CAACE,IAAI,CAAC,CAAiCD,8BAAAA,EAAAA,KAAK,EAAE,CAAC,CAAA;AACtD,MAAA,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;AACnBD,QAAAA,OAAO,CAACE,IAAI,CAAC,CAAA,kCAAA,CAAoC,CAAC,CAAA;AACpD,OAAC,MAAM;AACLF,QAAAA,OAAO,CAACE,IAAI,CAAC,CAAA,iCAAA,CAAmC,CAAC,CAAA;AACnD,OAAA;AACF,KAAA;AAEA,IAAA,OAAOF,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACC,oBAAA,CAAAC,QAAA,EA7BoBjB,kBAAkB,CAAA;;;;"}