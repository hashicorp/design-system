{"version":3,"file":"th-selectable.js","sources":["../../../../src/components/hds/table/th-selectable.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { guidFor } from '@ember/object/internals';\nimport { tracked } from '@glimmer/tracking';\nimport {\n  HdsTableThSortOrderValues,\n  HdsTableThSortOrderLabelValues,\n} from './types.ts';\nimport type { HdsFormCheckboxBaseSignature } from '../form/checkbox/base';\nimport type {\n  HdsTableScope,\n  HdsTableThSortOrder,\n  HdsTableThSortOrderLabels,\n} from './types';\nimport type { HdsTableThSignature } from './th';\nimport type Owner from '@ember/owner';\n\nexport interface HdsTableThSelectableSignature {\n  Args: {\n    didInsert?: (\n      checkbox: HdsFormCheckboxBaseSignature['Element'],\n      selectionKey?: string\n    ) => void;\n    isSelected?: boolean;\n    onClickSortBySelected?: () => void;\n    onSelectionChange?: (\n      target: HdsFormCheckboxBaseSignature['Element'],\n      selectionKey: string | undefined\n    ) => void;\n    selectionAriaLabelSuffix?: string;\n    selectionKey?: string;\n    selectionScope?: HdsTableScope;\n    sortBySelectedOrder?: HdsTableThSortOrder;\n    willDestroy?: (selectionKey?: string) => void;\n  };\n  Element: HdsTableThSignature['Element'];\n}\n\nexport default class HdsTableThSelectable extends Component<HdsTableThSelectableSignature> {\n  @tracked isSelected: boolean;\n  private _guid = guidFor(this);\n\n  private _checkboxId = `checkbox-${this._guid}`;\n  private _labelId = `label-${this._guid}`;\n\n  constructor(owner: Owner, args: HdsTableThSelectableSignature['Args']) {\n    super(owner, args);\n    this.isSelected = this.args.isSelected ?? false;\n  }\n\n  get isSortable(): boolean {\n    return this.args.onClickSortBySelected !== undefined;\n  }\n\n  get ariaLabel(): string {\n    const { selectionAriaLabelSuffix = 'row' } = this.args;\n    return `Select ${selectionAriaLabelSuffix}`;\n  }\n\n  get ariaSort(): HdsTableThSortOrderLabels | undefined {\n    switch (this.args.sortBySelectedOrder) {\n      case HdsTableThSortOrderValues.Asc:\n        return HdsTableThSortOrderLabelValues.Asc;\n      case HdsTableThSortOrderValues.Desc:\n        return HdsTableThSortOrderLabelValues.Desc;\n      default:\n        // none is the default per the spec.\n        return HdsTableThSortOrderLabelValues.None;\n    }\n  }\n\n  @action\n  didInsert(checkbox: HdsFormCheckboxBaseSignature['Element']): void {\n    const { didInsert } = this.args;\n    if (typeof didInsert === 'function') {\n      didInsert(checkbox, this.args.selectionKey);\n    }\n  }\n\n  @action\n  willDestroyNode(): void {\n    super.willDestroy();\n    const { willDestroy } = this.args;\n    if (typeof willDestroy === 'function') {\n      willDestroy(this.args.selectionKey);\n    }\n  }\n\n  @action\n  onSelectionChange(event: Event): void {\n    // Assert event.target as HdsFormCheckboxBaseSignature['Element'] to access the 'checked' property\n    const target = event.target as HdsFormCheckboxBaseSignature['Element'];\n    this.isSelected = target.checked;\n    const { onSelectionChange } = this.args;\n    if (typeof onSelectionChange === 'function') {\n      onSelectionChange(target, this.args.selectionKey);\n    }\n  }\n}\n"],"names":["HdsTableThSelectable","Component","g","prototype","tracked","i","void 0","_guid","guidFor","_checkboxId","_labelId","constructor","owner","args","isSelected","isSortable","onClickSortBySelected","undefined","ariaLabel","selectionAriaLabelSuffix","ariaSort","sortBySelectedOrder","HdsTableThSortOrderValues","Asc","HdsTableThSortOrderLabelValues","Desc","None","didInsert","checkbox","selectionKey","n","action","willDestroyNode","willDestroy","onSelectionChange","event","target","checked","setComponentTemplate","TEMPLATE"],"mappings":"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"}