{"version":3,"file":"th.js","sources":["../../../../src/components/hds/table/th.hbs","../../../../src/components/hds/table/th.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<th class={{this.classNames}} {{style width=@width minWidth=@width}} ...attributes scope={{(or @scope \\\"col\\\")}}>\\n  {{#if @isVisuallyHidden}}\\n    <span class=\\\"sr-only\\\">{{yield}}</span>\\n  {{else}}\\n    {{#if @tooltip}}\\n      <div class=\\\"hds-table__th-content\\\">\\n        <span id={{this.labelId}} class=\\\"hds-typography-body-200 hds-font-weight-semibold\\\">{{yield}}</span>\\n        <Hds::Table::ThButtonTooltip @tooltip={{@tooltip}} @labelId={{this.labelId}} />\\n      </div>\\n    {{else}}\\n      <span class=\\\"hds-typography-body-200 hds-font-weight-semibold\\\">{{yield}}</span>\\n    {{/if}}\\n  {{/if}}\\n</th>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { guidFor } from '@ember/object/internals';\nimport { assert } from '@ember/debug';\n\nconst ALIGNMENTS = ['left', 'center', 'right'];\nconst DEFAULT_ALIGN = 'left';\n\nexport default class HdsTableThComponent extends Component {\n  /**\n   * Generates a unique ID for the <span> element (\"label\")\n   *\n   * @param labelId\n   */\n  labelId = guidFor(this);\n\n  /**\n   * @param align\n   * @type {string}\n   * @default left\n   * @description Determines the text alignment of the header or cell content. Options are: \"left\", \"center\", \"right\". If no align is defined, \"left\" is used.\n   */\n  get align() {\n    let { align = DEFAULT_ALIGN } = this.args;\n\n    assert(\n      `@align for \"Hds::Table::Th\" must be one of the following: ${ALIGNMENTS.join(\n        ', '\n      )}; received: ${align}`,\n      ALIGNMENTS.includes(align)\n    );\n    return align;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    let classes = ['hds-table__th'];\n\n    // add a class based on the @align argument\n    if (this.align) {\n      classes.push(`hds-table__th--align-${this.align}`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["ALIGNMENTS","DEFAULT_ALIGN","HdsTableThComponent","Component","constructor","args","_defineProperty","guidFor","align","assert","join","includes","classNames","classes","push","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;AACA,eAAe,kBAAkB,CAAC,urBAAurB;;ACQztB,MAAMA,UAAU,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAA;AAC9C,MAAMC,aAAa,GAAG,MAAM,CAAA;AAEb,MAAMC,mBAAmB,SAASC,SAAS,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AACzD;AACF;AACA;AACA;AACA;AAJEC,IAAAA,eAAA,CAKUC,IAAAA,EAAAA,SAAAA,EAAAA,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA;AAAA,GAAA;AAEvB;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,KAAKA,GAAG;IACV,IAAI;AAAEA,MAAAA,KAAK,GAAGP,aAAAA;KAAe,GAAG,IAAI,CAACI,IAAI,CAAA;AAEzCI,IAAAA,MAAM,CACJ,CAA6DT,0DAAAA,EAAAA,UAAU,CAACU,IAAI,CAC1E,IACF,CAAC,CAAA,YAAA,EAAeF,KAAK,CAAA,CAAE,EACvBR,UAAU,CAACW,QAAQ,CAACH,KAAK,CAC3B,CAAC,CAAA;AACD,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAII,UAAUA,GAAG;AACf,IAAA,IAAIC,OAAO,GAAG,CAAC,eAAe,CAAC,CAAA;;AAE/B;IACA,IAAI,IAAI,CAACL,KAAK,EAAE;MACdK,OAAO,CAACC,IAAI,CAAC,CAAA,qBAAA,EAAwB,IAAI,CAACN,KAAK,EAAE,CAAC,CAAA;AACpD,KAAA;AAEA,IAAA,OAAOK,OAAO,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACK,oBAAA,CAAAC,QAAA,EAzCoBd,mBAAmB,CAAA;;;;"}