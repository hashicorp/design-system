{"version":3,"file":"display.js","sources":["../../../../src/components/hds/text/display.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { HdsTextSizeValues, HdsTextWeightValues } from './types.ts';\nimport type {\n  HdsTextAligns,\n  HdsTextColors,\n  HdsTextSizes,\n  HdsTextTags,\n  HdsTextWeights,\n} from './types.ts';\n\n// notice: only some combinations of size + font-weight are allowed (per design specs)\n// see: https://www.figma.com/file/oQsMzMMnynfPWpMEt91OpH/HDS-Product---Foundations?node-id=1262%3A9192\n\nexport const DEFAULT_SIZE = HdsTextSizeValues.TwoHundred;\n\n// Filter out reverse mappings from enum\n// https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\nexport const SIZES: HdsTextSizes[] = Object.values(HdsTextSizeValues).filter(\n  (v): boolean => typeof v === 'number'\n) as HdsTextSizes[];\n\nexport type HdsTextDisplayWeight = Extract<\n  HdsTextWeights,\n  'medium' | 'semibold' | 'bold'\n>;\nexport const DEFAULT_WEIGHTS_PER_SIZE: Record<\n  HdsTextSizeValues,\n  HdsTextDisplayWeight\n> = {\n  [HdsTextSizeValues.FiveHundred]: HdsTextWeightValues.Bold,\n  [HdsTextSizeValues.FourHundred]: HdsTextWeightValues.Semibold,\n  [HdsTextSizeValues.ThreeHundred]: HdsTextWeightValues.Semibold,\n  [HdsTextSizeValues.TwoHundred]: HdsTextWeightValues.Semibold,\n  [HdsTextSizeValues.OneHundred]: HdsTextWeightValues.Medium,\n};\nexport const WEIGHTS_PER_SIZE: Record<HdsTextSizes, HdsTextDisplayWeight[]> = {\n  [HdsTextSizeValues.FiveHundred]: [HdsTextWeightValues.Bold],\n  [HdsTextSizeValues.FourHundred]: [\n    HdsTextWeightValues.Medium,\n    HdsTextWeightValues.Semibold,\n    HdsTextWeightValues.Bold,\n  ],\n  [HdsTextSizeValues.ThreeHundred]: [\n    HdsTextWeightValues.Medium,\n    HdsTextWeightValues.Semibold,\n    HdsTextWeightValues.Bold,\n  ],\n  [HdsTextSizeValues.TwoHundred]: [HdsTextWeightValues.Semibold],\n  [HdsTextSizeValues.OneHundred]: [HdsTextWeightValues.Medium],\n};\n\nexport interface HdsTextDisplaySignature {\n  Args: {\n    size?: HdsTextSizes;\n    tag?: HdsTextTags;\n    weight?: HdsTextDisplayWeight;\n    align?: HdsTextAligns;\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    color?: string | HdsTextColors;\n  };\n  Element:\n    | HTMLSpanElement\n    | HTMLHeadingElement\n    | HTMLParagraphElement\n    | HTMLDivElement;\n  Blocks: {\n    default: [];\n  };\n}\n\nexport default class HdsTextDisplay extends Component<HdsTextDisplaySignature> {\n  // Sets the \"size\" for the text\n  get size(): HdsTextSizes {\n    let { size = DEFAULT_SIZE } = this.args;\n\n    // let's be a bit forgiving with the consumers\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n\n    assert(\n      `@size for \"Hds::Text::Display\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  // Sets the \"weight\" for the text\n  get weight(): HdsTextDisplayWeight {\n    let { weight } = this.args;\n\n    if (weight) {\n      const weights = WEIGHTS_PER_SIZE[this.size];\n      assert(\n        `@weight for \"Hds::Text::Display\" with @size=${\n          this.size\n        } must be one of the following: ${weights.join(\n          ', '\n        )}; received: ${weight}`,\n        weights.includes(weight)\n      );\n    } else {\n      // use the default (first item in the array)\n      weight = DEFAULT_WEIGHTS_PER_SIZE[this.size];\n    }\n\n    return weight;\n  }\n}\n"],"names":["DEFAULT_SIZE","HdsTextSizeValues","TwoHundred","SIZES","Object","values","filter","v","DEFAULT_WEIGHTS_PER_SIZE","FiveHundred","HdsTextWeightValues","Bold","FourHundred","Semibold","ThreeHundred","OneHundred","Medium","WEIGHTS_PER_SIZE","HdsTextDisplay","Component","size","args","parseInt","assert","join","includes","weight","weights","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAaA;AACA;;AAEaA,MAAAA,YAAY,GAAGC,iBAAiB,CAACC;;AAE9C;AACA;MACaC,KAAqB,GAAGC,MAAM,CAACC,MAAM,CAACJ,iBAAiB,CAAC,CAACK,MAAM,CACzEC,CAAC,IAAc,OAAOA,CAAC,KAAK,QAC/B;AAMO,MAAMC,wBAGZ,GAAG;AACF,EAAA,CAACP,iBAAiB,CAACQ,WAAW,GAAGC,mBAAmB,CAACC,IAAI;AACzD,EAAA,CAACV,iBAAiB,CAACW,WAAW,GAAGF,mBAAmB,CAACG,QAAQ;AAC7D,EAAA,CAACZ,iBAAiB,CAACa,YAAY,GAAGJ,mBAAmB,CAACG,QAAQ;AAC9D,EAAA,CAACZ,iBAAiB,CAACC,UAAU,GAAGQ,mBAAmB,CAACG,QAAQ;AAC5D,EAAA,CAACZ,iBAAiB,CAACc,UAAU,GAAGL,mBAAmB,CAACM;AACtD;AACO,MAAMC,gBAA8D,GAAG;EAC5E,CAAChB,iBAAiB,CAACQ,WAAW,GAAG,CAACC,mBAAmB,CAACC,IAAI,CAAC;AAC3D,EAAA,CAACV,iBAAiB,CAACW,WAAW,GAAG,CAC/BF,mBAAmB,CAACM,MAAM,EAC1BN,mBAAmB,CAACG,QAAQ,EAC5BH,mBAAmB,CAACC,IAAI,CACzB;AACD,EAAA,CAACV,iBAAiB,CAACa,YAAY,GAAG,CAChCJ,mBAAmB,CAACM,MAAM,EAC1BN,mBAAmB,CAACG,QAAQ,EAC5BH,mBAAmB,CAACC,IAAI,CACzB;EACD,CAACV,iBAAiB,CAACC,UAAU,GAAG,CAACQ,mBAAmB,CAACG,QAAQ,CAAC;AAC9D,EAAA,CAACZ,iBAAiB,CAACc,UAAU,GAAG,CAACL,mBAAmB,CAACM,MAAM;AAC7D;AAqBe,MAAME,cAAc,SAASC,SAAS,CAA0B;AAC7E;EACA,IAAIC,IAAIA,GAAiB;IACvB,IAAI;AAAEA,MAAAA,IAAI,GAAGpB;KAAc,GAAG,IAAI,CAACqB,IAAI;;AAEvC;AACA,IAAA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;AAC5BA,MAAAA,IAAI,GAAGE,QAAQ,CAACF,IAAI,EAAE,EAAE,CAAC;AAC3B;AAEAG,IAAAA,MAAM,CACJ,CAAgEpB,6DAAAA,EAAAA,KAAK,CAACqB,IAAI,CACxE,IACF,CAAC,CAAA,YAAA,EAAeJ,IAAI,CAAA,CAAE,EACtBjB,KAAK,CAACsB,QAAQ,CAACL,IAAI,CACrB,CAAC;AAED,IAAA,OAAOA,IAAI;AACb;;AAEA;EACA,IAAIM,MAAMA,GAAyB;IACjC,IAAI;AAAEA,MAAAA;KAAQ,GAAG,IAAI,CAACL,IAAI;AAE1B,IAAA,IAAIK,MAAM,EAAE;AACV,MAAA,MAAMC,OAAO,GAAGV,gBAAgB,CAAC,IAAI,CAACG,IAAI,CAAC;MAC3CG,MAAM,CACJ,+CACE,IAAI,CAACH,IAAI,CACuBO,+BAAAA,EAAAA,OAAO,CAACH,IAAI,CAC5C,IACF,CAAC,CAAeE,YAAAA,EAAAA,MAAM,EAAE,EACxBC,OAAO,CAACF,QAAQ,CAACC,MAAM,CACzB,CAAC;AACH,KAAC,MAAM;AACL;AACAA,MAAAA,MAAM,GAAGlB,wBAAwB,CAAC,IAAI,CAACY,IAAI,CAAC;AAC9C;AAEA,IAAA,OAAOM,MAAM;AACf;AACF;AAACE,oBAAA,CAAAC,QAAA,EAzCoBX,cAAc,CAAA;;;;"}