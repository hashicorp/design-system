{"version":3,"file":"index.js","sources":["../../../../src/components/hds/text/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { HdsTextAlignValues, HdsTextColorValues } from './types.ts';\nimport type {\n  HdsTextAligns,\n  HdsTextColors,\n  HdsTextGroups,\n  HdsTextSizes,\n  HdsTextTags,\n  HdsTextWeights,\n} from './types.ts';\n\nexport const COLORS: HdsTextColors[] = Object.values(HdsTextColorValues);\nexport const ALIGNS: HdsTextAligns[] = Object.values(HdsTextAlignValues);\n\n// A union of all types in the HTMLElementTagNameMap interface\ntype AvailableElements = HTMLElementTagNameMap[keyof HTMLElementTagNameMap];\n\nexport interface HdsTextSignature {\n  Args: {\n    size: HdsTextSizes;\n    tag?: HdsTextTags;\n    weight?: HdsTextWeights;\n    align?: HdsTextAligns;\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    color?: HdsTextColors | string | undefined;\n    group: HdsTextGroups;\n  };\n  Element: AvailableElements;\n  Blocks: {\n    default: [];\n  };\n}\n\nexport default class HdsText extends Component<HdsTextSignature> {\n  // Get a tag to render based on the `@tag` argument passed or the value of `this.size` (via mapping)\n  get componentTag(): HdsTextTags {\n    const { tag = 'span' } = this.args;\n\n    return tag;\n  }\n\n  // Sets the \"variant\" (style) for the text\n  get variant(): string {\n    const { group, size } = this.args;\n\n    // notice: for performance reasons we don't do any other extra check on these values\n    // we assume they've already been validated by the \"parent\" components\n    return `${group}-${size}`;\n  }\n\n  // Sets the alignment of the text\n  get align(): HdsTextAligns | undefined {\n    const { align } = this.args;\n\n    if (align) {\n      assert(\n        `@align for \"Hds::Text\" must be one of the following: ${ALIGNS.join(\n          ', '\n        )}; received: ${align}`,\n        ALIGNS.includes(align)\n      );\n    }\n\n    return align;\n  }\n\n  // Sets the color of the text as pre-defined value\n  get predefinedColor(): HdsTextColors | undefined {\n    const { color } = this.args;\n\n    if (color && COLORS.includes(color as HdsTextColors)) {\n      return color as HdsTextColors;\n    } else {\n      return undefined;\n    }\n  }\n\n  // Sets the color of the text as custom value (via inline style)\n  get customColor(): string | undefined {\n    const { color } = this.args;\n\n    if (color && !COLORS.includes(color as HdsTextColors)) {\n      return color as HdsTextColors;\n    } else {\n      return undefined;\n    }\n  }\n\n  get classNames(): string {\n    const classes = ['hds-text'];\n\n    // add a (helper) class based on the \"group + size\" variant\n    classes.push(`hds-typography-${this.variant}`);\n\n    // add a (helper) class based on the @weight argument\n    if (this.args.weight) {\n      classes.push(`hds-font-weight-${this.args.weight}`);\n    }\n\n    // add a class based on the @align argument\n    if (this.align) {\n      classes.push(`hds-text--align-${this.align}`);\n    }\n\n    // add a (helper) class based on the @color argument (if pre-defined)\n    if (this.predefinedColor) {\n      classes.push(`hds-foreground-${this.predefinedColor}`);\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["COLORS","Object","values","HdsTextColorValues","ALIGNS","HdsTextAlignValues","HdsText","Component","componentTag","tag","args","variant","group","size","align","assert","join","includes","predefinedColor","color","undefined","customColor","classNames","classes","push","weight","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAcO,MAAMA,MAAuB,GAAGC,MAAM,CAACC,MAAM,CAACC,kBAAkB;AAChE,MAAMC,MAAuB,GAAGH,MAAM,CAACC,MAAM,CAACG,kBAAkB;;AAEvE;;AAmBe,MAAMC,OAAO,SAASC,SAAS,CAAmB;AAC/D;EACA,IAAIC,YAAYA,GAAgB;IAC9B,MAAM;AAAEC,MAAAA,GAAG,GAAG;KAAQ,GAAG,IAAI,CAACC,IAAI;AAElC,IAAA,OAAOD,GAAG;AACZ;;AAEA;EACA,IAAIE,OAAOA,GAAW;IACpB,MAAM;MAAEC,KAAK;AAAEC,MAAAA;KAAM,GAAG,IAAI,CAACH,IAAI;;AAEjC;AACA;AACA,IAAA,OAAO,CAAGE,EAAAA,KAAK,CAAIC,CAAAA,EAAAA,IAAI,CAAE,CAAA;AAC3B;;AAEA;EACA,IAAIC,KAAKA,GAA8B;IACrC,MAAM;AAAEA,MAAAA;KAAO,GAAG,IAAI,CAACJ,IAAI;AAE3B,IAAA,IAAII,KAAK,EAAE;AACTC,MAAAA,MAAM,CACJ,CAAwDX,qDAAAA,EAAAA,MAAM,CAACY,IAAI,CACjE,IACF,CAAC,CAAA,YAAA,EAAeF,KAAK,CAAA,CAAE,EACvBV,MAAM,CAACa,QAAQ,CAACH,KAAK,CACvB,CAAC;AACH;AAEA,IAAA,OAAOA,KAAK;AACd;;AAEA;EACA,IAAII,eAAeA,GAA8B;IAC/C,MAAM;AAAEC,MAAAA;KAAO,GAAG,IAAI,CAACT,IAAI;IAE3B,IAAIS,KAAK,IAAInB,MAAM,CAACiB,QAAQ,CAACE,KAAsB,CAAC,EAAE;AACpD,MAAA,OAAOA,KAAK;AACd,KAAC,MAAM;AACL,MAAA,OAAOC,SAAS;AAClB;AACF;;AAEA;EACA,IAAIC,WAAWA,GAAuB;IACpC,MAAM;AAAEF,MAAAA;KAAO,GAAG,IAAI,CAACT,IAAI;IAE3B,IAAIS,KAAK,IAAI,CAACnB,MAAM,CAACiB,QAAQ,CAACE,KAAsB,CAAC,EAAE;AACrD,MAAA,OAAOA,KAAK;AACd,KAAC,MAAM;AACL,MAAA,OAAOC,SAAS;AAClB;AACF;EAEA,IAAIE,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,UAAU,CAAC;;AAE5B;IACAA,OAAO,CAACC,IAAI,CAAC,CAAA,eAAA,EAAkB,IAAI,CAACb,OAAO,EAAE,CAAC;;AAE9C;AACA,IAAA,IAAI,IAAI,CAACD,IAAI,CAACe,MAAM,EAAE;MACpBF,OAAO,CAACC,IAAI,CAAC,CAAmB,gBAAA,EAAA,IAAI,CAACd,IAAI,CAACe,MAAM,CAAA,CAAE,CAAC;AACrD;;AAEA;IACA,IAAI,IAAI,CAACX,KAAK,EAAE;MACdS,OAAO,CAACC,IAAI,CAAC,CAAA,gBAAA,EAAmB,IAAI,CAACV,KAAK,EAAE,CAAC;AAC/C;;AAEA;IACA,IAAI,IAAI,CAACI,eAAe,EAAE;MACxBK,OAAO,CAACC,IAAI,CAAC,CAAA,eAAA,EAAkB,IAAI,CAACN,eAAe,EAAE,CAAC;AACxD;AAEA,IAAA,OAAOK,OAAO,CAACP,IAAI,CAAC,GAAG,CAAC;AAC1B;AACF;AAACU,oBAAA,CAAAC,QAAA,EA9EoBrB,OAAO,CAAA;;;;"}