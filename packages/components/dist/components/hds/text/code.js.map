{"version":3,"file":"code.js","sources":["../../../../src/components/hds/text/code.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { HdsTextSizeValues, HdsTextWeightValues } from './types.ts';\nimport type {\n  HdsTextAligns,\n  HdsTextColors,\n  HdsTextTags,\n  HdsTextWeights,\n} from './types.ts';\n\n// notice: only some combinations of size + font-weight are allowed (per design specs)\n// see: https://www.figma.com/file/oQsMzMMnynfPWpMEt91OpH/HDS-Product---Foundations?node-id=1262%3A9192\n\n// Allow consumers to provide either string or number representation of size\ntype HdsTextCodeSizeNumber = Extract<\n  HdsTextSizeValues,\n  | HdsTextSizeValues.OneHundred\n  | HdsTextSizeValues.TwoHundred\n  | HdsTextSizeValues.ThreeHundred\n>;\ntype HdsTextCodeSizeString = `${HdsTextCodeSizeNumber}`;\nexport type HdsTextCodeSizes = HdsTextCodeSizeNumber | HdsTextCodeSizeString;\nexport const SIZES: HdsTextCodeSizes[] = [\n  HdsTextSizeValues.ThreeHundred,\n  HdsTextSizeValues.TwoHundred,\n  HdsTextSizeValues.OneHundred,\n];\nexport const DEFAULT_SIZE = HdsTextSizeValues.TwoHundred;\n\nexport const DEFAULT_WEIGHT = HdsTextWeightValues.Regular;\nexport type HdsTextCodeWeight = Extract<HdsTextWeights, 'regular' | 'bold'>;\nexport const WEIGHTS_PER_SIZE: Record<HdsTextCodeSizes, HdsTextCodeWeight[]> = {\n  [HdsTextSizeValues.ThreeHundred]: [\n    HdsTextWeightValues.Regular,\n    HdsTextWeightValues.Bold,\n  ],\n  [HdsTextSizeValues.TwoHundred]: [\n    HdsTextWeightValues.Regular,\n    HdsTextWeightValues.Bold,\n  ],\n  [HdsTextSizeValues.OneHundred]: [\n    HdsTextWeightValues.Regular,\n    HdsTextWeightValues.Bold,\n  ],\n};\n\nexport interface HdsTextCodeSignature {\n  Args: {\n    size?: HdsTextCodeSizes;\n    tag?: HdsTextTags;\n    weight?: HdsTextCodeWeight;\n    align?: HdsTextAligns;\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    color?: string | HdsTextColors;\n  };\n  Element:\n    | HTMLSpanElement\n    | HTMLHeadingElement\n    | HTMLParagraphElement\n    | HTMLDivElement;\n  Blocks: {\n    default: [];\n  };\n}\n\nexport default class HdsTextCode extends Component<HdsTextCodeSignature> {\n  // Sets the \"size\" for the text\n  get size(): HdsTextCodeSizes {\n    let { size = DEFAULT_SIZE } = this.args;\n\n    // let's be a bit forgiving with the consumers\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n\n    assert(\n      `@size for \"Hds::Text::Code\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  // Sets the \"weight\" for the text\n  get weight(): HdsTextCodeWeight {\n    const { weight = DEFAULT_WEIGHT } = this.args;\n\n    const weights = WEIGHTS_PER_SIZE[this.size];\n\n    assert(\n      `@weight for \"Hds::Text::Code\" with @size=${\n        this.size\n      } must be one of the following: ${weights.join(\n        ', '\n      )}; received: ${weight}`,\n      weights.includes(weight)\n    );\n\n    return weight;\n  }\n}\n"],"names":["SIZES","HdsTextSizeValues","ThreeHundred","TwoHundred","OneHundred","DEFAULT_SIZE","DEFAULT_WEIGHT","HdsTextWeightValues","Regular","WEIGHTS_PER_SIZE","Bold","HdsTextCode","Component","size","args","parseInt","assert","join","includes","weight","weights","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAwBaA,MAAAA,KAAyB,GAAG,CACvCC,iBAAiB,CAACC,YAAY,EAC9BD,iBAAiB,CAACE,UAAU,EAC5BF,iBAAiB,CAACG,UAAU;AAEjBC,MAAAA,YAAY,GAAGJ,iBAAiB,CAACE;AAEjCG,MAAAA,cAAc,GAAGC,mBAAmB,CAACC;AAE3C,MAAMC,gBAA+D,GAAG;AAC7E,EAAA,CAACR,iBAAiB,CAACC,YAAY,GAAG,CAChCK,mBAAmB,CAACC,OAAO,EAC3BD,mBAAmB,CAACG,IAAI,CACzB;AACD,EAAA,CAACT,iBAAiB,CAACE,UAAU,GAAG,CAC9BI,mBAAmB,CAACC,OAAO,EAC3BD,mBAAmB,CAACG,IAAI,CACzB;EACD,CAACT,iBAAiB,CAACG,UAAU,GAAG,CAC9BG,mBAAmB,CAACC,OAAO,EAC3BD,mBAAmB,CAACG,IAAI;AAE5B;AAqBe,MAAMC,WAAW,SAASC,SAAS,CAAuB;AACvE;EACA,IAAIC,IAAIA,GAAqB;IAC3B,IAAI;AAAEA,MAAAA,IAAI,GAAGR;KAAc,GAAG,IAAI,CAACS,IAAI;;AAEvC;AACA,IAAA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;AAC5BA,MAAAA,IAAI,GAAGE,QAAQ,CAACF,IAAI,EAAE,EAAE,CAAC;AAC3B;AAEAG,IAAAA,MAAM,CACJ,CAA6DhB,0DAAAA,EAAAA,KAAK,CAACiB,IAAI,CACrE,IACF,CAAC,CAAA,YAAA,EAAeJ,IAAI,CAAA,CAAE,EACtBb,KAAK,CAACkB,QAAQ,CAACL,IAAI,CACrB,CAAC;AAED,IAAA,OAAOA,IAAI;AACb;;AAEA;EACA,IAAIM,MAAMA,GAAsB;IAC9B,MAAM;AAAEA,MAAAA,MAAM,GAAGb;KAAgB,GAAG,IAAI,CAACQ,IAAI;AAE7C,IAAA,MAAMM,OAAO,GAAGX,gBAAgB,CAAC,IAAI,CAACI,IAAI,CAAC;IAE3CG,MAAM,CACJ,4CACE,IAAI,CAACH,IAAI,CACuBO,+BAAAA,EAAAA,OAAO,CAACH,IAAI,CAC5C,IACF,CAAC,CAAeE,YAAAA,EAAAA,MAAM,EAAE,EACxBC,OAAO,CAACF,QAAQ,CAACC,MAAM,CACzB,CAAC;AAED,IAAA,OAAOA,MAAM;AACf;AACF;AAACE,oBAAA,CAAAC,QAAA,EArCoBX,WAAW,CAAA;;;;"}