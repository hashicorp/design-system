{"version":3,"file":"index.js","sources":["../../../../src/components/hds/theme-switcher/index.hbs","../../../../src/components/hds/theme-switcher/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<Hds::Form::Select::Base\\n  {{on \\\"change\\\" this._onChangePageTheme}}\\n  class=\\\"hds-theme-switcher-control\\\"\\n  as |C|\\n>\\n  <C.Options>\\n    <option value=\\\"none\\\" selected={{eq this._selectedTheme \\\"none\\\"}}>None</option>\\n    <option value=\\\"auto\\\" selected={{eq this._selectedTheme \\\"auto\\\"}}>System</option>\\n    <option value=\\\"light\\\" selected={{eq this._selectedTheme \\\"light\\\"}}>Light</option>\\n    <option value=\\\"dark\\\" selected={{eq this._selectedTheme \\\"dark\\\"}}>Dark</option>\\n  </C.Options>\\n</Hds::Form::Select::Base>\\n\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { inject as service } from '@ember/service';\nimport { action } from '@ember/object';\n\nimport type { HdsFormSelectBaseSignature } from '../form/select/base.ts';\nimport type HdsThemingService from '../../../services/hds-theming.ts';\nimport { type HdsThemes } from '../../../services/hds-theming.ts';\n\nexport interface HdsThemeSwitcherSignature {\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  Args: {};\n  Element: HdsFormSelectBaseSignature['Element'];\n}\n\nexport default class HdsThemeSwitcher extends Component<HdsThemeSwitcherSignature> {\n  @service declare readonly hdsTheming: HdsThemingService;\n\n  _selectedTheme: HdsThemes;\n\n  constructor(owner: unknown, args: HdsThemeSwitcherSignature['Args']) {\n    super(owner, args);\n    this._selectedTheme = this.hdsTheming.getTheme() || undefined;\n  }\n\n  @action\n  _onChangePageTheme(event: Event): void {\n    const select = event.target as HTMLSelectElement;\n\n    // this._selectedTheme = select.value === 'none' ? undefined : select.value;\n    if (select.value === 'none') {\n      this._selectedTheme = undefined;\n    } else if (\n      select.value === 'auto' ||\n      select.value === 'light' ||\n      select.value === 'dark'\n    ) {\n      this._selectedTheme = select.value;\n    }\n\n    // we set the theme in the global service\n    this.hdsTheming.setTheme(this._selectedTheme);\n  }\n}\n"],"names":["HdsThemeSwitcher","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","_defineProperty","_selectedTheme","hdsTheming","getTheme","undefined","_onChangePageTheme","event","select","target","value","setTheme","_applyDecoratedDescriptor","prototype","service","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AACA,eAAe,kBAAkB,CAAC,wmBAAwmB;;;ACkBrnBA,IAAAA,gBAAgB,IAAAC,MAAA,GAAtB,MAAMD,gBAAgB,SAASE,SAAS,CAA4B;AAKjFC,EAAAA,WAAWA,CAACC,KAAc,EAAEC,IAAuC,EAAE;AACnE,IAAA,KAAK,CAACD,KAAK,EAAEC,IAAI,CAAC;AAACC,IAAAA,0BAAA,qBAAAC,WAAA,EAAA,IAAA,CAAA;IAAAC,eAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;IACnB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,UAAU,CAACC,QAAQ,EAAE,IAAIC,SAAS;AAC/D;EAGAC,kBAAkBA,CAACC,KAAY,EAAQ;AACrC,IAAA,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAA2B;;AAEhD;AACA,IAAA,IAAID,MAAM,CAACE,KAAK,KAAK,MAAM,EAAE;MAC3B,IAAI,CAACR,cAAc,GAAGG,SAAS;AACjC,KAAC,MAAM,IACLG,MAAM,CAACE,KAAK,KAAK,MAAM,IACvBF,MAAM,CAACE,KAAK,KAAK,OAAO,IACxBF,MAAM,CAACE,KAAK,KAAK,MAAM,EACvB;AACA,MAAA,IAAI,CAACR,cAAc,GAAGM,MAAM,CAACE,KAAK;AACpC;;AAEA;IACA,IAAI,CAACP,UAAU,CAACQ,QAAQ,CAAC,IAAI,CAACT,cAAc,CAAC;AAC/C;AACF,CAAC,GAAAF,WAAA,GAAAY,yBAAA,CAAAlB,MAAA,CAAAmB,SAAA,EAAA,YAAA,EAAA,CA3BEC,MAAO,CAAA,EAAA;EAAAC,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA;AAAA,CAAAN,CAAAA,EAAAA,yBAAA,CAAAlB,MAAA,CAAAmB,SAAA,EASPM,oBAAAA,EAAAA,CAAAA,MAAM,GAAAC,MAAA,CAAAC,wBAAA,CAAA3B,MAAA,CAAAmB,SAAA,EAAA,oBAAA,CAAA,EAAAnB,MAAA,CAAAmB,SAAA,IAAAnB,MAAA;AAV4B4B,oBAAA,CAAAC,QAAA,EAAhB9B,gBAAgB,CAAA;;;;"}