{"version":3,"file":"index.js","sources":["../../../../src/components/hds/accordion/index.hbs","../../../../src/components/hds/accordion/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n\\n<div class={{this.classNames}} ...attributes>\\n  {{yield (hash Item=(component \\\"hds/accordion/item\\\" size=this.size type=this.type forceState=@forceState))}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nimport { SIZES, DEFAULT_SIZE, TYPES, DEFAULT_TYPE } from './item/index.ts';\n\nimport type { ComponentLike } from '@glint/template';\nimport type { HdsAccordionItemSignature } from './item/index.ts';\nimport type {\n  HdsAccordionForceStates,\n  HdsAccordionSizes,\n  HdsAccordionTypes,\n} from './types.ts';\n\ninterface HdsAccordionSignature {\n  Args: {\n    size?: HdsAccordionSizes;\n    type?: HdsAccordionTypes;\n    forceState?: HdsAccordionForceStates;\n  };\n  Blocks: {\n    default: [\n      {\n        Item?: ComponentLike<HdsAccordionItemSignature>;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsAccordionComponent extends Component<HdsAccordionSignature> {\n  /**\n   * Sets the size for the component\n   *\n   * @param size\n   * @type {HdsAccordionSizes}\n   * @default 'medium'\n   */\n  get size(): HdsAccordionSizes {\n    const { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Accordion\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * Sets the type of the component\n   *\n   * @param type\n   * @type {HdsAccordionTypes}\n   * @default 'card'\n   */\n  get type(): HdsAccordionTypes {\n    const { type = DEFAULT_TYPE } = this.args;\n\n    assert(\n      `@type for \"Hds::Accordion\" must be one of the following: ${TYPES.join(\n        ', '\n      )}; received: ${type}`,\n      TYPES.includes(type)\n    );\n\n    return type;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-accordion'];\n\n    // add a class based on the @size argument\n    classes.push(`hds-accordion--size-${this.size}`);\n\n    // add a class based on the @type argument\n    classes.push(`hds-accordion--type-${this.type}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["HdsAccordionComponent","Component","size","DEFAULT_SIZE","args","assert","SIZES","join","includes","type","DEFAULT_TYPE","TYPES","classNames","classes","push","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;AACA,eAAe,kBAAkB,CAAC,wPAAwP;;ACD1R;AACA;AACA;AACA;;AA+Be,MAAMA,qBAAqB,SAASC,SAAS,CAAwB;AAClF;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAIC,IAAIA,GAAsB;IAC5B,MAAM;AAAEA,MAAAA,IAAI,GAAGC,YAAAA;KAAc,GAAG,IAAI,CAACC,IAAI,CAAA;AAEzCC,IAAAA,MAAM,CACJ,CAA4DC,yDAAAA,EAAAA,KAAK,CAACC,IAAI,CACpE,IACF,CAAC,CAAA,YAAA,EAAeL,IAAI,CAAA,CAAE,EACtBI,KAAK,CAACE,QAAQ,CAACN,IAAI,CACrB,CAAC,CAAA;AAED,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAIO,IAAIA,GAAsB;IAC5B,MAAM;AAAEA,MAAAA,IAAI,GAAGC,YAAAA;KAAc,GAAG,IAAI,CAACN,IAAI,CAAA;AAEzCC,IAAAA,MAAM,CACJ,CAA4DM,yDAAAA,EAAAA,KAAK,CAACJ,IAAI,CACpE,IACF,CAAC,CAAA,YAAA,EAAeE,IAAI,CAAA,CAAE,EACtBE,KAAK,CAACH,QAAQ,CAACC,IAAI,CACrB,CAAC,CAAA;AAED,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACE,IAAIG,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,eAAe,CAAC,CAAA;;AAEjC;IACAA,OAAO,CAACC,IAAI,CAAC,CAAA,oBAAA,EAAuB,IAAI,CAACZ,IAAI,EAAE,CAAC,CAAA;;AAEhD;IACAW,OAAO,CAACC,IAAI,CAAC,CAAA,oBAAA,EAAuB,IAAI,CAACL,IAAI,EAAE,CAAC,CAAA;AAEhD,IAAA,OAAOI,OAAO,CAACN,IAAI,CAAC,GAAG,CAAC,CAAA;AAC1B,GAAA;AACF,CAAA;AAACQ,oBAAA,CAAAC,QAAA,EAzDoBhB,qBAAqB,CAAA;;;;"}