{"version":3,"file":"index.js","sources":["../../../../../src/components/hds/accordion/item/index.hbs","../../../../../src/components/hds/accordion/item/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n\\n<Hds::DisclosurePrimitive\\n  class={{this.classNames}}\\n  @isOpen={{(or @isOpen (eq @forceState \\\"open\\\"))}}\\n  @onClickToggle={{@onClickToggle}}\\n  ...attributes\\n>\\n  <:toggle as |t|>\\n    <div class=\\\"hds-accordion-item__toggle\\\">\\n      <Hds::Accordion::Item::Button\\n        @isOpen={{t.isOpen}}\\n        @onClickToggle={{t.onClickToggle}}\\n        @contentId={{this.contentId}}\\n        @ariaLabel={{this.ariaLabel}}\\n        @size={{this.size}}\\n        @parentContainsInteractive={{this.containsInteractive}}\\n      />\\n\\n      <Hds::Text::Body\\n        @tag=\\\"div\\\"\\n        @size={{this.toggleTextSize}}\\n        @weight=\\\"semibold\\\"\\n        @color=\\\"strong\\\"\\n        class=\\\"hds-accordion-item__toggle-content\\\"\\n      >\\n        {{yield to=\\\"toggle\\\"}}\\n      </Hds::Text::Body>\\n    </div>\\n  </:toggle>\\n\\n  <:content as |c|>\\n    <Hds::Text::Body\\n      class=\\\"hds-accordion-item__content\\\"\\n      @tag=\\\"div\\\"\\n      @size=\\\"200\\\"\\n      @weight=\\\"regular\\\"\\n      @color=\\\"primary\\\"\\n      id={{this.contentId}}\\n    >\\n      {{yield (hash close=c.close) to=\\\"content\\\"}}\\n    </Hds::Text::Body>\\n  </:content>\\n</Hds::DisclosurePrimitive>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport { guidFor } from '@ember/object/internals';\n\nimport { HdsAccordionSizeValues, HdsAccordionTypeValues } from '../types.ts';\nimport type {\n  HdsAccordionForceStates,\n  HdsAccordionSizes,\n  HdsAccordionTypes,\n} from '../types.ts';\n\nexport const SIZES: string[] = Object.values(HdsAccordionSizeValues);\nexport const DEFAULT_SIZE = HdsAccordionSizeValues.Medium;\n\nexport const TYPES: string[] = Object.values(HdsAccordionTypeValues);\nexport const DEFAULT_TYPE = HdsAccordionTypeValues.Card;\n\nconst TEXT_SIZE_MAP = {\n  small: 100,\n  medium: 200,\n  large: 300,\n};\n\nexport interface HdsAccordionItemSignature {\n  Args: {\n    ariaLabel?: string;\n    isOpen?: boolean;\n    isStatic?: boolean;\n    containsInteractive?: boolean;\n    size?: HdsAccordionSizes;\n    type?: HdsAccordionTypes;\n    forceState?: HdsAccordionForceStates;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onClickToggle?: (event: MouseEvent, ...args: any[]) => void;\n  };\n  Blocks: {\n    toggle?: [];\n    content: [\n      {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        close: (...args: any[]) => void;\n      },\n    ];\n  };\n  Element: HTMLElement;\n}\n\nexport default class HdsAccordionItemComponent extends Component<HdsAccordionItemSignature> {\n  /**\n   * Generates a unique ID for the Content\n   *\n   * @param contentId\n   */\n  contentId = 'content-' + guidFor(this);\n\n  /**\n   * @param ariaLabel\n   * @type {string}\n   * @default 'Toggle display'\n   */\n  get ariaLabel(): string {\n    return this.args.ariaLabel ?? 'Toggle display';\n  }\n\n  /**\n   * @param containsInteractive\n   * @type {boolean}\n   * @default false\n   */\n  get containsInteractive(): boolean {\n    return this.args.containsInteractive ?? false;\n  }\n\n  /**\n   * @param toggleTextSize\n   * @type {HdsTextSizes}\n   * @default 'medium'\n   */\n  get toggleTextSize(): number {\n    const size = this.args.size ?? DEFAULT_SIZE;\n    return TEXT_SIZE_MAP[size];\n  }\n\n  /**\n   * Sets the size for the component\n   *\n   * @param size\n   * @type {HdsAccordionSizes}\n   * @default 'medium'\n   */\n  get size(): HdsAccordionSizes {\n    const { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Accordion::Item\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * Sets the type of the component\n   *\n   * @param type\n   * @type {HdsAccordionTypes}\n   * @default 'card'\n   */\n  get type(): HdsAccordionTypes {\n    const { type = DEFAULT_TYPE } = this.args;\n\n    assert(\n      `@type for \"Hds::Accordion::Item\" must be one of the following: ${TYPES.join(\n        ', '\n      )}; received: ${type}`,\n      TYPES.includes(type)\n    );\n\n    return type;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-accordion-item'];\n\n    // add a class based on the @isOpen argument\n    if (this.args.isOpen) {\n      classes.push('hds-accordion-item--is-open');\n    }\n\n    // add a class based on the @isStatic argument\n    if (this.args.isStatic) {\n      classes.push('hds-accordion-item--is-static');\n    }\n\n    // add a class based on the @size argument\n    classes.push(`hds-accordion-item--size-${this.size}`);\n\n    // add a class based on the @type argument\n    classes.push(`hds-accordion-item--type-${this.type}`);\n\n    if (this.containsInteractive) {\n      // Entire accordion item including the chevron is interactive:\n      classes.push('hds-accordion-item--contains-interactive');\n    } else {\n      // Only chevron is interactive:\n      classes.push('hds-accordion-item--does-not-contain-interactive');\n    }\n\n    return classes.join(' ');\n  }\n}\n"],"names":["SIZES","Object","values","HdsAccordionSizeValues","DEFAULT_SIZE","Medium","TYPES","HdsAccordionTypeValues","DEFAULT_TYPE","Card","TEXT_SIZE_MAP","small","medium","large","HdsAccordionItemComponent","Component","constructor","args","_defineProperty","guidFor","ariaLabel","containsInteractive","toggleTextSize","size","assert","join","includes","type","classNames","classes","isOpen","push","isStatic","setComponentTemplate","TEMPLATE"],"mappings":"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"}