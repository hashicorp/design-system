{"version":3,"file":"panel.js","sources":["../../../../src/components/hds/tabs/panel.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { guidFor } from '@ember/object/internals';\nimport { action } from '@ember/object';\nimport type { HdsTabsTabSignature } from './tab';\nimport type { HdsTabsPanelIds, HdsTabsTabIds } from './types';\n\nexport interface HdsTabsPanelSignature {\n  Args: {\n    tabIds?: HdsTabsTabIds;\n    panelIds?: HdsTabsPanelIds;\n    selectedTabIndex?: HdsTabsTabSignature['Args']['selectedTabIndex'];\n    didInsertNode?: (element: HTMLElement, elementId: string) => void;\n    willDestroyNode?: (element: HTMLElement) => void;\n  };\n  Blocks: {\n    default: [\n      {\n        isVisible?: boolean;\n      },\n    ];\n  };\n  Element: HTMLElement;\n}\n\nexport default class HdsTabsPanel extends Component<HdsTabsPanelSignature> {\n  /**\n   * Generate a unique ID for the Panel\n   * @return {string}\n   * @param _panelId\n   */\n  private _panelId = 'panel-' + guidFor(this);\n\n  private _elementId?: string;\n\n  get nodeIndex(): number | undefined {\n    return this.args.panelIds\n      ? this.args.panelIds.indexOf(this._panelId)\n      : undefined;\n  }\n\n  /**\n   * Check the condition if the panel is visible (because the coupled/associated tab is selected) or not\n   * @returns {boolean}\n   */\n  get isVisible(): boolean {\n    return this.nodeIndex === this.args.selectedTabIndex;\n  }\n\n  /**\n   * Get the ID of the tab coupled/associated with the panel (it's used by the `aria-labelledby` attribute)\n   * @returns string}\n   */\n  get coupledTabId(): string | undefined {\n    return this.nodeIndex !== undefined\n      ? this.args.tabIds?.[this.nodeIndex]\n      : undefined;\n  }\n\n  @action\n  didInsertNode(element: HTMLElement): void {\n    const { didInsertNode } = this.args;\n\n    if (typeof didInsertNode === 'function') {\n      this._elementId = element.id;\n      didInsertNode(element, this._elementId);\n    }\n  }\n\n  @action\n  willDestroyNode(element: HTMLElement): void {\n    const { willDestroyNode } = this.args;\n\n    if (typeof willDestroyNode === 'function') {\n      willDestroyNode(element);\n    }\n  }\n}\n"],"names":["HdsTabsPanel","Component","_panelId","guidFor","_elementId","nodeIndex","args","panelIds","indexOf","undefined","isVisible","selectedTabIndex","coupledTabId","tabIds","didInsertNode","element","id","n","prototype","action","willDestroyNode","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AA0Be,MAAMA,YAAY,SAASC,SAAS,CAAwB;AACzE;AACF;AACA;AACA;AACA;AACUC,EAAAA,QAAQ,GAAG,QAAQ,GAAGC,OAAO,CAAC,IAAI,CAAC;EAEnCC,UAAU;EAElB,IAAIC,SAASA,GAAuB;AAClC,IAAA,OAAO,IAAI,CAACC,IAAI,CAACC,QAAQ,GACrB,IAAI,CAACD,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,IAAI,CAACN,QAAQ,CAAC,GACzCO,SAAS;AACf;;AAEA;AACF;AACA;AACA;EACE,IAAIC,SAASA,GAAY;IACvB,OAAO,IAAI,CAACL,SAAS,KAAK,IAAI,CAACC,IAAI,CAACK,gBAAgB;AACtD;;AAEA;AACF;AACA;AACA;EACE,IAAIC,YAAYA,GAAuB;AACrC,IAAA,OAAO,IAAI,CAACP,SAAS,KAAKI,SAAS,GAC/B,IAAI,CAACH,IAAI,CAACO,MAAM,GAAG,IAAI,CAACR,SAAS,CAAC,GAClCI,SAAS;AACf;EAGAK,aAAaA,CAACC,OAAoB,EAAQ;IACxC,MAAM;AAAED,MAAAA;KAAe,GAAG,IAAI,CAACR,IAAI;AAEnC,IAAA,IAAI,OAAOQ,aAAa,KAAK,UAAU,EAAE;AACvC,MAAA,IAAI,CAACV,UAAU,GAAGW,OAAO,CAACC,EAAE;AAC5BF,MAAAA,aAAa,CAACC,OAAO,EAAE,IAAI,CAACX,UAAU,CAAC;AACzC;AACF;AAAC,EAAA;IAAAa,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,eAAA,EAAA,CARAC,MAAM,CAAA,CAAA;AAAA;EAWPC,eAAeA,CAACL,OAAoB,EAAQ;IAC1C,MAAM;AAAEK,MAAAA;KAAiB,GAAG,IAAI,CAACd,IAAI;AAErC,IAAA,IAAI,OAAOc,eAAe,KAAK,UAAU,EAAE;MACzCA,eAAe,CAACL,OAAO,CAAC;AAC1B;AACF;AAAC,EAAA;IAAAE,CAAA,CAAA,IAAA,CAAAC,SAAA,EAAA,iBAAA,EAAA,CAPAC,MAAM,CAAA,CAAA;AAAA;AAQT;AAACE,oBAAA,CAAAC,QAAA,EApDoBtB,YAAY,CAAA;;;;"}