{"version":3,"file":"index.js","sources":["../../../../src/components/hds/code-editor/index.hbs","../../../../src/components/hds/code-editor/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n\\n<div\\n  id={{this._id}}\\n  class={{this.classNames}}\\n  {{! @glint-expect-error - https://github.com/josemarluedke/ember-focus-trap/issues/86 }}\\n  {{focus-trap isActive=this._isFullScreen}}\\n  {{this._handleEscape}}\\n  ...attributes\\n>\\n  {{! header }}\\n  {{#if (or this.hasActions (has-block))}}\\n    <div class=\\\"hds-code-editor__header\\\">\\n      <div class=\\\"hds-code-editor__header-content\\\">\\n        {{yield\\n          (hash\\n            Title=(component \\\"hds/code-editor/title\\\" editorId=this._id onInsert=this.registerTitleElement)\\n            Description=(component\\n              \\\"hds/code-editor/description\\\" editorId=this._id onInsert=this.registerDescriptionElement\\n            )\\n            Generic=(component \\\"hds/code-editor/generic\\\")\\n          )\\n        }}\\n      </div>\\n\\n      {{#if this.hasActions}}\\n        <div class=\\\"hds-code-editor__header-actions\\\">\\n          {{#if @hasCopyButton}}\\n            <Hds::Copy::Button\\n              class=\\\"hds-code-editor__button hds-code-editor__copy-button\\\"\\n              @isIconOnly={{true}}\\n              @size=\\\"small\\\"\\n              @text={{this.copyButtonText}}\\n              @textToCopy={{this._value}}\\n            />\\n          {{/if}}\\n          {{#if @hasFullScreenButton}}\\n            <Hds::CodeEditor::FullScreenButton\\n              @isFullScreen={{this._isFullScreen}}\\n              @onToggleFullScreen={{this.toggleFullScreen}}\\n            />\\n          {{/if}}\\n        </div>\\n      {{/if}}\\n    </div>\\n  {{/if}}\\n\\n  {{! editor }}\\n  <div\\n    class=\\\"hds-code-editor__editor\\\"\\n    {{hds-code-editor\\n      ariaDescribedBy=this.ariaDescribedBy\\n      ariaLabel=@ariaLabel\\n      ariaLabelledBy=this.ariaLabelledBy\\n      value=@value\\n      language=@language\\n      onBlur=@onBlur\\n      onInput=this.onInput\\n      onSetup=this.onSetup\\n    }}\\n  />\\n\\n  {{! loader }}\\n  {{#unless this._isSetupComplete}}\\n    <div class=\\\"hds-code-editor__loader\\\" aria-live=\\\"polite\\\" role=\\\"status\\\">\\n      <Hds::Icon @name=\\\"loading\\\" @size=\\\"24\\\" />\\n      <span class=\\\"sr-only\\\">Loading</span>\\n    </div>\\n  {{/unless}}\\n</div>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { modifier } from 'ember-modifier';\nimport { guidFor } from '@ember/object/internals';\n\nimport type Owner from '@ember/owner';\nimport type { ComponentLike } from '@glint/template';\nimport type { HdsCodeEditorSignature as HdsCodeEditorModifierSignature } from '../../../modifiers/hds-code-editor.ts';\nimport type { HdsCodeEditorDescriptionSignature } from './description';\nimport type { HdsCodeEditorTitleSignature } from './title';\nimport type { HdsCodeEditorGenericSignature } from './generic';\nimport type { EditorView } from '@codemirror/view';\nimport type { HdsCopyButtonSignature } from '../copy/button/index.ts';\nexport interface HdsCodeEditorSignature {\n  Args: {\n    hasCopyButton?: boolean;\n    hasFullScreenButton?: boolean;\n    isStandalone?: boolean;\n    copyButtonText?: HdsCopyButtonSignature['Args']['text'];\n  } & HdsCodeEditorModifierSignature['Args']['Named'];\n  Blocks: {\n    default: [\n      {\n        Title?: ComponentLike<HdsCodeEditorTitleSignature>;\n        Description?: ComponentLike<HdsCodeEditorDescriptionSignature>;\n        Generic?: ComponentLike<HdsCodeEditorGenericSignature>;\n      },\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class HdsCodeEditor extends Component<HdsCodeEditorSignature> {\n  @tracked private _isFullScreen = false;\n  @tracked private _isSetupComplete = false;\n  @tracked private _value;\n  @tracked private _titleId: string | undefined;\n  @tracked private _descriptionId: string | undefined;\n\n  private _id = guidFor(this);\n\n  private _handleEscape = modifier(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key !== 'Escape' || !this._isFullScreen) {\n        return;\n      }\n\n      this.toggleFullScreen();\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  constructor(owner: Owner, args: HdsCodeEditorSignature['Args']) {\n    super(owner, args);\n\n    if (args.value) {\n      this._value = args.value;\n    }\n  }\n\n  get ariaLabelledBy(): string | undefined {\n    if (this.args.ariaLabel !== undefined) {\n      return;\n    }\n\n    return this.args.ariaLabelledBy ?? this._titleId;\n  }\n\n  get ariaDescribedBy(): string | undefined {\n    return this.args.ariaDescribedBy ?? this._descriptionId;\n  }\n\n  get hasActions(): boolean {\n    return (this.args.hasCopyButton || this.args.hasFullScreenButton) ?? false;\n  }\n\n  get isStandalone(): boolean {\n    return this.args.isStandalone ?? true;\n  }\n\n  get classNames(): string {\n    // Currently there is only one theme so the class name is hard-coded.\n    // In the future, additional themes such as a \"light\" theme could be added.\n    const classes = ['hds-code-editor', 'hds-code-editor--theme-dark'];\n\n    if (this._isFullScreen) {\n      classes.push('hds-code-editor--is-full-screen');\n    }\n\n    if (this.isStandalone) {\n      classes.push('hds-code-editor--is-standalone');\n    }\n\n    return classes.join(' ');\n  }\n\n  get copyButtonText(): HdsCopyButtonSignature['Args']['text'] {\n    return this.args.copyButtonText ? this.args.copyButtonText : 'Copy';\n  }\n\n  @action\n  registerTitleElement(element: HdsCodeEditorTitleSignature['Element']): void {\n    this._titleId = element.id;\n  }\n\n  @action\n  registerDescriptionElement(\n    element: HdsCodeEditorDescriptionSignature['Element']\n  ): void {\n    this._descriptionId = element.id;\n  }\n\n  @action\n  toggleFullScreen(): void {\n    this._isFullScreen = !this._isFullScreen;\n  }\n\n  @action\n  onInput(newValue: string): void {\n    this._value = newValue;\n    this.args.onInput?.(newValue);\n  }\n\n  @action\n  onKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this._isFullScreen) {\n      this.toggleFullScreen();\n    }\n  }\n\n  @action\n  onSetup(editorView: EditorView): void {\n    this._isSetupComplete = true;\n    this.args.onSetup?.(editorView);\n  }\n}\n"],"names":["HdsCodeEditor","_class","Component","constructor","owner","args","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_defineProperty","guidFor","modifier","handleKeyDown","event","key","_isFullScreen","toggleFullScreen","document","addEventListener","removeEventListener","value","_value","ariaLabelledBy","ariaLabel","undefined","_titleId","ariaDescribedBy","_descriptionId","hasActions","hasCopyButton","hasFullScreenButton","isStandalone","classNames","classes","push","join","copyButtonText","registerTitleElement","element","id","registerDescriptionElement","onInput","newValue","onKeyDown","onSetup","editorView","_isSetupComplete","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}