{"version":3,"file":"index.js","sources":["../../../../src/components/hds/button/index.hbs","../../../../src/components/hds/button/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<Hds::Interactive\\n  class={{this.classNames}}\\n  @current-when={{@current-when}}\\n  @models={{hds-link-to-models @model @models}}\\n  @query={{hds-link-to-query @query}}\\n  @replace={{@replace}}\\n  @route={{@route}}\\n  @isRouteExternal={{@isRouteExternal}}\\n  @href={{@href}}\\n  @isHrefExternal={{@isHrefExternal}}\\n  ...attributes\\n  aria-label={{if this.isIconOnly this.text null}}\\n>\\n  {{#if this.isIconOnly}}\\n    <span class=\\\"hds-button__icon\\\">\\n      <FlightIcon @name={{this.icon}} @size={{this.iconSize}} @stretched={{true}} />\\n    </span>\\n  {{else}}\\n    {{#if this.icon}}\\n      {{#if (eq this.iconPosition \\\"leading\\\")}}\\n        <span class=\\\"hds-button__icon\\\">\\n          <FlightIcon @name={{this.icon}} @size={{this.iconSize}} @stretched={{true}} />\\n        </span>\\n        <span class=\\\"hds-button__text\\\">\\n          {{this.text}}\\n        </span>\\n      {{else}}\\n        <span class=\\\"hds-button__text\\\">\\n          {{this.text}}\\n        </span>\\n        <span class=\\\"hds-button__icon\\\">\\n          <FlightIcon @name={{this.icon}} @size={{this.iconSize}} @stretched={{true}} />\\n        </span>\\n      {{/if}}\\n    {{else}}\\n      <span class=\\\"hds-button__text\\\">\\n        {{this.text}}\\n      </span>\\n    {{/if}}\\n  {{/if}}\\n</Hds::Interactive>\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\nimport type { HdsInteractiveSignature } from '../interactive/';\nimport type { FlightIconSignature } from '@hashicorp/ember-flight-icons/components/flight-icon';\n\nexport const DEFAULT_SIZE = 'medium';\nexport const DEFAULT_COLOR = 'primary';\nexport const DEFAULT_ICONPOSITION = 'leading';\nexport const SIZES = ['small', 'medium', 'large'] as const;\nexport const COLORS = ['primary', 'secondary', 'tertiary', 'critical'] as const;\nexport const ICONPOSITIONS = ['leading', 'trailing'] as const;\n\nexport type HdsButtonSize = (typeof SIZES)[number];\nexport type HdsButtonColor = (typeof COLORS)[number];\nexport type HdsButtonIconPosition = (typeof ICONPOSITIONS)[number];\n\nexport interface HdsButtonSignature {\n  Args: HdsInteractiveSignature['Args'] & {\n    size?: HdsButtonSize;\n    color?: HdsButtonColor;\n    text: string;\n    icon?: FlightIconSignature['Args']['name'];\n    iconPosition?: HdsButtonIconPosition;\n    isIconOnly?: boolean;\n    isFullWidth?: boolean;\n    isInline?: boolean;\n  };\n  Element: HdsInteractiveSignature['Element'];\n}\n\nexport default class HdsButtonComponent extends Component<HdsButtonSignature> {\n  /**\n   * @param text\n   * @type {string}\n   * @description The text of the button or value of `aria-label` if `isIconOnly` is set to `true`. If no text value is defined an error will be thrown.\n   */\n  get text() {\n    const { text } = this.args;\n\n    assert(\n      '@text for \"Hds::Button\" must have a valid value',\n      text !== undefined\n    );\n\n    return text;\n  }\n\n  /**\n   * @param size\n   * @type {string}\n   * @default medium\n   * @description The size of the button; acceptable values are `small`, `medium`, and `large`\n   */\n  get size() {\n    const { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Button\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  /**\n   * @param color\n   * @type {string}\n   * @default primary\n   * @description Determines the color of button to be used; acceptable values are `primary`, `secondary`, and `critical`\n   */\n  get color() {\n    const { color = DEFAULT_COLOR } = this.args;\n\n    assert(\n      `@color for \"Hds::Button\" must be one of the following: ${COLORS.join(\n        ', '\n      )}; received: ${color}`,\n      COLORS.includes(color)\n    );\n\n    return color;\n  }\n\n  /**\n   * @param icon\n   * @type {string}\n   * @default null\n   * @description The name of the icon to be used.\n   */\n  get icon() {\n    assert(\n      `when the \"Hds::Button\" @color is \"tertiary\" an @icon is required`,\n      !(this.color === 'tertiary' && !this.args.icon)\n    );\n\n    return this.args.icon ?? undefined;\n  }\n\n  /**\n   * @param isIconOnly\n   * @type {boolean}\n   * @default false\n   * @description Indicates if the button will only contain an icon; component will also ensure that accessible text is still applied to the component.\n   */\n  get isIconOnly() {\n    if (this.icon) {\n      return this.args.isIconOnly ?? false;\n    }\n    return false;\n  }\n\n  /**\n   * @param iconPosition\n   * @type {string}\n   * @default leading\n   * @description Positions the icon before or after the text; allowed values are `leading` or `trailing`\n   */\n  get iconPosition() {\n    const { iconPosition = DEFAULT_ICONPOSITION } = this.args;\n\n    assert(\n      `@iconPosition for \"Hds::Button\" must be one of the following: ${ICONPOSITIONS.join(\n        ', '\n      )}; received: ${iconPosition}`,\n      ICONPOSITIONS.includes(iconPosition)\n    );\n\n    return iconPosition;\n  }\n\n  /**\n   * @param iconSize\n   * @type {string}\n   * @default 16\n   * @description ensures that the correct icon size is used. Automatically calculated.\n   */\n  get iconSize() {\n    if (this.args.size === 'large') {\n      return '24';\n    } else {\n      return '16';\n    }\n  }\n\n  /**\n   * @param isFullWidth\n   * @type {boolean}\n   * @default false\n   * @description Indicates that a button should take up the full width of the parent container. The default is false.\n   */\n  get isFullWidth() {\n    return this.args.isFullWidth ?? false;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method Button#classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames() {\n    const classes = ['hds-button'];\n\n    // add a class based on the @color argument\n    classes.push(`hds-button--color-${this.color}`);\n\n    // add a class based on the @isFullWidth argument\n    if (this.isFullWidth) {\n      classes.push('hds-button--width-full');\n    }\n\n    // add a class based on isIconOnly argument\n    if (this.isIconOnly) {\n      classes.push('hds-button--is-icon-only');\n    }\n\n    // add a class based on the @isInline argument\n    if (this.args.isInline) {\n      classes.push('hds-button--is-inline');\n    }\n\n    // add a class based on the @size argument\n    classes.push(`hds-button--size-${this.size}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_SIZE","DEFAULT_COLOR","DEFAULT_ICONPOSITION","SIZES","COLORS","ICONPOSITIONS","HdsButtonComponent","Component","text","args","assert","undefined","size","join","includes","color","icon","isIconOnly","iconPosition","iconSize","isFullWidth","classNames","classes","push","isInline","setComponentTemplate","TEMPLATE"],"mappings":"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"}