{"version":3,"file":"index.js","sources":["../../../../src/components/hds/modal/index.hbs","../../../../src/components/hds/modal/index.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!\\n  Copyright (c) HashiCorp, Inc.\\n  SPDX-License-Identifier: MPL-2.0\\n}}\\n<Hds::DialogPrimitive::Wrapper\\n  class={{this.classNames}}\\n  ...attributes\\n  aria-labelledby={{this.id}}\\n  {{did-insert this.didInsert}}\\n  {{will-destroy this.willDestroyNode}}\\n  {{! @glint-expect-error - https://github.com/josemarluedke/ember-focus-trap/issues/86 }}\\n  {{focus-trap isActive=this.isOpen focusTrapOptions=(hash onDeactivate=this.onDismiss clickOutsideDeactivates=true)}}\\n>\\n  <:header>\\n    {{yield\\n      (hash\\n        Header=(component\\n          \\\"hds/dialog-primitive/header\\\"\\n          id=this.id\\n          onDismiss=this.onDismiss\\n          contextualClassPrefix=\\\"hds-modal\\\"\\n          titleTag=\\\"h1\\\"\\n        )\\n      )\\n    }}\\n  </:header>\\n  <:body>\\n    {{yield (hash Body=(component \\\"hds/dialog-primitive/body\\\" contextualClass=\\\"hds-modal__body\\\"))}}\\n  </:body>\\n  <:footer>\\n    {{yield\\n      (hash\\n        Footer=(component \\\"hds/dialog-primitive/footer\\\" onDismiss=this.onDismiss contextualClass=\\\"hds-modal__footer\\\")\\n      )\\n    }}\\n  </:footer>\\n</Hds::DialogPrimitive::Wrapper>\\n\\n{{#if this._isOpen}}\\n  <Hds::DialogPrimitive::Overlay @contextualClass=\\\"hds-modal__overlay\\\" />\\n{{/if}}\")","/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { getElementId } from '../../../utils/hds-get-element-id.ts';\nimport { buildWaiter } from '@ember/test-waiters';\n\nimport type { WithBoundArgs } from '@glint/template';\nimport type { HdsModalSizes, HdsModalColors } from './types.ts';\n\nimport HdsDialogPrimitiveHeaderComponent from '../dialog-primitive/header.ts';\nimport HdsDialogPrimitiveBodyComponent from '../dialog-primitive/body.ts';\nimport HdsDialogPrimitiveFooterComponent from '../dialog-primitive/footer.ts';\nimport { HdsModalSizeValues, HdsModalColorValues } from './types.ts';\n\nconst waiter = buildWaiter('@hashicorp/design-system-components:modal');\n\nexport const DEFAULT_SIZE = HdsModalSizeValues.Medium;\nexport const DEFAULT_COLOR = HdsModalColorValues.Neutral;\n\nexport const SIZES: string[] = Object.values(HdsModalSizeValues);\nexport const COLORS: string[] = Object.values(HdsModalColorValues);\n\nexport interface HdsModalSignature {\n  Args: {\n    isDismissDisabled?: boolean;\n    size?: HdsModalSizes;\n    color?: HdsModalColors;\n    returnFocusTo?: string;\n    onOpen?: () => void;\n    onClose?: (event: Event) => void;\n  };\n  Blocks: {\n    default: [\n      {\n        Header?: WithBoundArgs<\n          typeof HdsDialogPrimitiveHeaderComponent,\n          'id' | 'onDismiss' | 'contextualClassPrefix'\n        >;\n        Body?: WithBoundArgs<\n          typeof HdsDialogPrimitiveBodyComponent,\n          'contextualClass'\n        >;\n        Footer?: WithBoundArgs<\n          typeof HdsDialogPrimitiveFooterComponent,\n          'onDismiss' | 'contextualClass'\n        >;\n      },\n    ];\n  };\n  Element: HTMLDialogElement;\n}\n\nexport default class HdsModal extends Component<HdsModalSignature> {\n  @tracked private _isOpen = false;\n  private _element!: HTMLDialogElement;\n  private _body!: HTMLElement;\n  private _bodyInitialOverflowValue = '';\n\n  get isDismissDisabled(): boolean {\n    return this.args.isDismissDisabled ?? false;\n  }\n\n  get size(): HdsModalSizes {\n    const { size = DEFAULT_SIZE } = this.args;\n\n    assert(\n      `@size for \"Hds::Modal\" must be one of the following: ${SIZES.join(\n        ', '\n      )}; received: ${size}`,\n      SIZES.includes(size)\n    );\n\n    return size;\n  }\n\n  get color(): HdsModalColors {\n    const { color = DEFAULT_COLOR } = this.args;\n\n    assert(\n      `@color for \"Hds::Modal\" must be one of the following: ${COLORS.join(\n        ', '\n      )}; received: ${color}`,\n      COLORS.includes(color)\n    );\n\n    return color;\n  }\n\n  get id(): string {\n    return getElementId(this);\n  }\n\n  get classNames(): string {\n    const classes = ['hds-modal'];\n\n    // add a class based on the @size argument\n    classes.push(`hds-modal--size-${this.size}`);\n\n    // add a class based on the @color argument\n    classes.push(`hds-modal--color-${this.color}`);\n\n    return classes.join(' ');\n  }\n\n  @action registerOnCloseCallback(event: Event): void {\n    if (\n      !this.isDismissDisabled &&\n      this.args.onClose &&\n      typeof this.args.onClose === 'function'\n    ) {\n      this.args.onClose(event);\n    }\n\n    // If the dismissal of the modal is disabled, we keep the modal open/visible otherwise we mark it as closed\n    if (this.isDismissDisabled) {\n      // If, in a chain of events, the element is not attached to the DOM, the `showModal` would fail\n      // so we add this safeguard condition that checks for the `<dialog>` to have a parent\n      if (this._element.parentElement) {\n        // As there is no way to `preventDefault` on `close` events, we call the `showModal` function\n        // preserving the state of the modal dialog\n        this._element.showModal();\n      }\n    } else {\n      this._isOpen = false;\n    }\n  }\n\n  @action\n  didInsert(element: HTMLDialogElement): void {\n    // Store references of `<dialog>` and `<body>` elements\n    this._element = element;\n    this._body = document.body;\n\n    if (this._body) {\n      // Store the initial `overflow` value of `<body>` so we can reset to it\n      this._bodyInitialOverflowValue =\n        this._body.style.getPropertyValue('overflow');\n    }\n\n    // Register \"onClose\" callback function to be called when a native 'close' event is dispatched\n    this._element.addEventListener('close', this.registerOnCloseCallback, true);\n\n    // If the modal dialog is not already open\n    if (!this._element.open) {\n      this.open();\n    }\n  }\n\n  @action\n  willDestroyNode(): void {\n    if (this._element) {\n      this._element.removeEventListener(\n        'close',\n        this.registerOnCloseCallback,\n        true\n      );\n    }\n  }\n\n  @action\n  open(): void {\n    // Make modal dialog visible using the native `showModal` method\n    this._element.showModal();\n    this._isOpen = true;\n\n    // Prevent page from scrolling when the dialog is open\n    if (this._body) this._body.style.setProperty('overflow', 'hidden');\n\n    // Call \"onOpen\" callback function\n    if (this.args.onOpen && typeof this.args.onOpen === 'function') {\n      this.args.onOpen();\n    }\n  }\n\n  @action\n  async onDismiss(): Promise<void> {\n    // allow ember test helpers to be aware of when the `close` event fires\n    // when using `click` or other helpers from '@ember/test-helpers'\n    // Notice: this code will get stripped out in production builds (DEBUG evaluates to `true` in dev/test builds, but `false` in prod builds)\n    if (this._element.open) {\n      const token = waiter.beginAsync();\n      const listener = () => {\n        waiter.endAsync(token);\n        this._element.removeEventListener('close', listener);\n      };\n      this._element.addEventListener('close', listener);\n    }\n\n    // Make modal dialog invisible using the native `close` method\n    this._element.close();\n\n    // Reset page `overflow` property\n    if (this._body) {\n      this._body.style.removeProperty('overflow');\n      if (this._bodyInitialOverflowValue === '') {\n        if (this._body.style.length === 0) {\n          this._body.removeAttribute('style');\n        }\n      } else {\n        this._body.style.setProperty(\n          'overflow',\n          this._bodyInitialOverflowValue\n        );\n      }\n    }\n\n    // Return focus to a specific element (if provided)\n    if (this.args.returnFocusTo) {\n      const initiator = document.getElementById(this.args.returnFocusTo);\n      if (initiator) {\n        initiator.focus();\n      }\n    }\n  }\n}\n"],"names":["waiter","buildWaiter","DEFAULT_SIZE","HdsModalSizeValues","Medium","DEFAULT_COLOR","HdsModalColorValues","Neutral","SIZES","Object","values","COLORS","HdsModal","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","isDismissDisabled","size","assert","join","includes","color","id","getElementId","classNames","classes","push","registerOnCloseCallback","event","onClose","_element","parentElement","showModal","_isOpen","didInsert","element","_body","document","body","_bodyInitialOverflowValue","style","getPropertyValue","addEventListener","open","willDestroyNode","removeEventListener","setProperty","onOpen","onDismiss","token","beginAsync","listener","endAsync","close","removeProperty","length","removeAttribute","returnFocusTo","initiator","getElementById","focus","_applyDecoratedDescriptor","prototype","tracked","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","setComponentTemplate","TEMPLATE"],"mappings":"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"}