{"version":3,"file":"container.js","sources":["../../../../src/components/hds/card/container.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { assert } from '@ember/debug';\n\nimport {\n  HdsCardBackgroundValues,\n  HdsCardLevelValues,\n  HdsCardOverflowValues,\n  HdsCardTagValues,\n} from './types.ts';\n\nimport type {\n  HdsCardBackground,\n  HdsCardLevel,\n  HdsCardOverflow,\n  HdsCardTag,\n} from './types.ts';\n\nexport const DEFAULT_LEVEL = HdsCardLevelValues.Base;\nexport const DEFAULT_BACKGROUND = HdsCardBackgroundValues.NeutralPrimary;\nexport const DEFAULT_OVERFLOW = HdsCardOverflowValues.Visible;\nexport const DEFAULT_TAG = HdsCardTagValues.Div;\nexport const AVAILABLE_LEVELS: string[] = Object.values(HdsCardLevelValues);\nexport const AVAILABLE_BACKGROUNDS: string[] = Object.values(\n  HdsCardBackgroundValues\n);\nexport const AVAILABLE_OVERFLOWS: string[] = Object.values(\n  HdsCardOverflowValues\n);\nexport const AVAILABLE_TAGS: string[] = Object.values(HdsCardTagValues);\n\nexport interface HdsCardContainerSignature {\n  Args: {\n    level?: HdsCardLevel;\n    levelActive?: HdsCardLevel;\n    levelHover?: HdsCardLevel;\n    background?: HdsCardBackground;\n    hasBorder?: boolean;\n    overflow?: HdsCardOverflow;\n    tag?: HdsCardTag;\n  };\n  Blocks: {\n    default: [];\n  };\n  Element: HTMLElement;\n}\n\nexport default class HdsCardContainer extends Component<HdsCardContainerSignature> {\n  // Sets the \"elevation\" level for the component\n  get level(): HdsCardLevel {\n    const { level = DEFAULT_LEVEL } = this.args;\n\n    assert(\n      `@level for \"Hds::Card::Container\" must be one of the following: ${AVAILABLE_LEVELS.join(\n        ', '\n      )}; received: ${level}`,\n      AVAILABLE_LEVELS.includes(level)\n    );\n\n    return level;\n  }\n\n  // Sets the \"elevation\" level for the component on \":hover\" state\n  get levelHover(): HdsCardLevel | undefined {\n    const { levelHover } = this.args;\n\n    if (levelHover) {\n      assert(\n        `@levelHover for \"Hds::Card::Container\" must be one of the following: ${AVAILABLE_LEVELS.join(\n          ', '\n        )}; received: ${levelHover}`,\n        AVAILABLE_LEVELS.includes(levelHover)\n      );\n    }\n\n    return levelHover;\n  }\n\n  // Sets the \"elevation\" level for the component on \":active\" state\n  get levelActive(): HdsCardLevel | undefined {\n    const { levelActive } = this.args;\n\n    if (levelActive) {\n      assert(\n        `@levelActive for \"Hds::Card::Container\" must be one of the following: ${AVAILABLE_LEVELS.join(\n          ', '\n        )}; received: ${levelActive}`,\n        AVAILABLE_LEVELS.includes(levelActive)\n      );\n    }\n\n    return levelActive;\n  }\n\n  // Sets the background for the component\n  get background(): HdsCardBackground {\n    const { background = DEFAULT_BACKGROUND } = this.args;\n\n    assert(\n      `@background for \"Hds::Card::Container\" must be one of the following: ${AVAILABLE_BACKGROUNDS.join(\n        ', '\n      )}; received: ${background}`,\n      AVAILABLE_BACKGROUNDS.includes(background)\n    );\n\n    return background;\n  }\n\n  // Sets the level for the card\n  get overflow(): HdsCardOverflow {\n    const { overflow = DEFAULT_OVERFLOW } = this.args;\n\n    assert(\n      `@overflow for \"Hds::Card::Container\" must be one of the following: ${AVAILABLE_OVERFLOWS.join(\n        ', '\n      )}; received: ${overflow}`,\n      AVAILABLE_OVERFLOWS.includes(overflow)\n    );\n\n    return overflow;\n  }\n\n  get componentTag(): HdsCardTag {\n    const { tag = DEFAULT_TAG } = this.args;\n\n    assert(\n      `@tag for \"Hds::Card::Container\" must be one of the following: ${AVAILABLE_TAGS.join(', ')}; received: ${tag}`,\n      AVAILABLE_TAGS.includes(tag)\n    );\n\n    return tag;\n  }\n\n  // Get the class names to apply to the component.\n  get classNames(): string {\n    const classes = ['hds-card__container'];\n\n    // add \"elevation\" classes based on the @level and @hasBorder arguments\n    classes.push(\n      `hds-card__container--level-${\n        this.args.hasBorder ? 'surface' : 'elevation'\n      }-${this.level}`\n    );\n    if (this.levelHover) {\n      classes.push(\n        `hds-card__container--hover-level-${\n          this.args.hasBorder ? 'surface' : 'elevation'\n        }-${this.levelHover}`\n      );\n    }\n    if (this.levelActive) {\n      classes.push(\n        `hds-card__container--active-level-${\n          this.args.hasBorder ? 'surface' : 'elevation'\n        }-${this.levelActive}`\n      );\n    }\n\n    // add a class based on the @background argument\n    classes.push(`hds-card__container--background-${this.background}`);\n\n    // add a class based on the @overflow argument\n    classes.push(`hds-card__container--overflow-${this.overflow}`);\n\n    return classes.join(' ');\n  }\n}\n"],"names":["DEFAULT_LEVEL","HdsCardLevelValues","Base","DEFAULT_BACKGROUND","HdsCardBackgroundValues","NeutralPrimary","DEFAULT_OVERFLOW","HdsCardOverflowValues","Visible","DEFAULT_TAG","HdsCardTagValues","Div","AVAILABLE_LEVELS","Object","values","AVAILABLE_BACKGROUNDS","AVAILABLE_OVERFLOWS","AVAILABLE_TAGS","HdsCardContainer","Component","level","args","assert","join","includes","levelHover","levelActive","background","overflow","componentTag","tag","classNames","classes","push","hasBorder","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAmBaA,MAAAA,aAAa,GAAGC,kBAAkB,CAACC;AACnCC,MAAAA,kBAAkB,GAAGC,uBAAuB,CAACC;AAC7CC,MAAAA,gBAAgB,GAAGC,qBAAqB,CAACC;AACzCC,MAAAA,WAAW,GAAGC,gBAAgB,CAACC;AACrC,MAAMC,gBAA0B,GAAGC,MAAM,CAACC,MAAM,CAACb,kBAAkB;AACnE,MAAMc,qBAA+B,GAAGF,MAAM,CAACC,MAAM,CAC1DV,uBACF;AACO,MAAMY,mBAA6B,GAAGH,MAAM,CAACC,MAAM,CACxDP,qBACF;AACO,MAAMU,cAAwB,GAAGJ,MAAM,CAACC,MAAM,CAACJ,gBAAgB;AAkBvD,MAAMQ,gBAAgB,SAASC,SAAS,CAA4B;AACjF;EACA,IAAIC,KAAKA,GAAiB;IACxB,MAAM;AAAEA,MAAAA,KAAK,GAAGpB;KAAe,GAAG,IAAI,CAACqB,IAAI;AAE3CC,IAAAA,MAAM,CACJ,CAAmEV,gEAAAA,EAAAA,gBAAgB,CAACW,IAAI,CACtF,IACF,CAAC,CAAA,YAAA,EAAeH,KAAK,CAAA,CAAE,EACvBR,gBAAgB,CAACY,QAAQ,CAACJ,KAAK,CACjC,CAAC;AAED,IAAA,OAAOA,KAAK;AACd;;AAEA;EACA,IAAIK,UAAUA,GAA6B;IACzC,MAAM;AAAEA,MAAAA;KAAY,GAAG,IAAI,CAACJ,IAAI;AAEhC,IAAA,IAAII,UAAU,EAAE;AACdH,MAAAA,MAAM,CACJ,CAAwEV,qEAAAA,EAAAA,gBAAgB,CAACW,IAAI,CAC3F,IACF,CAAC,CAAA,YAAA,EAAeE,UAAU,CAAA,CAAE,EAC5Bb,gBAAgB,CAACY,QAAQ,CAACC,UAAU,CACtC,CAAC;AACH;AAEA,IAAA,OAAOA,UAAU;AACnB;;AAEA;EACA,IAAIC,WAAWA,GAA6B;IAC1C,MAAM;AAAEA,MAAAA;KAAa,GAAG,IAAI,CAACL,IAAI;AAEjC,IAAA,IAAIK,WAAW,EAAE;AACfJ,MAAAA,MAAM,CACJ,CAAyEV,sEAAAA,EAAAA,gBAAgB,CAACW,IAAI,CAC5F,IACF,CAAC,CAAA,YAAA,EAAeG,WAAW,CAAA,CAAE,EAC7Bd,gBAAgB,CAACY,QAAQ,CAACE,WAAW,CACvC,CAAC;AACH;AAEA,IAAA,OAAOA,WAAW;AACpB;;AAEA;EACA,IAAIC,UAAUA,GAAsB;IAClC,MAAM;AAAEA,MAAAA,UAAU,GAAGxB;KAAoB,GAAG,IAAI,CAACkB,IAAI;AAErDC,IAAAA,MAAM,CACJ,CAAwEP,qEAAAA,EAAAA,qBAAqB,CAACQ,IAAI,CAChG,IACF,CAAC,CAAA,YAAA,EAAeI,UAAU,CAAA,CAAE,EAC5BZ,qBAAqB,CAACS,QAAQ,CAACG,UAAU,CAC3C,CAAC;AAED,IAAA,OAAOA,UAAU;AACnB;;AAEA;EACA,IAAIC,QAAQA,GAAoB;IAC9B,MAAM;AAAEA,MAAAA,QAAQ,GAAGtB;KAAkB,GAAG,IAAI,CAACe,IAAI;AAEjDC,IAAAA,MAAM,CACJ,CAAsEN,mEAAAA,EAAAA,mBAAmB,CAACO,IAAI,CAC5F,IACF,CAAC,CAAA,YAAA,EAAeK,QAAQ,CAAA,CAAE,EAC1BZ,mBAAmB,CAACQ,QAAQ,CAACI,QAAQ,CACvC,CAAC;AAED,IAAA,OAAOA,QAAQ;AACjB;EAEA,IAAIC,YAAYA,GAAe;IAC7B,MAAM;AAAEC,MAAAA,GAAG,GAAGrB;KAAa,GAAG,IAAI,CAACY,IAAI;AAEvCC,IAAAA,MAAM,CACJ,CAAiEL,8DAAAA,EAAAA,cAAc,CAACM,IAAI,CAAC,IAAI,CAAC,CAAA,YAAA,EAAeO,GAAG,CAAA,CAAE,EAC9Gb,cAAc,CAACO,QAAQ,CAACM,GAAG,CAC7B,CAAC;AAED,IAAA,OAAOA,GAAG;AACZ;;AAEA;EACA,IAAIC,UAAUA,GAAW;AACvB,IAAA,MAAMC,OAAO,GAAG,CAAC,qBAAqB,CAAC;;AAEvC;AACAA,IAAAA,OAAO,CAACC,IAAI,CACV,8BACE,IAAI,CAACZ,IAAI,CAACa,SAAS,GAAG,SAAS,GAAG,WAAW,CAAA,CAAA,EAC3C,IAAI,CAACd,KAAK,EAChB,CAAC;IACD,IAAI,IAAI,CAACK,UAAU,EAAE;AACnBO,MAAAA,OAAO,CAACC,IAAI,CACV,oCACE,IAAI,CAACZ,IAAI,CAACa,SAAS,GAAG,SAAS,GAAG,WAAW,CAAA,CAAA,EAC3C,IAAI,CAACT,UAAU,EACrB,CAAC;AACH;IACA,IAAI,IAAI,CAACC,WAAW,EAAE;AACpBM,MAAAA,OAAO,CAACC,IAAI,CACV,qCACE,IAAI,CAACZ,IAAI,CAACa,SAAS,GAAG,SAAS,GAAG,WAAW,CAAA,CAAA,EAC3C,IAAI,CAACR,WAAW,EACtB,CAAC;AACH;;AAEA;IACAM,OAAO,CAACC,IAAI,CAAC,CAAA,gCAAA,EAAmC,IAAI,CAACN,UAAU,EAAE,CAAC;;AAElE;IACAK,OAAO,CAACC,IAAI,CAAC,CAAA,8BAAA,EAAiC,IAAI,CAACL,QAAQ,EAAE,CAAC;AAE9D,IAAA,OAAOI,OAAO,CAACT,IAAI,CAAC,GAAG,CAAC;AAC1B;AACF;AAACY,oBAAA,CAAAC,QAAA,EAvHoBlB,gBAAgB,CAAA;;;;"}