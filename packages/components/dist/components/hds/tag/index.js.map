{"version":3,"file":"index.js","sources":["../../../../src/components/hds/tag/index.ts"],"sourcesContent":["/**\n * Copyright (c) HashiCorp, Inc.\n * SPDX-License-Identifier: MPL-2.0\n */\n\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { assert } from '@ember/debug';\nimport { modifier } from 'ember-modifier';\n\nimport { HdsTagColorValues } from './types.ts';\nimport type { HdsTagColors } from './types.ts';\nimport { HdsTagTooltipPlacementValues } from './types.ts';\nimport type { HdsTagTooltipPlacements } from './types.ts';\nimport type { HdsInteractiveSignature } from '../interactive/';\n\nexport const COLORS: string[] = Object.values(HdsTagColorValues);\nexport const DEFAULT_COLOR = HdsTagColorValues.Primary;\nexport const TOOLTIP_PLACEMENTS: string[] = Object.values(\n  HdsTagTooltipPlacementValues\n);\nexport const DEFAULT_TOOLTIP_PLACEMENT = HdsTagTooltipPlacementValues.Top;\n\nexport interface HdsTagSignature {\n  Args: HdsInteractiveSignature['Args'] & {\n    color?: HdsTagColors;\n    text: string;\n    ariaLabel?: string;\n    tooltipPlacement?: HdsTagTooltipPlacements;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onDismiss?: (event: MouseEvent, ...args: any[]) => void;\n  };\n  Element: HTMLSpanElement;\n}\n\nexport default class HdsTag extends Component<HdsTagSignature> {\n  @tracked private _isTextOverflow!: boolean;\n  private _observer!: ResizeObserver;\n\n  private _setUpObserver = modifier((element: HTMLElement) => {\n    // Used to detect when text is clipped to one line, and tooltip should be added\n    this._observer = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        this._isTextOverflow = this._isOverflow(\n          entry.target.querySelector('.hds-tag__text-container')!\n        );\n      });\n    });\n    this._observer.observe(element);\n\n    return () => {\n      this._observer.disconnect();\n    };\n  });\n\n  /**\n   * @param tooltioPlacement\n   * @type {string}\n   * @default top\n   * @description The placement property of the tooltip attached to the tag text.\n   */\n  get tooltipPlacement(): HdsTagTooltipPlacements {\n    const { tooltipPlacement = DEFAULT_TOOLTIP_PLACEMENT } = this.args;\n\n    assert(\n      '@tooltipPlacement for \"Hds::Tag\" must have a valid value',\n      tooltipPlacement == undefined ||\n        TOOLTIP_PLACEMENTS.includes(tooltipPlacement)\n    );\n\n    return tooltipPlacement;\n  }\n\n  /**\n   * @param onDismiss\n   * @type {function}\n   * @default () => {}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get onDismiss(): ((event: MouseEvent, ...args: any[]) => void) | false {\n    const { onDismiss } = this.args;\n\n    if (typeof onDismiss === 'function') {\n      return onDismiss;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * @param text\n   * @type {string}\n   * @description The text of the tag. If no text value is defined, an error will be thrown.\n   */\n  get text(): string {\n    const { text } = this.args;\n\n    assert('@text for \"Hds::Tag\" must have a valid value', text !== undefined);\n\n    return text;\n  }\n\n  /**\n   * @param ariaLabel\n   * @type {string}\n   * @default 'Dismiss'\n   */\n  get ariaLabel(): string {\n    const tagAriaLabel = this.args.ariaLabel ?? 'Dismiss';\n    return tagAriaLabel + ' ' + this.args.text;\n  }\n\n  /**\n   * @param color\n   * @type {string}\n   * @default primary\n   * @description Determines the color of link to be used; acceptable values are `primary` and `secondary`\n   */\n  get color(): HdsTagColors | false {\n    if (this.args.href || this.args.route) {\n      const { color = DEFAULT_COLOR } = this.args;\n      assert(\n        `@color for \"Hds::Tag\" must be one of the following: ${COLORS.join(\n          ', '\n        )}; received: ${color}`,\n        COLORS.includes(color)\n      );\n      return color;\n    } else if (this.args.color) {\n      assert(\n        '@color can only be applied to \"Hds::Tag\" along with either @href or @route',\n        this.args.href || this.args.route\n      );\n    }\n    return false;\n  }\n\n  /**\n   * Get the class names to apply to the component.\n   * @method classNames\n   * @return {string} The \"class\" attribute to apply to the component.\n   */\n  get classNames(): string {\n    const classes = ['hds-tag'];\n\n    // add a class based on the @color argument\n    if (this.color) {\n      classes.push(`hds-tag--color-${this.color}`);\n    }\n\n    return classes.join(' ');\n  }\n\n  private _isOverflow(el: Element): boolean {\n    return el.scrollHeight > el.clientHeight;\n  }\n}\n"],"names":["COLORS","Object","values","HdsTagColorValues","DEFAULT_COLOR","Primary","TOOLTIP_PLACEMENTS","HdsTagTooltipPlacementValues","DEFAULT_TOOLTIP_PLACEMENT","Top","HdsTag","Component","g","prototype","tracked","i","void 0","_observer","_setUpObserver","modifier","element","ResizeObserver","entries","forEach","entry","_isTextOverflow","_isOverflow","target","querySelector","observe","disconnect","tooltipPlacement","args","assert","undefined","includes","onDismiss","text","ariaLabel","tagAriaLabel","color","href","route","join","classNames","classes","push","el","scrollHeight","clientHeight","setComponentTemplate","TEMPLATE"],"mappings":"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"}