{{page-title "Disclosure"}}

<h2 class="dummy-h2">Disclosure</h2>

<section>
  <div class="dummy-banner dummy-banner--info">
    <p class="dummy-paragraph">⚠️
      <strong>Notice</strong>: this component is intended
      <strong>only</strong>
      for internal use (for now). If you need to use it please speak with the HDS team.</p>
  </div>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">§</a> Component API</h3>
  <p class="dummy-paragraph" aria-labelledby="component-api-disclosure">Here is the API for the component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-disclosure">
    <dt>&lt;:toggle&gt; <code>named block</code></dt>
    <dd>
      <p>This is a named block where to pass the interactive element that works as "toggle" for the disclosure.</p>
    </dd>
    <dt>[:toggle].onClickToggle <code>event handler</code></dt>
    <dd>
      <p>Function that needs to be called by the interactive element to toggle the visibility of the content.</p>
    </dd>
    <dt>[:toggle].isOpen <code> tracked property</code></dt>
    <dd>
      <p>Hook into this tracked property if you need to access the state of `isOpen`.</p>
    </dd>
    <dt>&lt;:content&gt; <code>named block</code></dt>
    <dd>
      <p>This is a named block where to pass the actual content that is shown/hidden upon toggling.</p>
    </dd>
    <dt>[:content].close <code> function</code></dt>
    <dd>
      <p>Function that can be called to programmatically close the dropdown.</p>
    </dd>
    <dt>onClose <code>function</code></dt>
    <dd>
      <p>Callback function invoked when the dropdown is closed (if provided).</p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">§</a> How to use</h3>
  <p class="dummy-paragraph">Invocation of the component would look something like this:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code="
      <Hds::Disclosure>
        <:toggle>
          your interactive element here (usually a button)
        </:toggle>
        <:content>
          your content here
        </:content>
      </Hds::Disclosure>
    "
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">To actually work, you need an interactive element that can trigger a custom event handler
    provided by the
    <code class="dummy-code">:toggle</code>
    block (is passed via
    <code class="dummy-code">hash</code>
    by Ember). This element is usually usually a button, or a component that renders a button (for accessibility
    reasons).
  </p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Disclosure>
        <:toggle as |t|>
          <button type="button" \{{on "click" t.onClickToggle}}>Click me</button>
        </:toggle>
        <:content>
          your content here
        </:content>
      </Hds::Disclosure>
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">When the content is disclosed, the container can be closed in different way: toggling again
    the visibility via the button (<code class="dummy-code">click</code>
    or
    <code class="dummy-code">enter/return</code>), clicking outside of the content, or via the
    <code class="dummy-code">esc</code>
    key.</p>
  <p class="dummy-paragraph">
    <strong>Important:</strong>
    The "content" is not positioned in any way in relation to the toggle: this responsibility is left to the consumers
    (eg by applying a
    <code class="dummy-code">position: absolute</code>
    to a wrapper around the content that is passed to the
    <code class="dummy-code">:content</code>
    block).</p>
</section>

<DummySection::Showcase>

  <h4 class="dummy-h4">Variants</h4>

  <p class="dummy-paragraph">with generic HTML
    <code class="dummy-code">&lt;button&gt;</code>
    and generic content (placeholder)</p>
  <div class="dummy-disclosure-container">
    <Hds::Disclosure>
      <:toggle as |t|>
        <button type="button" {{on "click" t.onClickToggle}}>
          Click me
          <FlightIcon @name={{if t.isOpen "chevron-up" "chevron-down"}} />
        </button>
      </:toggle>
      <:content>
        <DummyPlaceholder @text="some generic content here" @width="200" @height="90" @background="#FAFAFA" />
      </:content>
    </Hds::Disclosure>
  </div>

  <p class="dummy-paragraph">with generic HTML
    <code class="dummy-code">&lt;button&gt;</code>
    and generic list of
    <code class="dummy-code">&lt;a&gt;</code>
    links</p>
  <div class="dummy-disclosure-container">
    <Hds::Disclosure>
      <:toggle as |t|>
        <button type="button" {{on "click" t.onClickToggle}}>Click me</button>
      </:toggle>
      <:content as |c|>
        <ul class="dummy-disclosure-content-list-of-links">
          <li>
            <a href="https://google.com">Link to Google</a>
          </li>
          <li>
            <button type="button" {{on "click" c.close}}>Button that closes the disclosed content on click</button>
          </li>
        </ul>
      </:content>
    </Hds::Disclosure>
  </div>

  <p class="dummy-paragraph">with
    <code class="dummy-code">&lt;Hds::Button&gt;</code>
    and generic list of
    <code class="dummy-code">&lt;a&gt;</code>
    links</p>
  <div class="dummy-disclosure-container">
    <Hds::Disclosure>
      <:toggle as |t|>
        <Hds::Button @icon="chevron-down" @iconPosition="trailing" @text="Click me" {{on "click" t.onClickToggle}} />
      </:toggle>
      <:content as |c|>
        <ul class="dummy-disclosure-content-list-of-links">
          <li>
            <a href="https://google.com">Link to Google</a>
          </li>
          <li>
            <button type="button" {{on "click" c.close}}>Button that closes the disclosed content on click</button>
          </li>
        </ul>
      </:content>
    </Hds::Disclosure>
  </div>

  <p class="dummy-paragraph">with
    <code class="dummy-code">&lt;Hds::Button&gt;</code>
    inside a larger container and generic list of
    <code class="dummy-code">&lt;a&gt;</code>
    links</p>
  <div class="dummy-disclosure-container">
    <Hds::Disclosure>
      <:toggle as |t|>
        <div class="dummy-disclosure-button-wrapper">
          <Hds::Button @icon="chevron-down" @iconPosition="trailing" @text="Click me" {{on "click" t.onClickToggle}} />
        </div>
      </:toggle>
      <:content as |c|>
        <ul class="dummy-disclosure-content-list-of-links">
          <li>
            <a href="https://google.com">Link to Google</a>
          </li>
          <li>
            <button type="button" {{on "click" c.close}}>Button that closes the disclosed content on click</button>
          </li>
        </ul>
      </:content>
    </Hds::Disclosure>
  </div>

</DummySection::Showcase>