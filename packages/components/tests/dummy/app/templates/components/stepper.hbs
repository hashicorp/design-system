{{page-title "Stepper Indicator Component"}}

<h2 class="dummy-h2">Stepper Indicator Component</h2>

<DummyStepperIndicatorBanner />

<section>
  <h3 class="dummy-h3" id="overview"><a href="#overview" class="dummy-link-section">§</a> Overview</h3>
  <p class="dummy-paragraph">A stepper indicator helps the user maintain context and directionality when advancing
    through a multi-step flow or feature, and in certain circumstances, could act as a navigational device between
    steps. It is generally assembled as part of a larger stepper pattern.</p>
  <p class="dummy-paragraph">For practical accessibility purposes, consider a stepper (the whole component) to be a list
    of items, with each step being a list item.</p>
  <p class="dummy-paragraph">
    As of this writing the HDS team publishes two separate (but related)
    <code class="dummy-code">Stepper Indicator</code>
    components that serve different hierarchical purposes.
    <ol>
      <li>The
        <code class="dummy-code">Stepper::Step::Indicator</code>
        component: used in higher-order step-based flows that contain multiple steps that a user must complete
        sequentially.</li>
      <li>The
        <code class="dummy-code">Stepper::Task::Indicator</code>
        component: used either on its own to denote smaller task-oriented flows or in combination with the
        <code class="dummy-code">Step</code>
        indicator to list multiple tasks within a step.</li>
    </ol>
  </p>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">§</a> Component API</h3>
  <p class="dummy-banner dummy-banner--info dummy-paragraph"><FlightIcon @name="info" />
    Note: Since the
    <code class="dummy-code">indicator</code>
    components are meant to be assembled into larger stepper item patterns, the component's interactive states should be
    tied to the larger pattern. This includes
    <code class="dummy-code">hover</code>,
    <code class="dummy-code">active</code>, and
    <code class="dummy-code">focus</code>.</p>
  <h4 class="dummy-h4" id="component-api-stepper-indicator">Stepper::Step::Indicator</h4>
  <p class="dummy-paragraph">Here is the API for the <code class="dummy-code">Step::Indicator</code> component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-stepper-indicator">
    <dt>status <code>enum</code></dt>
    <dd>
      <p>Acceptable values:</p>
      <ol>
        <li class="default">incomplete</li>
        <li>progress</li>
        <li>processing</li>
        <li>complete</li>
      </ol>
    </dd>
    <dt>isInteractive <code>boolean</code></dt>
    <dd>
      <p>Default: <span class="default">true</span></p>
      <p>By default the
        <code class="dummy-code">Indicator::Step</code>
        is not interactive and has no hover state. Usage for this variant is generally recommended for onboarding-type
        sequences or list-item steps.</p>
    </dd>
    <dt>text <code>string</code></dt>
    <dd>
      <p>Generally corresponds with the numerical value of the index of the item in an array of multiple steps.</p>
    </dd>
  </dl>
  <h4 class="dummy-h4" id="component-api-stepper-indicator-task">Stepper::Task::Indicator</h4>
  <p class="dummy-paragraph">Here is the API for the <code class="dummy-code">Task::Indicator</code> component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-stepper-indicator">
    <dt>status <code>enum</code></dt>
    <dd>
      <p>Acceptable values:</p>
      <ol>
        <li class="default">incomplete</li>
        <li>progress</li>
        <li>processing</li>
        <li>complete</li>
      </ol>
    </dd>
    <dt>isInteractive <code>boolean</code></dt>
    <dd>
      <p>Default: <span class="default">true</span></p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">§</a> How to use</h3>
  <p class="dummy-paragraph">The stepper indicator is used to indicate the relational step number or value, helping the
    user maintain context in a multi-step flow or sequence. It should be used in larger stepper item patterns with an
    appropriate label, description, and visual language indicating directionality.</p>
  <p class="dummy-paragraph">There are two types of indicators,
    <code class="dummy-code">step</code>
    and
    <code class="dummy-code">task</code>
    which can be used in conjunction, or separately depending on hierarchical needs or requirements.</p>

  <h4 class="dummy-h4">Stepper::Step::Indicator</h4>
  <h5 class="dummy-h5">Basic use</h5>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" />
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" />

  <h5 class="dummy-h5">Adding interactivity</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="incomplete" @isInteractive={{true}} />

  <h5 class="dummy-h5">Indicating status</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="progress" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="progress" @isInteractive={{true}} />

  <h5 class="dummy-h5">Indicating processing</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="processing" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="processing" @isInteractive={{true}} />

  <h5 class="dummy-h5">Rendering a complete step</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Step::Indicator @text="1" @status="complete" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Step::Indicator @text="1" @status="complete" @isInteractive={{true}} />

  <h4 class="dummy-h4">Stepper::Task::Indicator</h4>
  <h5 class="dummy-h5">Basic use</h5>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="incomplete" />
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="incomplete" />

  <h5 class="dummy-h5">Adding interactivity</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="incomplete" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="incomplete" @isInteractive={{true}} />

  <h5 class="dummy-h5">Indicating status</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="progress" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="progress" @isInteractive={{true}} />

  <h5 class="dummy-h5">Indicating processing</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="processing" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="processing" @isInteractive={{true}} />

  <h5 class="dummy-h5">Rendering a complete task</h5>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Stepper::Task::Indicator @status="complete" @isInteractive=\{{true}} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Stepper::Task::Indicator @status="complete" @isInteractive={{true}} />

</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">§</a>
    Design guidelines</h3>
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a
        href="https://www.figma.com/file/noyY6dUMDYjmySpHcMjhkN/branch/oz5bE2GuLPyFCTznnYIBAK/HDS-Product---Components?node-id=15649%3A38370"
        target="_blank"
        rel="noopener noreferrer"
      >Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/stepper-indicator-design-usage.png" alt="" role="none" />
  </div>
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">§</a> Accessibility</h3>
  <p class="dummy-paragraph">The
    <code class="dummy-code">Stepper Indicator</code>
    components are not WCAG-conformant on their own.</p>
  <h4 class="dummy-h4">Applicable WCAG Success Criteria (Reference)</h4>
  <p class="dummy-paragraph">There is no specific WCAG Success Criteria applicable to the stepper indicator on its own.
    Since we are only providing the stepper indicator and not the entire stepper (at this time), authors are responsible
    to ensure WCAG conformance is met in any components they build.</p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">§</a> Showcase</h3>
  <h4 class="dummy-h4">Status</h4>
  <h5 class="dummy-h5">Default</h5>
  <div class="dummy-stepper-indicator-grid">
    {{#each @model.STEP_STATUSES as |status|}}
      <div>
        <span class="dummy-text-small">{{capitalize status}}</span>
        <br />
        <Hds::Stepper::Step::Indicator @status={{status}} @text="1" />
      </div>
    {{/each}}
  </div>
  <h5 class="dummy-h5">Interactive</h5>
  {{#each @model.STEP_STATUSES as |status|}}
    <div class="dummy-stepper-indicator-grid">
      {{#each @model.STATES as |state|}}
        <div>
          <span class="dummy-text-small">{{capitalize status}}/{{state}}</span>
          <br />
          <Hds::Stepper::Step::Indicator
            @status={{status}}
            @text="1"
            @isInteractive={{true}}
            mock-state-value={{state}}
          />
        </div>
      {{/each}}
    </div>
  {{/each}}
  <h4 class="dummy-h4">Task</h4>
  <h5 class="dummy-h5">Default</h5>
  <div class="dummy-stepper-indicator-grid">
    {{#each @model.TASK_STATUSES as |status|}}
      <div>
        <span class="dummy-text-small">{{capitalize status}}</span>
        <br />
        <Hds::Stepper::Task::Indicator @status={{status}} @text="1" />
      </div>
    {{/each}}
  </div>
  <h5 class="dummy-h5">Interactive</h5>
  {{#each @model.TASK_STATUSES as |status|}}
    <div class="dummy-stepper-indicator-grid">
      {{#each @model.STATES as |state|}}
        <div>
          <span class="dummy-text-small">{{capitalize status}}/{{state}}</span>
          <br />
          <Hds::Stepper::Task::Indicator @status={{status}} @isInteractive={{true}} mock-state-value={{state}} />
        </div>
      {{/each}}
    </div>
  {{/each}}
</section>