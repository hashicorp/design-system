{{page-title "Table Component"}}
<h2 class="dummy-h2">
  Table
</h2>
<p class="dummy-paragraph">
  This table component is the Cloud-UI
  <code class="dummy-code">&lt;Table&gt;</code>
  with a few adjustments for improved WCAG conformance.
</p>
{{! ADD YOUR CONTENT BELOW }}
{{! Please follow as much as possible what it's already done in other components. }}
{{! You can start by copy&pasting it, if you want, and then adapt it according to your needs. }}
{{! Once done, please remove these comments (they're created by the generator). }}
<section>
  <h3 class="dummy-h3" id="overview">
    <a href="#overview" class="dummy-link-section" aria-labelledby="overview">§</a>
    Overview
  </h3>
  <p class="dummy-paragraph">A table element is used to display tabular data.</p>
  <p class="dummy-paragraph">There are two named blocks in this component:
    <code class="dummy-code">:head</code>
    and
    <code class="dummy-code">:body</code>.</p>
  <h4 class="dummy-h4">:head named block</h4>
  <p class="dummy-paragraph">This represents the
    <code class="dummy-code">thead</code>
    of the table. It yields within a single
    <code class="dummy-code">tr</code>
    element that is meant to represent column headers. It also yields a single contextual component,
    <code class="dummy-code">SortBy</code>
    which applies the
    <code class="dummy-code">@sortProperty</code>
    and
    <code class="dummy-code">@sortDescending</code>
    args from the
    <code class="dummy-code">HdsTable</code>
    component. This way, only
    <code class="dummy-code">@field</code>
    needs to be set to define an initial field to sort by.</p>
  <h4 class="dummy-h4">:body named block</h4>
  <p class="dummy-paragraph">This represents the
    <code class="dummy-code">tbody</code>
    of the table. It yields
    <code class="dummy-code">n</code>
    number of times where
    <code class="dummy-code">n</code>
    is equal to the length of the
    <code class="dummy-code">@model</code>
    arg provided to Table. The yield happens directly in the
    <code class="dummy-code">tbody</code>
    element to allow for multiple
    <code class="dummy-code">tr</code>
    elements for a single record. The yielded value is the exact record from the
    <code class="dummy-code">@model</code>
    array.</p>
</section>
<section>
  <h3 class="dummy-h3" id="component-api">
    <a href="#component-api" class="dummy-link-section">§</a>
    Component API
  </h3>
  <p class="dummy-paragraph" id="component-api-table">
    Here is the API for the component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-table">
    <dt>model <code>array</code></dt>
    <dd><p>Sets the data source that gets yielded by the <code class="dummy-code">:body</code> named block.</p></dd>
    <dt>sortProperty <code>string</code></dt>
    <dd><p>Specifies which field the
        <code class="dummy-code">@model</code>
        is sorted by. This does not perform a sort; it is only used to set state on the contextual
        <code class="dummy-code">SortBy</code>
        components.
      </p></dd>
    <dt>sortDescending <code>boolean</code></dt>
    <dd><p>Specifies which direction the
        <code class="dummy-code">@model</code>
        is sorted. Descending when
        <code class="dummy-code">true</code>, ascending when
        <code class="dummy-code">false</code>. This does not perform a sort. It is only used to set states on the
        contextual
        <code class="dummy-code">SortBy</code>
        components.</p></dd>
  </dl>
</section>
<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">§</a> How to use</h3>
  <p class="dummy-paragraph">There are several types of tables, please be sure to choose the one that works best for
    your situation.</p>
  <h4 class="dummy-h4">Simple Table</h4>
  <p class="dummy-paragraph">This is how you would invoke the simple table component:</p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="handlebars"
    @code="<Hds::Table @model=\{{this.model}} @sortProperty=\{{this.sortby}} @sortDescending=\{{false}}>
    <:head>
      <th>Artist</th>
      <th>Album</th>
      <th>Release Year</th>
    </:head>
    <:body as |row|>
      <tr>
        <td>\{{row.artist}}</td>
        <td>\{{row.album}}</td>
        <td>\{{row.year}}</td>
      </tr>
    </:body>
  </Hds::Table>"
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <h4 class="dummy-h4">Table with sorting support</h4>
  <p class="dummy-paragraph">
    Here's what the controller could look like for the sorting on the table:
  </p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-trailing-spaces }}
  <CodeBlock
    @language="javascript"
    @code="import Controller from'@ember/controller';
      import { action } from'@ember/object';
      import { tracked } from'@glimmer/tracking';

      export default class TableController extends Controller {
        @tracked sort ='name';
        @tracked sortDirection ='asc';

        @action
        onSort(column) {
          if (this.sort === column) {
            this.sortDirection = this.sortDirection ==='asc' ?'desc' :'asc';
          } else {
            this.sort = column;
            this.sortDirection ='asc';
          }
        }
      }"
  />
  {{! template-lint-enable no-trailing-spaces }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">
    Then in the page template, invoke the table with sorting support:
  </p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="handlebars"
    @code="  <Hds::Table @model=\{{this.model}}>
    <:head>
      <th>Artist</th>
      <th>Album</th>
      <th>Release Year</th>
    </:head>
    <:body as |row|>
      <tr>
        <td>\{{row.artist}}</td>
        <td>\{{row.album}}</td>
        <td>\{{row.year}}</td>
      </tr>
    </:body>
  </Hds::Table>"
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
</section>
<section>
  <h3 class="dummy-h3" id="design-guidelines">
    <a href="#design-guidelines" class="dummy-link-section">§</a>
    Design guidelines
  </h3>
  <p class="dummy-paragraph">Coming Soon</p>
  {{! UNCOMMENT THIS BLOCK (once the link and/or the image are available) }}
  {{!
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a href="[ADD THE LINK TO THE FIGMA FILE/PAGE HERE!]" target="_blank" rel="noopener noreferrer">Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/table-design-usage.png" alt="" role="none" />
  </div>
  }}
</section>
<section>
  <h3 class="dummy-h3" id="accessibility">
    <a href="#accessibility" class="dummy-link-section">§</a>
    Accessibility
  </h3>
  <p class="dummy-paragraph">This component has been designed and implemented with accessibility in mind. When used as
    recommended, there should not be any WCAG conformance issues with this component. Developers should ensure that any
    table customizations they implement also meet the applicable WCAG Success Criteria.
  </p>
  <h4 class="dummy-h4">
    Applicable WCAG Success Criteria (Reference)
  </h4>
  <p class="dummy-paragraph">
    This section is for reference only. This component intends to conform to the following WCAG success criteria:
  </p>
  <ul class="dummy-list">
    <li>1.3.1:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/info-and-relationships.html"
        rel="noopener noreferrer"
        target="_blank"
      >Info and Relationships (A)</a>: Information, structure, and relationships conveyed through presentation can be
      programmatically determined or are available in text.</li>
    <li>1.3.2
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/meaningful-sequence.html"
        rel="noopener noreferrer"
        target="_blank"
      >Meaningful Sequence (A)</a>: When the sequence in which content is presented affects its meaning, a correct
      reading sequence can be programmatically determined.</li>
    <li>1.4.1
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html"
        rel="noopener noreferrer"
        target="_blank"
      >Use of Color (A)</a>: Color is not used as the only visual means of conveying information, indicating an action,
      prompting a response, or distinguishing a visual element.</li>
    <li>1.4.3
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/xxx.html" rel="noopener noreferrer" target="_blank">Contrast
        (Minimum) (AA)</a>: The visual presentation of text and images of text has a contrast ratio of at least 4.5:1</li>
    <li>1.4.4
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/resize-text.html"
        rel="noopener noreferrer"
        target="_blank"
      >Resize text (AA)</a>: Except for captions and images of text, text can be resized without assistive technology up
      to 200 percent without loss of content or functionality.</li>
    <li>1.4.10
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/reflow.html" rel="noopener noreferrer" target="_blank">Reflow
        (AA)</a>: Content can be presented without loss of information or functionality, and without requiring scrolling
      in two dimensions (some exceptions apply)</li>
    <li>1.4.11
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html"
        rel="noopener noreferrer"
        target="_blank"
      >Non-text Contrast (AA)</a>: The visual presentation of the following have a contrast ratio of at least 3:1
      against adjacent color(s): user interface components; graphical objects.</li>
    <li>1.4.12
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html"
        rel="noopener noreferrer"
        target="_blank"
      >Text Spacing (AA)</a>: no loss of content or functionality occurs by setting all of the following and by changing
      no other style property: line height set to 1.5; spacing following paragraphs set to at least 2x the font size;
      letter-spacing set at least 0.12x of the font size, word spacing set to at least 0.16 times the font size.</li>
    <li>1.4.13
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html"
        rel="noopener noreferrer"
        target="_blank"
      >Content on Hover or Focus (AA)</a>: Where receiving and then removing pointer hover or keyboard focus triggers
      additional content to become visible and then hidden, the following are true: dismissible, hoverable, persistent
      (see link)</li>
    <li>2.1.1
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html"
        rel="noopener noreferrer"
        target="_blank"
      >Keyboard (A)</a>: All functionality of the content is operable through a keyboard interface.</li>
    <li>2.1.2
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/no-keyboard-trap.html"
        rel="noopener noreferrer"
        target="_blank"
      >No Keyboard Trap (A)</a>: If keyboard focus can be moved to a component of the page using a keyboard interface,
      then focus can be moved away from that component using only a keyboard interface.
    </li>
    <li>2.1.4
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/character-key-shortcuts.html"
        rel="noopener noreferrer"
        target="_blank"
      >Character Key Shortcuts (A)</a>: If a keyboard shortcut is implemented in content using only letter (including
      upper- and lower-case letters), punctuation, number, or symbol characters, then it should be able to be turned
      off, remapped, or active only on focus.
    </li>
    <li>2.4.3
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/focus-order.html"
        rel="noopener noreferrer"
        target="_blank"
      >Focus Order (A)</a>: If a Web page can be navigated sequentially and the navigation sequences affect meaning or
      operation, focusable components receive focus in an order that preserves meaning and operability.</li>
    <li>2.4.7
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/focus-visible.html"
        rel="noopener noreferrer"
        target="_blank"
      >Focus Visible (AA)</a>: Any keyboard operable user interface has a mode of operation where the keyboard focus
      indicator is visible.</li>
    <li>4.1.1
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/parsing.html"
        rel="noopener noreferrer"
        target="_blank"
      >Parsing (A)</a>: In content implemented using markup languages, elements have complete start and end tags,
      elements are nested according to their specifications, elements do not contain duplicate attributes, and any IDs
      are unique.</li>
    <li>4.1.2
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html"
        rel="noopener noreferrer"
        target="_blank"
      >Name, Role, Value (A)</a>: For all user interface components, the name and role can be programmatically
      determined; states, properties, and values that can be set by the user can be programmatically set; and
      notification of changes to these items is available to user agents, including assistive technologies</li>
  </ul>
</section>
<section data-test-percy>
  <h3 class="dummy-h3" id="showcase">
    <a href="#showcase" class="dummy-link-section">§</a>
    Showcase
  </h3>
  <h4 class="dummy-h4">
    Static Table (non-sortable)
  </h4>
  <Hds::Table @model={{this.model}}>
    <:head>
      <th>Artist</th>
      <th>Album</th>
      <th>Release Year</th>
    </:head>
    <:body as |row|>
      <tr>
        <td>{{row.artist}}</td>
        <td>{{row.album}}</td>
        <td>{{row.year}}</td>
      </tr>
    </:body>
  </Hds::Table>
  <h4 class="dummy-h4">
    Sortable Table
  </h4>
  <Hds::Table @model={{this.model}} @sortProperty={{this.sortby}} @sortDescending={{false}}>
    <:head as |h|>
      <h.SortBy @field="artist">Artist</h.SortBy>
      <h.SortBy @field="album">Album</h.SortBy>
      <h.SortBy @field="year">Release Year</h.SortBy>
    </:head>
    <:body as |row|>
      <tr>
        <td>{{row.artist}}</td>
        <td>{{row.album}}</td>
        <td>{{row.year}}</td>
      </tr>
    </:body>
  </Hds::Table>
</section>