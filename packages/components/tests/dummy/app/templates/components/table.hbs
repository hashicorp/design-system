{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

{{page-title "Table Component"}}

<Shw::Text::H1>Table</Shw::Text::H1>

<section data-test-percy>

  <Shw::Text::H2>Multi-select</Shw::Text::H2>

  <Shw::Text::H4 @tag="h3">Table with model</Shw::Text::H4>

  <Hds::Table
    id="test"
    @isSelectable={{true}}
    @onSelectionChange={{this.onSelectionChangeLogArguments}}
    @model={{this.model.selectableData}}
    @columns={{array
      (hash key="lorem" label="Row #")
      (hash key="ipsum" label="Ipsum")
      (hash key="dolor" label="Dolor")
    }}
  >
    <:body as |B|>
      <B.Tr
        @selectionKey={{B.data.id}}
        @isSelected={{B.data.isSelected}}
        @selectionAriaLabelSuffix="row #{{B.data.lorem}}"
      >
        <B.Td>{{B.data.lorem}}</B.Td>
        <B.Td>{{B.data.ipsum}}</B.Td>
        <B.Td>{{B.data.dolor}}</B.Td>
      </B.Tr>
    </:body>
  </Hds::Table>

  <Shw::Text::H4 @tag="h3">Table without model defined</Shw::Text::H4>

  <Hds::Table @isSelectable={{true}} @onSelectionChange={{this.onSelectionChangeLogArguments}}>
    <:head as |H|>
      <H.Tr>
        <H.Th>Row #</H.Th>
        <H.Th>Ipsum</H.Th>
        <H.Th>Dolor</H.Th>
      </H.Tr>
    </:head>
    <:body as |B|>
      <B.Tr @selectionKey="row1" @selectionAriaLabelSuffix="row #1">
        <B.Th>1</B.Th>
        <B.Td>Cell Content</B.Td>
        <B.Td>Cell Content</B.Td>
      </B.Tr>
      <B.Tr @selectionKey="row2" @isSelected={{true}} @selectionAriaLabelSuffix="row #2">
        <B.Th>2</B.Th>
        <B.Td>Cell Content</B.Td>
        <B.Td>Cell Content</B.Td>
      </B.Tr>
      <B.Tr @selectionKey="row3" @selectionAriaLabelSuffix="row #3">
        <B.Th>3</B.Th>
        <B.Td>Cell Content</B.Td>
        <B.Td>Cell Content</B.Td>
      </B.Tr>
      <B.Tr @selectionKey="row4" @selectionAriaLabelSuffix="row #4">
        <B.Th>4</B.Th>
        <B.Td>Cell Content</B.Td>
        <B.Td>Cell Content</B.Td>
      </B.Tr>
    </:body>
  </Hds::Table>

  <Shw::Divider @level={{2}} />

  <Shw::Text::H3>Functional examples</Shw::Text::H3>

  <Shw::Text::H4>With inline filter</Shw::Text::H4>

  <div class="shw-component-table-demo-topbar">
    <div class="shw-component-table-demo-topbar__toggle">
      <input
        id="multi-select-demo1__toggle-scope"
        type="checkbox"
        checked={{this.multiSelectToggleScope__demo1}}
        {{on "change" this.toggleMultiSelectToggleScope__demo1}}
      />
      <label for="multi-select-demo1__toggle-scope">Extend "Select All" scope to non-displayed rows</label>
    </div>
    <div class="shw-component-table-demo-topbar__toggle">
      <input
        id="multi-select-demo1__toggle-debug"
        type="checkbox"
        checked={{this.multiSelectToggleDebug__demo1}}
        {{on "change" this.toggleMultiSelectToggleDebug__demo1}}
      />
      <label for="multi-select-demo1__toggle-debug">Show all rows' state</label>
    </div>
    <div class="shw-component-table-demo-topbar__action">
      <label for="multi-select-demo1__filter">Filter:</label>
      <Hds::Form::Select::Base
        id="multi-select-demo1__filter"
        {{on "change" this.onChangeMultiSelectFilter__demo1}}
        as |C|
      >
        <C.Options>
          <option value="all" selected={{eq this.multiSelectFilterRows__demo1 "all"}}>Show all rows</option>
          <option value="even" selected={{eq this.multiSelectFilterRows__demo1 "even"}}>Show even rows</option>
          <option value="odd" selected={{eq this.multiSelectFilterRows__demo1 "odd"}}>Show odd rows</option>
        </C.Options>
      </Hds::Form::Select::Base>
    </div>
  </div>

  <Shw::Flex {{style gap="2rem"}} @direction="column" as |SF|>
    <SF.Item @label="With data model">
      <Hds::Table
        @isSelectable={{true}}
        @onSelectionChange={{this.onSelectionChangeWithModel__demo1}}
        @model={{this.multiSelectFilteredData__demo1}}
        @columns={{array
          (hash key="lorem" label="Row #")
          (hash key="ipsum" label="Ipsum")
          (hash key="dolor" label="Dolor")
        }}
      >
        <:body as |B|>
          <B.Tr
            @selectionKey={{B.data.id}}
            @isSelected={{B.data.isSelected}}
            @selectionAriaLabelSuffix="row #{{B.data.id}}"
          >
            <B.Td>{{B.data.lorem}}</B.Td>
            <B.Td>{{B.data.ipsum}}</B.Td>
            <B.Td>{{B.data.dolor}}</B.Td>
          </B.Tr>
        </:body>
      </Hds::Table>
      {{#if this.multiSelectToggleDebug__demo1}}
        {{#each this.multiSelectModelData__demo1 as |row|}}
          <pre>row{{row.id}} = {{(if row.isSelected "✅")}}</pre>
        {{/each}}
      {{/if}}
    </SF.Item>
    <SF.Item @label="No model">
      <Hds::Table @isSelectable={{true}} @onSelectionChange={{this.onSelectionChangeWithoutModel__demo1}}>
        <:head as |H|>
          <H.Tr>
            <H.Th>Row #</H.Th>
            <H.Th>Ipsum</H.Th>
            <H.Th>Dolor</H.Th>
          </H.Tr>
        </:head>
        <:body as |B|>
          {{#if (not (eq this.multiSelectFilterRows__demo1 "even"))}}
            {{! Notice: here for the `selectionKey` we're using strings instead of numbers (on purpose, to test that everything works as expected) }}
            <B.Tr @selectionKey="row1" @isSelected={{get this.multiSelectNoModelState__demo1 "row1"}}>
              <B.Th>1</B.Th>
              <B.Td>Cell Content</B.Td>
              <B.Td>Cell Content</B.Td>
            </B.Tr>
          {{/if}}
          {{#if (not (eq this.multiSelectFilterRows__demo1 "odd"))}}
            <B.Tr @selectionKey="row2" @isSelected={{get this.multiSelectNoModelState__demo1 "row2"}}>
              <B.Th>2</B.Th>
              <B.Td>Cell Content</B.Td>
              <B.Td>Cell Content</B.Td>
            </B.Tr>
          {{/if}}
          {{#if (not (eq this.multiSelectFilterRows__demo1 "even"))}}
            <B.Tr @selectionKey="row3" @isSelected={{get this.multiSelectNoModelState__demo1 "row3"}}>
              <B.Th>3</B.Th>
              <B.Td>Cell Content</B.Td>
              <B.Td>Cell Content</B.Td>
            </B.Tr>
          {{/if}}
          {{#if (not (eq this.multiSelectFilterRows__demo1 "odd"))}}
            <B.Tr @selectionKey="row4" @isSelected={{get this.multiSelectNoModelState__demo1 "row4"}}>
              <B.Th>4</B.Th>
              <B.Td>Cell Content</B.Td>
              <B.Td>Cell Content</B.Td>
            </B.Tr>
          {{/if}}
        </:body>
      </Hds::Table>
      {{#if this.multiSelectToggleDebug__demo1}}
        <pre>row1 = {{(if (get this.multiSelectNoModelState__demo1 "row1") "✅")}}</pre>
        <pre>row2 = {{(if (get this.multiSelectNoModelState__demo1 "row2") "✅")}}</pre>
        <pre>row3 = {{(if (get this.multiSelectNoModelState__demo1 "row3") "✅")}}</pre>
        <pre>row4 = {{(if (get this.multiSelectNoModelState__demo1 "row4") "✅")}}</pre>
      {{/if}}
    </SF.Item>
  </Shw::Flex>

  <Shw::Text::H4>With pagination</Shw::Text::H4>

  <div class="shw-component-table-demo-topbar">
    <div class="shw-component-table-demo-topbar__toggle">
      <input
        id="multi-select-demo2__toggle"
        type="checkbox"
        checked={{this.multiSelectToggleScope__demo2}}
        {{on "change" this.toggleMultiSelectPaginatedToggleScope__demo2}}
      />
      <label for="multi-select-demo2__toggle">Extend "Select All" scope to non-displayed rows</label>
    </div>
    <div class="shw-component-table-demo-topbar__toggle">
      <input
        id="multi-select-demo2__toggle-debug"
        type="checkbox"
        checked={{this.multiSelectToggleDebug__demo2}}
        {{on "change" this.toggleMultiSelectPaginatedToggleDebug__demo2}}
      />
      <label for="multi-select-demo2__toggle-debug">Show all rows' state</label>
    </div>
  </div>

  <div class="shw-component-table-with-pagination-demo-wrapper">
    <Hds::Table
      @isSelectable={{true}}
      @onSelectionChange={{this.onMultiSelectPaginatedSelectionChange__demo2}}
      @model={{this.multiSelectPaginatedData_demo2}}
      @columns={{array
        (hash key="lorem" label="Row #")
        (hash key="ipsum" label="Ipsum")
        (hash key="dolor" label="Dolor")
      }}
    >
      <:body as |B|>
        <B.Tr
          @selectionKey={{B.data.id}}
          @isSelected={{B.data.isSelected}}
          @selectionAriaLabelSuffix="row #{{B.data.id}}"
        >
          <B.Td>{{B.data.lorem}}</B.Td>
          <B.Td>{{B.data.ipsum}}</B.Td>
          <B.Td>{{B.data.dolor}}</B.Td>
        </B.Tr>
      </:body>
    </Hds::Table>
    <Hds::Pagination::Numbered
      @totalItems={{this.multiSelectPaginatedTotalItems_demo2}}
      @currentPageSize={{this.multiSelectPaginatedCurrentPageSize_demo2}}
      @pageSizes={{array 2 4}}
      @currentPage={{this.multiSelectPaginatedCurrentPage_demo2}}
      @onPageChange={{this.onMultiSelectPaginatedPageChange_demo2}}
      @onPageSizeChange={{this.onMultiSelectPaginatedPageSizeChange_demo2}}
      @ariaLabel="Pagination for basic multi-select table"
    />
    {{#if this.multiSelectToggleDebug__demo2}}
      {{#each this.multiSelectModelData__demo2 as |row|}}
        <pre>row{{row.id}} = {{(if row.isSelected "✅")}}</pre>
      {{/each}}
    {{/if}}
  </div>

  <Shw::Text::H4>Delete selected rows</Shw::Text::H4>

  <Shw::Text::Body>This demo emulates, for example, when a user needs to delete the selected users.</Shw::Text::Body>

  <div class="shw-component-table-demo-topbar">
    <div class="shw-component-table-demo-topbar__toggle">
      <input
        id="multi-select-demo3__toggle"
        type="checkbox"
        checked={{this.multiSelectToggleScope__demo3}}
        {{on "change" this.toggleMultiSelectPaginatedToggleScope__demo3}}
      />
      <label for="multi-select-demo3__toggle">Extend "Select All" scope to non-displayed rows</label>
    </div>
    <div class="shw-component-table-demo-topbar__toggle">
      <input
        id="multi-select-demo3__toggle-debug"
        type="checkbox"
        checked={{this.multiSelectToggleDebug__demo3}}
        {{on "change" this.toggleMultiSelectPaginatedToggleDebug__demo3}}
      />
      <label for="multi-select-demo3__toggle-debug">Show all rows' state</label>
    </div>
    <div class="shw-component-table-demo-topbar__action">
      <Hds::Button @text="Delete users" @icon="trash" {{on "click" this.multiSelectDeleteSelectedUsers_demo3}} />
    </div>
  </div>

  <div class="shw-component-table-with-pagination-demo-wrapper">
    <Hds::Table
      @isSelectable={{true}}
      @onSelectionChange={{this.onMultiSelectUsersSelectionChange__demo3}}
      @model={{this.multiSelectUsersData_demo3}}
      @columns={{array
        (hash key="id" label="ID")
        (hash key="name" label="Name")
        (hash key="email" label="Email")
        (hash key="role" label="Role")
      }}
    >
      <:body as |B|>
        <B.Tr
          @selectionKey={{B.data.id}}
          @isSelected={{B.data.isSelected}}
          @selectionAriaLabelSuffix="row #{{B.data.id}}"
        >
          <B.Td>{{B.data.id}}</B.Td>
          <B.Td>{{B.data.name}}</B.Td>
          <B.Td>{{B.data.email}}</B.Td>
          <B.Td>{{B.data.role}}</B.Td>
        </B.Tr>
      </:body>
    </Hds::Table>
    <Hds::Pagination::Numbered
      @totalItems={{this.multiSelectUsersTotalItems_demo3}}
      @currentPageSize={{this.multiSelectUsersCurrentPageSize_demo3}}
      @pageSizes={{array 4 8}}
      @currentPage={{this.multiSelectUsersCurrentPage_demo3}}
      @onPageChange={{this.onMultiSelectUsersPageChange_demo3}}
      @onPageSizeChange={{this.onMultiSelectUsersPageSizeChange_demo3}}
      @ariaLabel="Pagination for multi-select table with delete action"
    />
    {{#if this.multiSelectToggleDebug__demo3}}
      {{#each this.multiSelectModelData__demo3 as |row|}}
        <pre>row{{row.id}} = {{(if row.isSelected "✅")}}</pre>
      {{/each}}
    {{/if}}
  </div>

  <Shw::Text::H4>Execute action on selected rows</Shw::Text::H4>

  <Shw::Text::Body>This demo emulates, for example, when a user needs to download the selected files.</Shw::Text::Body>

  <div class="shw-component-table-demo-topbar">
    <div class="shw-component-table-demo-topbar__action">
      <Hds::Button @text="Animate users" @icon="play" {{on "click" this.multiSelectAnimateSelectedUsers_demo4}} />
    </div>
  </div>

  <Hds::Table
    @isSelectable={{true}}
    @onSelectionChange={{this.onMultiSelectSelectionChange__demo4}}
    @model={{this.multiSelectUserData__demo4}}
    @columns={{array
      (hash key="id" label="ID")
      (hash key="name" label="Name")
      (hash key="email" label="Email")
      (hash key="role" label="Role")
    }}
  >
    <:body as |B|>
      <B.Tr
        @selectionKey={{B.data.id}}
        @isSelected={{B.data.isSelected}}
        @selectionAriaLabelSuffix="row #{{B.data.id}}"
      >
        <B.Td>{{B.data.id}}</B.Td>
        <B.Td>
          <span class={{if B.data.isAnimated "shw-component-table-animate-user"}}>{{B.data.name}}</span>
        </B.Td>
        <B.Td>{{B.data.email}}</B.Td>
        <B.Td>{{B.data.role}}</B.Td>
      </B.Tr>
    </:body>
  </Hds::Table>

</section>