{{page-title "Tag component"}}

<h2 class="dummy-h2">Tag</h2>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">§</a> Component API</h3>
  <p class="dummy-paragraph" id="component-api-tag">Here is the API for the component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-tag">
    <dt>text <code>string</code></dt>
    <dd>
      <p>The text of the tag; or link text when the
        <code>@route</code>
        or
        <code>@href</code>
        are set.</p>
      <p><em>If no text value is defined an error will be thrown.</em></p>
    </dd>
    <dt>href</dt>
    <dd>
      <p>This is the URL parameter that is passed down to the
        <code>&lt;a&gt;</code>
        element.</p>
    </dd>
    <dt>isHrefExternal <code>boolean</code></dt>
    <dd>
      <p>Default: <span class="default">true</span></p>
      <p>This controls if the
        <code>&lt;a&gt;</code>
        link is external and so for security reasons we need to add the
        <code>target="_blank"</code>
        and
        <code>rel="noopener noreferrer"</code>
        attributes to it.</p>
    </dd>
    <dt>route/models/model/query/current-when/replace</dt>
    <dd>
      <p>These are the parameters that are passed down as arguments to the
        <code>&lt;LinkTo&gt;</code>
        /
        <code>&lt;LinkToExternal&gt;</code>
        components.</p>
    </dd>
    <dt>isRouteExternal <code>boolean</code></dt>
    <dd>
      <p>Default: <span class="default">false</span></p>
      <p>This controls if the "LinkTo" is external to the Ember engine (<a
          href="https://ember-engines.com/docs/link-to-external"
          target="_blank"
          rel="noopener noreferrer"
        >more details here</a>) in which case it will use a
        <code>&lt;LinkToExternal&gt;</code>
        instead of a simple
        <code>&lt;LinkTo&gt;</code>
        for the @route.</p>
    </dd>
    <dt>color <code>enum</code></dt>
    <dd>
      <p>Sets the color of a link and it is allowed only when
        <code>@route</code>
        or
        <code>@href</code>
        are set.</p>
      <p>Acceptable values:</p>
      <ol>
        <li class="default">primary</li>
        <li>secondary</li>
      </ol>
    </dd>
    <dt>onDismiss <code>function</code></dt>
    <dd>
      <p>
        The tag can be dismissed by the user. When a function is passed, the "dismiss" button is displayed.
      </p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">§</a> How to use</h3>
  <p class="dummy-paragraph">
    Use tags to indicate an object's categorization, i.e., for filtering. Use a
    <LinkTo @route="components.badge">badge</LinkTo>
    instead for static metadata, status, or to indicate a new feature.
  </p>

  <h4 class="dummy-h4">Basic use</h4>
  <p class="dummy-paragraph">Invocation of the component would look something like this:</p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Tag @text="My text tag" @onDismiss=\{{ your function here }} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">In this case, since no
    <code class="dummy-code">@href</code>
    or
    <code class="dummy-code">@route</code>
    argument is provided it will render the tag as plain text.
  </p>
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Tag @text="My text tag" @onDismiss={{this.noop}} />

  <h4 class="dummy-h4">Color</h4>
  <p class="dummy-paragraph">
    There are two available colors for a link:
    <code class="dummy-code">primary</code>
    and
    <code class="dummy-code">secondary</code>. The default is
    <code class="dummy-code">primary</code>.
  </p>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Tag @color="primary" @text="My link tag" @route="components.tag" @onDismiss=\{{ your function here }} />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}

  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Tag @color="primary" @text="My link tag" @route="components.tag" @onDismiss={{this.noop}} />
  <Hds::Tag @color="secondary" @text="My link tag" @route="components.tag" @onDismiss={{this.noop}} />

  <h4 class="dummy-h4">Dismiss</h4>
  <p class="dummy-paragraph">
    In most cases the tag needs to be dismissable. If you don't provide a callback function to the
    <code class="dummy-code">onDismiss</code>
    argument the "dismiss/remove" button will not be rendered.
  </p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Tag @color="primary" @text="My link tag" @route="components.tag" />
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Tag @text="My link tag" @route="components.tag" />
</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">§</a>
    Design guidelines
  </h3>
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a
        href="https://www.figma.com/file/noyY6dUMDYjmySpHcMjhkN/HDS-Product---Components?node-id=14264%3A34280"
        target="_blank"
        rel="noopener noreferrer"
      >Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/tag-design-usage.png" alt="" role="none" />
  </div>
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">§</a> Accessibility</h3>
  <h4 class="dummy-h4">
    Applicable WCAG Success Criteria (Reference)
  </h4>
  <p class="dummy-paragraph">
    This section is for reference only. This component intends to conform to the following WCAG success criteria:
  </p>
  <ul class="dummy-list">
    <li>1.4.1:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html"
        rel="noopener noreferrer"
        target="_blank"
      >Use of Color</a>
    </li>
    <li>1.4.3:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html"
        rel="noopener noreferrer"
        target="_blank"
      >Contrast (Minimum)</a>
    </li>
    <li>1.4.4:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/resize-text.html"
        rel="noopener noreferrer"
        target="_blank"
      >Resize text</a>
    </li>
    <li>1.4.11:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html"
        rel="noopener noreferrer"
        target="_blank"
      >Non-text Contrast</a>
    </li>
    <li>1.4.12:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html"
        rel="noopener noreferrer"
        target="_blank"
      >Text Spacing</a>
    </li>
    <li>1.4.13:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html"
        rel="noopener noreferrer"
        target="_blank"
      >Content on Hover or Focus</a>
    </li>
    <li>2.1.1:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html"
        rel="noopener noreferrer"
        target="_blank"
      >Keyboard</a>
    </li>
    <li>2.4.7:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/focus-visible.html"
        rel="noopener noreferrer"
        target="_blank"
      >Focus Visible</a>
    </li>
    <li>3.2.1:
      <a href="https://www.w3.org/WAI/WCAG21/Understanding/on-focus.html" rel="noopener noreferrer" target="_blank">On
        Focus</a>
    </li>
    <li>4.1.1:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/parsing.html"
        rel="noopener noreferrer"
        target="_blank"
      >Parsing</a>
    </li>
    <li>4.1.2:
      <a
        href="https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html"
        rel="noopener noreferrer"
        target="_blank"
      >Name, Role, Value</a>
    </li>
  </ul>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">§</a> Showcase</h3>
  <h4 class="dummy-h4">Content</h4>
  <div class="dummy-tag-base-sample">
    <Hds::Tag @text="My text tag" @onDismiss={{this.noop}} />
    <Hds::Tag @text="My text tag" />
    <Hds::Tag @text="My link tag" @onDismiss={{this.noop}} @route="components.tag" />
    <Hds::Tag @text="My link tag" @route="components.tag" />
  </div>
  <div class="dummy-tag-base-sample">
    <p>This is a paragraph: <Hds::Tag @text="My text tag" /></p>
  </div>

  <h4 class="dummy-h4">States</h4>
  <div class="dummy-tag-states-grid">
    {{#each @model.STATES as |state|}}
      <div>
        <span class="dummy-text-small">{{capitalize state}}:</span>
        <br />
        <div class="dummy-tag-states-subgrid">
          <Hds::Tag @text="My tag" @onDismiss={{this.noop}} mock-state-value={{state}} mock-state-selector="button" />
        </div>
      </div>
    {{/each}}

    {{#each @model.COLORS as |color|}}
      <h5 class="dummy-h5 dummy-tag-states-grid__title">{{capitalize color}}</h5>
      {{#each @model.STATES as |state|}}
        <div>
          <span class="dummy-text-small">{{capitalize state}}:</span>
          <br />
          <div class="dummy-tag-states-subgrid">
            <Hds::Tag
              @color={{color}}
              @text="My link tag"
              @onDismiss={{this.noop}}
              @route="components.tag"
              mock-state-value={{state}}
              mock-state-selector="button"
            />
            <Hds::Tag
              @color={{color}}
              @text="My link tag"
              @onDismiss={{this.noop}}
              @route="components.tag"
              mock-state-value={{state}}
              mock-state-selector="a"
            />
            <Hds::Tag
              @color={{color}}
              @text="My link tag"
              @route="components.tag"
              mock-state-value={{state}}
              mock-state-selector="a"
            />
          </div>
        </div>
      {{/each}}
    {{/each}}
  </div>

  <h4 class="dummy-h4">Containers</h4>
  <div class="dummy-tag-containers">
    {{#let (array "block" "flex" "grid") as |displays|}}
      {{#each displays as |display|}}
        <div>
          <span class="dummy-text-small">Parent with <code class="dummy-code">display: {{display}}</code></span>
          <br />
          <div class="dummy-tag-containers__{{display}}">
            <Hds::Tag @text="My text tag" @onDismiss={{this.noop}} />
            <Hds::Tag @text="My text tag" @onDismiss={{this.noop}} />
            <Hds::Tag @text="My slightly longer tag" @onDismiss={{this.noop}} />
            <Hds::Tag @text="My text tag" @onDismiss={{this.noop}} />
          </div>
        </div>
      {{/each}}
    {{/let}}
  </div>
</section>