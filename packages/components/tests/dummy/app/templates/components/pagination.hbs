{{page-title "Pagination Component"}}

<h2 class="dummy-h2">Pagination</h2>

<section>
  <h3 class="dummy-h3" id="overview"><a href="#overview" class="dummy-link-section">§</a> Overview</h3>

  <p class="dummy-paragraph">
    The Pagination component allows users to navigate through a large dataset split into pages. These pages could be
    either links (different URLs) or content rendered within the same page/URL.
  </p>
  <p class="dummy-paragraph">
    It is not meant to be used as a navigation control for regular content or as a stepper, i.e. a guide, tutorial,
    setup or creation flow.
  </p>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">§</a> Component API</h3>
  <p class="dummy-paragraph">
    The
    <code class="dummy-code">Pagination</code>
    component is a wrapper component for the Pagination-related sub-components, each with their own APIs:
  </p>

  <ul class="dummy-list">
    <li>
      a
      <code class="dummy-code">Pagination</code>
      “container” component which controls the layout and some of the logic that connects the different sub-components
    </li>
    <li>
      an optional
      <code class="dummy-code">Pagination::Info</code>
      component which displays the current range of items shown and the total number of items
    </li>
    <li>
      a
      <code class="dummy-code">Pagination::Nav</code>
      component which provides navigation controls and optionally displays page numbers
    </li>
    <li>
      an optional
      <code class="dummy-code">Pagination::SizeSelector</code>
      component which allows users to change the number of items displayed per page
    </li>
  </ul>

  <h4 class="dummy-h4">Pagination</h4>
  <p class="dummy-paragraph" id="component-api-pagination">Here is the API for the main (“container”) component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-pagination">
    <dt>totalItems <code>number</code> <strong class="required">required</strong></dt>
    <dd>Pass the total number of items to be paginated. If no value is defined an error will be thrown.</dd>

    <dt>itemsPerPage <code>number</code> <strong class="required">required</strong></dt>
    <dd>
      Pass the maximum number of items to display on each page initially. If no value is defined an error will be
      thrown.
    </dd>

    <dt>currentPage <code>number</code></dt>
    <dd>
      <p>Set a custom initial selected page.</p>
      <p>Default: <span class="default">1</span> (The first page is selected by default.)</p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Pagination::Info</h4>
  <p class="dummy-paragraph" id="component-api-total-count">
    Here is the API for the
    <code class="dummy-code">Pagination::Info</code>
    component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-total-count">
    <dt>showTotalItems <code>boolean</code></dt>
    <dd>
      <p>Hide display of total items in the UI.</p>
      <p>Default: <span class="default">true</span> (Total items are displayed by default.)</p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Pagination::Nav</h4>
  <p class="dummy-paragraph" id="component-api-pagination-nav">
    Here is the API for the
    <code class="dummy-code">Pagination::Nav</code>
    component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-pagination-nav">
    <dt>totalPages <code>number</code></dt>
    <dd>
      <p>Used in displaying the page numbers for "numbered" type and for determining the next page to navigate to.</p>
      <p><code class="dummy-code">@totalPages</code>
        is calculated by the
        <code class="dummy-code">HDS::Pagination</code>
        wrapper component when used.</p>
      <p>If no value is provided to
        <code class="dummy-code">@totalPages</code>
        the
        <code class="dummy-code">HDS::Pagination::Nav</code>
        assumes a "compact" type (without page numbers, only "prev/next" controls).</p>
    </dd>
    <dt>currentPage <code>number</code></dt>
    <dd>
      <p>Used to select the "current" number in the list of pages.</p>
      <p>Default: <span class="default">1</span></p>
    </dd>
    <dt>hideLabels <code>boolean</code></dt>
    <dd>
      <p>Used to control the visibility of the "prev/next" text labels.</p>
      <p>Default: <span class="default">true</span> if "numbered" - <span class="default">false</span> if "compact"</p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Pagination::Nav::ButtonArrow</h4>
  <p class="dummy-paragraph" id="component-api-pagination-nav-button-arrow">
    Here is the API for the
    <code class="dummy-code">Pagination::Nav::ButtonArrow</code>
    component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-pagination-nav-button-arrow">
    <dt>direction <code>enum</code></dt>
    <dd>
      <p>Sets the "direction" of the icon and label in the control.</p>
      <p>Acceptable values:</p>
      <ol>
        <li>prev</li>
        <li>next</li>
      </ol>
    </dd>
    <dt>href + route/models/model/query/current-when/replace</dt>
    <dd>
      <p>These are the parameters that are passed down as arguments to the
        <code class="dummy-code">Hds::Interactive</code>
        component (used internally). For more details about how this low-level component works please refer to
        <LinkTo @route="utilities.interactive">its documentation page</LinkTo>.</p>
    </dd>
    <dt>disabled <code>boolean</code></dt>
    <dd>
      <p>If the control is disabled</p>
      <p>Default: <span class="default">false</span></p>
      <p>Notice: when the control is disabled, it's always rendered as an HTML
        <code class="dummy-code">Button</code>
        element.</p>
    </dd>
    <dt>hideLabel <code>boolean</code></dt>
    <dd>
      <p>Used to control the visibility of the text label in the control.</p>
      <p>Default: <span class="default">false</span></p>
    </dd>
    <dt>onClick <code>function</code></dt>
    <dd>
      <p>Callback function invoked when the control is clicked (if provided).</p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Pagination::Nav::ButtonNumber</h4>
  <p class="dummy-paragraph" id="component-api-pagination-nav-button-number">
    Here is the API for the
    <code class="dummy-code">Pagination::Nav::ButtonNumber</code>
    component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-pagination-nav-button-number">
    <dt>page <code>string|number</code></dt>
    <dd>
      <p>The text value that should go in the control as page number.</p>
    </dd>
    <dt>isSelected <code>boolean</code></dt>
    <dd>
      <p>If the page has a "selected" visual state (usually used to highlight the current page).</p>
      <p>Default: <span class="default">false</span></p>
    </dd>
    <dt>onClick <code>function</code></dt>
    <dd>
      <p>Callback function invoked when the control is clicked (if provided).</p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code>
        spreading is supported on this component.</p>
      <p><em>Notice: it will not be applied to the
          <code class="dummy-code">&lt;li&gt;</code>
          wrapping element but to the
          <code class="dummy-code">&lt;button&gt;/&lt;a&gt;</code>
          controls.</em></p>
    </dd>
  </dl>

  <h4 class="dummy-h4">Pagination::SizeSelector</h4>
  <p class="dummy-paragraph" id="component-api-page-size">
    Here is the API for the
    <code class="dummy-code">Pagination::SizeSelector</code>
    component:
  </p>
  <dl class="dummy-component-props" aria-labelledby="component-api-page-size">
    <dt>sizes <code>array of integers</code> <strong class="required">required</strong></dt>
    <dd>
      <p>Set the page sizes users can select from. If no value is defined an error will be thrown.</p>
      <p>
        Example:
        {{! prettier-ignore-start }}
        {{! template-lint-disable no-unbalanced-curlies }}
        <code>@sizes=\{{array 10 30 50}}</code>
        {{! template-lint-enable no-unbalanced-curlies }}
        {{! prettier-ignore-end }}
      </p>
    </dd>

    <dt>itemsPerPage</dt>
    <dd>
      <p>Instead of selecting the initial option which is the default, you can select one of the other
        <code class="dummy-code">sizes</code>
        options.</p>
      <p>Normally passed in as an argument on the Pagination wrapper component but can be added to
        <code class="dummy-code">Pagination::SizeSelector</code>
        itself when used as a stand alone component</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use">
    <a href="#how-to-use" class="dummy-link-section">§</a>
    How to use
  </h3>

  <h4 class="dummy-h4">Default “compact” Pagination with Nav</h4>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code="
      <Hds::Pagination @totalItems=\{{100}} @itemsPerPage=\{{10}} as |P|>
        <P.Nav />
      </Hds::Pagination>
    "
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Nav />
  </Hds::Pagination>

  <h4 class="dummy-h4">“Numbered” Pagination with Nav</h4>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Pagination @totalItems=\{{100}} @itemsPerPage=\{{10}} @type="numbered" as |P|>
        <P.Nav />
      </Hds::Pagination>
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} @type="numbered" as |P|>
    <P.Nav />
  </Hds::Pagination>

  <h4 class="dummy-h4">“Compact” Pagination with all optional child components</h4>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code="
      <Hds::Pagination @totalItems=\{{103}} @itemsPerPage=\{{10}} as |P|>
        <P.Info />
        <P.Nav />
        <P.SizeSelector @sizes=\{{array 10 30 50}} />
      </Hds::Pagination>
    "
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Pagination @totalItems={{103}} @itemsPerPage={{10}} as |P|>
    <P.Info />
    <P.Nav />
    <P.SizeSelector @sizes={{array 10 30 50}} />
  </Hds::Pagination>

  <h4 class="dummy-h4">“Numbered” pagination with all optional child components</h4>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Pagination @totalItems=\{{100}} @itemsPerPage=\{{10}} as |P|>
        <P.Info />
        <P.Nav @type="numbered" />
        <P.SizeSelector @sizes=\{{array 10 30 50}} />
      </Hds::Pagination>
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Info />
    <P.Nav @type="numbered" />
    <P.SizeSelector @sizes={{array 10 30 50}} />
  </Hds::Pagination>

  <h4 class="dummy-h4">“Numbered” PaginationNav as a stand alone component</h4>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Pagination::Nav @totalPages={{10}} @type="numbered" />
    '
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Pagination::Nav @totalPages={{10}} @type="numbered" />

  <h4 class="dummy-h4">“Truncated” PaginationNav</h4>
  {{! prettier-ignore-start }}
  {{! template-lint-disable no-unbalanced-curlies }}
  <CodeBlock
    @language="markup"
    @code="
      <Hds::Pagination::Nav @totalPages={{1000}} @isTruncated=\{{true}} />
    "
  />
  {{! template-lint-enable no-unbalanced-curlies }}
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Pagination::Nav @totalPages={{1000}} @isTruncated={{true}} />
</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">§</a>
    Design guidelines</h3>
  {{! UNCOMMENT THIS BLOCK (once the link and/or the image are available) }}
  {{!
  <div class="dummy-design-guidelines">
    <p class="dummy-paragraph">
      <a href="[ADD THE LINK TO THE FIGMA FILE/PAGE HERE!]" target="_blank" rel="noopener noreferrer">Figma UI Kit</a>
    </p>
    <br />
    <img class="dummy-figma-docs" src="/assets/images/pagination-design-usage.png" alt="" role="none" />
  </div>
  }}
</section>

<section>
  <h3 class="dummy-h3" id="accessibility"><a href="#accessibility" class="dummy-link-section">§</a> Accessibility</h3>

  <!-- <Doc::WcagList
    @criteriaList={{array
      "1.3.1"
      "1.3.2"
      "1.4.1"
      "1.4.3"
      "1.4.4"
      "1.4.10"
      "1.4.11"
      "1.4.12"
      "2.1.1"
      "2.1.2"
      "2.4.3"
      "2.4.4"
      "2.4.6"
      "2.4.7"
      "2.5.3"
      "3.2.1"
      "4.1.2"
    }}
  /> -->
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase">
    <a href="#showcase" class="dummy-link-section">§</a>
    Showcase
  </h3>
  <button id="dummy-toggle-highlight" type="button" {{on "click" this.toggleHighlight}}>
    {{if this.showHighlight "Hide" "Show"}}
    layout highlight
  </button>

  <div class="{{if this.showHighlight 'dummy-pagination-layout-highlight'}}">
    <h4 class="dummy-h4">Base elements</h4>
    <h5 class="dummy-h5">Pagination::Info</h5>

    <div class="dummy-pagination-base-sample">
      <div>
        <span class="dummy-text-small">default</span>
        <Hds::Pagination::Info @itemsRangeStart={{1}} @itemsRangeEnd={{10}} @totalItems={{103}} />
      </div>

      <div>
        <span class="dummy-text-small">
          with
          {{! prettier-ignore-start }}
          {{! template-lint-disable no-unbalanced-curlies }}<code
            class="dummy-code"
          >@showTotalItems=\{{false}}</code>{{! template-lint-enable no-unbalanced-curlies }}
          {{! prettier-ignore-end }}
        </span>
        <Hds::Pagination::Info
          @itemsRangeStart={{1}}
          @itemsRangeEnd={{10}}
          @totalItems={{103}}
          @showTotalItems={{false}}
        />
      </div>
    </div>

    <h5 class="dummy-h5">Pagination::SizeSelector</h5>
    <Hds::Pagination::SizeSelector @sizes={{array 10 30 50}} />

    <h6 class="dummy-h6">
      with itemsPerPage set to "30" instead of the first option:
    </h6>
    <Hds::Pagination::SizeSelector @sizes={{array 10 30 50}} @itemsPerPage={{30}} />

    <h5 class="dummy-h5">Pagination::Nav::ButtonArrow</h5>
    <h6 class="dummy-h6">
      with text label displaying:
    </h6>
    <p class="dummy-paragraph">(text label is shown with Pagination Nav type set to "compact" which doesn't include page
      numbers)</p>

    <div class="dummy-pagination-base-sample">
      {{#let (array "default" "hover" "active" "focus") as |states|}}
        {{#each states as |state|}}
          <div class="dummy-pagination-base-sample-item" mock-state-value={{state}} mock-state-selector="button,a">
            <span class="dummy-text-small">{{state}}</span>
            <div class="dummy-pagination-base-sample-row">
              <Hds::Pagination::Nav::ButtonArrow @direction="prev" @type="compact" />
              <Hds::Pagination::Nav::ButtonArrow @direction="next" @type="compact" />
            </div>
          </div>
        {{/each}}
        <div class="dummy-pagination-base-sample-item">
          <span class="dummy-text-small">disabled</span>
          <div class="dummy-pagination-base-sample-row">
            <Hds::Pagination::Nav::ButtonArrow @direction="prev" @type="compact" @disabled={{true}} />
            <Hds::Pagination::Nav::ButtonArrow @direction="next" @type="compact" @disabled={{true}} />
          </div>
        </div>
      {{/let}}
    </div>

    <h6 class="dummy-h6">
      without text label displaying:
    </h6>
    <p class="dummy-paragraph">(text label is not shown with Pagination type set to "numbered" which includes page
      numbers)</p>
    <div class="dummy-pagination-base-sample">
      {{#let (array "default" "hover" "active" "focus") as |states|}}
        {{#each states as |state|}}
          <div class="dummy-pagination-base-sample-item" mock-state-value={{state}} mock-state-selector="button,a">
            <span class="dummy-text-small">{{state}}</span>
            <div class="dummy-pagination-base-sample-row">
              <Hds::Pagination::Nav::ButtonArrow @direction="prev" @type="numbered" />
              <Hds::Pagination::Nav::ButtonArrow @direction="next" @type="numbered" />
            </div>
          </div>
        {{/each}}
      {{/let}}
      <div class="dummy-pagination-base-sample-item">
        <span class="dummy-text-small">disabled</span>
        <div class="dummy-pagination-base-sample-row">
          <Hds::Pagination::Nav::ButtonArrow @direction="prev" @type="numbered" @disabled={{true}} />
          <Hds::Pagination::Nav::ButtonArrow @direction="next" @type="numbered" @disabled={{true}} />
        </div>
      </div>
    </div>

    <h5 class="dummy-h5">Pagination::Nav::ButtonNumber</h5>
    <p class="dummy-paragraph">Generic vs current page</p>
    <div class="dummy-pagination-base-sample">
      {{#let (array "default" "hover" "active" "focus") as |states|}}
        {{#each states as |state|}}
          <div class="dummy-pagination-base-sample-item" mock-state-value={{state}} mock-state-selector="button,a">
            <span class="dummy-text-small">{{state}}</span>
            <div class="dummy-pagination-base-sample-row">
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="2" /></ul>
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="2" @isSelected={{true}} /></ul>
            </div>
          </div>
        {{/each}}
      {{/let}}
    </div>
    <p class="dummy-paragraph">With different text lengths</p>
    <div class="dummy-pagination-base-sample">
      {{#let (array "default" "focus") as |states|}}
        {{#each states as |state|}}
          <div class="dummy-pagination-base-sample-item" mock-state-value={{state}} mock-state-selector="button,a">
            <span class="dummy-text-small">{{state}}</span>
            <div class="dummy-pagination-base-sample-row">
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="1" /></ul>
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="12" /></ul>
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="123" /></ul>
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="1" @isSelected={{true}} /></ul>
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="12" @isSelected={{true}} /></ul>
              <ul class="dummy-plain-list"><Hds::Pagination::Nav::ButtonNumber @page="123" @isSelected={{true}} /></ul>
            </div>
          </div>
        {{/each}}
      {{/let}}
    </div>

    <h4 class="dummy-h4">Pagination::Nav</h4>

    <p class="dummy-paragraph">Standard use</p>
    <Hds::Pagination::Nav @totalPages={{10}} />
    <br />
    <Hds::Pagination::Nav @totalPages={{10}} @type="numbered" />
    <br />
    <Hds::Pagination::Nav @totalPages={{100}} @isTruncated={{true}} />

    <p class="dummy-paragraph">With controls as contextual components</p>
    <Hds::Pagination::Nav as |N|>
      <N.ButtonPrev @href="#" @disabled={{true}} />
      <N.ButtonNext @href="#" />
    </Hds::Pagination::Nav>

  </div>

  <h4 class="dummy-h4">Pagination with sub-components</h4>

  <h5 class="dummy-h5">Simplest use case: Pagination with Nav</h5>

  <h6 class="dummy-h6">Type="compact" (the default)</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Nav />
  </Hds::Pagination>

  <h6 class="dummy-h6">Type="numbered"</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Nav @type="numbered" />
  </Hds::Pagination>

  <h6 class="dummy-h6">With isTruncated=true</h6>
  <p class="dummy-paragraph">A variation of the "numbered" type that displays an ellipsis for some numbers to save
    space.</p>
  <Hds::Pagination @totalItems={{1000}} @itemsPerPage={{10}} as |P|>
    <P.Nav @isTruncated={{true}} />
  </Hds::Pagination>

  <p class="dummy-paragraph">With "current" initial page equal to <code class="dummy-code">11</code>.</p>
  <Hds::Pagination @totalItems={{1000}} @itemsPerPage={{10}} @currentPage={{11}} as |P|>
    <P.Nav @isTruncated={{true}} />
  </Hds::Pagination>

  <h6 class="dummy-h6">With prev/next as contextual components</h6>
  <Hds::Pagination as |P|>
    <P.Nav as |N|>
      <N.ButtonPrev @href="#" @disabled={{true}} />
      <N.ButtonNext @href="#" />
    </P.Nav>
  </Hds::Pagination>

  <h5 class="dummy-h5">Pagination with Nav and Info</h5>
  <h6 class="dummy-h6">Type="compact"</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Info />
    <P.Nav />
  </Hds::Pagination>

  <h6 class="dummy-h6">Type="numbered"</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Info />
    <P.Nav @type="numbered" />
  </Hds::Pagination>

  <h6 class="dummy-h6">Info with showTotalItems set to "false"</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Info @showTotalItems={{false}} />
    <P.Nav />
  </Hds::Pagination>

  <h6 class="dummy-h6">Pagination with Nav, Info, and SizeSelector</h6>
  <h6 class="dummy-h6">Type="compact"</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Info />
    <P.Nav />
    <P.SizeSelector @sizes={{array 10 30 50}} />
  </Hds::Pagination>

  <h6 class="dummy-h6">Type="numbered"</h6>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{10}} as |P|>
    <P.Info />
    <P.Nav @type="numbered" />
    <P.SizeSelector @sizes={{array 10 30 50}} />
  </Hds::Pagination>

  <h5 class="dummy-h5">Numbered Pagination Nav with currentPage set to "3" and items per page = "30"</h5>
  <Hds::Pagination @totalItems={{100}} @itemsPerPage={{30}} @currentPage={{3}} as |P|>
    <P.Info />
    <P.Nav @type="numbered" />
    <P.SizeSelector @sizes={{array 10 30 50}} />
  </Hds::Pagination>
</section>