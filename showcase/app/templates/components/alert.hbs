{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: MPL-2.0
}}

{{page-title "Alert component"}}

<Shw::Text::H1>Alert</Shw::Text::H1>

<section data-test-percy>

  <Shw::Text::Body>ðŸ‘€ Note: the compact alert is borderless, but shown with a dotted border throughout the "Showcase"
    for clarity.</Shw::Text::Body>

  <Shw::Text::H2>Type</Shw::Text::H2>

  {{#each @model.TYPES as |type|}}
    <Shw::Text::Body>{{capitalize type}}</Shw::Text::Body>
    <Shw::Flex as |SF|>
      <SF.Item @grow={{true}}>
        <Hds::Alert @type={{type}} as |A|>
          <A.Title>Lorem ipsum</A.Title>
          <A.Description>Lorem ipsum dolor sit amet.</A.Description>
        </Hds::Alert>
      </SF.Item>
    </Shw::Flex>
  {{/each}}

  <Shw::Text::H2>Color</Shw::Text::H2>

  <Shw::Grid @columns={{3}} as |SG|>
    {{#each @model.COLORS as |color|}}
      {{#each @model.TYPES as |type|}}
        <SG.Item @label="{{capitalize color}} / {{capitalize type}}">
          <Hds::Alert @type={{type}} @color={{color}} as |A|>
            <A.Title>Lorem ipsum dolor</A.Title>
            <A.Description>This is the <em>{{type}}</em> alert with <em>{{color}}</em> color.</A.Description>
          </Hds::Alert>
        </SG.Item>
      {{/each}}
    {{/each}}
  </Shw::Grid>

  <Shw::Text::H2>Icon</Shw::Text::H2>

  <Shw::Grid @columns={{3}} as |SG|>
    <SG.Item>
      <Hds::Alert @type="inline" @color="highlight" as |A|>
        <A.Title>Default icon</A.Title>
        <A.Description>Lorem ipsum dolor sit amet.</A.Description>
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="highlight" @icon="meh" as |A|>
        <A.Title>With icon override</A.Title>
        <A.Description>Lorem ipsum dolor sit amet.</A.Description>
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="highlight" @icon="running" as |A|>
        <A.Title>With animated icon</A.Title>
        <A.Description>Lorem ipsum dolor sit amet.</A.Description>
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="highlight" @icon="" as |A|>
        <A.Title>Without icon</A.Title>
        <A.Description>Lorem ipsum dolor sit amet.</A.Description>
      </Hds::Alert>
    </SG.Item>
  </Shw::Grid>

  <Shw::Text::H2>Content</Shw::Text::H2>

  <Shw::Grid @columns={{2}} as |SG|>
    <SG.Item>
      <Shw::Flex @direction="column" as |SF|>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Title>A simple title</A.Title>
            <A.Description>A simple description text</A.Description>
          </Hds::Alert>
        </SF.Item>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Title>An alert with just a title and no description text.</A.Title>
          </Hds::Alert>
        </SF.Item>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Description>An alert with no title and just a description text</A.Description>
          </Hds::Alert>
        </SF.Item>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Title>An alert with a very long title and a long description text that should go on multiple lines</A.Title>
            <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque erat elit, lacinia at
              magna eget, porttitor lobortis nulla.</A.Description>
          </Hds::Alert>
        </SF.Item>
      </Shw::Flex>
    </SG.Item>
    <SG.Item>
      <Shw::Flex @direction="column" as |SF|>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Title>An alert with a rich description (HTML)</A.Title>
            <A.Description>Using the
              <code>A.Description</code>
              contextual component it's possible to have content that contains HTML tags, like
              <strong>strong text</strong>
              and
              <em>emphasized text</em>
              as well as
              <code>code</code>,
              <pre>pre</pre>
              and
              <a href="#">inline links</a>.</A.Description>
          </Hds::Alert>
        </SF.Item>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Title>Multiple lines of description using more than one 'description' contextual component</A.Title>
            <A.Description>This is the first line of description, yielded to a
              <code>A.Description</code>
              contextual component.</A.Description>
            <A.Description>And this is the second line of description, yielded to another
              <code>A.Description</code>
              contextual component.</A.Description>
          </Hds::Alert>
        </SF.Item>
        <SF.Item>
          <Hds::Alert @type="inline" @color="success" as |A|>
            <A.Title>An alert with extra/custom content</A.Title>
            <A.Description>In special cases, you can pass extra content to the alert using the
              <code>A.Generic</code>
              contextual component.</A.Description>
            <A.Generic>
              <Shw::Placeholder @text="some generic content" @height="50" />
            </A.Generic>
          </Hds::Alert>
        </SF.Item>
      </Shw::Flex>
    </SG.Item>
  </Shw::Grid>

  <Shw::Text::H3>With different types of links as content</Shw::Text::H3>

  <Shw::Grid @columns={{2}} as |SG|>
    <SG.Item>
      <Hds::Alert @type="inline" @color="success" as |A|>
        <A.Title>HTML link compared to <code>Hds::Link</code> in the description</A.Title>
        <A.Description>
          Description with
          <a href="#">HTML link</a>
          compared with
          <Hds::Link::Inline @href="#">Primary Hds::Link::Inline</Hds::Link::Inline>
          and
          <Hds::Link::Inline @href="#" @color="secondary">Secondary Hds::Link::Inline</Hds::Link::Inline>.
        </A.Description>
      </Hds::Alert>
    </SG.Item>

    <SG.Item>
      <Hds::Alert @type="compact" @color="success" as |A|>
        <A.Title>An alert with HTML link compared to <code>Hds::Link</code> in Description</A.Title>
        <A.Description>
          Compact alert with
          <a href="#">HTML link</a>
          compared with
          <Hds::Link::Inline @href="#">Primary Hds::Link::Inline</Hds::Link::Inline>
          and
          <Hds::Link::Inline @href="#" @color="secondary">Secondary Hds::Link::Inline</Hds::Link::Inline>.
        </A.Description>
      </Hds::Alert>
    </SG.Item>
  </Shw::Grid>

  <Shw::Text::H2>Actions</Shw::Text::H2>

  <Shw::Grid @columns={{2}} as |SG|>
    <SG.Item>
      <Hds::Alert @type="inline" @color="warning" as |A|>
        <A.Title>Action passed as yielded component</A.Title>
        <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</A.Description>
        <A.Button @text="Action" @color="secondary" />
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="warning" as |A|>
        <A.Title>With multiple actions passed as yielded components</A.Title>
        <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</A.Description>
        <A.Button @text="Secondary" @color="secondary" />
        <A.Button @icon="plus" @text="Tertiary" @color="tertiary" />
        <A.LinkStandalone @icon="plus" @text="Standalone" @href="#" @color="secondary" />
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="warning" as |A|>
        <A.Title>With actions and custom content</A.Title>
        <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut
          labore et dolore magna aliqua.</A.Description>
        <A.Button @text="Action" @color="secondary" />
        <A.LinkStandalone @icon="plus" @text="Action" @href="#" @color="secondary" />
        <A.Generic>
          <div class="shw-component-alert-sample-custom-content-after-actions">This for example could be extra text,
            specific for a special use case.</div>
        </A.Generic>
      </Hds::Alert>
    </SG.Item>
  </Shw::Grid>

  <Shw::Text::H2>Dismiss</Shw::Text::H2>

  <Shw::Grid @columns={{2}} as |SG|>
    <SG.Item>
      <Hds::Alert @type="inline" @color="neutral" as |A|>
        <A.Title>Without the dismiss button (default)</A.Title>
        <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</A.Description>
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert
        @type="inline"
        @color="neutral"
        {{! TODO: understand if we can use a generic helper - see https://hashicorp.slack.com/archives/C11JCBJTW/p1648751235987409 }}
        @onDismiss={{this.noop}}
        as |A|
      >
        <A.Title>With the dismiss button</A.Title>
        <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</A.Description>
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="neutral" @icon="" @onDismiss={{this.noop}} as |A|>
        <A.Title>With the dismiss button and no icon</A.Title>
        <A.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</A.Description>
      </Hds::Alert>
    </SG.Item>
    <SG.Item>
      <Hds::Alert @type="inline" @color="neutral" @onDismiss={{this.noop}} as |A|>
        <A.Description>With the dismiss button and no title</A.Description>
      </Hds::Alert>
    </SG.Item>
  </Shw::Grid>

</section>