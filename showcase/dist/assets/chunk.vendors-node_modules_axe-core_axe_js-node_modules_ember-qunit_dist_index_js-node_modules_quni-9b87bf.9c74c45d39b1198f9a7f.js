/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunk_ember_auto_import_"] = globalThis["webpackChunk_ember_auto_import_"] || []).push([["vendors-node_modules_axe-core_axe_js-node_modules_ember-qunit_dist_index_js-node_modules_quni-9b87bf"],{

/***/ "../node_modules/@embroider/macros/src/addon/es-compat2.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@embroider/macros/src/addon/es-compat2.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ esCompat)\n/* harmony export */ });\nfunction esCompat(m){return m?.__esModule?m:{default:m,...m};}\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/@embroider/macros/src/addon/es-compat2.js?");

/***/ }),

/***/ "../node_modules/@embroider/macros/src/addon/runtime.js":
/*!**************************************************************!*\
  !*** ../node_modules/@embroider/macros/src/addon/runtime.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   each: () => (/* binding */ each),\n/* harmony export */   getGlobalConfig: () => (/* binding */ getGlobalConfig),\n/* harmony export */   isTesting: () => (/* binding */ isTesting),\n/* harmony export */   macroCondition: () => (/* binding */ macroCondition)\n/* harmony export */ });\n/*\n  These are the runtime implementations for the javascript macros that have\n  runtime implementations.\n\n  Not every macro has a runtime implementation, some only make sense in the\n  build and always run there.\n\n  Even when we have runtime implementations, we are still careful to emit static\n  errors during the build wherever possible, and runtime errors when necessary,\n  so that you're not surprised when you switch from runtime-mode to compile-time\n  mode.\n*/ /*\n  CAUTION: in classic builds, this file gets shared by all present copies of\n  @embroider/macros. If you want to change its public API, you need to rename it\n  and update `pathToRuntime` in ../babel/state.ts to point at it, so that your\n  babel plugin and runtime will match.\n*/function each(array){if(!Array.isArray(array)){throw new Error(`the argument to the each() macro must be an array`);}return array;}function macroCondition(predicate){return predicate;}// This is here as a compile target for `getConfig` and `getOwnConfig` when\n// we're in runtime mode. This is not public API to call from your own code.\nfunction config(packageRoot){return runtimeConfig.packages[packageRoot];}function getGlobalConfig(){return runtimeConfig.global;}function isTesting(){let g=runtimeConfig.global;let e=g&&g['@embroider/macros'];return Boolean(e&&e.isTesting);}const runtimeConfig=initializeRuntimeMacrosConfig();// this exists to be targeted by our babel plugin\nfunction initializeRuntimeMacrosConfig(){return{\"packages\":{\"/Users/jorytindall/projects/hds/design-system/node_modules/ember-get-config\":{\"modulePrefix\":\"showcase\"}},\"global\":{\"@embroider/macros\":{\"isTesting\":false}}};}function updaterMethods(){return{config,getGlobalConfig,setConfig(packageRoot,value){runtimeConfig.packages[packageRoot]=value;},setGlobalConfig(key,value){runtimeConfig.global[key]=value;}};}// this is how runtime config can get injected at boot. I'm not sure yet if this\n// should be public API, but we certainly need it internally to set things like\n// the global fastboot.isRunning.\n//\n// consumers of this API push a function onto\n// window._embroider_macros_runtime_config. The function is given four methods\n// which allow it to read and write the per-package and global configs. The\n// reason for allowing both read & write is that merging strategies are up to\n// each consumers -- read first, then merge, then write.\n//\n// For an example user of this API, see where we generate\n// embroider_macros_fastboot_init.js' in @embroider/core.\nlet updaters=typeof window!=='undefined'?window._embroider_macros_runtime_config:undefined;if(updaters){let methods=updaterMethods();for(let updater of updaters){updater(methods);}}\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/@embroider/macros/src/addon/runtime.js?");

/***/ }),

/***/ "../node_modules/axe-core/axe.js":
/*!***************************************!*\
  !*** ../node_modules/axe-core/axe.js ***!
  \***************************************/
/***/ (function(module, exports) {

eval("/*! axe v4.8.2\n * Copyright (c) 2015 - 2023 Deque Systems, Inc.\n *\n * Your use of this Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * This entire copyright notice must appear in every copy of this file you\n * distribute or in any file that contains substantial portions of this source\n * code.\n */(function axeFunction(window){var global=window;var document=window.document;'use strict';function _typeof(obj){'@babel/helpers - typeof';return _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj;},_typeof(obj);}var axe=axe||{};axe.version='4.8.2';if(typeof define==='function'&&define.amd){define('axe-core',[],function(){return axe;});}if((typeof module==='undefined'?'undefined':_typeof(module))==='object'&&module.exports&&typeof axeFunction.toString==='function'){axe.source='('+axeFunction.toString()+')(typeof window === \"object\" ? window : this);';module.exports=axe;}if(typeof window.getComputedStyle==='function'){window.axe=axe;}var commons;function SupportError(error){this.name='SupportError';this.cause=error.cause;this.message='`'.concat(error.cause,'` - feature unsupported in your environment.');if(error.ruleId){this.ruleId=error.ruleId;this.message+=' Skipping '.concat(this.ruleId,' rule.');}this.stack=new Error().stack;}SupportError.prototype=Object.create(Error.prototype);SupportError.prototype.constructor=SupportError;'use strict';var _excluded=['node'],_excluded2=['relatedNodes'],_excluded3=['node'],_excluded4=['variant'],_excluded5=['matches'],_excluded6=['chromium'],_excluded7=['noImplicit'],_excluded8=['noPresentational'],_excluded9=['precision','format','inGamut'],_excluded10=['space'],_excluded11=['algorithm'],_excluded12=['method'],_excluded13=['maxDeltaE','deltaEMethod','steps','maxSteps'],_excluded14=['node'],_excluded15=['environmentData'],_excluded16=['environmentData'],_excluded17=['environmentData'],_excluded18=['environmentData'],_excluded19=['environmentData'];function _toArray(arr){return _arrayWithHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableRest();}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _construct(Parent,args,Class){if(_isNativeReflectConstruct()){_construct=Reflect.construct.bind();}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor();if(Class){_setPrototypeOf(instance,Class.prototype);}return instance;};}return _construct.apply(null,arguments);}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function');}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});Object.defineProperty(subClass,'prototype',{writable:false});if(superClass){_setPrototypeOf(subClass,superClass);}}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==='object'||typeof call==='function')){return call;}else if(call!==void 0){throw new TypeError('Derived constructors may only return object or undefined');}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');}return self;}function _isNativeReflectConstruct(){if(typeof Reflect==='undefined'||!Reflect.construct){return false;}if(Reflect.construct.sham){return false;}if(typeof Proxy==='function'){return true;}try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _classPrivateFieldInitSpec(obj,privateMap,value){_checkPrivateRedeclaration(obj,privateMap);privateMap.set(obj,value);}function _classPrivateMethodInitSpec(obj,privateSet){_checkPrivateRedeclaration(obj,privateSet);privateSet.add(obj);}function _checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj)){throw new TypeError('Cannot initialize the same private elements twice on an object');}}function _classPrivateFieldGet(receiver,privateMap){var descriptor=_classExtractFieldDescriptor(receiver,privateMap,'get');return _classApplyDescriptorGet(receiver,descriptor);}function _classApplyDescriptorGet(receiver,descriptor){if(descriptor.get){return descriptor.get.call(receiver);}return descriptor.value;}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver)){throw new TypeError('attempted to get private field on non-instance');}return fn;}function _classPrivateFieldSet(receiver,privateMap,value){var descriptor=_classExtractFieldDescriptor(receiver,privateMap,'set');_classApplyDescriptorSet(receiver,descriptor,value);return value;}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver)){throw new TypeError('attempted to '+action+' private field on non-instance');}return privateMap.get(receiver);}function _classApplyDescriptorSet(receiver,descriptor,value){if(descriptor.set){descriptor.set.call(receiver,value);}else{if(!descriptor.writable){throw new TypeError('attempted to set read only private field');}descriptor.value=value;}}function _objectWithoutProperties(source,excluded){if(source==null){return{};}var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0){continue;}if(!Object.prototype.propertyIsEnumerable.call(source,key)){continue;}target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null){return{};}var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0){continue;}target[key]=source[key];}return target;}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError('Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');}function _iterableToArray(iter){if(typeof Symbol!=='undefined'&&iter[Symbol.iterator]!=null||iter['@@iterator']!=null){return Array.from(iter);}}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){return _arrayLikeToArray(arr);}}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError('Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');}function _iterableToArrayLimit(arr,i){var _i=null==arr?null:'undefined'!=typeof Symbol&&arr[Symbol.iterator]||arr['@@iterator'];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i){return;}_n=!1;}else{for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0){}}}catch(err){_d=!0,_e=err;}finally{try{if(!_n&&null!=_i['return']&&(_r=_i['return'](),Object(_r)!==_r)){return;}}finally{if(_d){throw _e;}}}return _arr;}}function _arrayWithHoles(arr){if(Array.isArray(arr)){return arr;}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor){descriptor.writable=true;}Object.defineProperty(target,_toPropertyKey(descriptor.key),descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps){_defineProperties(Constructor.prototype,protoProps);}if(staticProps){_defineProperties(Constructor,staticProps);}Object.defineProperty(Constructor,'prototype',{writable:false});return Constructor;}function _toPropertyKey(arg){var key=_toPrimitive(arg,'string');return _typeof(key)==='symbol'?key:String(key);}function _toPrimitive(input,hint){if(_typeof(input)!=='object'||input===null){return input;}var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||'default');if(_typeof(res)!=='object'){return res;}throw new TypeError('@@toPrimitive must return a primitive value.');}return(hint==='string'?String:Number)(input);}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=='undefined'&&o[Symbol.iterator]||o['@@iterator'];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==='number'){if(it){o=it;}var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length){return{done:true};}return{done:false,value:o[i++]};},e:function e(_e2){throw _e2;},f:F};}throw new TypeError('Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e3){didErr=true;err=_e3;},f:function f(){try{if(!normalCompletion&&it['return']!=null){it['return']();}}finally{if(didErr){throw err;}}}};}function _unsupportedIterableToArray(o,minLen){if(!o){return;}if(typeof o==='string'){return _arrayLikeToArray(o,minLen);}var n=Object.prototype.toString.call(o).slice(8,-1);if(n==='Object'&&o.constructor){n=o.constructor.name;}if(n==='Map'||n==='Set'){return Array.from(o);}if(n==='Arguments'||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)){return _arrayLikeToArray(o,minLen);}}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length){len=arr.length;}for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _typeof(obj){'@babel/helpers - typeof';return _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&'function'==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj;},_typeof(obj);}(function(){var _processFormat,_path,_getPath,_space;var __create=Object.create;var __defProp=Object.defineProperty;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __getOwnPropNames=Object.getOwnPropertyNames;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __defNormalProp=function __defNormalProp(obj,key,value){return key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value:value}):obj[key]=value;};var __markAsModule=function __markAsModule(target){return __defProp(target,'__esModule',{value:true});};var __commonJS=function __commonJS(cb,mod){return function(){return mod||cb((mod={exports:{}}).exports,mod),mod.exports;};};var __export=function __export(target,all){for(var name in all){__defProp(target,name,{get:all[name],enumerable:true});}};var __exportStar=function __exportStar(target,module,desc){if(module&&_typeof(module)==='object'||typeof module==='function'){var _iterator=_createForOfIteratorHelper(__getOwnPropNames(module)),_step;try{var _loop=function _loop(){var key=_step.value;if(!__hasOwnProp.call(target,key)&&key!=='default'){__defProp(target,key,{get:function get(){return module[key];},enumerable:!(desc=__getOwnPropDesc(module,key))||desc.enumerable});}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return target;};var __toModule=function __toModule(module){return __exportStar(__markAsModule(__defProp(module!=null?__create(__getProtoOf(module)):{},'default',module&&module.__esModule&&'default'in module?{get:function get(){return module['default'];},enumerable:true}:{value:module,enumerable:true})),module);};var __publicField=function __publicField(obj,key,value){__defNormalProp(obj,_typeof(key)!=='symbol'?key+'':key,value);return value;};var require_noop=__commonJS(function(exports,module){'use strict';module.exports=function(){};});var require_is_value=__commonJS(function(exports,module){'use strict';var _undefined=require_noop()();module.exports=function(val){return val!==_undefined&&val!==null;};});var require_normalize_options=__commonJS(function(exports,module){'use strict';var isValue=require_is_value();var forEach=Array.prototype.forEach;var create=Object.create;var process2=function process2(src,obj){var key;for(key in src){obj[key]=src[key];}};module.exports=function(opts1){var result=create(null);forEach.call(arguments,function(options){if(!isValue(options)){return;}process2(Object(options),result);});return result;};});var require_is_implemented=__commonJS(function(exports,module){'use strict';module.exports=function(){var sign=Math.sign;if(typeof sign!=='function'){return false;}return sign(10)===1&&sign(-20)===-1;};});var require_shim=__commonJS(function(exports,module){'use strict';module.exports=function(value){value=Number(value);if(isNaN(value)||value===0){return value;}return value>0?1:-1;};});var require_sign=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented()()?Math.sign:require_shim();});var require_to_integer=__commonJS(function(exports,module){'use strict';var sign=require_sign();var abs=Math.abs;var floor=Math.floor;module.exports=function(value){if(isNaN(value)){return 0;}value=Number(value);if(value===0||!isFinite(value)){return value;}return sign(value)*floor(abs(value));};});var require_to_pos_integer=__commonJS(function(exports,module){'use strict';var toInteger=require_to_integer();var max2=Math.max;module.exports=function(value){return max2(0,toInteger(value));};});var require_resolve_length=__commonJS(function(exports,module){'use strict';var toPosInt=require_to_pos_integer();module.exports=function(optsLength,fnLength,isAsync){var length;if(isNaN(optsLength)){length=fnLength;if(!(length>=0)){return 1;}if(isAsync&&length){return length-1;}return length;}if(optsLength===false){return false;}return toPosInt(optsLength);};});var require_valid_callable=__commonJS(function(exports,module){'use strict';module.exports=function(fn){if(typeof fn!=='function'){throw new TypeError(fn+' is not a function');}return fn;};});var require_valid_value=__commonJS(function(exports,module){'use strict';var isValue=require_is_value();module.exports=function(value){if(!isValue(value)){throw new TypeError('Cannot use null or undefined');}return value;};});var require_iterate=__commonJS(function(exports,module){'use strict';var callable=require_valid_callable();var value=require_valid_value();var bind=Function.prototype.bind;var call=Function.prototype.call;var keys=Object.keys;var objPropertyIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=function(method,defVal){return function(obj,cb){var list,thisArg=arguments[2],compareFn=arguments[3];obj=Object(value(obj));callable(cb);list=keys(obj);if(compareFn){list.sort(typeof compareFn==='function'?bind.call(compareFn,obj):void 0);}if(typeof method!=='function'){method=list[method];}return call.call(method,list,function(key,index){if(!objPropertyIsEnumerable.call(obj,key)){return defVal;}return call.call(cb,thisArg,obj[key],key,obj,index);});};};});var require_for_each=__commonJS(function(exports,module){'use strict';module.exports=require_iterate()('forEach');});var require_registered_extensions=__commonJS(function(){'use strict';});var require_is_implemented2=__commonJS(function(exports,module){'use strict';module.exports=function(){var assign=Object.assign,obj;if(typeof assign!=='function'){return false;}obj={foo:'raz'};assign(obj,{bar:'dwa'},{trzy:'trzy'});return obj.foo+obj.bar+obj.trzy==='razdwatrzy';};});var require_is_implemented3=__commonJS(function(exports,module){'use strict';module.exports=function(){try{Object.keys('primitive');return true;}catch(e){return false;}};});var require_shim2=__commonJS(function(exports,module){'use strict';var isValue=require_is_value();var keys=Object.keys;module.exports=function(object){return keys(isValue(object)?Object(object):object);};});var require_keys=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented3()()?Object.keys:require_shim2();});var require_shim3=__commonJS(function(exports,module){'use strict';var keys=require_keys();var value=require_valid_value();var max2=Math.max;module.exports=function(dest,src){var error,i,length=max2(arguments.length,2),assign;dest=Object(value(dest));assign=function assign(key){try{dest[key]=src[key];}catch(e){if(!error){error=e;}}};for(i=1;i<length;++i){src=arguments[i];keys(src).forEach(assign);}if(error!==void 0){throw error;}return dest;};});var require_assign=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented2()()?Object.assign:require_shim3();});var require_is_object=__commonJS(function(exports,module){'use strict';var isValue=require_is_value();var map={function:true,object:true};module.exports=function(value){return isValue(value)&&map[_typeof(value)]||false;};});var require_custom=__commonJS(function(exports,module){'use strict';var assign=require_assign();var isObject=require_is_object();var isValue=require_is_value();var captureStackTrace=Error.captureStackTrace;module.exports=function(message){var err2=new Error(message),code=arguments[1],ext=arguments[2];if(!isValue(ext)){if(isObject(code)){ext=code;code=null;}}if(isValue(ext)){assign(err2,ext);}if(isValue(code)){err2.code=code;}if(captureStackTrace){captureStackTrace(err2,module.exports);}return err2;};});var require_mixin=__commonJS(function(exports,module){'use strict';var value=require_valid_value();var defineProperty=Object.defineProperty;var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var getOwnPropertyNames=Object.getOwnPropertyNames;var getOwnPropertySymbols=Object.getOwnPropertySymbols;module.exports=function(target,source){var error,sourceObject=Object(value(source));target=Object(value(target));getOwnPropertyNames(sourceObject).forEach(function(name){try{defineProperty(target,name,getOwnPropertyDescriptor(source,name));}catch(e){error=e;}});if(typeof getOwnPropertySymbols==='function'){getOwnPropertySymbols(sourceObject).forEach(function(symbol){try{defineProperty(target,symbol,getOwnPropertyDescriptor(source,symbol));}catch(e){error=e;}});}if(error!==void 0){throw error;}return target;};});var require_define_length=__commonJS(function(exports,module){'use strict';var toPosInt=require_to_pos_integer();var test=function test(arg1,arg2){return arg2;};var desc;var defineProperty;var generate;var mixin;try{Object.defineProperty(test,'length',{configurable:true,writable:false,enumerable:false,value:1});}catch(ignore){}if(test.length===1){desc={configurable:true,writable:false,enumerable:false};defineProperty=Object.defineProperty;module.exports=function(fn,length){length=toPosInt(length);if(fn.length===length){return fn;}desc.value=length;return defineProperty(fn,'length',desc);};}else{mixin=require_mixin();generate=function(){var cache2=[];return function(length){var args,i=0;if(cache2[length]){return cache2[length];}args=[];while(length--){args.push('a'+(++i).toString(36));}return new Function('fn','return function ('+args.join(', ')+') { return fn.apply(this, arguments); };');};}();module.exports=function(src,length){var target;length=toPosInt(length);if(src.length===length){return src;}target=generate(length)(src);try{mixin(target,src);}catch(ignore){}return target;};}});var require_is=__commonJS(function(exports,module){'use strict';var _undefined=void 0;module.exports=function(value){return value!==_undefined&&value!==null;};});var require_is2=__commonJS(function(exports,module){'use strict';var isValue=require_is();var possibleTypes={object:true,function:true,undefined:true};module.exports=function(value){if(!isValue(value)){return false;}return hasOwnProperty.call(possibleTypes,_typeof(value));};});var require_is3=__commonJS(function(exports,module){'use strict';var isObject=require_is2();module.exports=function(value){if(!isObject(value)){return false;}try{if(!value.constructor){return false;}return value.constructor.prototype===value;}catch(error){return false;}};});var require_is4=__commonJS(function(exports,module){'use strict';var isPrototype=require_is3();module.exports=function(value){if(typeof value!=='function'){return false;}if(!hasOwnProperty.call(value,'length')){return false;}try{if(typeof value.length!=='number'){return false;}if(typeof value.call!=='function'){return false;}if(typeof value.apply!=='function'){return false;}}catch(error){return false;}return!isPrototype(value);};});var require_is5=__commonJS(function(exports,module){'use strict';var isFunction=require_is4();var classRe=/^\\s*class[\\s{/}]/;var functionToString=Function.prototype.toString;module.exports=function(value){if(!isFunction(value)){return false;}if(classRe.test(functionToString.call(value))){return false;}return true;};});var require_is_implemented4=__commonJS(function(exports,module){'use strict';var str='razdwatrzy';module.exports=function(){if(typeof str.contains!=='function'){return false;}return str.contains('dwa')===true&&str.contains('foo')===false;};});var require_shim4=__commonJS(function(exports,module){'use strict';var indexOf=String.prototype.indexOf;module.exports=function(searchString){return indexOf.call(this,searchString,arguments[1])>-1;};});var require_contains=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented4()()?String.prototype.contains:require_shim4();});var require_d=__commonJS(function(exports,module){'use strict';var isValue=require_is();var isPlainFunction=require_is5();var assign=require_assign();var normalizeOpts=require_normalize_options();var contains3=require_contains();var d2=module.exports=function(dscr,value){var c4,e,w,options,desc;if(arguments.length<2||typeof dscr!=='string'){options=value;value=dscr;dscr=null;}else{options=arguments[2];}if(isValue(dscr)){c4=contains3.call(dscr,'c');e=contains3.call(dscr,'e');w=contains3.call(dscr,'w');}else{c4=w=true;e=false;}desc={value:value,configurable:c4,enumerable:e,writable:w};return!options?desc:assign(normalizeOpts(options),desc);};d2.gs=function(dscr,get2,set2){var c4,e,options,desc;if(typeof dscr!=='string'){options=set2;set2=get2;get2=dscr;dscr=null;}else{options=arguments[3];}if(!isValue(get2)){get2=void 0;}else if(!isPlainFunction(get2)){options=get2;get2=set2=void 0;}else if(!isValue(set2)){set2=void 0;}else if(!isPlainFunction(set2)){options=set2;set2=void 0;}if(isValue(dscr)){c4=contains3.call(dscr,'c');e=contains3.call(dscr,'e');}else{c4=true;e=false;}desc={get:get2,set:set2,configurable:c4,enumerable:e};return!options?desc:assign(normalizeOpts(options),desc);};});var require_event_emitter=__commonJS(function(exports,module){'use strict';var d2=require_d();var callable=require_valid_callable();var apply=Function.prototype.apply;var call=Function.prototype.call;var create=Object.create;var defineProperty=Object.defineProperty;var defineProperties=Object.defineProperties;var hasOwnProperty2=Object.prototype.hasOwnProperty;var descriptor={configurable:true,enumerable:false,writable:true};var on;var once;var off;var emit;var methods;var descriptors;var base;on=function on(type2,listener){var data;callable(listener);if(!hasOwnProperty2.call(this,'__ee__')){data=descriptor.value=create(null);defineProperty(this,'__ee__',descriptor);descriptor.value=null;}else{data=this.__ee__;}if(!data[type2]){data[type2]=listener;}else if(_typeof(data[type2])==='object'){data[type2].push(listener);}else{data[type2]=[data[type2],listener];}return this;};once=function once(type2,listener){var _once,self2;callable(listener);self2=this;on.call(this,type2,_once=function once2(){off.call(self2,type2,_once);apply.call(listener,this,arguments);});_once.__eeOnceListener__=listener;return this;};off=function off(type2,listener){var data,listeners,candidate,i;callable(listener);if(!hasOwnProperty2.call(this,'__ee__')){return this;}data=this.__ee__;if(!data[type2]){return this;}listeners=data[type2];if(_typeof(listeners)==='object'){for(i=0;candidate=listeners[i];++i){if(candidate===listener||candidate.__eeOnceListener__===listener){if(listeners.length===2){data[type2]=listeners[i?0:1];}else{listeners.splice(i,1);}}}}else{if(listeners===listener||listeners.__eeOnceListener__===listener){delete data[type2];}}return this;};emit=function emit(type2){var i,l,listener,listeners,args;if(!hasOwnProperty2.call(this,'__ee__')){return;}listeners=this.__ee__[type2];if(!listeners){return;}if(_typeof(listeners)==='object'){l=arguments.length;args=new Array(l-1);for(i=1;i<l;++i){args[i-1]=arguments[i];}listeners=listeners.slice();for(i=0;listener=listeners[i];++i){apply.call(listener,this,args);}}else{switch(arguments.length){case 1:call.call(listeners,this);break;case 2:call.call(listeners,this,arguments[1]);break;case 3:call.call(listeners,this,arguments[1],arguments[2]);break;default:l=arguments.length;args=new Array(l-1);for(i=1;i<l;++i){args[i-1]=arguments[i];}apply.call(listeners,this,args);}}};methods={on:on,once:once,off:off,emit:emit};descriptors={on:d2(on),once:d2(once),off:d2(off),emit:d2(emit)};base=defineProperties({},descriptors);module.exports=exports=function exports(o){return o==null?create(base):defineProperties(Object(o),descriptors);};exports.methods=methods;});var require_is_implemented5=__commonJS(function(exports,module){'use strict';module.exports=function(){var from=Array.from,arr,result;if(typeof from!=='function'){return false;}arr=['raz','dwa'];result=from(arr);return Boolean(result&&result!==arr&&result[1]==='dwa');};});var require_is_implemented6=__commonJS(function(exports,module){'use strict';module.exports=function(){if((typeof globalThis==='undefined'?'undefined':_typeof(globalThis))!=='object'){return false;}if(!globalThis){return false;}return globalThis.Array===Array;};});var require_implementation=__commonJS(function(exports,module){var naiveFallback=function naiveFallback(){if((typeof self==='undefined'?'undefined':_typeof(self))==='object'&&self){return self;}if((typeof window==='undefined'?'undefined':_typeof(window))==='object'&&window){return window;}throw new Error('Unable to resolve global `this`');};module.exports=function(){if(this){return this;}try{Object.defineProperty(Object.prototype,'__global__',{get:function get(){return this;},configurable:true});}catch(error){return naiveFallback();}try{if(!__global__){return naiveFallback();}return __global__;}finally{delete Object.prototype.__global__;}}();});var require_global_this=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented6()()?globalThis:require_implementation();});var require_is_implemented7=__commonJS(function(exports,module){'use strict';var global2=require_global_this();var validTypes={object:true,symbol:true};module.exports=function(){var Symbol2=global2.Symbol;var symbol;if(typeof Symbol2!=='function'){return false;}symbol=Symbol2('test symbol');try{String(symbol);}catch(e){return false;}if(!validTypes[_typeof(Symbol2.iterator)]){return false;}if(!validTypes[_typeof(Symbol2.toPrimitive)]){return false;}if(!validTypes[_typeof(Symbol2.toStringTag)]){return false;}return true;};});var require_is_symbol=__commonJS(function(exports,module){'use strict';module.exports=function(value){if(!value){return false;}if(_typeof(value)==='symbol'){return true;}if(!value.constructor){return false;}if(value.constructor.name!=='Symbol'){return false;}return value[value.constructor.toStringTag]==='Symbol';};});var require_validate_symbol=__commonJS(function(exports,module){'use strict';var isSymbol=require_is_symbol();module.exports=function(value){if(!isSymbol(value)){throw new TypeError(value+' is not a symbol');}return value;};});var require_generate_name=__commonJS(function(exports,module){'use strict';var d2=require_d();var create=Object.create;var defineProperty=Object.defineProperty;var objPrototype=Object.prototype;var created=create(null);module.exports=function(desc){var postfix=0,name,ie11BugWorkaround;while(created[desc+(postfix||'')]){++postfix;}desc+=postfix||'';created[desc]=true;name='@@'+desc;defineProperty(objPrototype,name,d2.gs(null,function(value){if(ie11BugWorkaround){return;}ie11BugWorkaround=true;defineProperty(this,name,d2(value));ie11BugWorkaround=false;}));return name;};});var require_standard_symbols=__commonJS(function(exports,module){'use strict';var d2=require_d();var NativeSymbol=require_global_this().Symbol;module.exports=function(SymbolPolyfill){return Object.defineProperties(SymbolPolyfill,{hasInstance:d2('',NativeSymbol&&NativeSymbol.hasInstance||SymbolPolyfill('hasInstance')),isConcatSpreadable:d2('',NativeSymbol&&NativeSymbol.isConcatSpreadable||SymbolPolyfill('isConcatSpreadable')),iterator:d2('',NativeSymbol&&NativeSymbol.iterator||SymbolPolyfill('iterator')),match:d2('',NativeSymbol&&NativeSymbol.match||SymbolPolyfill('match')),replace:d2('',NativeSymbol&&NativeSymbol.replace||SymbolPolyfill('replace')),search:d2('',NativeSymbol&&NativeSymbol.search||SymbolPolyfill('search')),species:d2('',NativeSymbol&&NativeSymbol.species||SymbolPolyfill('species')),split:d2('',NativeSymbol&&NativeSymbol.split||SymbolPolyfill('split')),toPrimitive:d2('',NativeSymbol&&NativeSymbol.toPrimitive||SymbolPolyfill('toPrimitive')),toStringTag:d2('',NativeSymbol&&NativeSymbol.toStringTag||SymbolPolyfill('toStringTag')),unscopables:d2('',NativeSymbol&&NativeSymbol.unscopables||SymbolPolyfill('unscopables'))});};});var require_symbol_registry=__commonJS(function(exports,module){'use strict';var d2=require_d();var validateSymbol=require_validate_symbol();var registry=Object.create(null);module.exports=function(SymbolPolyfill){return Object.defineProperties(SymbolPolyfill,{for:d2(function(key){if(registry[key]){return registry[key];}return registry[key]=SymbolPolyfill(String(key));}),keyFor:d2(function(symbol){var key;validateSymbol(symbol);for(key in registry){if(registry[key]===symbol){return key;}}return void 0;})});};});var require_polyfill=__commonJS(function(exports,module){'use strict';var d2=require_d();var validateSymbol=require_validate_symbol();var NativeSymbol=require_global_this().Symbol;var generateName=require_generate_name();var setupStandardSymbols=require_standard_symbols();var setupSymbolRegistry=require_symbol_registry();var create=Object.create;var defineProperties=Object.defineProperties;var defineProperty=Object.defineProperty;var SymbolPolyfill;var HiddenSymbol;var isNativeSafe;if(typeof NativeSymbol==='function'){try{String(NativeSymbol());isNativeSafe=true;}catch(ignore){}}else{NativeSymbol=null;}HiddenSymbol=function Symbol2(description){if(this instanceof HiddenSymbol){throw new TypeError('Symbol is not a constructor');}return SymbolPolyfill(description);};module.exports=SymbolPolyfill=function Symbol2(description){var symbol;if(this instanceof Symbol2){throw new TypeError('Symbol is not a constructor');}if(isNativeSafe){return NativeSymbol(description);}symbol=create(HiddenSymbol.prototype);description=description===void 0?'':String(description);return defineProperties(symbol,{__description__:d2('',description),__name__:d2('',generateName(description))});};setupStandardSymbols(SymbolPolyfill);setupSymbolRegistry(SymbolPolyfill);defineProperties(HiddenSymbol.prototype,{constructor:d2(SymbolPolyfill),toString:d2('',function(){return this.__name__;})});defineProperties(SymbolPolyfill.prototype,{toString:d2(function(){return'Symbol ('+validateSymbol(this).__description__+')';}),valueOf:d2(function(){return validateSymbol(this);})});defineProperty(SymbolPolyfill.prototype,SymbolPolyfill.toPrimitive,d2('',function(){var symbol=validateSymbol(this);if(_typeof(symbol)==='symbol'){return symbol;}return symbol.toString();}));defineProperty(SymbolPolyfill.prototype,SymbolPolyfill.toStringTag,d2('c','Symbol'));defineProperty(HiddenSymbol.prototype,SymbolPolyfill.toStringTag,d2('c',SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));defineProperty(HiddenSymbol.prototype,SymbolPolyfill.toPrimitive,d2('c',SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));});var require_es6_symbol=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented7()()?require_global_this().Symbol:require_polyfill();});var require_is_arguments=__commonJS(function(exports,module){'use strict';var objToString=Object.prototype.toString;var id=objToString.call(function(){return arguments;}());module.exports=function(value){return objToString.call(value)===id;};});var require_is_function=__commonJS(function(exports,module){'use strict';var objToString=Object.prototype.toString;var isFunctionStringTag=RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);module.exports=function(value){return typeof value==='function'&&isFunctionStringTag(objToString.call(value));};});var require_is_string=__commonJS(function(exports,module){'use strict';var objToString=Object.prototype.toString;var id=objToString.call('');module.exports=function(value){return typeof value==='string'||value&&_typeof(value)==='object'&&(value instanceof String||objToString.call(value)===id)||false;};});var require_shim5=__commonJS(function(exports,module){'use strict';var iteratorSymbol=require_es6_symbol().iterator;var isArguments=require_is_arguments();var isFunction=require_is_function();var toPosInt=require_to_pos_integer();var callable=require_valid_callable();var validValue=require_valid_value();var isValue=require_is_value();var isString2=require_is_string();var isArray=Array.isArray;var call=Function.prototype.call;var desc={configurable:true,enumerable:true,writable:true,value:null};var defineProperty=Object.defineProperty;module.exports=function(arrayLike){var mapFn=arguments[1],thisArg=arguments[2],Context2,i,j,arr,length,code,iterator,result,getIterator,value;arrayLike=Object(validValue(arrayLike));if(isValue(mapFn)){callable(mapFn);}if(!this||this===Array||!isFunction(this)){if(!mapFn){if(isArguments(arrayLike)){length=arrayLike.length;if(length!==1){return Array.apply(null,arrayLike);}arr=new Array(1);arr[0]=arrayLike[0];return arr;}if(isArray(arrayLike)){arr=new Array(length=arrayLike.length);for(i=0;i<length;++i){arr[i]=arrayLike[i];}return arr;}}arr=[];}else{Context2=this;}if(!isArray(arrayLike)){if((getIterator=arrayLike[iteratorSymbol])!==void 0){iterator=callable(getIterator).call(arrayLike);if(Context2){arr=new Context2();}result=iterator.next();i=0;while(!result.done){value=mapFn?call.call(mapFn,thisArg,result.value,i):result.value;if(Context2){desc.value=value;defineProperty(arr,i,desc);}else{arr[i]=value;}result=iterator.next();++i;}length=i;}else if(isString2(arrayLike)){length=arrayLike.length;if(Context2){arr=new Context2();}for(i=0,j=0;i<length;++i){value=arrayLike[i];if(i+1<length){code=value.charCodeAt(0);if(code>=55296&&code<=56319){value+=arrayLike[++i];}}value=mapFn?call.call(mapFn,thisArg,value,j):value;if(Context2){desc.value=value;defineProperty(arr,j,desc);}else{arr[j]=value;}++j;}length=j;}}if(length===void 0){length=toPosInt(arrayLike.length);if(Context2){arr=new Context2(length);}for(i=0;i<length;++i){value=mapFn?call.call(mapFn,thisArg,arrayLike[i],i):arrayLike[i];if(Context2){desc.value=value;defineProperty(arr,i,desc);}else{arr[i]=value;}}}if(Context2){desc.value=null;arr.length=length;}return arr;};});var require_from=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented5()()?Array.from:require_shim5();});var require_to_array=__commonJS(function(exports,module){'use strict';var from=require_from();var isArray=Array.isArray;module.exports=function(arrayLike){return isArray(arrayLike)?arrayLike:from(arrayLike);};});var require_resolve_resolve=__commonJS(function(exports,module){'use strict';var toArray2=require_to_array();var isValue=require_is_value();var callable=require_valid_callable();var slice=Array.prototype.slice;var resolveArgs;resolveArgs=function resolveArgs(args){return this.map(function(resolve,i){return resolve?resolve(args[i]):args[i];}).concat(slice.call(args,this.length));};module.exports=function(resolvers){resolvers=toArray2(resolvers);resolvers.forEach(function(resolve){if(isValue(resolve)){callable(resolve);}});return resolveArgs.bind(resolvers);};});var require_resolve_normalize=__commonJS(function(exports,module){'use strict';var callable=require_valid_callable();module.exports=function(userNormalizer){var normalizer;if(typeof userNormalizer==='function'){return{set:userNormalizer,get:userNormalizer};}normalizer={get:callable(userNormalizer.get)};if(userNormalizer.set!==void 0){normalizer.set=callable(userNormalizer.set);if(userNormalizer['delete']){normalizer['delete']=callable(userNormalizer['delete']);}if(userNormalizer.clear){normalizer.clear=callable(userNormalizer.clear);}return normalizer;}normalizer.set=normalizer.get;return normalizer;};});var require_configure_map=__commonJS(function(exports,module){'use strict';var customError=require_custom();var defineLength=require_define_length();var d2=require_d();var ee=require_event_emitter().methods;var resolveResolve=require_resolve_resolve();var resolveNormalize=require_resolve_normalize();var apply=Function.prototype.apply;var call=Function.prototype.call;var create=Object.create;var defineProperties=Object.defineProperties;var _on=ee.on;var emit=ee.emit;module.exports=function(original,length,options){var cache2=create(null),conf,memLength,get2,set2,del,_clear,extDel,extGet,extHas,normalizer,getListeners,setListeners,deleteListeners,memoized,resolve;if(length!==false){memLength=length;}else if(isNaN(original.length)){memLength=1;}else{memLength=original.length;}if(options.normalizer){normalizer=resolveNormalize(options.normalizer);get2=normalizer.get;set2=normalizer.set;del=normalizer['delete'];_clear=normalizer.clear;}if(options.resolvers!=null){resolve=resolveResolve(options.resolvers);}if(get2){memoized=defineLength(function(arg){var id,result,args=arguments;if(resolve){args=resolve(args);}id=get2(args);if(id!==null){if(hasOwnProperty.call(cache2,id)){if(getListeners){conf.emit('get',id,args,this);}return cache2[id];}}if(args.length===1){result=call.call(original,this,args[0]);}else{result=apply.call(original,this,args);}if(id===null){id=get2(args);if(id!==null){throw customError('Circular invocation','CIRCULAR_INVOCATION');}id=set2(args);}else if(hasOwnProperty.call(cache2,id)){throw customError('Circular invocation','CIRCULAR_INVOCATION');}cache2[id]=result;if(setListeners){conf.emit('set',id,null,result);}return result;},memLength);}else if(length===0){memoized=function memoized(){var result;if(hasOwnProperty.call(cache2,'data')){if(getListeners){conf.emit('get','data',arguments,this);}return cache2.data;}if(arguments.length){result=apply.call(original,this,arguments);}else{result=call.call(original,this);}if(hasOwnProperty.call(cache2,'data')){throw customError('Circular invocation','CIRCULAR_INVOCATION');}cache2.data=result;if(setListeners){conf.emit('set','data',null,result);}return result;};}else{memoized=function memoized(arg){var result,args=arguments,id;if(resolve){args=resolve(arguments);}id=String(args[0]);if(hasOwnProperty.call(cache2,id)){if(getListeners){conf.emit('get',id,args,this);}return cache2[id];}if(args.length===1){result=call.call(original,this,args[0]);}else{result=apply.call(original,this,args);}if(hasOwnProperty.call(cache2,id)){throw customError('Circular invocation','CIRCULAR_INVOCATION');}cache2[id]=result;if(setListeners){conf.emit('set',id,null,result);}return result;};}conf={original:original,memoized:memoized,profileName:options.profileName,get:function get(args){if(resolve){args=resolve(args);}if(get2){return get2(args);}return String(args[0]);},has:function has(id){return hasOwnProperty.call(cache2,id);},delete:function _delete(id){var result;if(!hasOwnProperty.call(cache2,id)){return;}if(del){del(id);}result=cache2[id];delete cache2[id];if(deleteListeners){conf.emit('delete',id,result);}},clear:function clear(){var oldCache=cache2;if(_clear){_clear();}cache2=create(null);conf.emit('clear',oldCache);},on:function on(type2,listener){if(type2==='get'){getListeners=true;}else if(type2==='set'){setListeners=true;}else if(type2==='delete'){deleteListeners=true;}return _on.call(this,type2,listener);},emit:emit,updateEnv:function updateEnv(){original=conf.original;}};if(get2){extDel=defineLength(function(arg){var id,args=arguments;if(resolve){args=resolve(args);}id=get2(args);if(id===null){return;}conf['delete'](id);},memLength);}else if(length===0){extDel=function extDel(){return conf['delete']('data');};}else{extDel=function extDel(arg){if(resolve){arg=resolve(arguments)[0];}return conf['delete'](arg);};}extGet=defineLength(function(){var id,args=arguments;if(length===0){return cache2.data;}if(resolve){args=resolve(args);}if(get2){id=get2(args);}else{id=String(args[0]);}return cache2[id];});extHas=defineLength(function(){var id,args=arguments;if(length===0){return conf.has('data');}if(resolve){args=resolve(args);}if(get2){id=get2(args);}else{id=String(args[0]);}if(id===null){return false;}return conf.has(id);});defineProperties(memoized,{__memoized__:d2(true),delete:d2(extDel),clear:d2(conf.clear),_get:d2(extGet),_has:d2(extHas)});return conf;};});var require_plain=__commonJS(function(exports,module){'use strict';var callable=require_valid_callable();var forEach=require_for_each();var extensions=require_registered_extensions();var configure4=require_configure_map();var resolveLength=require_resolve_length();module.exports=function self2(fn){var options,length,conf;callable(fn);options=Object(arguments[1]);if(options.async&&options.promise){throw new Error('Options \\'async\\' and \\'promise\\' cannot be used together');}if(hasOwnProperty.call(fn,'__memoized__')&&!options.force){return fn;}length=resolveLength(options.length,fn.length,options.async&&extensions.async);conf=configure4(fn,length,options);forEach(extensions,function(extFn,name){if(options[name]){extFn(options[name],conf,options);}});if(self2.__profiler__){self2.__profiler__(conf);}conf.updateEnv();return conf.memoized;};});var require_primitive=__commonJS(function(exports,module){'use strict';module.exports=function(args){var id,i,length=args.length;if(!length){return'\\x02';}id=String(args[i=0]);while(--length){id+='\\x01'+args[++i];}return id;};});var require_get_primitive_fixed=__commonJS(function(exports,module){'use strict';module.exports=function(length){if(!length){return function(){return'';};}return function(args){var id=String(args[0]),i=0,currentLength=length;while(--currentLength){id+='\\x01'+args[++i];}return id;};};});var require_is_implemented8=__commonJS(function(exports,module){'use strict';module.exports=function(){var numberIsNaN=Number.isNaN;if(typeof numberIsNaN!=='function'){return false;}return!numberIsNaN({})&&numberIsNaN(NaN)&&!numberIsNaN(34);};});var require_shim6=__commonJS(function(exports,module){'use strict';module.exports=function(value){return value!==value;};});var require_is_nan=__commonJS(function(exports,module){'use strict';module.exports=require_is_implemented8()()?Number.isNaN:require_shim6();});var require_e_index_of=__commonJS(function(exports,module){'use strict';var numberIsNaN=require_is_nan();var toPosInt=require_to_pos_integer();var value=require_valid_value();var indexOf=Array.prototype.indexOf;var objHasOwnProperty=Object.prototype.hasOwnProperty;var abs=Math.abs;var floor=Math.floor;module.exports=function(searchElement){var i,length,fromIndex,val;if(!numberIsNaN(searchElement)){return indexOf.apply(this,arguments);}length=toPosInt(value(this).length);fromIndex=arguments[1];if(isNaN(fromIndex)){fromIndex=0;}else if(fromIndex>=0){fromIndex=floor(fromIndex);}else{fromIndex=toPosInt(this.length)-floor(abs(fromIndex));}for(i=fromIndex;i<length;++i){if(objHasOwnProperty.call(this,i)){val=this[i];if(numberIsNaN(val)){return i;}}}return-1;};});var require_get=__commonJS(function(exports,module){'use strict';var indexOf=require_e_index_of();var create=Object.create;module.exports=function(){var lastId=0,map=[],cache2=create(null);return{get:function get(args){var index=0,set2=map,i,length=args.length;if(length===0){return set2[length]||null;}if(set2=set2[length]){while(index<length-1){i=indexOf.call(set2[0],args[index]);if(i===-1){return null;}set2=set2[1][i];++index;}i=indexOf.call(set2[0],args[index]);if(i===-1){return null;}return set2[1][i]||null;}return null;},set:function set(args){var index=0,set2=map,i,length=args.length;if(length===0){set2[length]=++lastId;}else{if(!set2[length]){set2[length]=[[],[]];}set2=set2[length];while(index<length-1){i=indexOf.call(set2[0],args[index]);if(i===-1){i=set2[0].push(args[index])-1;set2[1].push([[],[]]);}set2=set2[1][i];++index;}i=indexOf.call(set2[0],args[index]);if(i===-1){i=set2[0].push(args[index])-1;}set2[1][i]=++lastId;}cache2[lastId]=args;return lastId;},delete:function _delete(id){var index=0,set2=map,i,args=cache2[id],length=args.length,path=[];if(length===0){delete set2[length];}else if(set2=set2[length]){while(index<length-1){i=indexOf.call(set2[0],args[index]);if(i===-1){return;}path.push(set2,i);set2=set2[1][i];++index;}i=indexOf.call(set2[0],args[index]);if(i===-1){return;}id=set2[1][i];set2[0].splice(i,1);set2[1].splice(i,1);while(!set2[0].length&&path.length){i=path.pop();set2=path.pop();set2[0].splice(i,1);set2[1].splice(i,1);}}delete cache2[id];},clear:function clear(){map=[];cache2=create(null);}};};});var require_get_1=__commonJS(function(exports,module){'use strict';var indexOf=require_e_index_of();module.exports=function(){var lastId=0,argsMap=[],cache2=[];return{get:function get(args){var index=indexOf.call(argsMap,args[0]);return index===-1?null:cache2[index];},set:function set(args){argsMap.push(args[0]);cache2.push(++lastId);return lastId;},delete:function _delete(id){var index=indexOf.call(cache2,id);if(index!==-1){argsMap.splice(index,1);cache2.splice(index,1);}},clear:function clear(){argsMap=[];cache2=[];}};};});var require_get_fixed=__commonJS(function(exports,module){'use strict';var indexOf=require_e_index_of();var create=Object.create;module.exports=function(length){var lastId=0,map=[[],[]],cache2=create(null);return{get:function get(args){var index=0,set2=map,i;while(index<length-1){i=indexOf.call(set2[0],args[index]);if(i===-1){return null;}set2=set2[1][i];++index;}i=indexOf.call(set2[0],args[index]);if(i===-1){return null;}return set2[1][i]||null;},set:function set(args){var index=0,set2=map,i;while(index<length-1){i=indexOf.call(set2[0],args[index]);if(i===-1){i=set2[0].push(args[index])-1;set2[1].push([[],[]]);}set2=set2[1][i];++index;}i=indexOf.call(set2[0],args[index]);if(i===-1){i=set2[0].push(args[index])-1;}set2[1][i]=++lastId;cache2[lastId]=args;return lastId;},delete:function _delete(id){var index=0,set2=map,i,path=[],args=cache2[id];while(index<length-1){i=indexOf.call(set2[0],args[index]);if(i===-1){return;}path.push(set2,i);set2=set2[1][i];++index;}i=indexOf.call(set2[0],args[index]);if(i===-1){return;}id=set2[1][i];set2[0].splice(i,1);set2[1].splice(i,1);while(!set2[0].length&&path.length){i=path.pop();set2=path.pop();set2[0].splice(i,1);set2[1].splice(i,1);}delete cache2[id];},clear:function clear(){map=[[],[]];cache2=create(null);}};};});var require_map=__commonJS(function(exports,module){'use strict';var callable=require_valid_callable();var forEach=require_for_each();var call=Function.prototype.call;module.exports=function(obj,cb){var result={},thisArg=arguments[2];callable(cb);forEach(obj,function(value,key,targetObj,index){result[key]=call.call(cb,thisArg,value,key,targetObj,index);});return result;};});var require_next_tick=__commonJS(function(exports,module){'use strict';var ensureCallable=function ensureCallable(fn){if(typeof fn!=='function'){throw new TypeError(fn+' is not a function');}return fn;};var byObserver=function byObserver(Observer){var node=document.createTextNode(''),queue2,currentQueue,i=0;new Observer(function(){var callback;if(!queue2){if(!currentQueue){return;}queue2=currentQueue;}else if(currentQueue){queue2=currentQueue.concat(queue2);}currentQueue=queue2;queue2=null;if(typeof currentQueue==='function'){callback=currentQueue;currentQueue=null;callback();return;}node.data=i=++i%2;while(currentQueue){callback=currentQueue.shift();if(!currentQueue.length){currentQueue=null;}callback();}}).observe(node,{characterData:true});return function(fn){ensureCallable(fn);if(queue2){if(typeof queue2==='function'){queue2=[queue2,fn];}else{queue2.push(fn);}return;}queue2=fn;node.data=i=++i%2;};};module.exports=function(){if((typeof process==='undefined'?'undefined':_typeof(process))==='object'&&process&&typeof process.nextTick==='function'){return process.nextTick;}if(typeof queueMicrotask==='function'){return function(cb){queueMicrotask(ensureCallable(cb));};}if((typeof document==='undefined'?'undefined':_typeof(document))==='object'&&document){if(typeof MutationObserver==='function'){return byObserver(MutationObserver);}if(typeof WebKitMutationObserver==='function'){return byObserver(WebKitMutationObserver);}}if(typeof setImmediate==='function'){return function(cb){setImmediate(ensureCallable(cb));};}if(typeof setTimeout==='function'||(typeof setTimeout==='undefined'?'undefined':_typeof(setTimeout))==='object'){return function(cb){setTimeout(ensureCallable(cb),0);};}return null;}();});var require_async=__commonJS(function(){'use strict';var aFrom=require_from();var objectMap=require_map();var mixin=require_mixin();var defineLength=require_define_length();var nextTick=require_next_tick();var slice=Array.prototype.slice;var apply=Function.prototype.apply;var create=Object.create;require_registered_extensions().async=function(tbi,conf){var waiting=create(null),cache2=create(null),base=conf.memoized,original=conf.original,currentCallback,currentContext,currentArgs;conf.memoized=defineLength(function(arg){var args=arguments,last2=args[args.length-1];if(typeof last2==='function'){currentCallback=last2;args=slice.call(args,0,-1);}return base.apply(currentContext=this,currentArgs=args);},base);try{mixin(conf.memoized,base);}catch(ignore){}conf.on('get',function(id){var cb,context,args;if(!currentCallback){return;}if(waiting[id]){if(typeof waiting[id]==='function'){waiting[id]=[waiting[id],currentCallback];}else{waiting[id].push(currentCallback);}currentCallback=null;return;}cb=currentCallback;context=currentContext;args=currentArgs;currentCallback=currentContext=currentArgs=null;nextTick(function(){var data;if(hasOwnProperty.call(cache2,id)){data=cache2[id];conf.emit('getasync',id,args,context);apply.call(cb,data.context,data.args);}else{currentCallback=cb;currentContext=context;currentArgs=args;base.apply(context,args);}});});conf.original=function(){var args,cb,origCb,result;if(!currentCallback){return apply.call(original,this,arguments);}args=aFrom(arguments);cb=function self2(err2){var cb2,args2,id=self2.id;if(id==null){nextTick(apply.bind(self2,this,arguments));return void 0;}delete self2.id;cb2=waiting[id];delete waiting[id];if(!cb2){return void 0;}args2=aFrom(arguments);if(conf.has(id)){if(err2){conf['delete'](id);}else{cache2[id]={context:this,args:args2};conf.emit('setasync',id,typeof cb2==='function'?1:cb2.length);}}if(typeof cb2==='function'){result=apply.call(cb2,this,args2);}else{cb2.forEach(function(cb3){result=apply.call(cb3,this,args2);},this);}return result;};origCb=currentCallback;currentCallback=currentContext=currentArgs=null;args.push(cb);result=apply.call(original,this,args);cb.cb=origCb;currentCallback=cb;return result;};conf.on('set',function(id){if(!currentCallback){conf['delete'](id);return;}if(waiting[id]){if(typeof waiting[id]==='function'){waiting[id]=[waiting[id],currentCallback.cb];}else{waiting[id].push(currentCallback.cb);}}else{waiting[id]=currentCallback.cb;}delete currentCallback.cb;currentCallback.id=id;currentCallback=null;});conf.on('delete',function(id){var result;if(hasOwnProperty.call(waiting,id)){return;}if(!cache2[id]){return;}result=cache2[id];delete cache2[id];conf.emit('deleteasync',id,slice.call(result.args,1));});conf.on('clear',function(){var oldCache=cache2;cache2=create(null);conf.emit('clearasync',objectMap(oldCache,function(data){return slice.call(data.args,1);}));});};});var require_primitive_set=__commonJS(function(exports,module){'use strict';var forEach=Array.prototype.forEach;var create=Object.create;module.exports=function(arg){var set2=create(null);forEach.call(arguments,function(name){set2[name]=true;});return set2;};});var require_is_callable=__commonJS(function(exports,module){'use strict';module.exports=function(obj){return typeof obj==='function';};});var require_validate_stringifiable=__commonJS(function(exports,module){'use strict';var isCallable=require_is_callable();module.exports=function(stringifiable){try{if(stringifiable&&isCallable(stringifiable.toString)){return stringifiable.toString();}return String(stringifiable);}catch(e){throw new TypeError('Passed argument cannot be stringifed');}};});var require_validate_stringifiable_value=__commonJS(function(exports,module){'use strict';var ensureValue=require_valid_value();var stringifiable=require_validate_stringifiable();module.exports=function(value){return stringifiable(ensureValue(value));};});var require_safe_to_string=__commonJS(function(exports,module){'use strict';var isCallable=require_is_callable();module.exports=function(value){try{if(value&&isCallable(value.toString)){return value.toString();}return String(value);}catch(e){return'<Non-coercible to string value>';}};});var require_to_short_string_representation=__commonJS(function(exports,module){'use strict';var safeToString=require_safe_to_string();var reNewLine=/[\\n\\r\\u2028\\u2029]/g;module.exports=function(value){var string=safeToString(value);if(string.length>100){string=string.slice(0,99)+'\\u2026';}string=string.replace(reNewLine,function(_char){return JSON.stringify(_char).slice(1,-1);});return string;};});var require_is_promise=__commonJS(function(exports,module){module.exports=isPromise;module.exports['default']=isPromise;function isPromise(obj){return!!obj&&(_typeof(obj)==='object'||typeof obj==='function')&&typeof obj.then==='function';}});var require_promise=__commonJS(function(){'use strict';var objectMap=require_map();var primitiveSet=require_primitive_set();var ensureString=require_validate_stringifiable_value();var toShortString=require_to_short_string_representation();var isPromise=require_is_promise();var nextTick=require_next_tick();var create=Object.create;var supportedModes=primitiveSet('then','then:finally','done','done:finally');require_registered_extensions().promise=function(mode,conf){var waiting=create(null),cache2=create(null),promises=create(null);if(mode===true){mode=null;}else{mode=ensureString(mode);if(!supportedModes[mode]){throw new TypeError('\\''+toShortString(mode)+'\\' is not valid promise mode');}}conf.on('set',function(id,ignore,promise){var isFailed=false;if(!isPromise(promise)){cache2[id]=promise;conf.emit('setasync',id,1);return;}waiting[id]=1;promises[id]=promise;var onSuccess=function onSuccess(result){var count=waiting[id];if(isFailed){throw new Error('Memoizee error: Detected unordered then|done & finally resolution, which in turn makes proper detection of success/failure impossible (when in \\'done:finally\\' mode)\\nConsider to rely on \\'then\\' or \\'done\\' mode instead.');}if(!count){return;}delete waiting[id];cache2[id]=result;conf.emit('setasync',id,count);};var onFailure=function onFailure(){isFailed=true;if(!waiting[id]){return;}delete waiting[id];delete promises[id];conf['delete'](id);};var resolvedMode=mode;if(!resolvedMode){resolvedMode='then';}if(resolvedMode==='then'){var nextTickFailure=function nextTickFailure(){nextTick(onFailure);};promise=promise.then(function(result){nextTick(onSuccess.bind(this,result));},nextTickFailure);if(typeof promise['finally']==='function'){promise['finally'](nextTickFailure);}}else if(resolvedMode==='done'){if(typeof promise.done!=='function'){throw new Error('Memoizee error: Retrieved promise does not implement \\'done\\' in \\'done\\' mode');}promise.done(onSuccess,onFailure);}else if(resolvedMode==='done:finally'){if(typeof promise.done!=='function'){throw new Error('Memoizee error: Retrieved promise does not implement \\'done\\' in \\'done:finally\\' mode');}if(typeof promise['finally']!=='function'){throw new Error('Memoizee error: Retrieved promise does not implement \\'finally\\' in \\'done:finally\\' mode');}promise.done(onSuccess);promise['finally'](onFailure);}});conf.on('get',function(id,args,context){var promise;if(waiting[id]){++waiting[id];return;}promise=promises[id];var emit=function emit(){conf.emit('getasync',id,args,context);};if(isPromise(promise)){if(typeof promise.done==='function'){promise.done(emit);}else{promise.then(function(){nextTick(emit);});}}else{emit();}});conf.on('delete',function(id){delete promises[id];if(waiting[id]){delete waiting[id];return;}if(!hasOwnProperty.call(cache2,id)){return;}var result=cache2[id];delete cache2[id];conf.emit('deleteasync',id,[result]);});conf.on('clear',function(){var oldCache=cache2;cache2=create(null);waiting=create(null);promises=create(null);conf.emit('clearasync',objectMap(oldCache,function(data){return[data];}));});};});var require_dispose=__commonJS(function(){'use strict';var callable=require_valid_callable();var forEach=require_for_each();var extensions=require_registered_extensions();var apply=Function.prototype.apply;extensions.dispose=function(dispose,conf,options){var del;callable(dispose);if(options.async&&extensions.async||options.promise&&extensions.promise){conf.on('deleteasync',del=function del(id,resultArray){apply.call(dispose,null,resultArray);});conf.on('clearasync',function(cache2){forEach(cache2,function(result,id){del(id,result);});});return;}conf.on('delete',del=function del(id,result){dispose(result);});conf.on('clear',function(cache2){forEach(cache2,function(result,id){del(id,result);});});};});var require_max_timeout=__commonJS(function(exports,module){'use strict';module.exports=2147483647;});var require_valid_timeout=__commonJS(function(exports,module){'use strict';var toPosInt=require_to_pos_integer();var maxTimeout=require_max_timeout();module.exports=function(value){value=toPosInt(value);if(value>maxTimeout){throw new TypeError(value+' exceeds maximum possible timeout');}return value;};});var require_max_age=__commonJS(function(){'use strict';var aFrom=require_from();var forEach=require_for_each();var nextTick=require_next_tick();var isPromise=require_is_promise();var timeout=require_valid_timeout();var extensions=require_registered_extensions();var noop3=Function.prototype;var max2=Math.max;var min=Math.min;var create=Object.create;extensions.maxAge=function(maxAge,conf,options){var timeouts,postfix,preFetchAge,preFetchTimeouts;maxAge=timeout(maxAge);if(!maxAge){return;}timeouts=create(null);postfix=options.async&&extensions.async||options.promise&&extensions.promise?'async':'';conf.on('set'+postfix,function(id){timeouts[id]=setTimeout(function(){conf['delete'](id);},maxAge);if(typeof timeouts[id].unref==='function'){timeouts[id].unref();}if(!preFetchTimeouts){return;}if(preFetchTimeouts[id]){if(preFetchTimeouts[id]!=='nextTick'){clearTimeout(preFetchTimeouts[id]);}}preFetchTimeouts[id]=setTimeout(function(){delete preFetchTimeouts[id];},preFetchAge);if(typeof preFetchTimeouts[id].unref==='function'){preFetchTimeouts[id].unref();}});conf.on('delete'+postfix,function(id){clearTimeout(timeouts[id]);delete timeouts[id];if(!preFetchTimeouts){return;}if(preFetchTimeouts[id]!=='nextTick'){clearTimeout(preFetchTimeouts[id]);}delete preFetchTimeouts[id];});if(options.preFetch){if(options.preFetch===true||isNaN(options.preFetch)){preFetchAge=.333;}else{preFetchAge=max2(min(Number(options.preFetch),1),0);}if(preFetchAge){preFetchTimeouts={};preFetchAge=(1-preFetchAge)*maxAge;conf.on('get'+postfix,function(id,args,context){if(!preFetchTimeouts[id]){preFetchTimeouts[id]='nextTick';nextTick(function(){var result;if(preFetchTimeouts[id]!=='nextTick'){return;}delete preFetchTimeouts[id];conf['delete'](id);if(options.async){args=aFrom(args);args.push(noop3);}result=conf.memoized.apply(context,args);if(options.promise){if(isPromise(result)){if(typeof result.done==='function'){result.done(noop3,noop3);}else{result.then(noop3,noop3);}}}});}});}}conf.on('clear'+postfix,function(){forEach(timeouts,function(id){clearTimeout(id);});timeouts={};if(preFetchTimeouts){forEach(preFetchTimeouts,function(id){if(id!=='nextTick'){clearTimeout(id);}});preFetchTimeouts={};}});};});var require_lru_queue=__commonJS(function(exports,module){'use strict';var toPosInt=require_to_pos_integer();var create=Object.create;var hasOwnProperty2=Object.prototype.hasOwnProperty;module.exports=function(limit){var size=0,base=1,queue2=create(null),map=create(null),index=0,del;limit=toPosInt(limit);return{hit:function hit(id){var oldIndex=map[id],nuIndex=++index;queue2[nuIndex]=id;map[id]=nuIndex;if(!oldIndex){++size;if(size<=limit){return;}id=queue2[base];del(id);return id;}delete queue2[oldIndex];if(base!==oldIndex){return;}while(!hasOwnProperty2.call(queue2,++base)){continue;}},delete:del=function del(id){var oldIndex=map[id];if(!oldIndex){return;}delete queue2[oldIndex];delete map[id];--size;if(base!==oldIndex){return;}if(!size){index=0;base=1;return;}while(!hasOwnProperty2.call(queue2,++base)){continue;}},clear:function clear(){size=0;base=1;queue2=create(null);map=create(null);index=0;}};};});var require_max=__commonJS(function(){'use strict';var toPosInteger=require_to_pos_integer();var lruQueue=require_lru_queue();var extensions=require_registered_extensions();extensions.max=function(max2,conf,options){var postfix,queue2,hit;max2=toPosInteger(max2);if(!max2){return;}queue2=lruQueue(max2);postfix=options.async&&extensions.async||options.promise&&extensions.promise?'async':'';conf.on('set'+postfix,hit=function hit(id){id=queue2.hit(id);if(id===void 0){return;}conf['delete'](id);});conf.on('get'+postfix,hit);conf.on('delete'+postfix,queue2['delete']);conf.on('clear'+postfix,queue2.clear);};});var require_ref_counter=__commonJS(function(){'use strict';var d2=require_d();var extensions=require_registered_extensions();var create=Object.create;var defineProperties=Object.defineProperties;extensions.refCounter=function(ignore,conf,options){var cache2,postfix;cache2=create(null);postfix=options.async&&extensions.async||options.promise&&extensions.promise?'async':'';conf.on('set'+postfix,function(id,length){cache2[id]=length||1;});conf.on('get'+postfix,function(id){++cache2[id];});conf.on('delete'+postfix,function(id){delete cache2[id];});conf.on('clear'+postfix,function(){cache2={};});defineProperties(conf.memoized,{deleteRef:d2(function(){var id=conf.get(arguments);if(id===null){return null;}if(!cache2[id]){return null;}if(! --cache2[id]){conf['delete'](id);return true;}return false;}),getRefCount:d2(function(){var id=conf.get(arguments);if(id===null){return 0;}if(!cache2[id]){return 0;}return cache2[id];})});};});var require_memoizee=__commonJS(function(exports,module){'use strict';var normalizeOpts=require_normalize_options();var resolveLength=require_resolve_length();var plain=require_plain();module.exports=function(fn){var options=normalizeOpts(arguments[1]),length;if(!options.normalizer){length=options.length=resolveLength(options.length,fn.length,options.async);if(length!==0){if(options.primitive){if(length===false){options.normalizer=require_primitive();}else if(length>1){options.normalizer=require_get_primitive_fixed()(length);}}else if(length===false){options.normalizer=require_get()();}else if(length===1){options.normalizer=require_get_1()();}else{options.normalizer=require_get_fixed()(length);}}}if(options.async){require_async();}if(options.promise){require_promise();}if(options.dispose){require_dispose();}if(options.maxAge){require_max_age();}if(options.max){require_max();}if(options.refCounter){require_ref_counter();}return plain(fn,options);};});var require_utils=__commonJS(function(exports){'use strict';Object.defineProperty(exports,'__esModule',{value:true});function isIdentStart(c4){return c4>='a'&&c4<='z'||c4>='A'&&c4<='Z'||c4==='-'||c4==='_';}exports.isIdentStart=isIdentStart;function isIdent(c4){return c4>='a'&&c4<='z'||c4>='A'&&c4<='Z'||c4>='0'&&c4<='9'||c4==='-'||c4==='_';}exports.isIdent=isIdent;function isHex(c4){return c4>='a'&&c4<='f'||c4>='A'&&c4<='F'||c4>='0'&&c4<='9';}exports.isHex=isHex;function escapeIdentifier(s){var len=s.length;var result='';var i=0;while(i<len){var chr=s.charAt(i);if(exports.identSpecialChars[chr]){result+='\\\\'+chr;}else{if(!(chr==='_'||chr==='-'||chr>='A'&&chr<='Z'||chr>='a'&&chr<='z'||i!==0&&chr>='0'&&chr<='9')){var charCode=chr.charCodeAt(0);if((charCode&63488)===55296){var extraCharCode=s.charCodeAt(i++);if((charCode&64512)!==55296||(extraCharCode&64512)!==56320){throw Error('UCS-2(decode): illegal sequence');}charCode=((charCode&1023)<<10)+(extraCharCode&1023)+65536;}result+='\\\\'+charCode.toString(16)+' ';}else{result+=chr;}}i++;}return result;}exports.escapeIdentifier=escapeIdentifier;function escapeStr(s){var len=s.length;var result='';var i=0;var replacement;while(i<len){var chr=s.charAt(i);if(chr==='\"'){chr='\\\\\"';}else if(chr==='\\\\'){chr='\\\\\\\\';}else if((replacement=exports.strReplacementsRev[chr])!==void 0){chr=replacement;}result+=chr;i++;}return'\"'+result+'\"';}exports.escapeStr=escapeStr;exports.identSpecialChars={'!':true,'\"':true,'#':true,$:true,'%':true,'&':true,'\\'':true,'(':true,')':true,'*':true,'+':true,',':true,'.':true,'/':true,';':true,'<':true,'=':true,'>':true,'?':true,'@':true,'[':true,'\\\\':true,']':true,'^':true,'`':true,'{':true,'|':true,'}':true,'~':true};exports.strReplacementsRev={'\\n':'\\\\n','\\r':'\\\\r','\\t':'\\\\t','\\f':'\\\\f','\\v':'\\\\v'};exports.singleQuoteEscapeChars={n:'\\n',r:'\\r',t:'\\t',f:'\\f','\\\\':'\\\\','\\'':'\\''};exports.doubleQuotesEscapeChars={n:'\\n',r:'\\r',t:'\\t',f:'\\f','\\\\':'\\\\','\"':'\"'};});var require_parser_context=__commonJS(function(exports){'use strict';Object.defineProperty(exports,'__esModule',{value:true});var utils_1=require_utils();function parseCssSelector(str,pos,pseudos,attrEqualityMods,ruleNestingOperators,substitutesEnabled){var l=str.length;var chr='';function getStr(quote,escapeTable){var result='';pos++;chr=str.charAt(pos);while(pos<l){if(chr===quote){pos++;return result;}else if(chr==='\\\\'){pos++;chr=str.charAt(pos);var esc=void 0;if(chr===quote){result+=quote;}else if((esc=escapeTable[chr])!==void 0){result+=esc;}else if(utils_1.isHex(chr)){var hex=chr;pos++;chr=str.charAt(pos);while(utils_1.isHex(chr)){hex+=chr;pos++;chr=str.charAt(pos);}if(chr===' '){pos++;chr=str.charAt(pos);}result+=String.fromCharCode(parseInt(hex,16));continue;}else{result+=chr;}}else{result+=chr;}pos++;chr=str.charAt(pos);}return result;}function getIdent(){var result='';chr=str.charAt(pos);while(pos<l){if(utils_1.isIdent(chr)){result+=chr;}else if(chr==='\\\\'){pos++;if(pos>=l){throw Error('Expected symbol but end of file reached.');}chr=str.charAt(pos);if(utils_1.identSpecialChars[chr]){result+=chr;}else if(utils_1.isHex(chr)){var hex=chr;pos++;chr=str.charAt(pos);while(utils_1.isHex(chr)){hex+=chr;pos++;chr=str.charAt(pos);}if(chr===' '){pos++;chr=str.charAt(pos);}result+=String.fromCharCode(parseInt(hex,16));continue;}else{result+=chr;}}else{return result;}pos++;chr=str.charAt(pos);}return result;}function skipWhitespace(){chr=str.charAt(pos);var result=false;while(chr===' '||chr==='\\t'||chr==='\\n'||chr==='\\r'||chr==='\\f'){result=true;pos++;chr=str.charAt(pos);}return result;}function parse3(){var res=parseSelector();if(pos<l){throw Error('Rule expected but \"'+str.charAt(pos)+'\" found.');}return res;}function parseSelector(){var selector=parseSingleSelector();if(!selector){return null;}var res=selector;chr=str.charAt(pos);while(chr===','){pos++;skipWhitespace();if(res.type!=='selectors'){res={type:'selectors',selectors:[selector]};}selector=parseSingleSelector();if(!selector){throw Error('Rule expected after \",\".');}res.selectors.push(selector);}return res;}function parseSingleSelector(){skipWhitespace();var selector={type:'ruleSet'};var rule=parseRule();if(!rule){return null;}var currentRule=selector;while(rule){rule.type='rule';currentRule.rule=rule;currentRule=rule;skipWhitespace();chr=str.charAt(pos);if(pos>=l||chr===','||chr===')'){break;}if(ruleNestingOperators[chr]){var op=chr;pos++;skipWhitespace();rule=parseRule();if(!rule){throw Error('Rule expected after \"'+op+'\".');}rule.nestingOperator=op;}else{rule=parseRule();if(rule){rule.nestingOperator=null;}}}return selector;}function parseRule(){var rule=null;while(pos<l){chr=str.charAt(pos);if(chr==='*'){pos++;(rule=rule||{}).tagName='*';}else if(utils_1.isIdentStart(chr)||chr==='\\\\'){(rule=rule||{}).tagName=getIdent();}else if(chr==='.'){pos++;rule=rule||{};(rule.classNames=rule.classNames||[]).push(getIdent());}else if(chr==='#'){pos++;(rule=rule||{}).id=getIdent();}else if(chr==='['){pos++;skipWhitespace();var attr={name:getIdent()};skipWhitespace();if(chr===']'){pos++;}else{var operator='';if(attrEqualityMods[chr]){operator=chr;pos++;chr=str.charAt(pos);}if(pos>=l){throw Error('Expected \"=\" but end of file reached.');}if(chr!=='='){throw Error('Expected \"=\" but \"'+chr+'\" found.');}attr.operator=operator+'=';pos++;skipWhitespace();var attrValue='';attr.valueType='string';if(chr==='\"'){attrValue=getStr('\"',utils_1.doubleQuotesEscapeChars);}else if(chr==='\\''){attrValue=getStr('\\'',utils_1.singleQuoteEscapeChars);}else if(substitutesEnabled&&chr==='$'){pos++;attrValue=getIdent();attr.valueType='substitute';}else{while(pos<l){if(chr===']'){break;}attrValue+=chr;pos++;chr=str.charAt(pos);}attrValue=attrValue.trim();}skipWhitespace();if(pos>=l){throw Error('Expected \"]\" but end of file reached.');}if(chr!==']'){throw Error('Expected \"]\" but \"'+chr+'\" found.');}pos++;attr.value=attrValue;}rule=rule||{};(rule.attrs=rule.attrs||[]).push(attr);}else if(chr===':'){pos++;var pseudoName=getIdent();var pseudo={name:pseudoName};if(chr==='('){pos++;var value='';skipWhitespace();if(pseudos[pseudoName]==='selector'){pseudo.valueType='selector';value=parseSelector();}else{pseudo.valueType=pseudos[pseudoName]||'string';if(chr==='\"'){value=getStr('\"',utils_1.doubleQuotesEscapeChars);}else if(chr==='\\''){value=getStr('\\'',utils_1.singleQuoteEscapeChars);}else if(substitutesEnabled&&chr==='$'){pos++;value=getIdent();pseudo.valueType='substitute';}else{while(pos<l){if(chr===')'){break;}value+=chr;pos++;chr=str.charAt(pos);}value=value.trim();}skipWhitespace();}if(pos>=l){throw Error('Expected \")\" but end of file reached.');}if(chr!==')'){throw Error('Expected \")\" but \"'+chr+'\" found.');}pos++;pseudo.value=value;}rule=rule||{};(rule.pseudos=rule.pseudos||[]).push(pseudo);}else{break;}}return rule;}return parse3();}exports.parseCssSelector=parseCssSelector;});var require_render=__commonJS(function(exports){'use strict';Object.defineProperty(exports,'__esModule',{value:true});var utils_1=require_utils();function renderEntity(entity){var res='';switch(entity.type){case'ruleSet':var currentEntity=entity.rule;var parts=[];while(currentEntity){if(currentEntity.nestingOperator){parts.push(currentEntity.nestingOperator);}parts.push(renderEntity(currentEntity));currentEntity=currentEntity.rule;}res=parts.join(' ');break;case'selectors':res=entity.selectors.map(renderEntity).join(', ');break;case'rule':if(entity.tagName){if(entity.tagName==='*'){res='*';}else{res=utils_1.escapeIdentifier(entity.tagName);}}if(entity.id){res+='#'+utils_1.escapeIdentifier(entity.id);}if(entity.classNames){res+=entity.classNames.map(function(cn){return'.'+utils_1.escapeIdentifier(cn);}).join('');}if(entity.attrs){res+=entity.attrs.map(function(attr){if('operator'in attr){if(attr.valueType==='substitute'){return'['+utils_1.escapeIdentifier(attr.name)+attr.operator+'$'+attr.value+']';}else{return'['+utils_1.escapeIdentifier(attr.name)+attr.operator+utils_1.escapeStr(attr.value)+']';}}else{return'['+utils_1.escapeIdentifier(attr.name)+']';}}).join('');}if(entity.pseudos){res+=entity.pseudos.map(function(pseudo){if(pseudo.valueType){if(pseudo.valueType==='selector'){return':'+utils_1.escapeIdentifier(pseudo.name)+'('+renderEntity(pseudo.value)+')';}else if(pseudo.valueType==='substitute'){return':'+utils_1.escapeIdentifier(pseudo.name)+'($'+pseudo.value+')';}else if(pseudo.valueType==='numeric'){return':'+utils_1.escapeIdentifier(pseudo.name)+'('+pseudo.value+')';}else{return':'+utils_1.escapeIdentifier(pseudo.name)+'('+utils_1.escapeIdentifier(pseudo.value)+')';}}else{return':'+utils_1.escapeIdentifier(pseudo.name);}}).join('');}break;default:throw Error('Unknown entity type: \"'+entity.type+'\".');}return res;}exports.renderEntity=renderEntity;});var require_lib=__commonJS(function(exports){'use strict';Object.defineProperty(exports,'__esModule',{value:true});var parser_context_1=require_parser_context();var render_1=require_render();var CssSelectorParser3=function(){function CssSelectorParser4(){this.pseudos={};this.attrEqualityMods={};this.ruleNestingOperators={};this.substitutesEnabled=false;}CssSelectorParser4.prototype.registerSelectorPseudos=function(){var pseudos=[];for(var _i=0;_i<arguments.length;_i++){pseudos[_i]=arguments[_i];}for(var _a=0,pseudos_1=pseudos;_a<pseudos_1.length;_a++){var pseudo=pseudos_1[_a];this.pseudos[pseudo]='selector';}return this;};CssSelectorParser4.prototype.unregisterSelectorPseudos=function(){var pseudos=[];for(var _i=0;_i<arguments.length;_i++){pseudos[_i]=arguments[_i];}for(var _a=0,pseudos_2=pseudos;_a<pseudos_2.length;_a++){var pseudo=pseudos_2[_a];delete this.pseudos[pseudo];}return this;};CssSelectorParser4.prototype.registerNumericPseudos=function(){var pseudos=[];for(var _i=0;_i<arguments.length;_i++){pseudos[_i]=arguments[_i];}for(var _a=0,pseudos_3=pseudos;_a<pseudos_3.length;_a++){var pseudo=pseudos_3[_a];this.pseudos[pseudo]='numeric';}return this;};CssSelectorParser4.prototype.unregisterNumericPseudos=function(){var pseudos=[];for(var _i=0;_i<arguments.length;_i++){pseudos[_i]=arguments[_i];}for(var _a=0,pseudos_4=pseudos;_a<pseudos_4.length;_a++){var pseudo=pseudos_4[_a];delete this.pseudos[pseudo];}return this;};CssSelectorParser4.prototype.registerNestingOperators=function(){var operators=[];for(var _i=0;_i<arguments.length;_i++){operators[_i]=arguments[_i];}for(var _a=0,operators_1=operators;_a<operators_1.length;_a++){var operator=operators_1[_a];this.ruleNestingOperators[operator]=true;}return this;};CssSelectorParser4.prototype.unregisterNestingOperators=function(){var operators=[];for(var _i=0;_i<arguments.length;_i++){operators[_i]=arguments[_i];}for(var _a=0,operators_2=operators;_a<operators_2.length;_a++){var operator=operators_2[_a];delete this.ruleNestingOperators[operator];}return this;};CssSelectorParser4.prototype.registerAttrEqualityMods=function(){var mods=[];for(var _i=0;_i<arguments.length;_i++){mods[_i]=arguments[_i];}for(var _a=0,mods_1=mods;_a<mods_1.length;_a++){var mod=mods_1[_a];this.attrEqualityMods[mod]=true;}return this;};CssSelectorParser4.prototype.unregisterAttrEqualityMods=function(){var mods=[];for(var _i=0;_i<arguments.length;_i++){mods[_i]=arguments[_i];}for(var _a=0,mods_2=mods;_a<mods_2.length;_a++){var mod=mods_2[_a];delete this.attrEqualityMods[mod];}return this;};CssSelectorParser4.prototype.enableSubstitutes=function(){this.substitutesEnabled=true;return this;};CssSelectorParser4.prototype.disableSubstitutes=function(){this.substitutesEnabled=false;return this;};CssSelectorParser4.prototype.parse=function(str){return parser_context_1.parseCssSelector(str,0,this.pseudos,this.attrEqualityMods,this.ruleNestingOperators,this.substitutesEnabled);};CssSelectorParser4.prototype.render=function(path){return render_1.renderEntity(path).trim();};return CssSelectorParser4;}();exports.CssSelectorParser=CssSelectorParser3;});var require_doT=__commonJS(function(exports,module){(function(){'use strict';var doT3={name:'doT',version:'1.1.1',templateSettings:{evaluate:/\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,interpolate:/\\{\\{=([\\s\\S]+?)\\}\\}/g,encode:/\\{\\{!([\\s\\S]+?)\\}\\}/g,use:/\\{\\{#([\\s\\S]+?)\\}\\}/g,useParams:/(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,define:/\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,defineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,conditional:/\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,iterate:/\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,varname:'it',strip:true,append:true,selfcontained:false,doNotSkipEncoded:false},template:void 0,compile:void 0,log:true};(function(){if((typeof globalThis==='undefined'?'undefined':_typeof(globalThis))==='object'){return;}try{Object.defineProperty(Object.prototype,'__magic__',{get:function get(){return this;},configurable:true});__magic__.globalThis=__magic__;delete Object.prototype.__magic__;}catch(e){window.globalThis=function(){if(typeof self!=='undefined'){return self;}if(typeof window!=='undefined'){return window;}if(typeof global!=='undefined'){return global;}if(typeof this!=='undefined'){return this;}throw new Error('Unable to locate global `this`');}();}})();doT3.encodeHTMLSource=function(doNotSkipEncoded){var encodeHTMLRules={'&':'&#38;','<':'&#60;','>':'&#62;','\"':'&#34;','\\'':'&#39;','/':'&#47;'},matchHTML=doNotSkipEncoded?/[&<>\"'\\/]/g:/&(?!#?\\w+;)|<|>|\"|'|\\//g;return function(code){return code?code.toString().replace(matchHTML,function(m3){return encodeHTMLRules[m3]||m3;}):'';};};if(typeof module!=='undefined'&&module.exports){module.exports=doT3;}else if(typeof define==='function'&&define.amd){define(function(){return doT3;});}else{globalThis.doT=doT3;}var startend={append:{start:'\\'+(',end:')+\\'',startencode:'\\'+encodeHTML('},split:{start:'\\';out+=(',end:');out+=\\'',startencode:'\\';out+=encodeHTML('}},skip=/$^/;function resolveDefs(c4,block,def){return(typeof block==='string'?block:block.toString()).replace(c4.define||skip,function(m3,code,assign,value){if(code.indexOf('def.')===0){code=code.substring(4);}if(!(code in def)){if(assign===':'){if(c4.defineParams){value.replace(c4.defineParams,function(m4,param,v){def[code]={arg:param,text:v};});}if(!(code in def)){def[code]=value;}}else{new Function('def','def[\\''+code+'\\']='+value)(def);}}return'';}).replace(c4.use||skip,function(m3,code){if(c4.useParams){code=code.replace(c4.useParams,function(m4,s,d2,param){if(def[d2]&&def[d2].arg&&param){var rw=(d2+':'+param).replace(/'|\\\\/g,'_');def.__exp=def.__exp||{};def.__exp[rw]=def[d2].text.replace(new RegExp('(^|[^\\\\w$])'+def[d2].arg+'([^\\\\w$])','g'),'$1'+param+'$2');return s+'def.__exp[\\''+rw+'\\']';}});}var v=new Function('def','return '+code)(def);return v?resolveDefs(c4,v,def):v;});}function unescape(code){return code.replace(/\\\\('|\\\\)/g,'$1').replace(/[\\r\\t\\n]/g,' ');}doT3.template=function(tmpl,c4,def){c4=c4||doT3.templateSettings;var cse=c4.append?startend.append:startend.split,needhtmlencode,sid=0,indv,str=c4.use||c4.define?resolveDefs(c4,tmpl,def||{}):tmpl;str=('var out=\\''+(c4.strip?str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,' ').replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,''):str).replace(/'|\\\\/g,'\\\\$&').replace(c4.interpolate||skip,function(m3,code){return cse.start+unescape(code)+cse.end;}).replace(c4.encode||skip,function(m3,code){needhtmlencode=true;return cse.startencode+unescape(code)+cse.end;}).replace(c4.conditional||skip,function(m3,elsecase,code){return elsecase?code?'\\';}else if('+unescape(code)+'){out+=\\'':'\\';}else{out+=\\'':code?'\\';if('+unescape(code)+'){out+=\\'':'\\';}out+=\\'';}).replace(c4.iterate||skip,function(m3,iterate,vname,iname){if(!iterate){return'\\';} } out+=\\'';}sid+=1;indv=iname||'i'+sid;iterate=unescape(iterate);return'\\';var arr'+sid+'='+iterate+';if(arr'+sid+'){var '+vname+','+indv+'=-1,l'+sid+'=arr'+sid+'.length-1;while('+indv+'<l'+sid+'){'+vname+'=arr'+sid+'['+indv+'+=1];out+=\\'';}).replace(c4.evaluate||skip,function(m3,code){return'\\';'+unescape(code)+'out+=\\'';})+'\\';return out;').replace(/\\n/g,'\\\\n').replace(/\\t/g,'\\\\t').replace(/\\r/g,'\\\\r').replace(/(\\s|;|\\}|^|\\{)out\\+='';/g,'$1').replace(/\\+''/g,'');if(needhtmlencode){if(!c4.selfcontained&&globalThis&&!globalThis._encodeHTML){globalThis._encodeHTML=doT3.encodeHTMLSource(c4.doNotSkipEncoded);}str='var encodeHTML = typeof _encodeHTML !== \\'undefined\\' ? _encodeHTML : ('+doT3.encodeHTMLSource.toString()+'('+(c4.doNotSkipEncoded||'')+'));'+str;}try{return new Function(c4.varname,str);}catch(e){if(typeof console!=='undefined'){console.log('Could not create a template function: '+str);}throw e;}};doT3.compile=function(tmpl,def){return doT3.template(tmpl,null,def);};})();});var require_es6_promise=__commonJS(function(exports,module){(function(global2,factory){_typeof(exports)==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):global2.ES6Promise=factory();})(exports,function(){'use strict';function objectOrFunction(x){var type2=_typeof(x);return x!==null&&(type2==='object'||type2==='function');}function isFunction(x){return typeof x==='function';}var _isArray=void 0;if(Array.isArray){_isArray=Array.isArray;}else{_isArray=function _isArray(x){return Object.prototype.toString.call(x)==='[object Array]';};}var isArray=_isArray;var len=0;var vertxNext=void 0;var customSchedulerFn=void 0;var asap=function asap2(callback,arg){queue2[len]=callback;queue2[len+1]=arg;len+=2;if(len===2){if(customSchedulerFn){customSchedulerFn(flush);}else{scheduleFlush();}}};function setScheduler(scheduleFn){customSchedulerFn=scheduleFn;}function setAsap(asapFn){asap=asapFn;}var browserWindow=typeof window!=='undefined'?window:void 0;var browserGlobal=browserWindow||{};var BrowserMutationObserver=browserGlobal.MutationObserver||browserGlobal.WebKitMutationObserver;var isNode2=typeof self==='undefined'&&typeof process!=='undefined'&&{}.toString.call(process)==='[object process]';var isWorker=typeof Uint8ClampedArray!=='undefined'&&typeof importScripts!=='undefined'&&typeof MessageChannel!=='undefined';function useNextTick(){return function(){return process.nextTick(flush);};}function useVertxTimer(){if(typeof vertxNext!=='undefined'){return function(){vertxNext(flush);};}return useSetTimeout();}function useMutationObserver(){var iterations=0;var observer=new BrowserMutationObserver(flush);var node=document.createTextNode('');observer.observe(node,{characterData:true});return function(){node.data=iterations=++iterations%2;};}function useMessageChannel(){var channel=new MessageChannel();channel.port1.onmessage=flush;return function(){return channel.port2.postMessage(0);};}function useSetTimeout(){var globalSetTimeout=setTimeout;return function(){return globalSetTimeout(flush,1);};}var queue2=new Array(1e3);function flush(){for(var i=0;i<len;i+=2){var callback=queue2[i];var arg=queue2[i+1];callback(arg);queue2[i]=void 0;queue2[i+1]=void 0;}len=0;}function attemptVertx(){try{var vertx=Function('return this')().require('vertx');vertxNext=vertx.runOnLoop||vertx.runOnContext;return useVertxTimer();}catch(e){return useSetTimeout();}}var scheduleFlush=void 0;if(isNode2){scheduleFlush=useNextTick();}else if(BrowserMutationObserver){scheduleFlush=useMutationObserver();}else if(isWorker){scheduleFlush=useMessageChannel();}else if(browserWindow===void 0&&true){scheduleFlush=attemptVertx();}else{scheduleFlush=useSetTimeout();}function then(onFulfillment,onRejection){var parent=this;var child=new this.constructor(noop3);if(child[PROMISE_ID]===void 0){makePromise(child);}var _state=parent._state;if(_state){var callback=arguments[_state-1];asap(function(){return invokeCallback(_state,child,callback,parent._result);});}else{subscribe2(parent,child,onFulfillment,onRejection);}return child;}function resolve$1(object){var Constructor=this;if(object&&_typeof(object)==='object'&&object.constructor===Constructor){return object;}var promise=new Constructor(noop3);resolve(promise,object);return promise;}var PROMISE_ID=Math.random().toString(36).substring(2);function noop3(){}var PENDING=void 0;var FULFILLED=1;var REJECTED=2;function selfFulfillment(){return new TypeError('You cannot resolve a promise with itself');}function cannotReturnOwn(){return new TypeError('A promises callback cannot return that same promise.');}function tryThen(then$$1,value,fulfillmentHandler,rejectionHandler){try{then$$1.call(value,fulfillmentHandler,rejectionHandler);}catch(e){return e;}}function handleForeignThenable(promise,thenable,then$$1){asap(function(promise2){var sealed=false;var error=tryThen(then$$1,thenable,function(value){if(sealed){return;}sealed=true;if(thenable!==value){resolve(promise2,value);}else{fulfill(promise2,value);}},function(reason){if(sealed){return;}sealed=true;reject(promise2,reason);},'Settle: '+(promise2._label||' unknown promise'));if(!sealed&&error){sealed=true;reject(promise2,error);}},promise);}function handleOwnThenable(promise,thenable){if(thenable._state===FULFILLED){fulfill(promise,thenable._result);}else if(thenable._state===REJECTED){reject(promise,thenable._result);}else{subscribe2(thenable,void 0,function(value){return resolve(promise,value);},function(reason){return reject(promise,reason);});}}function handleMaybeThenable(promise,maybeThenable,then$$1){if(maybeThenable.constructor===promise.constructor&&then$$1===then&&maybeThenable.constructor.resolve===resolve$1){handleOwnThenable(promise,maybeThenable);}else{if(then$$1===void 0){fulfill(promise,maybeThenable);}else if(isFunction(then$$1)){handleForeignThenable(promise,maybeThenable,then$$1);}else{fulfill(promise,maybeThenable);}}}function resolve(promise,value){if(promise===value){reject(promise,selfFulfillment());}else if(objectOrFunction(value)){var then$$1=void 0;try{then$$1=value.then;}catch(error){reject(promise,error);return;}handleMaybeThenable(promise,value,then$$1);}else{fulfill(promise,value);}}function publishRejection(promise){if(promise._onerror){promise._onerror(promise._result);}publish(promise);}function fulfill(promise,value){if(promise._state!==PENDING){return;}promise._result=value;promise._state=FULFILLED;if(promise._subscribers.length!==0){asap(publish,promise);}}function reject(promise,reason){if(promise._state!==PENDING){return;}promise._state=REJECTED;promise._result=reason;asap(publishRejection,promise);}function subscribe2(parent,child,onFulfillment,onRejection){var _subscribers=parent._subscribers;var length=_subscribers.length;parent._onerror=null;_subscribers[length]=child;_subscribers[length+FULFILLED]=onFulfillment;_subscribers[length+REJECTED]=onRejection;if(length===0&&parent._state){asap(publish,parent);}}function publish(promise){var subscribers=promise._subscribers;var settled=promise._state;if(subscribers.length===0){return;}var child=void 0,callback=void 0,detail=promise._result;for(var i=0;i<subscribers.length;i+=3){child=subscribers[i];callback=subscribers[i+settled];if(child){invokeCallback(settled,child,callback,detail);}else{callback(detail);}}promise._subscribers.length=0;}function invokeCallback(settled,promise,callback,detail){var hasCallback=isFunction(callback),value=void 0,error=void 0,succeeded=true;if(hasCallback){try{value=callback(detail);}catch(e){succeeded=false;error=e;}if(promise===value){reject(promise,cannotReturnOwn());return;}}else{value=detail;}if(promise._state!==PENDING){}else if(hasCallback&&succeeded){resolve(promise,value);}else if(succeeded===false){reject(promise,error);}else if(settled===FULFILLED){fulfill(promise,value);}else if(settled===REJECTED){reject(promise,value);}}function initializePromise(promise,resolver){try{resolver(function resolvePromise(value){resolve(promise,value);},function rejectPromise(reason){reject(promise,reason);});}catch(e){reject(promise,e);}}var id=0;function nextId(){return id++;}function makePromise(promise){promise[PROMISE_ID]=id++;promise._state=void 0;promise._result=void 0;promise._subscribers=[];}function validationError(){return new Error('Array Methods must be provided an Array');}var Enumerator=function(){function Enumerator2(Constructor,input){this._instanceConstructor=Constructor;this.promise=new Constructor(noop3);if(!this.promise[PROMISE_ID]){makePromise(this.promise);}if(isArray(input)){this.length=input.length;this._remaining=input.length;this._result=new Array(this.length);if(this.length===0){fulfill(this.promise,this._result);}else{this.length=this.length||0;this._enumerate(input);if(this._remaining===0){fulfill(this.promise,this._result);}}}else{reject(this.promise,validationError());}}Enumerator2.prototype._enumerate=function _enumerate(input){for(var i=0;this._state===PENDING&&i<input.length;i++){this._eachEntry(input[i],i);}};Enumerator2.prototype._eachEntry=function _eachEntry(entry,i){var c4=this._instanceConstructor;var resolve$$1=c4.resolve;if(resolve$$1===resolve$1){var _then=void 0;var error=void 0;var didError=false;try{_then=entry.then;}catch(e){didError=true;error=e;}if(_then===then&&entry._state!==PENDING){this._settledAt(entry._state,i,entry._result);}else if(typeof _then!=='function'){this._remaining--;this._result[i]=entry;}else if(c4===Promise$1){var promise=new c4(noop3);if(didError){reject(promise,error);}else{handleMaybeThenable(promise,entry,_then);}this._willSettleAt(promise,i);}else{this._willSettleAt(new c4(function(resolve$$12){return resolve$$12(entry);}),i);}}else{this._willSettleAt(resolve$$1(entry),i);}};Enumerator2.prototype._settledAt=function _settledAt(state,i,value){var promise=this.promise;if(promise._state===PENDING){this._remaining--;if(state===REJECTED){reject(promise,value);}else{this._result[i]=value;}}if(this._remaining===0){fulfill(promise,this._result);}};Enumerator2.prototype._willSettleAt=function _willSettleAt(promise,i){var enumerator=this;subscribe2(promise,void 0,function(value){return enumerator._settledAt(FULFILLED,i,value);},function(reason){return enumerator._settledAt(REJECTED,i,reason);});};return Enumerator2;}();function all(entries){return new Enumerator(this,entries).promise;}function race(entries){var Constructor=this;if(!isArray(entries)){return new Constructor(function(_,reject2){return reject2(new TypeError('You must pass an array to race.'));});}else{return new Constructor(function(resolve2,reject2){var length=entries.length;for(var i=0;i<length;i++){Constructor.resolve(entries[i]).then(resolve2,reject2);}});}}function reject$1(reason){var Constructor=this;var promise=new Constructor(noop3);reject(promise,reason);return promise;}function needsResolver(){throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');}function needsNew(){throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');}var Promise$1=function(){function Promise2(resolver){this[PROMISE_ID]=nextId();this._result=this._state=void 0;this._subscribers=[];if(noop3!==resolver){typeof resolver!=='function'&&needsResolver();this instanceof Promise2?initializePromise(this,resolver):needsNew();}}Promise2.prototype['catch']=function _catch(onRejection){return this.then(null,onRejection);};Promise2.prototype['finally']=function _finally(callback){var promise=this;var constructor=promise.constructor;if(isFunction(callback)){return promise.then(function(value){return constructor.resolve(callback()).then(function(){return value;});},function(reason){return constructor.resolve(callback()).then(function(){throw reason;});});}return promise.then(callback,callback);};return Promise2;}();Promise$1.prototype.then=then;Promise$1.all=all;Promise$1.race=race;Promise$1.resolve=resolve$1;Promise$1.reject=reject$1;Promise$1._setScheduler=setScheduler;Promise$1._setAsap=setAsap;Promise$1._asap=asap;function polyfill(){var local=void 0;if(typeof global!=='undefined'){local=global;}else if(typeof self!=='undefined'){local=self;}else{try{local=Function('return this')();}catch(e){throw new Error('polyfill failed because global object is unavailable in this environment');}}var P=local.Promise;if(P){var promiseToString=null;try{promiseToString=Object.prototype.toString.call(P.resolve());}catch(e){}if(promiseToString==='[object Promise]'&&!P.cast){return;}}local.Promise=Promise$1;}Promise$1.polyfill=polyfill;Promise$1.Promise=Promise$1;return Promise$1;});});var require_typedarray=__commonJS(function(exports){var MAX_ARRAY_LENGTH=1e5;var ECMAScript=function(){var opts=Object.prototype.toString;var ophop=Object.prototype.hasOwnProperty;return{Class:function Class(v){return opts.call(v).replace(/^\\[object *|\\]$/g,'');},HasProperty:function HasProperty(o,p2){return p2 in o;},HasOwnProperty:function HasOwnProperty(o,p2){return ophop.call(o,p2);},IsCallable:function IsCallable(o){return typeof o==='function';},ToInt32:function ToInt32(v){return v>>0;},ToUint32:function ToUint32(v){return v>>>0;}};}();var LN2=Math.LN2;var abs=Math.abs;var floor=Math.floor;var log2=Math.log;var min=Math.min;var pow=Math.pow;var round=Math.round;function clamp3(v,minimum,max2){return v<minimum?minimum:v>max2?max2:v;}var getOwnPropNames=Object.getOwnPropertyNames||function(o){if(o!==Object(o)){throw new TypeError('Object.getOwnPropertyNames called on non-object');}var props=[],p2;for(p2 in o){if(ECMAScript.HasOwnProperty(o,p2)){props.push(p2);}}return props;};var defineProp;if(Object.defineProperty&&function(){try{Object.defineProperty({},'x',{});return true;}catch(e){return false;}}()){defineProp=Object.defineProperty;}else{defineProp=function defineProp(o,p2,desc){if(!o===Object(o)){throw new TypeError('Object.defineProperty called on non-object');}if(ECMAScript.HasProperty(desc,'get')&&Object.prototype.__defineGetter__){Object.prototype.__defineGetter__.call(o,p2,desc.get);}if(ECMAScript.HasProperty(desc,'set')&&Object.prototype.__defineSetter__){Object.prototype.__defineSetter__.call(o,p2,desc.set);}if(ECMAScript.HasProperty(desc,'value')){o[p2]=desc.value;}return o;};}function configureProperties(obj){if(getOwnPropNames&&defineProp){var props=getOwnPropNames(obj),i;for(i=0;i<props.length;i+=1){defineProp(obj,props[i],{value:obj[props[i]],writable:false,enumerable:false,configurable:false});}}}function makeArrayAccessors(obj){if(!defineProp){return;}if(obj.length>MAX_ARRAY_LENGTH){throw new RangeError('Array too large for polyfill');}function makeArrayAccessor(index){defineProp(obj,index,{get:function get(){return obj._getter(index);},set:function set(v){obj._setter(index,v);},enumerable:true,configurable:false});}var i;for(i=0;i<obj.length;i+=1){makeArrayAccessor(i);}}function as_signed(value,bits){var s=32-bits;return value<<s>>s;}function as_unsigned(value,bits){var s=32-bits;return value<<s>>>s;}function packI8(n2){return[n2&255];}function unpackI8(bytes){return as_signed(bytes[0],8);}function packU8(n2){return[n2&255];}function unpackU8(bytes){return as_unsigned(bytes[0],8);}function packU8Clamped(n2){n2=round(Number(n2));return[n2<0?0:n2>255?255:n2&255];}function packI16(n2){return[n2>>8&255,n2&255];}function unpackI16(bytes){return as_signed(bytes[0]<<8|bytes[1],16);}function packU16(n2){return[n2>>8&255,n2&255];}function unpackU16(bytes){return as_unsigned(bytes[0]<<8|bytes[1],16);}function packI32(n2){return[n2>>24&255,n2>>16&255,n2>>8&255,n2&255];}function unpackI32(bytes){return as_signed(bytes[0]<<24|bytes[1]<<16|bytes[2]<<8|bytes[3],32);}function packU32(n2){return[n2>>24&255,n2>>16&255,n2>>8&255,n2&255];}function unpackU32(bytes){return as_unsigned(bytes[0]<<24|bytes[1]<<16|bytes[2]<<8|bytes[3],32);}function packIEEE754(v,ebits,fbits){var bias=(1<<ebits-1)-1;var s,e,f,i,bits,str,bytes;function roundToEven(n2){var w=floor(n2);var fl=n2-w;if(fl<.5){return w;}if(fl>.5){return w+1;}return w%2?w+1:w;}if(v!==v){e=(1<<ebits)-1;f=pow(2,fbits-1);s=0;}else if(v===Infinity||v===-Infinity){e=(1<<ebits)-1;f=0;s=v<0?1:0;}else if(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=abs(v);if(v>=pow(2,1-bias)){e=min(floor(log2(v)/LN2),1023);f=roundToEven(v/pow(2,e)*pow(2,fbits));if(f/pow(2,fbits)>=2){e=e+1;f=1;}if(e>bias){e=(1<<ebits)-1;f=0;}else{e=e+bias;f=f-pow(2,fbits);}}else{e=0;f=roundToEven(v/pow(2,1-bias-fbits));}}bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=floor(e/2);}bits.push(s?1:0);bits.reverse();str=bits.join('');bytes=[];while(str.length){bytes.push(parseInt(str.substring(0,8),2));str=str.substring(8);}return bytes;}function unpackIEEE754(bytes,ebits,fbits){var bits=[],i,j,b2,str,bias,s,e,f;for(i=bytes.length;i;i-=1){b2=bytes[i-1];for(j=8;j;j-=1){bits.push(b2%2?1:0);b2=b2>>1;}}bits.reverse();str=bits.join('');bias=(1<<ebits-1)-1;s=parseInt(str.substring(0,1),2)?-1:1;e=parseInt(str.substring(1,1+ebits),2);f=parseInt(str.substring(1+ebits),2);if(e===(1<<ebits)-1){return f===0?s*Infinity:NaN;}else if(e>0){return s*pow(2,e-bias)*(1+f/pow(2,fbits));}else if(f!==0){return s*pow(2,-(bias-1))*(f/pow(2,fbits));}return s<0?-0:0;}function unpackF64(b2){return unpackIEEE754(b2,11,52);}function packF64(v){return packIEEE754(v,11,52);}function unpackF32(b2){return unpackIEEE754(b2,8,23);}function packF32(v){return packIEEE754(v,8,23);}(function(){function ArrayBuffer(length){length=ECMAScript.ToInt32(length);if(length<0){throw new RangeError('ArrayBuffer size is not a small enough positive integer');}this.byteLength=length;this._bytes=[];this._bytes.length=length;var i;for(i=0;i<this.byteLength;i+=1){this._bytes[i]=0;}configureProperties(this);}exports.ArrayBuffer=exports.ArrayBuffer||ArrayBuffer;function ArrayBufferView(){}function makeConstructor(bytesPerElement,pack,unpack){var _ctor;_ctor=function ctor(buffer,byteOffset,length){var array,sequence,i,s;if(!arguments.length||typeof arguments[0]==='number'){this.length=ECMAScript.ToInt32(arguments[0]);if(length<0){throw new RangeError('ArrayBufferView size is not a small enough positive integer');}this.byteLength=this.length*this.BYTES_PER_ELEMENT;this.buffer=new ArrayBuffer(this.byteLength);this.byteOffset=0;}else if(_typeof(arguments[0])==='object'&&arguments[0].constructor===_ctor){array=arguments[0];this.length=array.length;this.byteLength=this.length*this.BYTES_PER_ELEMENT;this.buffer=new ArrayBuffer(this.byteLength);this.byteOffset=0;for(i=0;i<this.length;i+=1){this._setter(i,array._getter(i));}}else if(_typeof(arguments[0])==='object'&&!(arguments[0]instanceof ArrayBuffer||ECMAScript.Class(arguments[0])==='ArrayBuffer')){sequence=arguments[0];this.length=ECMAScript.ToUint32(sequence.length);this.byteLength=this.length*this.BYTES_PER_ELEMENT;this.buffer=new ArrayBuffer(this.byteLength);this.byteOffset=0;for(i=0;i<this.length;i+=1){s=sequence[i];this._setter(i,Number(s));}}else if(_typeof(arguments[0])==='object'&&(arguments[0]instanceof ArrayBuffer||ECMAScript.Class(arguments[0])==='ArrayBuffer')){this.buffer=buffer;this.byteOffset=ECMAScript.ToUint32(byteOffset);if(this.byteOffset>this.buffer.byteLength){throw new RangeError('byteOffset out of range');}if(this.byteOffset%this.BYTES_PER_ELEMENT){throw new RangeError('ArrayBuffer length minus the byteOffset is not a multiple of the element size.');}if(arguments.length<3){this.byteLength=this.buffer.byteLength-this.byteOffset;if(this.byteLength%this.BYTES_PER_ELEMENT){throw new RangeError('length of buffer minus byteOffset not a multiple of the element size');}this.length=this.byteLength/this.BYTES_PER_ELEMENT;}else{this.length=ECMAScript.ToUint32(length);this.byteLength=this.length*this.BYTES_PER_ELEMENT;}if(this.byteOffset+this.byteLength>this.buffer.byteLength){throw new RangeError('byteOffset and length reference an area beyond the end of the buffer');}}else{throw new TypeError('Unexpected argument type(s)');}this.constructor=_ctor;configureProperties(this);makeArrayAccessors(this);};_ctor.prototype=new ArrayBufferView();_ctor.prototype.BYTES_PER_ELEMENT=bytesPerElement;_ctor.prototype._pack=pack;_ctor.prototype._unpack=unpack;_ctor.BYTES_PER_ELEMENT=bytesPerElement;_ctor.prototype._getter=function(index){if(arguments.length<1){throw new SyntaxError('Not enough arguments');}index=ECMAScript.ToUint32(index);if(index>=this.length){return void 0;}var bytes=[];for(var i=0,o=this.byteOffset+index*this.BYTES_PER_ELEMENT;i<this.BYTES_PER_ELEMENT;i+=1,o+=1){bytes.push(this.buffer._bytes[o]);}return this._unpack(bytes);};_ctor.prototype.get=_ctor.prototype._getter;_ctor.prototype._setter=function(index,value){if(arguments.length<2){throw new SyntaxError('Not enough arguments');}index=ECMAScript.ToUint32(index);if(index<this.length){var bytes=this._pack(value);var i;var o;for(i=0,o=this.byteOffset+index*this.BYTES_PER_ELEMENT;i<this.BYTES_PER_ELEMENT;i+=1,o+=1){this.buffer._bytes[o]=bytes[i];}}};_ctor.prototype.set=function(index,value){if(arguments.length<1){throw new SyntaxError('Not enough arguments');}var array,sequence,offset,len,i,s,d2,byteOffset,byteLength,tmp;if(_typeof(arguments[0])==='object'&&arguments[0].constructor===this.constructor){array=arguments[0];offset=ECMAScript.ToUint32(arguments[1]);if(offset+array.length>this.length){throw new RangeError('Offset plus length of array is out of range');}byteOffset=this.byteOffset+offset*this.BYTES_PER_ELEMENT;byteLength=array.length*this.BYTES_PER_ELEMENT;if(array.buffer===this.buffer){tmp=[];for(i=0,s=array.byteOffset;i<byteLength;i+=1,s+=1){tmp[i]=array.buffer._bytes[s];}for(i=0,d2=byteOffset;i<byteLength;i+=1,d2+=1){this.buffer._bytes[d2]=tmp[i];}}else{for(i=0,s=array.byteOffset,d2=byteOffset;i<byteLength;i+=1,s+=1,d2+=1){this.buffer._bytes[d2]=array.buffer._bytes[s];}}}else if(_typeof(arguments[0])==='object'&&typeof arguments[0].length!=='undefined'){sequence=arguments[0];len=ECMAScript.ToUint32(sequence.length);offset=ECMAScript.ToUint32(arguments[1]);if(offset+len>this.length){throw new RangeError('Offset plus length of array is out of range');}for(i=0;i<len;i+=1){s=sequence[i];this._setter(offset+i,Number(s));}}else{throw new TypeError('Unexpected argument type(s)');}};_ctor.prototype.subarray=function(start,end){start=ECMAScript.ToInt32(start);end=ECMAScript.ToInt32(end);if(arguments.length<1){start=0;}if(arguments.length<2){end=this.length;}if(start<0){start=this.length+start;}if(end<0){end=this.length+end;}start=clamp3(start,0,this.length);end=clamp3(end,0,this.length);var len=end-start;if(len<0){len=0;}return new this.constructor(this.buffer,this.byteOffset+start*this.BYTES_PER_ELEMENT,len);};return _ctor;}var Int8Array=makeConstructor(1,packI8,unpackI8);var Uint8Array2=makeConstructor(1,packU8,unpackU8);var Uint8ClampedArray2=makeConstructor(1,packU8Clamped,unpackU8);var Int16Array=makeConstructor(2,packI16,unpackI16);var Uint16Array=makeConstructor(2,packU16,unpackU16);var Int32Array=makeConstructor(4,packI32,unpackI32);var Uint32Array3=makeConstructor(4,packU32,unpackU32);var Float32Array=makeConstructor(4,packF32,unpackF32);var Float64Array=makeConstructor(8,packF64,unpackF64);exports.Int8Array=exports.Int8Array||Int8Array;exports.Uint8Array=exports.Uint8Array||Uint8Array2;exports.Uint8ClampedArray=exports.Uint8ClampedArray||Uint8ClampedArray2;exports.Int16Array=exports.Int16Array||Int16Array;exports.Uint16Array=exports.Uint16Array||Uint16Array;exports.Int32Array=exports.Int32Array||Int32Array;exports.Uint32Array=exports.Uint32Array||Uint32Array3;exports.Float32Array=exports.Float32Array||Float32Array;exports.Float64Array=exports.Float64Array||Float64Array;})();(function(){function r(array,index){return ECMAScript.IsCallable(array.get)?array.get(index):array[index];}var IS_BIG_ENDIAN=function(){var u16array=new exports.Uint16Array([4660]),u8array=new exports.Uint8Array(u16array.buffer);return r(u8array,0)===18;}();function DataView(buffer,byteOffset,byteLength){if(arguments.length===0){buffer=new exports.ArrayBuffer(0);}else if(!(buffer instanceof exports.ArrayBuffer||ECMAScript.Class(buffer)==='ArrayBuffer')){throw new TypeError('TypeError');}this.buffer=buffer||new exports.ArrayBuffer(0);this.byteOffset=ECMAScript.ToUint32(byteOffset);if(this.byteOffset>this.buffer.byteLength){throw new RangeError('byteOffset out of range');}if(arguments.length<3){this.byteLength=this.buffer.byteLength-this.byteOffset;}else{this.byteLength=ECMAScript.ToUint32(byteLength);}if(this.byteOffset+this.byteLength>this.buffer.byteLength){throw new RangeError('byteOffset and length reference an area beyond the end of the buffer');}configureProperties(this);}function makeGetter(arrayType){return function(byteOffset,littleEndian){byteOffset=ECMAScript.ToUint32(byteOffset);if(byteOffset+arrayType.BYTES_PER_ELEMENT>this.byteLength){throw new RangeError('Array index out of range');}byteOffset+=this.byteOffset;var uint8Array=new exports.Uint8Array(this.buffer,byteOffset,arrayType.BYTES_PER_ELEMENT),bytes=[],i;for(i=0;i<arrayType.BYTES_PER_ELEMENT;i+=1){bytes.push(r(uint8Array,i));}if(Boolean(littleEndian)===Boolean(IS_BIG_ENDIAN)){bytes.reverse();}return r(new arrayType(new exports.Uint8Array(bytes).buffer),0);};}DataView.prototype.getUint8=makeGetter(exports.Uint8Array);DataView.prototype.getInt8=makeGetter(exports.Int8Array);DataView.prototype.getUint16=makeGetter(exports.Uint16Array);DataView.prototype.getInt16=makeGetter(exports.Int16Array);DataView.prototype.getUint32=makeGetter(exports.Uint32Array);DataView.prototype.getInt32=makeGetter(exports.Int32Array);DataView.prototype.getFloat32=makeGetter(exports.Float32Array);DataView.prototype.getFloat64=makeGetter(exports.Float64Array);function makeSetter(arrayType){return function(byteOffset,value,littleEndian){byteOffset=ECMAScript.ToUint32(byteOffset);if(byteOffset+arrayType.BYTES_PER_ELEMENT>this.byteLength){throw new RangeError('Array index out of range');}var typeArray=new arrayType([value]),byteArray=new exports.Uint8Array(typeArray.buffer),bytes=[],i,byteView;for(i=0;i<arrayType.BYTES_PER_ELEMENT;i+=1){bytes.push(r(byteArray,i));}if(Boolean(littleEndian)===Boolean(IS_BIG_ENDIAN)){bytes.reverse();}byteView=new exports.Uint8Array(this.buffer,byteOffset,arrayType.BYTES_PER_ELEMENT);byteView.set(bytes);};}DataView.prototype.setUint8=makeSetter(exports.Uint8Array);DataView.prototype.setInt8=makeSetter(exports.Int8Array);DataView.prototype.setUint16=makeSetter(exports.Uint16Array);DataView.prototype.setInt16=makeSetter(exports.Int16Array);DataView.prototype.setUint32=makeSetter(exports.Uint32Array);DataView.prototype.setInt32=makeSetter(exports.Int32Array);DataView.prototype.setFloat32=makeSetter(exports.Float32Array);DataView.prototype.setFloat64=makeSetter(exports.Float64Array);exports.DataView=exports.DataView||DataView;})();});var require_weakmap_polyfill=__commonJS(function(exports){(function(self2){'use strict';if(self2.WeakMap){return;}var hasOwnProperty2=Object.prototype.hasOwnProperty;var hasDefine=Object.defineProperty&&function(){try{return Object.defineProperty({},'x',{value:1}).x===1;}catch(e){}}();var defineProperty=function defineProperty(object,name,value){if(hasDefine){Object.defineProperty(object,name,{configurable:true,writable:true,value:value});}else{object[name]=value;}};self2.WeakMap=function(){function WeakMap2(){if(this===void 0){throw new TypeError('Constructor WeakMap requires \\'new\\'');}defineProperty(this,'_id',genId('_WeakMap'));if(arguments.length>0){throw new TypeError('WeakMap iterable is not supported');}}defineProperty(WeakMap2.prototype,'delete',function(key){checkInstance(this,'delete');if(!isObject(key)){return false;}var entry=key[this._id];if(entry&&entry[0]===key){delete key[this._id];return true;}return false;});defineProperty(WeakMap2.prototype,'get',function(key){checkInstance(this,'get');if(!isObject(key)){return void 0;}var entry=key[this._id];if(entry&&entry[0]===key){return entry[1];}return void 0;});defineProperty(WeakMap2.prototype,'has',function(key){checkInstance(this,'has');if(!isObject(key)){return false;}var entry=key[this._id];if(entry&&entry[0]===key){return true;}return false;});defineProperty(WeakMap2.prototype,'set',function(key,value){checkInstance(this,'set');if(!isObject(key)){throw new TypeError('Invalid value used as weak map key');}var entry=key[this._id];if(entry&&entry[0]===key){entry[1]=value;return this;}defineProperty(key,this._id,[key,value]);return this;});function checkInstance(x,methodName){if(!isObject(x)||!hasOwnProperty2.call(x,'_id')){throw new TypeError(methodName+' method called on incompatible receiver '+_typeof(x));}}function genId(prefix){return prefix+'_'+rand()+'.'+rand();}function rand(){return Math.random().toString().substring(2);}defineProperty(WeakMap2,'_polyfill',true);return WeakMap2;}();function isObject(x){return Object(x)===x;}})(typeof globalThis!=='undefined'?globalThis:typeof self!=='undefined'?self:typeof window!=='undefined'?window:typeof global!=='undefined'?global:exports);});var require_global=__commonJS(function(exports,module){var check=function check(it){return it&&it.Math==Math&&it;};module.exports=check((typeof globalThis==='undefined'?'undefined':_typeof(globalThis))=='object'&&globalThis)||check((typeof window==='undefined'?'undefined':_typeof(window))=='object'&&window)||check((typeof self==='undefined'?'undefined':_typeof(self))=='object'&&self)||check((typeof global==='undefined'?'undefined':_typeof(global))=='object'&&global)||function(){return this;}()||Function('return this')();});var require_fails=__commonJS(function(exports,module){module.exports=function(exec){try{return!!exec();}catch(error){return true;}};});var require_function_bind_native=__commonJS(function(exports,module){var fails=require_fails();module.exports=!fails(function(){var test=function(){}.bind();return typeof test!='function'||test.hasOwnProperty('prototype');});});var require_function_apply=__commonJS(function(exports,module){var NATIVE_BIND=require_function_bind_native();var FunctionPrototype=Function.prototype;var apply=FunctionPrototype.apply;var call=FunctionPrototype.call;module.exports=(typeof Reflect==='undefined'?'undefined':_typeof(Reflect))=='object'&&Reflect.apply||(NATIVE_BIND?call.bind(apply):function(){return call.apply(apply,arguments);});});var require_function_uncurry_this=__commonJS(function(exports,module){var NATIVE_BIND=require_function_bind_native();var FunctionPrototype=Function.prototype;var call=FunctionPrototype.call;var uncurryThisWithBind=NATIVE_BIND&&FunctionPrototype.bind.bind(call,call);module.exports=NATIVE_BIND?uncurryThisWithBind:function(fn){return function(){return call.apply(fn,arguments);};};});var require_classof_raw=__commonJS(function(exports,module){var uncurryThis=require_function_uncurry_this();var toString=uncurryThis({}.toString);var stringSlice=uncurryThis(''.slice);module.exports=function(it){return stringSlice(toString(it),8,-1);};});var require_function_uncurry_this_clause=__commonJS(function(exports,module){var classofRaw=require_classof_raw();var uncurryThis=require_function_uncurry_this();module.exports=function(fn){if(classofRaw(fn)==='Function'){return uncurryThis(fn);}};});var require_document_all=__commonJS(function(exports,module){var documentAll=(typeof document==='undefined'?'undefined':_typeof(document))=='object'&&document.all;var IS_HTMLDDA=typeof documentAll=='undefined'&&documentAll!==void 0;module.exports={all:documentAll,IS_HTMLDDA:IS_HTMLDDA};});var require_is_callable2=__commonJS(function(exports,module){var $documentAll=require_document_all();var documentAll=$documentAll.all;module.exports=$documentAll.IS_HTMLDDA?function(argument){return typeof argument=='function'||argument===documentAll;}:function(argument){return typeof argument=='function';};});var require_descriptors=__commonJS(function(exports,module){var fails=require_fails();module.exports=!fails(function(){return Object.defineProperty({},1,{get:function get(){return 7;}})[1]!=7;});});var require_function_call=__commonJS(function(exports,module){var NATIVE_BIND=require_function_bind_native();var call=Function.prototype.call;module.exports=NATIVE_BIND?call.bind(call):function(){return call.apply(call,arguments);};});var require_object_property_is_enumerable=__commonJS(function(exports){'use strict';var $propertyIsEnumerable={}.propertyIsEnumerable;var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var NASHORN_BUG=getOwnPropertyDescriptor&&!$propertyIsEnumerable.call({1:2},1);exports.f=NASHORN_BUG?function propertyIsEnumerable(V){var descriptor=getOwnPropertyDescriptor(this,V);return!!descriptor&&descriptor.enumerable;}:$propertyIsEnumerable;});var require_create_property_descriptor=__commonJS(function(exports,module){module.exports=function(bitmap,value){return{enumerable:!(bitmap&1),configurable:!(bitmap&2),writable:!(bitmap&4),value:value};};});var require_indexed_object=__commonJS(function(exports,module){var uncurryThis=require_function_uncurry_this();var fails=require_fails();var classof=require_classof_raw();var $Object=Object;var split=uncurryThis(''.split);module.exports=fails(function(){return!$Object('z').propertyIsEnumerable(0);})?function(it){return classof(it)=='String'?split(it,''):$Object(it);}:$Object;});var require_is_null_or_undefined=__commonJS(function(exports,module){module.exports=function(it){return it===null||it===void 0;};});var require_require_object_coercible=__commonJS(function(exports,module){var isNullOrUndefined=require_is_null_or_undefined();var $TypeError=TypeError;module.exports=function(it){if(isNullOrUndefined(it)){throw $TypeError('Can\\'t call method on '+it);}return it;};});var require_to_indexed_object=__commonJS(function(exports,module){var IndexedObject=require_indexed_object();var requireObjectCoercible=require_require_object_coercible();module.exports=function(it){return IndexedObject(requireObjectCoercible(it));};});var require_is_object2=__commonJS(function(exports,module){var isCallable=require_is_callable2();var $documentAll=require_document_all();var documentAll=$documentAll.all;module.exports=$documentAll.IS_HTMLDDA?function(it){return _typeof(it)=='object'?it!==null:isCallable(it)||it===documentAll;}:function(it){return _typeof(it)=='object'?it!==null:isCallable(it);};});var require_path=__commonJS(function(exports,module){module.exports={};});var require_get_built_in=__commonJS(function(exports,module){var path=require_path();var global2=require_global();var isCallable=require_is_callable2();var aFunction=function aFunction(variable){return isCallable(variable)?variable:void 0;};module.exports=function(namespace,method){return arguments.length<2?aFunction(path[namespace])||aFunction(global2[namespace]):path[namespace]&&path[namespace][method]||global2[namespace]&&global2[namespace][method];};});var require_object_is_prototype_of=__commonJS(function(exports,module){var uncurryThis=require_function_uncurry_this();module.exports=uncurryThis({}.isPrototypeOf);});var require_engine_user_agent=__commonJS(function(exports,module){var getBuiltIn=require_get_built_in();module.exports=getBuiltIn('navigator','userAgent')||'';});var require_engine_v8_version=__commonJS(function(exports,module){var global2=require_global();var userAgent=require_engine_user_agent();var process2=global2.process;var Deno=global2.Deno;var versions=process2&&process2.versions||Deno&&Deno.version;var v8=versions&&versions.v8;var match;var version;if(v8){match=v8.split('.');version=match[0]>0&&match[0]<4?1:+(match[0]+match[1]);}if(!version&&userAgent){match=userAgent.match(/Edge\\/(\\d+)/);if(!match||match[1]>=74){match=userAgent.match(/Chrome\\/(\\d+)/);if(match){version=+match[1];}}}module.exports=version;});var require_symbol_constructor_detection=__commonJS(function(exports,module){var V8_VERSION=require_engine_v8_version();var fails=require_fails();module.exports=!!Object.getOwnPropertySymbols&&!fails(function(){var symbol=Symbol();return!String(symbol)||!(Object(symbol)instanceof Symbol)||!Symbol.sham&&V8_VERSION&&V8_VERSION<41;});});var require_use_symbol_as_uid=__commonJS(function(exports,module){var NATIVE_SYMBOL=require_symbol_constructor_detection();module.exports=NATIVE_SYMBOL&&!Symbol.sham&&_typeof(Symbol.iterator)=='symbol';});var require_is_symbol2=__commonJS(function(exports,module){var getBuiltIn=require_get_built_in();var isCallable=require_is_callable2();var isPrototypeOf=require_object_is_prototype_of();var USE_SYMBOL_AS_UID=require_use_symbol_as_uid();var $Object=Object;module.exports=USE_SYMBOL_AS_UID?function(it){return _typeof(it)=='symbol';}:function(it){var $Symbol=getBuiltIn('Symbol');return isCallable($Symbol)&&isPrototypeOf($Symbol.prototype,$Object(it));};});var require_try_to_string=__commonJS(function(exports,module){var $String=String;module.exports=function(argument){try{return $String(argument);}catch(error){return'Object';}};});var require_a_callable=__commonJS(function(exports,module){var isCallable=require_is_callable2();var tryToString=require_try_to_string();var $TypeError=TypeError;module.exports=function(argument){if(isCallable(argument)){return argument;}throw $TypeError(tryToString(argument)+' is not a function');};});var require_get_method=__commonJS(function(exports,module){var aCallable=require_a_callable();var isNullOrUndefined=require_is_null_or_undefined();module.exports=function(V,P){var func=V[P];return isNullOrUndefined(func)?void 0:aCallable(func);};});var require_ordinary_to_primitive=__commonJS(function(exports,module){var call=require_function_call();var isCallable=require_is_callable2();var isObject=require_is_object2();var $TypeError=TypeError;module.exports=function(input,pref){var fn,val;if(pref==='string'&&isCallable(fn=input.toString)&&!isObject(val=call(fn,input))){return val;}if(isCallable(fn=input.valueOf)&&!isObject(val=call(fn,input))){return val;}if(pref!=='string'&&isCallable(fn=input.toString)&&!isObject(val=call(fn,input))){return val;}throw $TypeError('Can\\'t convert object to primitive value');};});var require_is_pure=__commonJS(function(exports,module){module.exports=true;});var require_define_global_property=__commonJS(function(exports,module){var global2=require_global();var defineProperty=Object.defineProperty;module.exports=function(key,value){try{defineProperty(global2,key,{value:value,configurable:true,writable:true});}catch(error){global2[key]=value;}return value;};});var require_shared_store=__commonJS(function(exports,module){var global2=require_global();var defineGlobalProperty=require_define_global_property();var SHARED='__core-js_shared__';var store=global2[SHARED]||defineGlobalProperty(SHARED,{});module.exports=store;});var require_shared=__commonJS(function(exports,module){var IS_PURE=require_is_pure();var store=require_shared_store();(module.exports=function(key,value){return store[key]||(store[key]=value!==void 0?value:{});})('versions',[]).push({version:'3.26.1',mode:IS_PURE?'pure':'global',copyright:'\\xa9 2014-2022 Denis Pushkarev (zloirock.ru)',license:'https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE',source:'https://github.com/zloirock/core-js'});});var require_to_object=__commonJS(function(exports,module){var requireObjectCoercible=require_require_object_coercible();var $Object=Object;module.exports=function(argument){return $Object(requireObjectCoercible(argument));};});var require_has_own_property=__commonJS(function(exports,module){var uncurryThis=require_function_uncurry_this();var toObject=require_to_object();var hasOwnProperty2=uncurryThis({}.hasOwnProperty);module.exports=Object.hasOwn||function hasOwn2(it,key){return hasOwnProperty2(toObject(it),key);};});var require_uid=__commonJS(function(exports,module){var uncurryThis=require_function_uncurry_this();var id=0;var postfix=Math.random();var toString=uncurryThis(1..toString);module.exports=function(key){return'Symbol('+(key===void 0?'':key)+')_'+toString(++id+postfix,36);};});var require_well_known_symbol=__commonJS(function(exports,module){var global2=require_global();var shared=require_shared();var hasOwn2=require_has_own_property();var uid=require_uid();var NATIVE_SYMBOL=require_symbol_constructor_detection();var USE_SYMBOL_AS_UID=require_use_symbol_as_uid();var WellKnownSymbolsStore=shared('wks');var Symbol2=global2.Symbol;var symbolFor=Symbol2&&Symbol2['for'];var createWellKnownSymbol=USE_SYMBOL_AS_UID?Symbol2:Symbol2&&Symbol2.withoutSetter||uid;module.exports=function(name){if(!hasOwn2(WellKnownSymbolsStore,name)||!(NATIVE_SYMBOL||typeof WellKnownSymbolsStore[name]=='string')){var description='Symbol.'+name;if(NATIVE_SYMBOL&&hasOwn2(Symbol2,name)){WellKnownSymbolsStore[name]=Symbol2[name];}else if(USE_SYMBOL_AS_UID&&symbolFor){WellKnownSymbolsStore[name]=symbolFor(description);}else{WellKnownSymbolsStore[name]=createWellKnownSymbol(description);}}return WellKnownSymbolsStore[name];};});var require_to_primitive=__commonJS(function(exports,module){var call=require_function_call();var isObject=require_is_object2();var isSymbol=require_is_symbol2();var getMethod=require_get_method();var ordinaryToPrimitive=require_ordinary_to_primitive();var wellKnownSymbol=require_well_known_symbol();var $TypeError=TypeError;var TO_PRIMITIVE=wellKnownSymbol('toPrimitive');module.exports=function(input,pref){if(!isObject(input)||isSymbol(input)){return input;}var exoticToPrim=getMethod(input,TO_PRIMITIVE);var result;if(exoticToPrim){if(pref===void 0){pref='default';}result=call(exoticToPrim,input,pref);if(!isObject(result)||isSymbol(result)){return result;}throw $TypeError('Can\\'t convert object to primitive value');}if(pref===void 0){pref='number';}return ordinaryToPrimitive(input,pref);};});var require_to_property_key=__commonJS(function(exports,module){var toPrimitive=require_to_primitive();var isSymbol=require_is_symbol2();module.exports=function(argument){var key=toPrimitive(argument,'string');return isSymbol(key)?key:key+'';};});var require_document_create_element=__commonJS(function(exports,module){var global2=require_global();var isObject=require_is_object2();var document2=global2.document;var EXISTS=isObject(document2)&&isObject(document2.createElement);module.exports=function(it){return EXISTS?document2.createElement(it):{};};});var require_ie8_dom_define=__commonJS(function(exports,module){var DESCRIPTORS=require_descriptors();var fails=require_fails();var createElement=require_document_create_element();module.exports=!DESCRIPTORS&&!fails(function(){return Object.defineProperty(createElement('div'),'a',{get:function get(){return 7;}}).a!=7;});});var require_object_get_own_property_descriptor=__commonJS(function(exports){var DESCRIPTORS=require_descriptors();var call=require_function_call();var propertyIsEnumerableModule=require_object_property_is_enumerable();var createPropertyDescriptor=require_create_property_descriptor();var toIndexedObject=require_to_indexed_object();var toPropertyKey=require_to_property_key();var hasOwn2=require_has_own_property();var IE8_DOM_DEFINE=require_ie8_dom_define();var $getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;exports.f=DESCRIPTORS?$getOwnPropertyDescriptor:function getOwnPropertyDescriptor(O,P){O=toIndexedObject(O);P=toPropertyKey(P);if(IE8_DOM_DEFINE){try{return $getOwnPropertyDescriptor(O,P);}catch(error){}}if(hasOwn2(O,P)){return createPropertyDescriptor(!call(propertyIsEnumerableModule.f,O,P),O[P]);}};});var require_is_forced=__commonJS(function(exports,module){var fails=require_fails();var isCallable=require_is_callable2();var replacement=/#|\\.prototype\\./;var isForced=function isForced(feature,detection){var value=data[normalize(feature)];return value==POLYFILL?true:value==NATIVE?false:isCallable(detection)?fails(detection):!!detection;};var normalize=isForced.normalize=function(string){return String(string).replace(replacement,'.').toLowerCase();};var data=isForced.data={};var NATIVE=isForced.NATIVE='N';var POLYFILL=isForced.POLYFILL='P';module.exports=isForced;});var require_function_bind_context=__commonJS(function(exports,module){var uncurryThis=require_function_uncurry_this_clause();var aCallable=require_a_callable();var NATIVE_BIND=require_function_bind_native();var bind=uncurryThis(uncurryThis.bind);module.exports=function(fn,that){aCallable(fn);return that===void 0?fn:NATIVE_BIND?bind(fn,that):function(){return fn.apply(that,arguments);};};});var require_v8_prototype_define_bug=__commonJS(function(exports,module){var DESCRIPTORS=require_descriptors();var fails=require_fails();module.exports=DESCRIPTORS&&fails(function(){return Object.defineProperty(function(){},'prototype',{value:42,writable:false}).prototype!=42;});});var require_an_object=__commonJS(function(exports,module){var isObject=require_is_object2();var $String=String;var $TypeError=TypeError;module.exports=function(argument){if(isObject(argument)){return argument;}throw $TypeError($String(argument)+' is not an object');};});var require_object_define_property=__commonJS(function(exports){var DESCRIPTORS=require_descriptors();var IE8_DOM_DEFINE=require_ie8_dom_define();var V8_PROTOTYPE_DEFINE_BUG=require_v8_prototype_define_bug();var anObject=require_an_object();var toPropertyKey=require_to_property_key();var $TypeError=TypeError;var $defineProperty=Object.defineProperty;var $getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var ENUMERABLE='enumerable';var CONFIGURABLE='configurable';var WRITABLE='writable';exports.f=DESCRIPTORS?V8_PROTOTYPE_DEFINE_BUG?function defineProperty(O,P,Attributes){anObject(O);P=toPropertyKey(P);anObject(Attributes);if(typeof O==='function'&&P==='prototype'&&'value'in Attributes&&WRITABLE in Attributes&&!Attributes[WRITABLE]){var current=$getOwnPropertyDescriptor(O,P);if(current&&current[WRITABLE]){O[P]=Attributes.value;Attributes={configurable:CONFIGURABLE in Attributes?Attributes[CONFIGURABLE]:current[CONFIGURABLE],enumerable:ENUMERABLE in Attributes?Attributes[ENUMERABLE]:current[ENUMERABLE],writable:false};}}return $defineProperty(O,P,Attributes);}:$defineProperty:function defineProperty(O,P,Attributes){anObject(O);P=toPropertyKey(P);anObject(Attributes);if(IE8_DOM_DEFINE){try{return $defineProperty(O,P,Attributes);}catch(error){}}if('get'in Attributes||'set'in Attributes){throw $TypeError('Accessors not supported');}if('value'in Attributes){O[P]=Attributes.value;}return O;};});var require_create_non_enumerable_property=__commonJS(function(exports,module){var DESCRIPTORS=require_descriptors();var definePropertyModule=require_object_define_property();var createPropertyDescriptor=require_create_property_descriptor();module.exports=DESCRIPTORS?function(object,key,value){return definePropertyModule.f(object,key,createPropertyDescriptor(1,value));}:function(object,key,value){object[key]=value;return object;};});var require_export=__commonJS(function(exports,module){'use strict';var global2=require_global();var apply=require_function_apply();var uncurryThis=require_function_uncurry_this_clause();var isCallable=require_is_callable2();var getOwnPropertyDescriptor=require_object_get_own_property_descriptor().f;var isForced=require_is_forced();var path=require_path();var bind=require_function_bind_context();var createNonEnumerableProperty=require_create_non_enumerable_property();var hasOwn2=require_has_own_property();var wrapConstructor=function wrapConstructor(NativeConstructor){var Wrapper=function Wrapper(a2,b2,c4){if(this instanceof Wrapper){switch(arguments.length){case 0:return new NativeConstructor();case 1:return new NativeConstructor(a2);case 2:return new NativeConstructor(a2,b2);}return new NativeConstructor(a2,b2,c4);}return apply(NativeConstructor,this,arguments);};Wrapper.prototype=NativeConstructor.prototype;return Wrapper;};module.exports=function(options,source){var TARGET=options.target;var GLOBAL=options.global;var STATIC=options.stat;var PROTO=options.proto;var nativeSource=GLOBAL?global2:STATIC?global2[TARGET]:(global2[TARGET]||{}).prototype;var target=GLOBAL?path:path[TARGET]||createNonEnumerableProperty(path,TARGET,{})[TARGET];var targetPrototype=target.prototype;var FORCED,USE_NATIVE,VIRTUAL_PROTOTYPE;var key,sourceProperty,targetProperty,nativeProperty,resultProperty,descriptor;for(key in source){FORCED=isForced(GLOBAL?key:TARGET+(STATIC?'.':'#')+key,options.forced);USE_NATIVE=!FORCED&&nativeSource&&hasOwn2(nativeSource,key);targetProperty=target[key];if(USE_NATIVE){if(options.dontCallGetSet){descriptor=getOwnPropertyDescriptor(nativeSource,key);nativeProperty=descriptor&&descriptor.value;}else{nativeProperty=nativeSource[key];}}sourceProperty=USE_NATIVE&&nativeProperty?nativeProperty:source[key];if(USE_NATIVE&&_typeof(targetProperty)==_typeof(sourceProperty)){continue;}if(options.bind&&USE_NATIVE){resultProperty=bind(sourceProperty,global2);}else if(options.wrap&&USE_NATIVE){resultProperty=wrapConstructor(sourceProperty);}else if(PROTO&&isCallable(sourceProperty)){resultProperty=uncurryThis(sourceProperty);}else{resultProperty=sourceProperty;}if(options.sham||sourceProperty&&sourceProperty.sham||targetProperty&&targetProperty.sham){createNonEnumerableProperty(resultProperty,'sham',true);}createNonEnumerableProperty(target,key,resultProperty);if(PROTO){VIRTUAL_PROTOTYPE=TARGET+'Prototype';if(!hasOwn2(path,VIRTUAL_PROTOTYPE)){createNonEnumerableProperty(path,VIRTUAL_PROTOTYPE,{});}createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE],key,sourceProperty);if(options.real&&targetPrototype&&!targetPrototype[key]){createNonEnumerableProperty(targetPrototype,key,sourceProperty);}}}};});var require_es_object_has_own=__commonJS(function(){var $=require_export();var hasOwn2=require_has_own_property();$({target:'Object',stat:true},{hasOwn:hasOwn2});});var require_has_own=__commonJS(function(exports,module){require_es_object_has_own();var path=require_path();module.exports=path.Object.hasOwn;});var require_has_own2=__commonJS(function(exports,module){var parent=require_has_own();module.exports=parent;});var require_has_own3=__commonJS(function(exports,module){var parent=require_has_own2();module.exports=parent;});var definitions=[{name:'NA',value:'inapplicable',priority:0,group:'inapplicable'},{name:'PASS',value:'passed',priority:1,group:'passes'},{name:'CANTTELL',value:'cantTell',priority:2,group:'incomplete'},{name:'FAIL',value:'failed',priority:3,group:'violations'}];var constants={helpUrlBase:'https://dequeuniversity.com/rules/',gridSize:200,results:[],resultGroups:[],resultGroupMap:{},impact:Object.freeze(['minor','moderate','serious','critical']),preload:Object.freeze({assets:['cssom','media'],timeout:1e4}),allOrigins:'<unsafe_all_origins>',sameOrigin:'<same_origin>'};definitions.forEach(function(definition){var name=definition.name;var value=definition.value;var priority=definition.priority;var group=definition.group;constants[name]=value;constants[name+'_PRIO']=priority;constants[name+'_GROUP']=group;constants.results[priority]=value;constants.resultGroups[priority]=group;constants.resultGroupMap[value]=group;});Object.freeze(constants.results);Object.freeze(constants.resultGroups);Object.freeze(constants.resultGroupMap);Object.freeze(constants);var constants_default=constants;function log(){if((typeof console==='undefined'?'undefined':_typeof(console))==='object'&&console.log){Function.prototype.apply.call(console.log,console,arguments);}}var log_default=log;var whitespaceRegex=/[\\t\\r\\n\\f]/g;var AbstractVirtualNode=function(){function AbstractVirtualNode(){_classCallCheck(this,AbstractVirtualNode);this.parent=void 0;}_createClass(AbstractVirtualNode,[{key:'props',get:function get(){throw new Error('VirtualNode class must have a \"props\" object consisting of \"nodeType\" and \"nodeName\" properties');}},{key:'attrNames',get:function get(){throw new Error('VirtualNode class must have an \"attrNames\" property');}},{key:'attr',value:function attr(){throw new Error('VirtualNode class must have an \"attr\" function');}},{key:'hasAttr',value:function hasAttr(){throw new Error('VirtualNode class must have a \"hasAttr\" function');}},{key:'hasClass',value:function hasClass(className){var classAttr=this.attr('class');if(!classAttr){return false;}var selector=' '+className+' ';return(' '+classAttr+' ').replace(whitespaceRegex,' ').indexOf(selector)>=0;}}]);return AbstractVirtualNode;}();var abstract_virtual_node_default=AbstractVirtualNode;var utils_exports={};__export(utils_exports,{DqElement:function DqElement(){return dq_element_default;},aggregate:function aggregate(){return aggregate_default;},aggregateChecks:function aggregateChecks(){return aggregate_checks_default;},aggregateNodeResults:function aggregateNodeResults(){return aggregate_node_results_default;},aggregateResult:function aggregateResult(){return aggregate_result_default;},areStylesSet:function areStylesSet(){return are_styles_set_default;},assert:function assert(){return assert_default;},checkHelper:function checkHelper(){return check_helper_default;},clone:function clone(){return _clone;},closest:function closest(){return closest_default;},collectResultsFromFrames:function collectResultsFromFrames(){return _collectResultsFromFrames;},contains:function contains(){return _contains;},convertSelector:function convertSelector(){return _convertSelector;},cssParser:function cssParser(){return css_parser_default;},deepMerge:function deepMerge(){return deep_merge_default;},escapeSelector:function escapeSelector(){return escape_selector_default;},extendMetaData:function extendMetaData(){return extend_meta_data_default;},filterHtmlAttrs:function filterHtmlAttrs(){return _filterHtmlAttrs;},finalizeRuleResult:function finalizeRuleResult(){return _finalizeRuleResult;},findBy:function findBy(){return find_by_default;},getAllChecks:function getAllChecks(){return get_all_checks_default;},getAncestry:function getAncestry(){return _getAncestry;},getBaseLang:function getBaseLang(){return get_base_lang_default;},getCheckMessage:function getCheckMessage(){return get_check_message_default;},getCheckOption:function getCheckOption(){return get_check_option_default;},getEnvironmentData:function getEnvironmentData(){return _getEnvironmentData;},getFlattenedTree:function getFlattenedTree(){return _getFlattenedTree;},getFrameContexts:function getFrameContexts(){return _getFrameContexts;},getFriendlyUriEnd:function getFriendlyUriEnd(){return get_friendly_uri_end_default;},getNodeAttributes:function getNodeAttributes(){return get_node_attributes_default;},getNodeFromTree:function getNodeFromTree(){return get_node_from_tree_default;},getPreloadConfig:function getPreloadConfig(){return _getPreloadConfig;},getRootNode:function getRootNode(){return get_root_node_default;},getRule:function getRule(){return _getRule;},getScroll:function getScroll(){return get_scroll_default;},getScrollState:function getScrollState(){return get_scroll_state_default;},getSelector:function getSelector(){return _getSelector;},getSelectorData:function getSelectorData(){return _getSelectorData;},getShadowSelector:function getShadowSelector(){return _getShadowSelector;},getStandards:function getStandards(){return _getStandards;},getStyleSheetFactory:function getStyleSheetFactory(){return get_stylesheet_factory_default;},getXpath:function getXpath(){return get_xpath_default;},injectStyle:function injectStyle(){return inject_style_default;},isHidden:function isHidden(){return is_hidden_default;},isHtmlElement:function isHtmlElement(){return is_html_element_default;},isNodeInContext:function isNodeInContext(){return _isNodeInContext;},isShadowRoot:function isShadowRoot(){return is_shadow_root_default;},isValidLang:function isValidLang(){return valid_langs_default;},isXHTML:function isXHTML(){return is_xhtml_default;},matchAncestry:function matchAncestry(){return _matchAncestry;},matches:function matches(){return _matches;},matchesExpression:function matchesExpression(){return _matchesExpression;},matchesSelector:function matchesSelector(){return element_matches_default;},memoize:function memoize(){return memoize_default;},mergeResults:function mergeResults(){return merge_results_default;},nodeLookup:function nodeLookup(){return _nodeLookup;},nodeSerializer:function nodeSerializer(){return node_serializer_default;},nodeSorter:function nodeSorter(){return node_sorter_default;},parseCrossOriginStylesheet:function parseCrossOriginStylesheet(){return parse_crossorigin_stylesheet_default;},parseSameOriginStylesheet:function parseSameOriginStylesheet(){return parse_sameorigin_stylesheet_default;},parseStylesheet:function parseStylesheet(){return parse_stylesheet_default;},performanceTimer:function performanceTimer(){return performance_timer_default;},pollyfillElementsFromPoint:function pollyfillElementsFromPoint(){return _pollyfillElementsFromPoint;},preload:function preload(){return _preload;},preloadCssom:function preloadCssom(){return preload_cssom_default;},preloadMedia:function preloadMedia(){return preload_media_default;},processMessage:function processMessage(){return process_message_default;},publishMetaData:function publishMetaData(){return _publishMetaData;},querySelectorAll:function querySelectorAll(){return query_selector_all_default;},querySelectorAllFilter:function querySelectorAllFilter(){return query_selector_all_filter_default;},queue:function queue(){return queue_default;},respondable:function respondable(){return _respondable;},ruleShouldRun:function ruleShouldRun(){return rule_should_run_default;},select:function select(){return _select;},sendCommandToFrame:function sendCommandToFrame(){return _sendCommandToFrame;},setScrollState:function setScrollState(){return set_scroll_state_default;},shadowSelect:function shadowSelect(){return _shadowSelect;},shadowSelectAll:function shadowSelectAll(){return _shadowSelectAll;},shouldPreload:function shouldPreload(){return _shouldPreload;},toArray:function toArray(){return to_array_default;},tokenList:function tokenList(){return token_list_default;},uniqueArray:function uniqueArray(){return unique_array_default;},uuid:function uuid(){return uuid_default;},validInputTypes:function validInputTypes(){return valid_input_type_default;},validLangs:function validLangs(){return _validLangs;}});function aggregate(map,values,initial){values=values.slice();if(initial){values.push(initial);}var sorting=values.map(function(val){return map.indexOf(val);}).sort();return map[sorting.pop()];}var aggregate_default=aggregate;var CANTTELL_PRIO=constants_default.CANTTELL_PRIO,FAIL_PRIO=constants_default.FAIL_PRIO;var checkMap=[];checkMap[constants_default.PASS_PRIO]=true;checkMap[constants_default.CANTTELL_PRIO]=null;checkMap[constants_default.FAIL_PRIO]=false;var checkTypes=['any','all','none'];function anyAllNone(obj,functor){return checkTypes.reduce(function(out,type2){out[type2]=(obj[type2]||[]).map(function(val){return functor(val,type2);});return out;},{});}function aggregateChecks(nodeResOriginal){var nodeResult=Object.assign({},nodeResOriginal);anyAllNone(nodeResult,function(check,type2){var i=typeof check.result==='undefined'?-1:checkMap.indexOf(check.result);check.priority=i!==-1?i:constants_default.CANTTELL_PRIO;if(type2==='none'){if(check.priority===constants_default.PASS_PRIO){check.priority=constants_default.FAIL_PRIO;}else if(check.priority===constants_default.FAIL_PRIO){check.priority=constants_default.PASS_PRIO;}}});var priorities={all:nodeResult.all.reduce(function(a2,b2){return Math.max(a2,b2.priority);},0),none:nodeResult.none.reduce(function(a2,b2){return Math.max(a2,b2.priority);},0),any:nodeResult.any.reduce(function(a2,b2){return Math.min(a2,b2.priority);},4)%4};nodeResult.priority=Math.max(priorities.all,priorities.none,priorities.any);var impacts=[];checkTypes.forEach(function(type2){nodeResult[type2]=nodeResult[type2].filter(function(check){return check.priority===nodeResult.priority&&check.priority===priorities[type2];});nodeResult[type2].forEach(function(check){return impacts.push(check.impact);});});if([CANTTELL_PRIO,FAIL_PRIO].includes(nodeResult.priority)){nodeResult.impact=aggregate_default(constants_default.impact,impacts);}else{nodeResult.impact=null;}anyAllNone(nodeResult,function(c4){delete c4.result;delete c4.priority;});nodeResult.result=constants_default.results[nodeResult.priority];delete nodeResult.priority;return nodeResult;}var aggregate_checks_default=aggregateChecks;function _finalizeRuleResult(ruleResult){var rule=axe._audit.rules.find(function(_ref){var id=_ref.id;return id===ruleResult.id;});if(rule&&rule.impact){ruleResult.nodes.forEach(function(node){['any','all','none'].forEach(function(checkType){(node[checkType]||[]).forEach(function(checkResult){checkResult.impact=rule.impact;});});});}Object.assign(ruleResult,aggregate_node_results_default(ruleResult.nodes));delete ruleResult.nodes;return ruleResult;}function aggregateNodeResults(nodeResults){var ruleResult={};nodeResults=nodeResults.map(function(nodeResult){if(nodeResult.any&&nodeResult.all&&nodeResult.none){return aggregate_checks_default(nodeResult);}else if(Array.isArray(nodeResult.node)){return _finalizeRuleResult(nodeResult);}else{throw new TypeError('Invalid Result type');}});if(nodeResults&&nodeResults.length){var resultList=nodeResults.map(function(node){return node.result;});ruleResult.result=aggregate_default(constants_default.results,resultList,ruleResult.result);}else{ruleResult.result='inapplicable';}constants_default.resultGroups.forEach(function(group){return ruleResult[group]=[];});nodeResults.forEach(function(nodeResult){var groupName=constants_default.resultGroupMap[nodeResult.result];ruleResult[groupName].push(nodeResult);});var impactGroup=constants_default.FAIL_GROUP;if(ruleResult[impactGroup].length===0){impactGroup=constants_default.CANTTELL_GROUP;}if(ruleResult[impactGroup].length>0){var impactList=ruleResult[impactGroup].map(function(failure){return failure.impact;});ruleResult.impact=aggregate_default(constants_default.impact,impactList)||null;}else{ruleResult.impact=null;}return ruleResult;}var aggregate_node_results_default=aggregateNodeResults;function copyToGroup(resultObject,subResult,group){var resultCopy=Object.assign({},subResult);resultCopy.nodes=(resultCopy[group]||[]).concat();constants_default.resultGroups.forEach(function(resultGroup){delete resultCopy[resultGroup];});resultObject[group].push(resultCopy);}function aggregateResult(results){var resultObject={};constants_default.resultGroups.forEach(function(groupName){return resultObject[groupName]=[];});results.forEach(function(subResult){if(subResult.error){copyToGroup(resultObject,subResult,constants_default.CANTTELL_GROUP);}else if(subResult.result===constants_default.NA){copyToGroup(resultObject,subResult,constants_default.NA_GROUP);}else{constants_default.resultGroups.forEach(function(group){if(Array.isArray(subResult[group])&&subResult[group].length>0){copyToGroup(resultObject,subResult,group);}});}});return resultObject;}var aggregate_result_default=aggregateResult;function areStylesSet(el,styles,stopAt){var styl=window.getComputedStyle(el,null);if(!styl){return false;}for(var i=0;i<styles.length;++i){var att=styles[i];if(styl.getPropertyValue(att.property)===att.value){return true;}}if(!el.parentNode||el.nodeName.toUpperCase()===stopAt.toUpperCase()){return false;}return areStylesSet(el.parentNode,styles,stopAt);}var are_styles_set_default=areStylesSet;function assert(bool,message){if(!bool){throw new Error(message);}}var assert_default=assert;function toArray(thing){return Array.prototype.slice.call(thing);}var to_array_default=toArray;function escapeSelector(value){var string=String(value);var length=string.length;var index=-1;var codeUnit;var result='';var firstCodeUnit=string.charCodeAt(0);while(++index<length){codeUnit=string.charCodeAt(index);if(codeUnit==0){result+='\\ufffd';continue;}if(codeUnit>=1&&codeUnit<=31||codeUnit==127||index==0&&codeUnit>=48&&codeUnit<=57||index==1&&codeUnit>=48&&codeUnit<=57&&firstCodeUnit==45){result+='\\\\'+codeUnit.toString(16)+' ';continue;}if(index==0&&length==1&&codeUnit==45){result+='\\\\'+string.charAt(index);continue;}if(codeUnit>=128||codeUnit==45||codeUnit==95||codeUnit>=48&&codeUnit<=57||codeUnit>=65&&codeUnit<=90||codeUnit>=97&&codeUnit<=122){result+=string.charAt(index);continue;}result+='\\\\'+string.charAt(index);}return result;}var escape_selector_default=escapeSelector;function isMostlyNumbers(){var str=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return str.length!==0&&(str.match(/[0-9]/g)||'').length>=str.length/2;}function splitString(str,splitIndex){return[str.substring(0,splitIndex),str.substring(splitIndex)];}function trimRight(str){return str.replace(/\\s+$/,'');}function uriParser(url){var original=url;var protocol='',domain='',port='',path='',query='',hash='';if(url.includes('#')){var _splitString=splitString(url,url.indexOf('#'));var _splitString2=_slicedToArray(_splitString,2);url=_splitString2[0];hash=_splitString2[1];}if(url.includes('?')){var _splitString3=splitString(url,url.indexOf('?'));var _splitString4=_slicedToArray(_splitString3,2);url=_splitString4[0];query=_splitString4[1];}if(url.includes('://')){var _url$split=url.split('://');var _url$split2=_slicedToArray(_url$split,2);protocol=_url$split2[0];url=_url$split2[1];var _splitString5=splitString(url,url.indexOf('/'));var _splitString6=_slicedToArray(_splitString5,2);domain=_splitString6[0];url=_splitString6[1];}else if(url.substr(0,2)==='//'){url=url.substr(2);var _splitString7=splitString(url,url.indexOf('/'));var _splitString8=_slicedToArray(_splitString7,2);domain=_splitString8[0];url=_splitString8[1];}if(domain.substr(0,4)==='www.'){domain=domain.substr(4);}if(domain&&domain.includes(':')){var _splitString9=splitString(domain,domain.indexOf(':'));var _splitString10=_slicedToArray(_splitString9,2);domain=_splitString10[0];port=_splitString10[1];}path=url;return{original:original,protocol:protocol,domain:domain,port:port,path:path,query:query,hash:hash};}function getFriendlyUriEnd(){var uri=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(uri.length<=1||uri.substr(0,5)==='data:'||uri.substr(0,11)==='javascript:'||uri.includes('?')){return;}var currentDomain=options.currentDomain,_options$maxLength=options.maxLength,maxLength=_options$maxLength===void 0?25:_options$maxLength;var _uriParser=uriParser(uri),path=_uriParser.path,domain=_uriParser.domain,hash=_uriParser.hash;var pathEnd=path.substr(path.substr(0,path.length-2).lastIndexOf('/')+1);if(hash){if(pathEnd&&(pathEnd+hash).length<=maxLength){return trimRight(pathEnd+hash);}else if(pathEnd.length<2&&hash.length>2&&hash.length<=maxLength){return trimRight(hash);}else{return;}}else if(domain&&domain.length<maxLength&&path.length<=1){return trimRight(domain+path);}if(path==='/'+pathEnd&&domain&&currentDomain&&domain!==currentDomain&&(domain+path).length<=maxLength){return trimRight(domain+path);}var lastDotIndex=pathEnd.lastIndexOf('.');if((lastDotIndex===-1||lastDotIndex>1)&&(lastDotIndex!==-1||pathEnd.length>2)&&pathEnd.length<=maxLength&&!pathEnd.match(/index(\\.[a-zA-Z]{2-4})?/)&&!isMostlyNumbers(pathEnd)){return trimRight(pathEnd);}}var get_friendly_uri_end_default=getFriendlyUriEnd;function getNodeAttributes(node){if(node.attributes instanceof window.NamedNodeMap){return node.attributes;}return node.cloneNode(false).attributes;}var get_node_attributes_default=getNodeAttributes;var matchesSelector=function(){var method;function getMethod(node){var index,candidate,candidates=['matches','matchesSelector','mozMatchesSelector','webkitMatchesSelector','msMatchesSelector'],length=candidates.length;for(index=0;index<length;index++){candidate=candidates[index];if(node[candidate]){return candidate;}}}return function(node,selector){if(!method||!node[method]){method=getMethod(node);}if(node[method]){return node[method](selector);}return false;};}();var element_matches_default=matchesSelector;var import_memoizee=__toModule(require_memoizee());axe._memoizedFns=[];function memoizeImplementation(fn){var memoized=(0,import_memoizee['default'])(fn);axe._memoizedFns.push(memoized);return memoized;}var memoize_default=memoizeImplementation;var isXHTML=memoize_default(function(doc){if(!(doc!==null&&doc!==void 0&&doc.createElement)){return false;}return doc.createElement('A').localName==='A';});var is_xhtml_default=isXHTML;function _getShadowSelector(generateSelector2,elm){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!elm){return'';}var doc=elm.getRootNode&&elm.getRootNode()||document;if(doc.nodeType!==11){return generateSelector2(elm,options,doc);}var stack=[];while(doc.nodeType===11){if(!doc.host){return'';}stack.unshift({elm:elm,doc:doc});elm=doc.host;doc=elm.getRootNode();}stack.unshift({elm:elm,doc:doc});return stack.map(function(item){return generateSelector2(item.elm,options,item.doc);});}var ignoredAttributes=['class','style','id','selected','checked','disabled','tabindex','aria-checked','aria-selected','aria-invalid','aria-activedescendant','aria-busy','aria-disabled','aria-expanded','aria-grabbed','aria-pressed','aria-valuenow'];var MAXATTRIBUTELENGTH=31;var attrCharsRegex=/([\\\\\"])/g;var newlineChars=/(\\r\\n|\\r|\\n)/g;function escapeAttribute(str){return str.replace(attrCharsRegex,'\\\\$1').replace(newlineChars,'\\\\a ');}function getAttributeNameValue(node,at){var name=at.name;var atnv;if(name.indexOf('href')!==-1||name.indexOf('src')!==-1){var friendly=get_friendly_uri_end_default(node.getAttribute(name));if(friendly){atnv=escape_selector_default(at.name)+'$=\"'+escapeAttribute(friendly)+'\"';}else{atnv=escape_selector_default(at.name)+'=\"'+escapeAttribute(node.getAttribute(name))+'\"';}}else{atnv=escape_selector_default(name)+'=\"'+escapeAttribute(at.value)+'\"';}return atnv;}function countSort(a2,b2){return a2.count<b2.count?-1:a2.count===b2.count?0:1;}function filterAttributes(at){return!ignoredAttributes.includes(at.name)&&at.name.indexOf(':')===-1&&(!at.value||at.value.length<MAXATTRIBUTELENGTH);}function _getSelectorData(domTree){var data={classes:{},tags:{},attributes:{}};domTree=Array.isArray(domTree)?domTree:[domTree];var currentLevel=domTree.slice();var stack=[];var _loop2=function _loop2(){var current=currentLevel.pop();var node=current.actualNode;if(!!node.querySelectorAll){var tag=node.nodeName;if(data.tags[tag]){data.tags[tag]++;}else{data.tags[tag]=1;}if(node.classList){Array.from(node.classList).forEach(function(cl){var ind=escape_selector_default(cl);if(data.classes[ind]){data.classes[ind]++;}else{data.classes[ind]=1;}});}if(node.hasAttributes()){Array.from(get_node_attributes_default(node)).filter(filterAttributes).forEach(function(at){var atnv=getAttributeNameValue(node,at);if(atnv){if(data.attributes[atnv]){data.attributes[atnv]++;}else{data.attributes[atnv]=1;}}});}}if(current.children.length){stack.push(currentLevel);currentLevel=current.children.slice();}while(!currentLevel.length&&stack.length){currentLevel=stack.pop();}};while(currentLevel.length){_loop2();}return data;}function uncommonClasses(node,selectorData){var retVal=[];var classData=selectorData.classes;var tagData=selectorData.tags;if(node.classList){Array.from(node.classList).forEach(function(cl){var ind=escape_selector_default(cl);if(classData[ind]<tagData[node.nodeName]){retVal.push({name:ind,count:classData[ind],species:'class'});}});}return retVal.sort(countSort);}function getNthChildString(elm,selector){var siblings=elm.parentNode&&Array.from(elm.parentNode.children||'')||[];var hasMatchingSiblings=siblings.find(function(sibling){return sibling!==elm&&element_matches_default(sibling,selector);});if(hasMatchingSiblings){var nthChild=1+siblings.indexOf(elm);return':nth-child('+nthChild+')';}else{return'';}}function getElmId(elm){if(!elm.getAttribute('id')){return;}var doc=elm.getRootNode&&elm.getRootNode()||document;var id='#'+escape_selector_default(elm.getAttribute('id')||'');if(!id.match(/player_uid_/)&&doc.querySelectorAll(id).length===1){return id;}}function getBaseSelector(elm){var xhtml=is_xhtml_default(document);return escape_selector_default(xhtml?elm.localName:elm.nodeName.toLowerCase());}function uncommonAttributes(node,selectorData){var retVal=[];var attData=selectorData.attributes;var tagData=selectorData.tags;if(node.hasAttributes()){Array.from(get_node_attributes_default(node)).filter(filterAttributes).forEach(function(at){var atnv=getAttributeNameValue(node,at);if(atnv&&attData[atnv]<tagData[node.nodeName]){retVal.push({name:atnv,count:attData[atnv],species:'attribute'});}});}return retVal.sort(countSort);}function getThreeLeastCommonFeatures(elm,selectorData){var selector='';var features;var clss=uncommonClasses(elm,selectorData);var atts=uncommonAttributes(elm,selectorData);if(clss.length&&clss[0].count===1){features=[clss[0]];}else if(atts.length&&atts[0].count===1){features=[atts[0]];selector=getBaseSelector(elm);}else{features=clss.concat(atts);features.sort(countSort);features=features.slice(0,3);if(!features.some(function(feat){return feat.species==='class';})){selector=getBaseSelector(elm);}else{features.sort(function(a2,b2){return a2.species!==b2.species&&a2.species==='class'?-1:a2.species===b2.species?0:1;});}}return selector+=features.reduce(function(val,feat){switch(feat.species){case'class':return val+'.'+feat.name;case'attribute':return val+'['+feat.name+']';}return val;},'');}function generateSelector(elm,options,doc){if(!axe._selectorData){throw new Error('Expect axe._selectorData to be set up');}var _options$toRoot=options.toRoot,toRoot=_options$toRoot===void 0?false:_options$toRoot;var selector;var similar;do{var features=getElmId(elm);if(!features){features=getThreeLeastCommonFeatures(elm,axe._selectorData);features+=getNthChildString(elm,features);}if(selector){selector=features+' > '+selector;}else{selector=features;}if(!similar){similar=Array.from(doc.querySelectorAll(selector));}else{similar=similar.filter(function(item){return element_matches_default(item,selector);});}elm=elm.parentElement;}while((similar.length>1||toRoot)&&elm&&elm.nodeType!==11);if(similar.length===1){return selector;}else if(selector.indexOf(' > ')!==-1){return':root'+selector.substring(selector.indexOf(' > '));}return':root';}function _getSelector(elm,options){return _getShadowSelector(generateSelector,elm,options);}function generateAncestry(node){var nodeName2=node.nodeName.toLowerCase();var parent=node.parentElement;if(!parent){return nodeName2;}var nthChild='';if(nodeName2!=='head'&&nodeName2!=='body'&&parent.children.length>1){var index=Array.prototype.indexOf.call(parent.children,node)+1;nthChild=':nth-child('.concat(index,')');}return generateAncestry(parent)+' > '+nodeName2+nthChild;}function _getAncestry(elm,options){return _getShadowSelector(generateAncestry,elm,options);}function getXPathArray(node,path){var sibling,count;if(!node){return[];}if(!path&&node.nodeType===9){path=[{str:'html'}];return path;}path=path||[];if(node.parentNode&&node.parentNode!==node){path=getXPathArray(node.parentNode,path);}if(node.previousSibling){count=1;sibling=node.previousSibling;do{if(sibling.nodeType===1&&sibling.nodeName===node.nodeName){count++;}sibling=sibling.previousSibling;}while(sibling);if(count===1){count=null;}}else if(node.nextSibling){sibling=node.nextSibling;do{if(sibling.nodeType===1&&sibling.nodeName===node.nodeName){count=1;sibling=null;}else{count=null;sibling=sibling.previousSibling;}}while(sibling);}if(node.nodeType===1){var element={};element.str=node.nodeName.toLowerCase();var id=node.getAttribute&&escape_selector_default(node.getAttribute('id'));if(id&&node.ownerDocument.querySelectorAll('#'+id).length===1){element.id=node.getAttribute('id');}if(count>1){element.count=count;}path.push(element);}return path;}function xpathToString(xpathArray){return xpathArray.reduce(function(str,elm){if(elm.id){return'/'.concat(elm.str,'[@id=\\'').concat(elm.id,'\\']');}else{return str+'/'.concat(elm.str)+(elm.count>0?'['.concat(elm.count,']'):'');}},'');}function getXpath(node){var xpathArray=getXPathArray(node);return xpathToString(xpathArray);}var get_xpath_default=getXpath;var _cache={};var cache={set:function set(key,value){validateKey(key);_cache[key]=value;},get:function get(key,creator){validateCreator(creator);if(key in _cache){return _cache[key];}if(typeof creator==='function'){var value=creator();assert_default(value!==void 0,'Cache creator function should not return undefined');this.set(key,value);return _cache[key];}},clear:function clear(){_cache={};}};function validateKey(key){assert_default(typeof key==='string','key must be a string, '+_typeof(key)+' given');assert_default(key!=='','key must not be empty');}function validateCreator(creator){assert_default(typeof creator==='function'||typeof creator==='undefined','creator must be a function or undefined, '+_typeof(creator)+' given');}var cache_default=cache;function getNodeFromTree(vNode,node){var el=node||vNode;return cache_default.get('nodeMap')?cache_default.get('nodeMap').get(el):null;}var get_node_from_tree_default=getNodeFromTree;var CACHE_KEY='DqElm.RunOptions';function truncate(str,maxLength){maxLength=maxLength||300;if(str.length>maxLength){var index=str.indexOf('>');str=str.substring(0,index+1);}return str;}function getSource(element){if(!(element!==null&&element!==void 0&&element.outerHTML)){return'';}var source=element.outerHTML;if(!source&&typeof window.XMLSerializer==='function'){source=new window.XMLSerializer().serializeToString(element);}return truncate(source||'');}function DqElement(elm){var _this$spec$selector,_this$_virtualNode;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var spec=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!options){var _cache_default$get;options=(_cache_default$get=cache_default.get(CACHE_KEY))!==null&&_cache_default$get!==void 0?_cache_default$get:{};}this.spec=spec;if(elm instanceof abstract_virtual_node_default){this._virtualNode=elm;this._element=elm.actualNode;}else{this._element=elm;this._virtualNode=get_node_from_tree_default(elm);}this.fromFrame=((_this$spec$selector=this.spec.selector)===null||_this$spec$selector===void 0?void 0:_this$spec$selector.length)>1;this._includeElementInJson=options.elementRef;if(options.absolutePaths){this._options={toRoot:true};}this.nodeIndexes=[];if(Array.isArray(this.spec.nodeIndexes)){this.nodeIndexes=this.spec.nodeIndexes;}else if(typeof((_this$_virtualNode=this._virtualNode)===null||_this$_virtualNode===void 0?void 0:_this$_virtualNode.nodeIndex)==='number'){this.nodeIndexes=[this._virtualNode.nodeIndex];}this.source=null;if(!axe._audit.noHtml){var _this$spec$source;this.source=(_this$spec$source=this.spec.source)!==null&&_this$spec$source!==void 0?_this$spec$source:getSource(this._element);}}DqElement.prototype={get selector(){return this.spec.selector||[_getSelector(this.element,this._options)];},get ancestry(){return this.spec.ancestry||[_getAncestry(this.element)];},get xpath(){return this.spec.xpath||[get_xpath_default(this.element)];},get element(){return this._element;},toJSON:function toJSON(){var spec={selector:this.selector,source:this.source,xpath:this.xpath,ancestry:this.ancestry,nodeIndexes:this.nodeIndexes,fromFrame:this.fromFrame};if(this._includeElementInJson){spec.element=this._element;}return spec;}};DqElement.fromFrame=function fromFrame(node,options,frame){var spec=DqElement.mergeSpecs(node,frame);return new DqElement(frame.element,options,spec);};DqElement.mergeSpecs=function mergeSpecs(child,parentFrame){return _extends({},child,{selector:[].concat(_toConsumableArray(parentFrame.selector),_toConsumableArray(child.selector)),ancestry:[].concat(_toConsumableArray(parentFrame.ancestry),_toConsumableArray(child.ancestry)),xpath:[].concat(_toConsumableArray(parentFrame.xpath),_toConsumableArray(child.xpath)),nodeIndexes:[].concat(_toConsumableArray(parentFrame.nodeIndexes),_toConsumableArray(child.nodeIndexes)),fromFrame:true});};DqElement.setRunOptions=function setRunOptions(_ref2){var elementRef=_ref2.elementRef,absolutePaths=_ref2.absolutePaths;cache_default.set(CACHE_KEY,{elementRef:elementRef,absolutePaths:absolutePaths});};var dq_element_default=DqElement;function checkHelper(checkResult,options,resolve,reject){return{isAsync:false,async:function async(){this.isAsync=true;return function(result){if(result instanceof Error===false){checkResult.result=result;resolve(checkResult);}else{reject(result);}};},data:function data(_data){checkResult.data=_data;},relatedNodes:function relatedNodes(nodes){if(!window.Node){return;}if(nodes instanceof window.Node||nodes instanceof abstract_virtual_node_default){nodes=[nodes];}else{nodes=to_array_default(nodes);}checkResult.relatedNodes=[];nodes.forEach(function(node){if(node instanceof abstract_virtual_node_default){node=node.actualNode;}if(node instanceof window.Node){var dqElm=new dq_element_default(node);checkResult.relatedNodes.push(dqElm);}});}};}var check_helper_default=checkHelper;function _clone(obj){return cloneRecused(obj,new Map());}function cloneRecused(obj,seen){var _window,_window2;if(obj===null||_typeof(obj)!=='object'){return obj;}if((_window=window)!==null&&_window!==void 0&&_window.Node&&obj instanceof window.Node||(_window2=window)!==null&&_window2!==void 0&&_window2.HTMLCollection&&obj instanceof window.HTMLCollection||'nodeName'in obj&&'nodeType'in obj&&'ownerDocument'in obj){return obj;}if(seen.has(obj)){return seen.get(obj);}if(Array.isArray(obj)){var out2=[];seen.set(obj,out2);obj.forEach(function(value){out2.push(cloneRecused(value,seen));});return out2;}var out={};seen.set(obj,out);for(var key in obj){out[key]=cloneRecused(obj[key],seen);}return out;}var import_css_selector_parser=__toModule(require_lib());var parser=new import_css_selector_parser.CssSelectorParser();parser.registerSelectorPseudos('not');parser.registerSelectorPseudos('is');parser.registerNestingOperators('>');parser.registerAttrEqualityMods('^','$','*','~');var css_parser_default=parser;function _matches(vNode,selector){var expressions=_convertSelector(selector);return expressions.some(function(expression){return _matchesExpression(vNode,expression);});}function matchesTag(vNode,exp){return vNode.props.nodeType===1&&(exp.tag==='*'||vNode.props.nodeName===exp.tag);}function matchesClasses(vNode,exp){return!exp.classes||exp.classes.every(function(cl){return vNode.hasClass(cl.value);});}function matchesAttributes(vNode,exp){return!exp.attributes||exp.attributes.every(function(att){var nodeAtt=vNode.attr(att.key);return nodeAtt!==null&&att.test(nodeAtt);});}function matchesId(vNode,exp){return!exp.id||vNode.props.id===exp.id;}function matchesPseudos(target,exp){if(!exp.pseudos||exp.pseudos.every(function(pseudo){if(pseudo.name==='not'){return!pseudo.expressions.some(function(expression){return _matchesExpression(target,expression);});}else if(pseudo.name==='is'){return pseudo.expressions.some(function(expression){return _matchesExpression(target,expression);});}throw new Error('the pseudo selector '+pseudo.name+' has not yet been implemented');})){return true;}return false;}function matchExpression(vNode,expression){return matchesTag(vNode,expression)&&matchesClasses(vNode,expression)&&matchesAttributes(vNode,expression)&&matchesId(vNode,expression)&&matchesPseudos(vNode,expression);}var escapeRegExp=function(){var from=/(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g;var to2='\\\\';return function(string){return string.replace(from,to2);};}();var reUnescape=/\\\\/g;function convertAttributes(atts){if(!atts){return;}return atts.map(function(att){var attributeKey=att.name.replace(reUnescape,'');var attributeValue=(att.value||'').replace(reUnescape,'');var test,regexp;switch(att.operator){case'^=':regexp=new RegExp('^'+escapeRegExp(attributeValue));break;case'$=':regexp=new RegExp(escapeRegExp(attributeValue)+'$');break;case'~=':regexp=new RegExp('(^|\\\\s)'+escapeRegExp(attributeValue)+'(\\\\s|$)');break;case'|=':regexp=new RegExp('^'+escapeRegExp(attributeValue)+'(-|$)');break;case'=':test=function test(value){return attributeValue===value;};break;case'*=':test=function test(value){return value&&value.includes(attributeValue);};break;case'!=':test=function test(value){return attributeValue!==value;};break;default:test=function test(value){return value!==null;};}if(attributeValue===''&&/^[*$^]=$/.test(att.operator)){test=function test(){return false;};}if(!test){test=function test(value){return value&&regexp.test(value);};}return{key:attributeKey,value:attributeValue,type:typeof att.value==='undefined'?'attrExist':'attrValue',test:test};});}function convertClasses(classes){if(!classes){return;}return classes.map(function(className){className=className.replace(reUnescape,'');return{value:className,regexp:new RegExp('(^|\\\\s)'+escapeRegExp(className)+'(\\\\s|$)')};});}function convertPseudos(pseudos){if(!pseudos){return;}return pseudos.map(function(p2){var expressions;if(['is','not'].includes(p2.name)){expressions=p2.value;expressions=expressions.selectors?expressions.selectors:[expressions];expressions=convertExpressions(expressions);}return{name:p2.name,expressions:expressions,value:p2.value};});}function convertExpressions(expressions){return expressions.map(function(exp){var newExp=[];var rule=exp.rule;while(rule){newExp.push({tag:rule.tagName?rule.tagName.toLowerCase():'*',combinator:rule.nestingOperator?rule.nestingOperator:' ',id:rule.id,attributes:convertAttributes(rule.attrs),classes:convertClasses(rule.classNames),pseudos:convertPseudos(rule.pseudos)});rule=rule.rule;}return newExp;});}function _convertSelector(selector){var expressions=css_parser_default.parse(selector);expressions=expressions.selectors?expressions.selectors:[expressions];return convertExpressions(expressions);}function optimizedMatchesExpression(vNode,expressions,index,matchAnyParent){if(!vNode){return false;}var isArray=Array.isArray(expressions);var expression=isArray?expressions[index]:expressions;var machedExpression=matchExpression(vNode,expression);while(!machedExpression&&matchAnyParent&&vNode.parent){vNode=vNode.parent;machedExpression=matchExpression(vNode,expression);}if(index>0){if([' ','>'].includes(expression.combinator)===false){throw new Error('axe.utils.matchesExpression does not support the combinator: '+expression.combinator);}machedExpression=machedExpression&&optimizedMatchesExpression(vNode.parent,expressions,index-1,expression.combinator===' ');}return machedExpression;}function _matchesExpression(vNode,expressions,matchAnyParent){return optimizedMatchesExpression(vNode,expressions,expressions.length-1,matchAnyParent);}function closest(vNode,selector){while(vNode){if(_matches(vNode,selector)){return vNode;}if(typeof vNode.parent==='undefined'){throw new TypeError('Cannot resolve parent for non-DOM nodes');}vNode=vNode.parent;}return null;}var closest_default=closest;function noop(){}function funcGuard(f){if(typeof f!=='function'){throw new TypeError('Queue methods require functions as arguments');}}function queue(){var tasks=[];var started=0;var remaining=0;var completeQueue=noop;var complete=false;var err2;var defaultFail=function defaultFail(e){err2=e;setTimeout(function(){if(err2!==void 0&&err2!==null){log_default('Uncaught error (of queue)',err2);}},1);};var failed=defaultFail;function createResolve(i){return function(r){tasks[i]=r;remaining-=1;if(!remaining&&completeQueue!==noop){complete=true;completeQueue(tasks);}};}function abort(msg){completeQueue=noop;failed(msg);return tasks;}function pop(){var length=tasks.length;for(;started<length;started++){var task=tasks[started];try{task.call(null,createResolve(started),abort);}catch(e){abort(e);}}}var q={defer:function defer(fn){if(_typeof(fn)==='object'&&fn.then&&fn['catch']){var defer=fn;fn=function fn(resolve,reject){defer.then(resolve)['catch'](reject);};}funcGuard(fn);if(err2!==void 0){return;}else if(complete){throw new Error('Queue already completed');}tasks.push(fn);++remaining;pop();return q;},then:function then(fn){funcGuard(fn);if(completeQueue!==noop){throw new Error('queue `then` already set');}if(!err2){completeQueue=fn;if(!remaining){complete=true;completeQueue(tasks);}}return q;},catch:function _catch(fn){funcGuard(fn);if(failed!==defaultFail){throw new Error('queue `catch` already set');}if(!err2){failed=fn;}else{fn(err2);err2=null;}return q;},abort:abort};return q;}var queue_default=queue;var uuid;var _rng;var _crypto=window.crypto||window.msCrypto;if(!_rng&&_crypto&&_crypto.getRandomValues){_rnds8=new Uint8Array(16);_rng=function whatwgRNG(){_crypto.getRandomValues(_rnds8);return _rnds8;};}var _rnds8;if(!_rng){_rnds=new Array(16);_rng=function _rng(){for(var i=0,r;i<16;i++){if((i&3)===0){r=Math.random()*4294967296;}_rnds[i]=r>>>((i&3)<<3)&255;}return _rnds;};}var _rnds;var BufferClass=typeof window.Buffer=='function'?window.Buffer:Array;var _byteToHex=[];var _hexToByte={};for(var i=0;i<256;i++){_byteToHex[i]=(i+256).toString(16).substr(1);_hexToByte[_byteToHex[i]]=i;}function parse(s,buf,offset){var i=buf&&offset||0,ii=0;buf=buf||[];s.toLowerCase().replace(/[0-9a-f]{2}/g,function(oct){if(ii<16){buf[i+ii++]=_hexToByte[oct];}});while(ii<16){buf[i+ii++]=0;}return buf;}function unparse(buf,offset){var i=offset||0,bth=_byteToHex;return bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+'-'+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]]+bth[buf[i++]];}var _seedBytes=_rng();var _nodeId=[_seedBytes[0]|1,_seedBytes[1],_seedBytes[2],_seedBytes[3],_seedBytes[4],_seedBytes[5]];var _clockseq=(_seedBytes[6]<<8|_seedBytes[7])&16383;var _lastMSecs=0;var _lastNSecs=0;function v1(options,buf,offset){var i=buf&&offset||0;var b2=buf||[];options=options||{};var clockseq=options.clockseq!=null?options.clockseq:_clockseq;var msecs=options.msecs!=null?options.msecs:new Date().getTime();var nsecs=options.nsecs!=null?options.nsecs:_lastNSecs+1;var dt=msecs-_lastMSecs+(nsecs-_lastNSecs)/1e4;if(dt<0&&options.clockseq==null){clockseq=clockseq+1&16383;}if((dt<0||msecs>_lastMSecs)&&options.nsecs==null){nsecs=0;}if(nsecs>=1e4){throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');}_lastMSecs=msecs;_lastNSecs=nsecs;_clockseq=clockseq;msecs+=122192928e5;var tl=((msecs&268435455)*1e4+nsecs)%4294967296;b2[i++]=tl>>>24&255;b2[i++]=tl>>>16&255;b2[i++]=tl>>>8&255;b2[i++]=tl&255;var tmh=msecs/4294967296*1e4&268435455;b2[i++]=tmh>>>8&255;b2[i++]=tmh&255;b2[i++]=tmh>>>24&15|16;b2[i++]=tmh>>>16&255;b2[i++]=clockseq>>>8|128;b2[i++]=clockseq&255;var node=options.node||_nodeId;for(var n2=0;n2<6;n2++){b2[i+n2]=node[n2];}return buf?buf:unparse(b2);}function v4(options,buf,offset){var i=buf&&offset||0;if(typeof options=='string'){buf=options=='binary'?new BufferClass(16):null;options=null;}options=options||{};var rnds=options.random||(options.rng||_rng)();rnds[6]=rnds[6]&15|64;rnds[8]=rnds[8]&63|128;if(buf){for(var ii=0;ii<16;ii++){buf[i+ii]=rnds[ii];}}return buf||unparse(rnds);}uuid=v4;uuid.v1=v1;uuid.v4=v4;uuid.parse=parse;uuid.unparse=unparse;uuid.BufferClass=BufferClass;axe._uuid=v1();var uuid_default=v4;var errorTypes=Object.freeze(['EvalError','RangeError','ReferenceError','SyntaxError','TypeError','URIError']);function stringifyMessage(_ref3){var topic=_ref3.topic,channelId=_ref3.channelId,message=_ref3.message,messageId=_ref3.messageId,keepalive=_ref3.keepalive;var data={channelId:channelId,topic:topic,messageId:messageId,keepalive:!!keepalive,source:getSource2()};if(message instanceof Error){data.error={name:message.name,message:message.message,stack:message.stack};}else{data.payload=message;}return JSON.stringify(data);}function parseMessage(dataString){var data;try{data=JSON.parse(dataString);}catch(e){return;}if(!isRespondableMessage(data)){return;}var _data2=data,topic=_data2.topic,channelId=_data2.channelId,messageId=_data2.messageId,keepalive=_data2.keepalive;var message=_typeof(data.error)==='object'?buildErrorObject(data.error):data.payload;return{topic:topic,message:message,messageId:messageId,channelId:channelId,keepalive:!!keepalive};}function isRespondableMessage(postedMessage){return postedMessage!==null&&_typeof(postedMessage)==='object'&&typeof postedMessage.channelId==='string'&&postedMessage.source===getSource2();}function buildErrorObject(error){var msg=error.message||'Unknown error occurred';var errorName=errorTypes.includes(error.name)?error.name:'Error';var ErrConstructor=window[errorName]||Error;if(error.stack){msg+='\\n'+error.stack.replace(error.message,'');}return new ErrConstructor(msg);}function getSource2(){var application='axeAPI';var version='';if(typeof axe!=='undefined'&&axe._audit&&axe._audit.application){application=axe._audit.application;}if(typeof axe!=='undefined'){version=axe.version;}return application+'.'+version;}function assertIsParentWindow(win){assetNotGlobalWindow(win);assert_default(window.parent===win,'Source of the response must be the parent window.');}function assertIsFrameWindow(win){assetNotGlobalWindow(win);assert_default(win.parent===window,'Respondable target must be a frame in the current window');}function assetNotGlobalWindow(win){assert_default(window!==win,'Messages can not be sent to the same window.');}var channels={};function storeReplyHandler(channelId,replyHandler){var sendToParent=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;assert_default(!channels[channelId],'A replyHandler already exists for this message channel.');channels[channelId]={replyHandler:replyHandler,sendToParent:sendToParent};}function getReplyHandler(channelId){return channels[channelId];}function deleteReplyHandler(channelId){delete channels[channelId];}var messageIds=[];function createMessageId(){var uuid2=''.concat(v4(),':').concat(v4());if(messageIds.includes(uuid2)){return createMessageId();}messageIds.push(uuid2);return uuid2;}function isNewMessage(uuid2){if(messageIds.includes(uuid2)){return false;}messageIds.push(uuid2);return true;}function postMessage(win,data,sendToParent,replyHandler){sendToParent?assertIsParentWindow(win):assertIsFrameWindow(win);if(data.message instanceof Error&&!sendToParent){axe.log(data.message);return false;}var dataString=stringifyMessage(_extends({messageId:createMessageId()},data));var allowedOrigins=axe._audit.allowedOrigins;if(!allowedOrigins||!allowedOrigins.length){return false;}if(typeof replyHandler==='function'){storeReplyHandler(data.channelId,replyHandler,sendToParent);}allowedOrigins.forEach(function(origin){try{win.postMessage(dataString,origin);}catch(err2){if(err2 instanceof win.DOMException){throw new Error('allowedOrigins value \"'.concat(origin,'\" is not a valid origin'));}throw err2;}});return true;}function processError(win,error,channelId){if(!win.parent!==window){return axe.log(error);}try{postMessage(win,{topic:null,channelId:channelId,message:error,messageId:createMessageId(),keepalive:true},true);}catch(err2){return axe.log(err2);}}function createResponder(win,channelId){var sendToParent=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return function respond(message,keepalive,replyHandler){var data={channelId:channelId,message:message,keepalive:keepalive};postMessage(win,data,sendToParent,replyHandler);};}function originIsAllowed(origin){var allowedOrigins=axe._audit.allowedOrigins;return allowedOrigins&&allowedOrigins.includes('*')||allowedOrigins.includes(origin);}function messageHandler(_ref4,topicHandler){var origin=_ref4.origin,dataString=_ref4.data,win=_ref4.source;try{var data=parseMessage(dataString)||{};var channelId=data.channelId,message=data.message,messageId=data.messageId;if(!originIsAllowed(origin)||!isNewMessage(messageId)){return;}if(message instanceof Error&&win.parent!==window){axe.log(message);return false;}try{if(data.topic){var responder=createResponder(win,channelId);assertIsParentWindow(win);topicHandler(data,responder);}else{callReplyHandler(win,data);}}catch(error){processError(win,error,channelId);}}catch(error){axe.log(error);return false;}}function callReplyHandler(win,data){var channelId=data.channelId,message=data.message,keepalive=data.keepalive;var _ref5=getReplyHandler(channelId)||{},replyHandler=_ref5.replyHandler,sendToParent=_ref5.sendToParent;if(!replyHandler){return;}sendToParent?assertIsParentWindow(win):assertIsFrameWindow(win);var responder=createResponder(win,channelId,sendToParent);if(!keepalive&&channelId){deleteReplyHandler(channelId);}try{replyHandler(message,keepalive,responder);}catch(error){axe.log(error);responder(error,keepalive);}}var frameMessenger={open:function open(topicHandler){if(typeof window.addEventListener!=='function'){return;}var handler=function handler(messageEvent){messageHandler(messageEvent,topicHandler);};window.addEventListener('message',handler,false);return function(){window.removeEventListener('message',handler,false);};},post:function post(win,data,replyHandler){if(typeof window.addEventListener!=='function'){return false;}return postMessage(win,data,false,replyHandler);}};function setDefaultFrameMessenger(respondable2){respondable2.updateMessenger(frameMessenger);}var closeHandler;var postMessage2;var topicHandlers={};function _respondable(win,topic,message,keepalive,replyHandler){var data={topic:topic,message:message,channelId:''.concat(v4(),':').concat(v4()),keepalive:keepalive};return postMessage2(win,data,replyHandler);}function messageListener(data,responder){var topic=data.topic,message=data.message,keepalive=data.keepalive;var topicHandler=topicHandlers[topic];if(!topicHandler){return;}try{topicHandler(message,keepalive,responder);}catch(error){axe.log(error);responder(error,keepalive);}}_respondable.updateMessenger=function updateMessenger(_ref6){var open=_ref6.open,post=_ref6.post;assert_default(typeof open==='function','open callback must be a function');assert_default(typeof post==='function','post callback must be a function');if(closeHandler){closeHandler();}var close=open(messageListener);if(close){assert_default(typeof close==='function','open callback must return a cleanup function');closeHandler=close;}else{closeHandler=null;}postMessage2=post;};_respondable.subscribe=function subscribe(topic,topicHandler){assert_default(typeof topicHandler==='function','Subscriber callback must be a function');assert_default(!topicHandlers[topic],'Topic '.concat(topic,' is already registered to.'));topicHandlers[topic]=topicHandler;};_respondable.isInFrame=function isInFrame(){var win=arguments.length>0&&arguments[0]!==undefined?arguments[0]:window;return!!win.frameElement;};setDefaultFrameMessenger(_respondable);function _sendCommandToFrame(node,parameters,resolve,reject){var _parameters$options$p,_parameters$options;var win=node.contentWindow;var pingWaitTime=(_parameters$options$p=(_parameters$options=parameters.options)===null||_parameters$options===void 0?void 0:_parameters$options.pingWaitTime)!==null&&_parameters$options$p!==void 0?_parameters$options$p:500;if(!win){log_default('Frame does not have a content window',node);resolve(null);return;}if(pingWaitTime===0){callAxeStart(node,parameters,resolve,reject);return;}var timeout=setTimeout(function(){timeout=setTimeout(function(){if(!parameters.debug){resolve(null);}else{reject(err('No response from frame',node));}},0);},pingWaitTime);_respondable(win,'axe.ping',null,void 0,function(){clearTimeout(timeout);callAxeStart(node,parameters,resolve,reject);});}function callAxeStart(node,parameters,resolve,reject){var _parameters$options$f,_parameters$options2;var frameWaitTime=(_parameters$options$f=(_parameters$options2=parameters.options)===null||_parameters$options2===void 0?void 0:_parameters$options2.frameWaitTime)!==null&&_parameters$options$f!==void 0?_parameters$options$f:6e4;var win=node.contentWindow;var timeout=setTimeout(function collectResultFramesTimeout(){reject(err('Axe in frame timed out',node));},frameWaitTime);_respondable(win,'axe.start',parameters,void 0,function(data){clearTimeout(timeout);if(data instanceof Error===false){resolve(data);}else{reject(data);}});}function err(message,node){var selector;if(axe._tree){selector=_getSelector(node);}return new Error(message+': '+(selector||node));}var customSerializer=null;var nodeSerializer={update:function update(serializer){assert_default(_typeof(serializer)==='object','serializer must be an object');customSerializer=serializer;},toSpec:function toSpec(node){return nodeSerializer.dqElmToSpec(new dq_element_default(node));},dqElmToSpec:function dqElmToSpec(dqElm,runOptions){var _customSerializer;if(dqElm instanceof dq_element_default===false){return dqElm;}if(runOptions){dqElm=cloneLimitedDqElement(dqElm,runOptions);}if(typeof((_customSerializer=customSerializer)===null||_customSerializer===void 0?void 0:_customSerializer.toSpec)==='function'){return customSerializer.toSpec(dqElm);}return dqElm.toJSON();},mergeSpecs:function mergeSpecs(nodeSpec,parentFrameSpec){var _customSerializer2;if(typeof((_customSerializer2=customSerializer)===null||_customSerializer2===void 0?void 0:_customSerializer2.mergeSpecs)==='function'){return customSerializer.mergeSpecs(nodeSpec,parentFrameSpec);}return dq_element_default.mergeSpecs(nodeSpec,parentFrameSpec);},mapRawResults:function mapRawResults(rawResults){return rawResults.map(function(rawResult){return _extends({},rawResult,{nodes:nodeSerializer.mapRawNodeResults(rawResult.nodes)});});},mapRawNodeResults:function mapRawNodeResults(nodeResults){return nodeResults===null||nodeResults===void 0?void 0:nodeResults.map(function(_ref7){var node=_ref7.node,nodeResult=_objectWithoutProperties(_ref7,_excluded);nodeResult.node=nodeSerializer.dqElmToSpec(node);for(var _i2=0,_arr2=['any','all','none'];_i2<_arr2.length;_i2++){var type2=_arr2[_i2];nodeResult[type2]=nodeResult[type2].map(function(_ref8){var relatedNodes=_ref8.relatedNodes,checkResult=_objectWithoutProperties(_ref8,_excluded2);checkResult.relatedNodes=relatedNodes.map(nodeSerializer.dqElmToSpec);return checkResult;});}return nodeResult;});}};var node_serializer_default=nodeSerializer;function cloneLimitedDqElement(dqElm,runOptions){var fromFrame2=dqElm.fromFrame;var hasAncestry=runOptions.ancestry,hasXpath=runOptions.xpath;var hasSelectors=runOptions.selectors!==false||fromFrame2;dqElm=new dq_element_default(dqElm.element,runOptions,{source:dqElm.source,nodeIndexes:dqElm.nodeIndexes,selector:hasSelectors?dqElm.selector:[':root'],ancestry:hasAncestry?dqElm.ancestry:[':root'],xpath:hasXpath?dqElm.xpath:'/'});dqElm.fromFrame=fromFrame2;return dqElm;}function getAllChecks(object){var result=[];return result.concat(object.any||[]).concat(object.all||[]).concat(object.none||[]);}var get_all_checks_default=getAllChecks;function findBy(array,key,value){if(Array.isArray(array)){return array.find(function(obj){return obj!==null&&_typeof(obj)==='object'&&Object.hasOwn(obj,key)&&obj[key]===value;});}}var find_by_default=findBy;function pushFrame(resultSet,options,frameSpec){resultSet.forEach(function(res){res.node=node_serializer_default.mergeSpecs(res.node,frameSpec);var checks=get_all_checks_default(res);checks.forEach(function(check){check.relatedNodes=check.relatedNodes.map(function(node){return node_serializer_default.mergeSpecs(node,frameSpec);});});});}function spliceNodes(target,to2){var firstFromFrame=to2[0].node;for(var _i3=0;_i3<target.length;_i3++){var node=target[_i3].node;var resultSort=nodeIndexSort(node.nodeIndexes,firstFromFrame.nodeIndexes);if(resultSort>0||resultSort===0&&firstFromFrame.selector.length<node.selector.length){target.splice.apply(target,[_i3,0].concat(_toConsumableArray(to2)));return;}}target.push.apply(target,_toConsumableArray(to2));}function normalizeResult(result){if(!result||!result.results){return null;}if(!Array.isArray(result.results)){return[result.results];}if(!result.results.length){return null;}return result.results;}function mergeResults(frameResults,options){var mergedResult=[];frameResults.forEach(function(frameResult){var results=normalizeResult(frameResult);if(!results||!results.length){return;}var frameSpec=getFrameSpec(frameResult);results.forEach(function(ruleResult){if(ruleResult.nodes&&frameSpec){pushFrame(ruleResult.nodes,options,frameSpec);}var res=find_by_default(mergedResult,'id',ruleResult.id);if(!res){mergedResult.push(ruleResult);}else{if(ruleResult.nodes.length){spliceNodes(res.nodes,ruleResult.nodes);}}});});mergedResult.forEach(function(result){if(result.nodes){result.nodes.sort(function(nodeA,nodeB){return nodeIndexSort(nodeA.node.nodeIndexes,nodeB.node.nodeIndexes);});}});return mergedResult;}function nodeIndexSort(){var nodeIndexesA=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var nodeIndexesB=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var length=Math.max(nodeIndexesA===null||nodeIndexesA===void 0?void 0:nodeIndexesA.length,nodeIndexesB===null||nodeIndexesB===void 0?void 0:nodeIndexesB.length);for(var _i4=0;_i4<length;_i4++){var indexA=nodeIndexesA===null||nodeIndexesA===void 0?void 0:nodeIndexesA[_i4];var indexB=nodeIndexesB===null||nodeIndexesB===void 0?void 0:nodeIndexesB[_i4];if(typeof indexA!=='number'||isNaN(indexA)){return _i4===0?1:-1;}if(typeof indexB!=='number'||isNaN(indexB)){return _i4===0?-1:1;}if(indexA!==indexB){return indexA-indexB;}}return 0;}var merge_results_default=mergeResults;function getFrameSpec(frameResult){if(frameResult.frameElement){return node_serializer_default.toSpec(frameResult.frameElement);}else if(frameResult.frameSpec){return frameResult.frameSpec;}return null;}function _collectResultsFromFrames(parentContent,options,command,parameter,resolve,reject){options=_extends({},options,{elementRef:false});var q=queue_default();var frames=parentContent.frames;frames.forEach(function(_ref9){var frameElement=_ref9.node,context=_objectWithoutProperties(_ref9,_excluded3);q.defer(function(res,rej){var params={options:options,command:command,parameter:parameter,context:context};function callback(results){if(!results){return res(null);}return res({results:results,frameElement:frameElement});}_sendCommandToFrame(frameElement,params,callback,rej);});});q.then(function(data){resolve(merge_results_default(data,options));})['catch'](reject);}function _contains(vNode,otherVNode){if(!vNode.shadowId&&!otherVNode.shadowId&&vNode.actualNode&&typeof vNode.actualNode.contains==='function'){return vNode.actualNode.contains(otherVNode.actualNode);}do{if(vNode===otherVNode){return true;}else if(otherVNode.nodeIndex<vNode.nodeIndex){return false;}otherVNode=otherVNode.parent;}while(otherVNode);return false;}function deepMerge(){var target={};for(var _len=arguments.length,sources=new Array(_len),_key=0;_key<_len;_key++){sources[_key]=arguments[_key];}sources.forEach(function(source){if(!source||_typeof(source)!=='object'||Array.isArray(source)){return;}for(var _i5=0,_Object$keys=Object.keys(source);_i5<_Object$keys.length;_i5++){var key=_Object$keys[_i5];if(!target.hasOwnProperty(key)||_typeof(source[key])!=='object'||Array.isArray(target[key])){target[key]=source[key];}else{target[key]=deepMerge(target[key],source[key]);}}});return target;}var deep_merge_default=deepMerge;function extendMetaData(to2,from){Object.assign(to2,from);Object.keys(from).filter(function(prop){return typeof from[prop]==='function';}).forEach(function(prop){to2[prop]=null;try{to2[prop]=from[prop](to2);}catch(e){}});}var extend_meta_data_default=extendMetaData;var possibleShadowRoots=['article','aside','blockquote','body','div','footer','h1','h2','h3','h4','h5','h6','header','main','nav','p','section','span'];function isShadowRoot(node){if(node.shadowRoot){var nodeName2=node.nodeName.toLowerCase();if(possibleShadowRoots.includes(nodeName2)||/^[a-z][a-z0-9_.-]*-[a-z0-9_.-]*$/.test(nodeName2)){return true;}}return false;}var is_shadow_root_default=isShadowRoot;var dom_exports={};__export(dom_exports,{createGrid:function createGrid(){return _createGrid;},findElmsInContext:function findElmsInContext(){return find_elms_in_context_default;},findNearbyElms:function findNearbyElms(){return _findNearbyElms;},findUp:function findUp(){return find_up_default;},findUpVirtual:function findUpVirtual(){return find_up_virtual_default;},focusDisabled:function focusDisabled(){return focus_disabled_default;},getComposedParent:function getComposedParent(){return get_composed_parent_default;},getElementByReference:function getElementByReference(){return get_element_by_reference_default;},getElementCoordinates:function getElementCoordinates(){return get_element_coordinates_default;},getElementStack:function getElementStack(){return get_element_stack_default;},getModalDialog:function getModalDialog(){return get_modal_dialog_default;},getOverflowHiddenAncestors:function getOverflowHiddenAncestors(){return get_overflow_hidden_ancestors_default;},getRootNode:function getRootNode(){return get_root_node_default2;},getScrollOffset:function getScrollOffset(){return get_scroll_offset_default;},getTabbableElements:function getTabbableElements(){return get_tabbable_elements_default;},getTargetRects:function getTargetRects(){return get_target_rects_default;},getTargetSize:function getTargetSize(){return get_target_size_default;},getTextElementStack:function getTextElementStack(){return get_text_element_stack_default;},getViewportSize:function getViewportSize(){return get_viewport_size_default;},getVisibleChildTextRects:function getVisibleChildTextRects(){return get_visible_child_text_rects_default;},hasContent:function hasContent(){return has_content_default;},hasContentVirtual:function hasContentVirtual(){return has_content_virtual_default;},hasLangText:function hasLangText(){return _hasLangText;},idrefs:function idrefs(){return idrefs_default;},insertedIntoFocusOrder:function insertedIntoFocusOrder(){return inserted_into_focus_order_default;},isCurrentPageLink:function isCurrentPageLink(){return _isCurrentPageLink;},isFocusable:function isFocusable(){return _isFocusable;},isHTML5:function isHTML5(){return is_html5_default;},isHiddenForEveryone:function isHiddenForEveryone(){return _isHiddenForEveryone;},isHiddenWithCSS:function isHiddenWithCSS(){return is_hidden_with_css_default;},isInTabOrder:function isInTabOrder(){return _isInTabOrder;},isInTextBlock:function isInTextBlock(){return is_in_text_block_default;},isInert:function isInert(){return _isInert;},isModalOpen:function isModalOpen(){return is_modal_open_default;},isMultiline:function isMultiline(){return _isMultiline;},isNativelyFocusable:function isNativelyFocusable(){return is_natively_focusable_default;},isNode:function isNode(){return is_node_default;},isOffscreen:function isOffscreen(){return is_offscreen_default;},isOpaque:function isOpaque(){return is_opaque_default;},isSkipLink:function isSkipLink(){return _isSkipLink;},isVisible:function isVisible(){return is_visible_default;},isVisibleOnScreen:function isVisibleOnScreen(){return _isVisibleOnScreen;},isVisibleToScreenReaders:function isVisibleToScreenReaders(){return _isVisibleToScreenReaders;},isVisualContent:function isVisualContent(){return is_visual_content_default;},reduceToElementsBelowFloating:function reduceToElementsBelowFloating(){return reduce_to_elements_below_floating_default;},shadowElementsFromPoint:function shadowElementsFromPoint(){return shadow_elements_from_point_default;},urlPropsFromAttribute:function urlPropsFromAttribute(){return url_props_from_attribute_default;},visuallyContains:function visuallyContains(){return _visuallyContains;},visuallyOverlaps:function visuallyOverlaps(){return visually_overlaps_default;},visuallySort:function visuallySort(){return _visuallySort;}});function getRootNode(node){var doc=node.getRootNode&&node.getRootNode()||document;if(doc===node){doc=document;}return doc;}var get_root_node_default=getRootNode;var get_root_node_default2=get_root_node_default;function findElmsInContext(_ref10){var context=_ref10.context,value=_ref10.value,attr=_ref10.attr,_ref10$elm=_ref10.elm,elm=_ref10$elm===void 0?'':_ref10$elm;var root;var escapedValue=escape_selector_default(value);if(context.nodeType===9||context.nodeType===11){root=context;}else{root=get_root_node_default2(context);}return Array.from(root.querySelectorAll(elm+'['+attr+'='+escapedValue+']'));}var find_elms_in_context_default=findElmsInContext;function findUpVirtual(element,target){var parent;parent=element.actualNode;if(!element.shadowId&&typeof element.actualNode.closest==='function'){var match=element.actualNode.closest(target);if(match){return match;}return null;}do{parent=parent.assignedSlot?parent.assignedSlot:parent.parentNode;if(parent&&parent.nodeType===11){parent=parent.host;}}while(parent&&!element_matches_default(parent,target)&&parent!==document.documentElement);if(!parent){return null;}if(!element_matches_default(parent,target)){return null;}return parent;}var find_up_virtual_default=findUpVirtual;function findUp(element,target){return find_up_virtual_default(get_node_from_tree_default(element),target);}var find_up_default=findUp;function _rectsOverlap(rect1,rect2){return(rect1.left|0)<(rect2.right|0)&&(rect1.right|0)>(rect2.left|0)&&(rect1.top|0)<(rect2.bottom|0)&&(rect1.bottom|0)>(rect2.top|0);}var getOverflowHiddenAncestors=memoize_default(function getOverflowHiddenAncestorsMemoized(vNode){var ancestors=[];if(!vNode){return ancestors;}var overflow=vNode.getComputedStylePropertyValue('overflow');if(overflow==='hidden'){ancestors.push(vNode);}return ancestors.concat(getOverflowHiddenAncestors(vNode.parent));});var get_overflow_hidden_ancestors_default=getOverflowHiddenAncestors;var clipRegex=/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/;var clipPathRegex=/(\\w+)\\((\\d+)/;function nativelyHidden(vNode){return['style','script','noscript','template'].includes(vNode.props.nodeName);}function displayHidden(vNode){if(vNode.props.nodeName==='area'){return false;}return vNode.getComputedStylePropertyValue('display')==='none';}function visibilityHidden(vNode){var _ref11=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},isAncestor=_ref11.isAncestor;return!isAncestor&&['hidden','collapse'].includes(vNode.getComputedStylePropertyValue('visibility'));}function contentVisibiltyHidden(vNode){var _ref12=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},isAncestor=_ref12.isAncestor;return!!isAncestor&&vNode.getComputedStylePropertyValue('content-visibility')==='hidden';}function ariaHidden(vNode){return vNode.attr('aria-hidden')==='true';}function opacityHidden(vNode){return vNode.getComputedStylePropertyValue('opacity')==='0';}function scrollHidden(vNode){var scroll=get_scroll_default(vNode.actualNode);var elHeight=parseInt(vNode.getComputedStylePropertyValue('height'));var elWidth=parseInt(vNode.getComputedStylePropertyValue('width'));return!!scroll&&(elHeight===0||elWidth===0);}function overflowHidden(vNode){var _ref13=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},isAncestor=_ref13.isAncestor;if(isAncestor){return false;}var rect=vNode.boundingClientRect;var nodes=get_overflow_hidden_ancestors_default(vNode);if(!nodes.length){return false;}return nodes.some(function(node){var nodeRect=node.boundingClientRect;if(nodeRect.width<2||nodeRect.height<2){return true;}return!_rectsOverlap(rect,nodeRect);});}function clipHidden(vNode){var matchesClip=vNode.getComputedStylePropertyValue('clip').match(clipRegex);var matchesClipPath=vNode.getComputedStylePropertyValue('clip-path').match(clipPathRegex);if(matchesClip&&matchesClip.length===5){var position=vNode.getComputedStylePropertyValue('position');if(['fixed','absolute'].includes(position)){return matchesClip[3]-matchesClip[1]<=0&&matchesClip[2]-matchesClip[4]<=0;}}if(matchesClipPath){var type2=matchesClipPath[1];var value=parseInt(matchesClipPath[2],10);switch(type2){case'inset':return value>=50;case'circle':return value===0;default:}}return false;}function areaHidden(vNode,visibleFunction){var mapEl=closest_default(vNode,'map');if(!mapEl){return true;}var mapElName=mapEl.attr('name');if(!mapElName){return true;}var mapElRootNode=get_root_node_default(vNode.actualNode);if(!mapElRootNode||mapElRootNode.nodeType!==9){return true;}var refs=query_selector_all_default(axe._tree,'img[usemap=\"#'.concat(escape_selector_default(mapElName),'\"]'));if(!refs||!refs.length){return true;}return refs.some(function(ref){return!visibleFunction(ref);});}function detailsHidden(vNode){var _vNode$parent;if(((_vNode$parent=vNode.parent)===null||_vNode$parent===void 0?void 0:_vNode$parent.props.nodeName)!=='details'){return false;}if(vNode.props.nodeName==='summary'){var firstSummary=vNode.parent.children.find(function(node){return node.props.nodeName==='summary';});if(firstSummary===vNode){return false;}}return!vNode.parent.hasAttr('open');}var hiddenMethods=[displayHidden,visibilityHidden,contentVisibiltyHidden,detailsHidden];function _isHiddenForEveryone(vNode){var _ref14=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},skipAncestors=_ref14.skipAncestors,_ref14$isAncestor=_ref14.isAncestor,isAncestor=_ref14$isAncestor===void 0?false:_ref14$isAncestor;vNode=_nodeLookup(vNode).vNode;if(skipAncestors){return isHiddenSelf(vNode,isAncestor);}return isHiddenAncestors(vNode,isAncestor);}var isHiddenSelf=memoize_default(function isHiddenSelfMemoized(vNode,isAncestor){if(nativelyHidden(vNode)){return true;}if(!vNode.actualNode){return false;}if(hiddenMethods.some(function(method){return method(vNode,{isAncestor:isAncestor});})){return true;}if(!vNode.actualNode.isConnected){return true;}return false;});var isHiddenAncestors=memoize_default(function isHiddenAncestorsMemoized(vNode,isAncestor){if(isHiddenSelf(vNode,isAncestor)){return true;}if(!vNode.parent){return false;}return isHiddenAncestors(vNode.parent,true);});function getComposedParent(element){if(element.assignedSlot){return getComposedParent(element.assignedSlot);}else if(element.parentNode){var parentNode=element.parentNode;if(parentNode.nodeType===1){return parentNode;}else if(parentNode.host){return parentNode.host;}}return null;}var get_composed_parent_default=getComposedParent;function getScrollOffset(element){if(!element.nodeType&&element.document){element=element.document;}if(element.nodeType===9){var docElement=element.documentElement,body=element.body;return{left:docElement&&docElement.scrollLeft||body&&body.scrollLeft||0,top:docElement&&docElement.scrollTop||body&&body.scrollTop||0};}return{left:element.scrollLeft,top:element.scrollTop};}var get_scroll_offset_default=getScrollOffset;function getElementCoordinates(element){var scrollOffset=get_scroll_offset_default(document),xOffset=scrollOffset.left,yOffset=scrollOffset.top,coords=element.getBoundingClientRect();return{top:coords.top+yOffset,right:coords.right+xOffset,bottom:coords.bottom+yOffset,left:coords.left+xOffset,width:coords.right-coords.left,height:coords.bottom-coords.top};}var get_element_coordinates_default=getElementCoordinates;function getViewportSize(win){var doc=win.document;var docElement=doc.documentElement;if(win.innerWidth){return{width:win.innerWidth,height:win.innerHeight};}if(docElement){return{width:docElement.clientWidth,height:docElement.clientHeight};}var body=doc.body;return{width:body.clientWidth,height:body.clientHeight};}var get_viewport_size_default=getViewportSize;function noParentScrolled(element,offset){element=get_composed_parent_default(element);while(element&&element.nodeName.toLowerCase()!=='html'){if(element.scrollTop){offset+=element.scrollTop;if(offset>=0){return false;}}element=get_composed_parent_default(element);}return true;}function isOffscreen(element){var _ref15=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},isAncestor=_ref15.isAncestor;if(isAncestor){return false;}var _nodeLookup2=_nodeLookup(element),domNode=_nodeLookup2.domNode;if(!domNode){return void 0;}var leftBoundary;var docElement=document.documentElement;var styl=window.getComputedStyle(domNode);var dir=window.getComputedStyle(document.body||docElement).getPropertyValue('direction');var coords=get_element_coordinates_default(domNode);if(coords.bottom<0&&(noParentScrolled(domNode,coords.bottom)||styl.position==='absolute')){return true;}if(coords.left===0&&coords.right===0){return false;}if(dir==='ltr'){if(coords.right<=0){return true;}}else{leftBoundary=Math.max(docElement.scrollWidth,get_viewport_size_default(window).width);if(coords.left>=leftBoundary){return true;}}return false;}var is_offscreen_default=isOffscreen;var hiddenMethods2=[opacityHidden,scrollHidden,overflowHidden,clipHidden,is_offscreen_default];function _isVisibleOnScreen(vNode){vNode=_nodeLookup(vNode).vNode;return isVisibleOnScreenVirtual(vNode);}var isVisibleOnScreenVirtual=memoize_default(function isVisibleOnScreenMemoized(vNode,isAncestor){if(vNode.actualNode&&vNode.props.nodeName==='area'){return!areaHidden(vNode,isVisibleOnScreenVirtual);}if(_isHiddenForEveryone(vNode,{skipAncestors:true,isAncestor:isAncestor})){return false;}if(vNode.actualNode&&hiddenMethods2.some(function(method){return method(vNode,{isAncestor:isAncestor});})){return false;}if(!vNode.parent){return true;}return isVisibleOnScreenVirtual(vNode.parent,true);});function _getBoundingRect(rectA,rectB){var top=Math.min(rectA.top,rectB.top);var right=Math.max(rectA.right,rectB.right);var bottom=Math.max(rectA.bottom,rectB.bottom);var left=Math.min(rectA.left,rectB.left);return new window.DOMRect(left,top,right-left,bottom-top);}function _isPointInRect(_ref16,_ref17){var x=_ref16.x,y=_ref16.y;var top=_ref17.top,right=_ref17.right,bottom=_ref17.bottom,left=_ref17.left;return y>=top&&x<=right&&y<=bottom&&x>=left;}var math_exports={};__export(math_exports,{getBoundingRect:function getBoundingRect(){return _getBoundingRect;},getIntersectionRect:function getIntersectionRect(){return _getIntersectionRect;},getOffset:function getOffset(){return _getOffset;},getRectCenter:function getRectCenter(){return _getRectCenter;},hasVisualOverlap:function hasVisualOverlap(){return _hasVisualOverlap;},isPointInRect:function isPointInRect(){return _isPointInRect;},rectHasMinimumSize:function rectHasMinimumSize(){return _rectHasMinimumSize;},rectsOverlap:function rectsOverlap(){return _rectsOverlap;},splitRects:function splitRects(){return _splitRects;}});function _getIntersectionRect(rect1,rect2){var leftX=Math.max(rect1.left,rect2.left);var rightX=Math.min(rect1.right,rect2.right);var topY=Math.max(rect1.top,rect2.top);var bottomY=Math.min(rect1.bottom,rect2.bottom);if(leftX>=rightX||topY>=bottomY){return null;}return new window.DOMRect(leftX,topY,rightX-leftX,bottomY-topY);}function _getRectCenter(_ref18){var left=_ref18.left,top=_ref18.top,width=_ref18.width,height=_ref18.height;return new window.DOMPoint(left+width/2,top+height/2);}var roundingMargin=.05;function _rectHasMinimumSize(minSize,_ref19){var width=_ref19.width,height=_ref19.height;return width+roundingMargin>=minSize&&height+roundingMargin>=minSize;}function _getOffset(vTarget,vNeighbor){var minRadiusNeighbour=arguments.length>2&&arguments[2]!==undefined?arguments[2]:12;var targetRects=get_target_rects_default(vTarget);var neighborRects=get_target_rects_default(vNeighbor);if(!targetRects.length||!neighborRects.length){return 0;}var targetBoundingBox=targetRects.reduce(_getBoundingRect);var targetCenter=_getRectCenter(targetBoundingBox);var minDistance=Infinity;var _iterator2=_createForOfIteratorHelper(neighborRects),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var rect=_step2.value;if(_isPointInRect(targetCenter,rect)){return 0;}var closestPoint=getClosestPoint(targetCenter,rect);var distance2=pointDistance(targetCenter,closestPoint);minDistance=Math.min(minDistance,distance2);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var neighborTargetSize=get_target_size_default(vNeighbor);if(_rectHasMinimumSize(minRadiusNeighbour*2,neighborTargetSize)){return minDistance;}var neighborBoundingBox=neighborRects.reduce(_getBoundingRect);var neighborCenter=_getRectCenter(neighborBoundingBox);var centerDistance=pointDistance(targetCenter,neighborCenter)-minRadiusNeighbour;return Math.max(0,Math.min(minDistance,centerDistance));}function getClosestPoint(point,rect){var x;var y;if(point.x<rect.left){x=rect.left;}else if(point.x>rect.right){x=rect.right;}else{x=point.x;}if(point.y<rect.top){y=rect.top;}else if(point.y>rect.bottom){y=rect.bottom;}else{y=point.y;}return{x:x,y:y};}function pointDistance(pointA,pointB){return Math.hypot(pointA.x-pointB.x,pointA.y-pointB.y);}function _hasVisualOverlap(vNodeA,vNodeB){var rectA=vNodeA.boundingClientRect;var rectB=vNodeB.boundingClientRect;if(rectA.left>=rectB.right||rectA.right<=rectB.left||rectA.top>=rectB.bottom||rectA.bottom<=rectB.top){return false;}return _visuallySort(vNodeA,vNodeB)>0;}function _splitRects(outerRect,overlapRects){var uniqueRects=[outerRect];var _iterator3=_createForOfIteratorHelper(overlapRects),_step3;try{var _loop3=function _loop3(){var overlapRect=_step3.value;uniqueRects=uniqueRects.reduce(function(rects,inputRect){return rects.concat(splitRect(inputRect,overlapRect));},[]);};for(_iterator3.s();!(_step3=_iterator3.n()).done;){_loop3();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return uniqueRects;}function splitRect(inputRect,clipRect){var top=inputRect.top,left=inputRect.left,bottom=inputRect.bottom,right=inputRect.right;var yAligned=top<clipRect.bottom&&bottom>clipRect.top;var xAligned=left<clipRect.right&&right>clipRect.left;var rects=[];if(between(clipRect.top,top,bottom)&&xAligned){rects.push({top:top,left:left,bottom:clipRect.top,right:right});}if(between(clipRect.right,left,right)&&yAligned){rects.push({top:top,left:clipRect.right,bottom:bottom,right:right});}if(between(clipRect.bottom,top,bottom)&&xAligned){rects.push({top:clipRect.bottom,right:right,bottom:bottom,left:left});}if(between(clipRect.left,left,right)&&yAligned){rects.push({top:top,left:left,bottom:bottom,right:clipRect.left});}if(rects.length===0){if(isEnclosedRect(inputRect,clipRect)){return[];}rects.push(inputRect);}return rects.map(computeRect);}var between=function between(num,min,max2){return num>min&&num<max2;};function computeRect(baseRect){return new window.DOMRect(baseRect.left,baseRect.top,baseRect.right-baseRect.left,baseRect.bottom-baseRect.top);}function isEnclosedRect(rectA,rectB){return rectA.top>=rectB.top&&rectA.left>=rectB.left&&rectA.bottom<=rectB.bottom&&rectA.right<=rectB.right;}var ROOT_LEVEL=0;var DEFAULT_LEVEL=.1;var FLOAT_LEVEL=.2;var POSITION_LEVEL=.3;var nodeIndex=0;function _createGrid(){var root=arguments.length>0&&arguments[0]!==undefined?arguments[0]:document.body;var rootGrid=arguments.length>1?arguments[1]:undefined;var parentVNode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(cache_default.get('gridCreated')&&!parentVNode){return constants_default.gridSize;}cache_default.set('gridCreated',true);if(!parentVNode){var _rootGrid;var vNode=get_node_from_tree_default(document.documentElement);if(!vNode){vNode=new virtual_node_default(document.documentElement);}nodeIndex=0;vNode._stackingOrder=[createStackingContext(ROOT_LEVEL,nodeIndex++,null)];(_rootGrid=rootGrid)!==null&&_rootGrid!==void 0?_rootGrid:rootGrid=new Grid();addNodeToGrid(rootGrid,vNode);if(get_scroll_default(vNode.actualNode)){var subGrid=new Grid(vNode);vNode._subGrid=subGrid;}}var treeWalker=document.createTreeWalker(root,window.NodeFilter.SHOW_ELEMENT,null,false);var node=parentVNode?treeWalker.nextNode():treeWalker.currentNode;while(node){var _vNode=get_node_from_tree_default(node);if(_vNode&&_vNode.parent){parentVNode=_vNode.parent;}else if(node.assignedSlot){parentVNode=get_node_from_tree_default(node.assignedSlot);}else if(node.parentElement){parentVNode=get_node_from_tree_default(node.parentElement);}else if(node.parentNode&&get_node_from_tree_default(node.parentNode)){parentVNode=get_node_from_tree_default(node.parentNode);}if(!_vNode){_vNode=new axe.VirtualNode(node,parentVNode);}_vNode._stackingOrder=createStackingOrder(_vNode,parentVNode,nodeIndex++);var scrollRegionParent=findScrollRegionParent(_vNode,parentVNode);var grid=scrollRegionParent?scrollRegionParent._subGrid:rootGrid;if(get_scroll_default(_vNode.actualNode)){var _subGrid=new Grid(_vNode);_vNode._subGrid=_subGrid;}var rect=_vNode.boundingClientRect;if(rect.width!==0&&rect.height!==0&&_isVisibleOnScreen(node)){addNodeToGrid(grid,_vNode);}if(is_shadow_root_default(node)){_createGrid(node.shadowRoot,grid,_vNode);}node=treeWalker.nextNode();}return constants_default.gridSize;}function isStackingContext(vNode,parentVNode){var position=vNode.getComputedStylePropertyValue('position');var zIndex=vNode.getComputedStylePropertyValue('z-index');if(position==='fixed'||position==='sticky'){return true;}if(zIndex!=='auto'&&position!=='static'){return true;}if(vNode.getComputedStylePropertyValue('opacity')!=='1'){return true;}var transform=vNode.getComputedStylePropertyValue('-webkit-transform')||vNode.getComputedStylePropertyValue('-ms-transform')||vNode.getComputedStylePropertyValue('transform')||'none';if(transform!=='none'){return true;}var mixBlendMode=vNode.getComputedStylePropertyValue('mix-blend-mode');if(mixBlendMode&&mixBlendMode!=='normal'){return true;}var filter=vNode.getComputedStylePropertyValue('filter');if(filter&&filter!=='none'){return true;}var perspective=vNode.getComputedStylePropertyValue('perspective');if(perspective&&perspective!=='none'){return true;}var clipPath=vNode.getComputedStylePropertyValue('clip-path');if(clipPath&&clipPath!=='none'){return true;}var mask=vNode.getComputedStylePropertyValue('-webkit-mask')||vNode.getComputedStylePropertyValue('mask')||'none';if(mask!=='none'){return true;}var maskImage=vNode.getComputedStylePropertyValue('-webkit-mask-image')||vNode.getComputedStylePropertyValue('mask-image')||'none';if(maskImage!=='none'){return true;}var maskBorder=vNode.getComputedStylePropertyValue('-webkit-mask-border')||vNode.getComputedStylePropertyValue('mask-border')||'none';if(maskBorder!=='none'){return true;}if(vNode.getComputedStylePropertyValue('isolation')==='isolate'){return true;}var willChange=vNode.getComputedStylePropertyValue('will-change');if(willChange==='transform'||willChange==='opacity'){return true;}if(vNode.getComputedStylePropertyValue('-webkit-overflow-scrolling')==='touch'){return true;}var contain=vNode.getComputedStylePropertyValue('contain');if(['layout','paint','strict','content'].includes(contain)){return true;}if(zIndex!=='auto'&&isFlexOrGridContainer(parentVNode)){return true;}return false;}function isFlexOrGridContainer(vNode){if(!vNode){return false;}var display2=vNode.getComputedStylePropertyValue('display');return['flex','inline-flex','grid','inline-grid'].includes(display2);}function createStackingOrder(vNode,parentVNode,treeOrder){var stackingOrder=parentVNode._stackingOrder.slice();if(isStackingContext(vNode,parentVNode)){var index=stackingOrder.findIndex(function(_ref20){var stackLevel2=_ref20.stackLevel;return[ROOT_LEVEL,FLOAT_LEVEL,POSITION_LEVEL].includes(stackLevel2);});if(index!==-1){stackingOrder.splice(index,stackingOrder.length-index);}}var stackLevel=getStackLevel(vNode,parentVNode);if(stackLevel!==null){stackingOrder.push(createStackingContext(stackLevel,treeOrder,vNode));}return stackingOrder;}function createStackingContext(stackLevel,treeOrder,vNode){return{stackLevel:stackLevel,treeOrder:treeOrder,vNode:vNode};}function getStackLevel(vNode,parentVNode){var zIndex=getRealZIndex(vNode,parentVNode);if(!['auto','0'].includes(zIndex)){return parseInt(zIndex);}if(vNode.getComputedStylePropertyValue('position')!=='static'){return POSITION_LEVEL;}if(vNode.getComputedStylePropertyValue('float')!=='none'){return FLOAT_LEVEL;}if(isStackingContext(vNode,parentVNode)){return DEFAULT_LEVEL;}return null;}function getRealZIndex(vNode,parentVNode){var position=vNode.getComputedStylePropertyValue('position');if(position==='static'&&!isFlexOrGridContainer(parentVNode)){return'auto';}return vNode.getComputedStylePropertyValue('z-index');}function findScrollRegionParent(vNode,parentVNode){var scrollRegionParent=null;var checkedNodes=[vNode];while(parentVNode){if(get_scroll_default(parentVNode.actualNode)){scrollRegionParent=parentVNode;break;}if(parentVNode._scrollRegionParent){scrollRegionParent=parentVNode._scrollRegionParent;break;}checkedNodes.push(parentVNode);parentVNode=get_node_from_tree_default(parentVNode.actualNode.parentElement||parentVNode.actualNode.parentNode);}checkedNodes.forEach(function(virtualNode){return virtualNode._scrollRegionParent=scrollRegionParent;});return scrollRegionParent;}function addNodeToGrid(grid,vNode){var overflowHiddenNodes=get_overflow_hidden_ancestors_default(vNode);vNode.clientRects.forEach(function(clientRect){var _vNode$_grid;var visibleRect=overflowHiddenNodes.reduce(function(rect,overflowNode){return rect&&_getIntersectionRect(rect,overflowNode.boundingClientRect);},clientRect);if(!visibleRect){return;}(_vNode$_grid=vNode._grid)!==null&&_vNode$_grid!==void 0?_vNode$_grid:vNode._grid=grid;var gridRect=grid.getGridPositionOfRect(visibleRect);grid.loopGridPosition(gridRect,function(gridCell){if(!gridCell.includes(vNode)){gridCell.push(vNode);}});});}var Grid=function(){function Grid(){var container=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,Grid);this.container=container;this.cells=[];}_createClass(Grid,[{key:'toGridIndex',value:function toGridIndex(num){return Math.floor(num/constants_default.gridSize);}},{key:'getCellFromPoint',value:function getCellFromPoint(_ref21){var _this$cells,_row;var x=_ref21.x,y=_ref21.y;assert_default(this.boundaries,'Grid does not have cells added');var rowIndex=this.toGridIndex(y);var colIndex=this.toGridIndex(x);assert_default(_isPointInRect({y:rowIndex,x:colIndex},this.boundaries),'Element midpoint exceeds the grid bounds');var row=(_this$cells=this.cells[rowIndex-this.cells._negativeIndex])!==null&&_this$cells!==void 0?_this$cells:[];return(_row=row[colIndex-row._negativeIndex])!==null&&_row!==void 0?_row:[];}},{key:'loopGridPosition',value:function loopGridPosition(gridPosition,callback){var _gridPosition=gridPosition,left=_gridPosition.left,right=_gridPosition.right,top=_gridPosition.top,bottom=_gridPosition.bottom;if(this.boundaries){gridPosition=_getBoundingRect(this.boundaries,gridPosition);}this.boundaries=gridPosition;loopNegativeIndexMatrix(this.cells,top,bottom,function(gridRow,row){loopNegativeIndexMatrix(gridRow,left,right,function(gridCell,col){callback(gridCell,{row:row,col:col});});});}},{key:'getGridPositionOfRect',value:function getGridPositionOfRect(_ref22){var top=_ref22.top,right=_ref22.right,bottom=_ref22.bottom,left=_ref22.left;var margin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;top=this.toGridIndex(top-margin);right=this.toGridIndex(right+margin-1);bottom=this.toGridIndex(bottom+margin-1);left=this.toGridIndex(left-margin);return new window.DOMRect(left,top,right-left,bottom-top);}}]);return Grid;}();function loopNegativeIndexMatrix(matrix,start,end,callback){var _matrix$_negativeInde;(_matrix$_negativeInde=matrix._negativeIndex)!==null&&_matrix$_negativeInde!==void 0?_matrix$_negativeInde:matrix._negativeIndex=0;if(start<matrix._negativeIndex){for(var _i6=0;_i6<matrix._negativeIndex-start;_i6++){matrix.splice(0,0,[]);}matrix._negativeIndex=start;}var startOffset=start-matrix._negativeIndex;var endOffset=end-matrix._negativeIndex;for(var index=startOffset;index<=endOffset;index++){var _index,_matrix$_index;(_matrix$_index=matrix[_index=index])!==null&&_matrix$_index!==void 0?_matrix$_index:matrix[_index]=[];callback(matrix[index],index+matrix._negativeIndex);}}function _findNearbyElms(vNode){var _vNode$_grid2,_vNode$_grid2$cells;var margin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_createGrid();if(!((_vNode$_grid2=vNode._grid)!==null&&_vNode$_grid2!==void 0&&(_vNode$_grid2$cells=_vNode$_grid2.cells)!==null&&_vNode$_grid2$cells!==void 0&&_vNode$_grid2$cells.length)){return[];}var rect=vNode.boundingClientRect;var grid=vNode._grid;var selfIsFixed=hasFixedPosition(vNode);var gridPosition=grid.getGridPositionOfRect(rect,margin);var neighbors=[];grid.loopGridPosition(gridPosition,function(vNeighbors){var _iterator4=_createForOfIteratorHelper(vNeighbors),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var vNeighbor=_step4.value;if(vNeighbor&&vNeighbor!==vNode&&!neighbors.includes(vNeighbor)&&selfIsFixed===hasFixedPosition(vNeighbor)){neighbors.push(vNeighbor);}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}});return neighbors;}var hasFixedPosition=memoize_default(function(vNode){if(!vNode){return false;}if(vNode.getComputedStylePropertyValue('position')==='fixed'){return true;}return hasFixedPosition(vNode.parent);});var getModalDialog=memoize_default(function getModalDialogMemoized(){var _dialogs$find;if(!axe._tree){return null;}var dialogs=query_selector_all_filter_default(axe._tree[0],'dialog[open]',function(vNode){var rect=vNode.boundingClientRect;var stack=document.elementsFromPoint(rect.left+1,rect.top+1);return stack.includes(vNode.actualNode)&&_isVisibleOnScreen(vNode);});if(!dialogs.length){return null;}var modalDialog=dialogs.find(function(dialog){var rect=dialog.boundingClientRect;var stack=document.elementsFromPoint(rect.left-10,rect.top-10);return stack.includes(dialog.actualNode);});if(modalDialog){return modalDialog;}return(_dialogs$find=dialogs.find(function(dialog){var _getNodeFromGrid;var _ref23=(_getNodeFromGrid=getNodeFromGrid(dialog))!==null&&_getNodeFromGrid!==void 0?_getNodeFromGrid:{},vNode=_ref23.vNode,rect=_ref23.rect;if(!vNode){return false;}var stack=document.elementsFromPoint(rect.left+1,rect.top+1);return!stack.includes(vNode.actualNode);}))!==null&&_dialogs$find!==void 0?_dialogs$find:null;});var get_modal_dialog_default=getModalDialog;function getNodeFromGrid(dialog){_createGrid();var grid=axe._tree[0]._grid;var viewRect=new window.DOMRect(0,0,window.innerWidth,window.innerHeight);if(!grid){return;}for(var row=0;row<grid.cells.length;row++){var cols=grid.cells[row];if(!cols){continue;}for(var col=0;col<cols.length;col++){var cells=cols[col];if(!cells){continue;}for(var _i7=0;_i7<cells.length;_i7++){var vNode=cells[_i7];var rect=vNode.boundingClientRect;var intersection=_getIntersectionRect(rect,viewRect);if(vNode.props.nodeName!=='html'&&vNode!==dialog&&vNode.getComputedStylePropertyValue('pointer-events')!=='none'&&intersection){return{vNode:vNode,rect:intersection};}}}}}function _isInert(vNode){var _ref24=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},skipAncestors=_ref24.skipAncestors,isAncestor=_ref24.isAncestor;if(skipAncestors){return isInertSelf(vNode,isAncestor);}return isInertAncestors(vNode,isAncestor);}var isInertSelf=memoize_default(function isInertSelfMemoized(vNode,isAncestor){if(vNode.hasAttr('inert')){return true;}if(!isAncestor&&vNode.actualNode){var modalDialog=get_modal_dialog_default();if(modalDialog&&!_contains(modalDialog,vNode)){return true;}}return false;});var isInertAncestors=memoize_default(function isInertAncestorsMemoized(vNode,isAncestor){if(isInertSelf(vNode,isAncestor)){return true;}if(!vNode.parent){return false;}return isInertAncestors(vNode.parent,true);});var allowedDisabledNodeNames=['button','command','fieldset','keygen','optgroup','option','select','textarea','input'];function isDisabledAttrAllowed(nodeName2){return allowedDisabledNodeNames.includes(nodeName2);}function focusDisabled(el){var _nodeLookup3=_nodeLookup(el),vNode=_nodeLookup3.vNode;if(isDisabledAttrAllowed(vNode.props.nodeName)&&vNode.hasAttr('disabled')||_isInert(vNode)){return true;}var parentNode=vNode.parent;var ancestors=[];var fieldsetDisabled=false;while(parentNode&&parentNode.shadowId===vNode.shadowId&&!fieldsetDisabled){ancestors.push(parentNode);if(parentNode.props.nodeName==='legend'){break;}if(parentNode._inDisabledFieldset!==void 0){fieldsetDisabled=parentNode._inDisabledFieldset;break;}if(parentNode.props.nodeName==='fieldset'&&parentNode.hasAttr('disabled')){fieldsetDisabled=true;}parentNode=parentNode.parent;}ancestors.forEach(function(ancestor){return ancestor._inDisabledFieldset=fieldsetDisabled;});if(fieldsetDisabled){return true;}if(vNode.props.nodeName!=='area'){if(!vNode.actualNode){return false;}return _isHiddenForEveryone(vNode);}return false;}var focus_disabled_default=focusDisabled;var angularSkipLinkRegex=/^\\/\\#/;var angularRouterLinkRegex=/^#[!/]/;function _isCurrentPageLink(anchor){var _window$location;var href=anchor.getAttribute('href');if(!href||href==='#'){return false;}if(angularSkipLinkRegex.test(href)){return true;}var hash=anchor.hash,protocol=anchor.protocol,hostname=anchor.hostname,port=anchor.port,pathname=anchor.pathname;if(angularRouterLinkRegex.test(hash)){return false;}if(href.charAt(0)==='#'){return true;}if(typeof((_window$location=window.location)===null||_window$location===void 0?void 0:_window$location.origin)!=='string'||window.location.origin.indexOf('://')===-1){return null;}var currentPageUrl=window.location.origin+window.location.pathname;var url;if(!hostname){url=window.location.origin;}else{url=''.concat(protocol,'//').concat(hostname).concat(port?':'.concat(port):'');}if(!pathname){url+=window.location.pathname;}else{url+=(pathname[0]!=='/'?'/':'')+pathname;}return url===currentPageUrl;}function getElementByReference(node,attr){var fragment=node.getAttribute(attr);if(!fragment){return null;}if(attr==='href'&&!_isCurrentPageLink(node)){return null;}if(fragment.indexOf('#')!==-1){fragment=decodeURIComponent(fragment.substr(fragment.indexOf('#')+1));}var candidate=document.getElementById(fragment);if(candidate){return candidate;}candidate=document.getElementsByName(fragment);if(candidate.length){return candidate[0];}return null;}var get_element_by_reference_default=getElementByReference;function _visuallySort(a2,b2){_createGrid();var length=Math.max(a2._stackingOrder.length,b2._stackingOrder.length);for(var _i8=0;_i8<length;_i8++){if(typeof b2._stackingOrder[_i8]==='undefined'){return-1;}else if(typeof a2._stackingOrder[_i8]==='undefined'){return 1;}if(b2._stackingOrder[_i8].stackLevel>a2._stackingOrder[_i8].stackLevel){return 1;}if(b2._stackingOrder[_i8].stackLevel<a2._stackingOrder[_i8].stackLevel){return-1;}if(b2._stackingOrder[_i8].treeOrder!==a2._stackingOrder[_i8].treeOrder){return b2._stackingOrder[_i8].treeOrder-a2._stackingOrder[_i8].treeOrder;}}var aNode=a2.actualNode;var bNode=b2.actualNode;if(aNode.getRootNode&&aNode.getRootNode()!==bNode.getRootNode()){var boundaries=[];while(aNode){boundaries.push({root:aNode.getRootNode(),node:aNode});aNode=aNode.getRootNode().host;}while(bNode&&!boundaries.find(function(boundary){return boundary.root===bNode.getRootNode();})){bNode=bNode.getRootNode().host;}aNode=boundaries.find(function(boundary){return boundary.root===bNode.getRootNode();}).node;if(aNode===bNode){return a2.actualNode.getRootNode()!==aNode.getRootNode()?-1:1;}}var _window$Node=window.Node,DOCUMENT_POSITION_FOLLOWING=_window$Node.DOCUMENT_POSITION_FOLLOWING,DOCUMENT_POSITION_CONTAINS=_window$Node.DOCUMENT_POSITION_CONTAINS,DOCUMENT_POSITION_CONTAINED_BY=_window$Node.DOCUMENT_POSITION_CONTAINED_BY;var docPosition=aNode.compareDocumentPosition(bNode);var DOMOrder=docPosition&DOCUMENT_POSITION_FOLLOWING?1:-1;var isDescendant=docPosition&DOCUMENT_POSITION_CONTAINS||docPosition&DOCUMENT_POSITION_CONTAINED_BY;var aPosition=getPositionOrder(a2);var bPosition=getPositionOrder(b2);if(aPosition===bPosition||isDescendant){return DOMOrder;}return bPosition-aPosition;}function getPositionOrder(vNode){if(vNode.getComputedStylePropertyValue('display').indexOf('inline')!==-1){return 2;}if(isFloated(vNode)){return 1;}return 0;}function isFloated(vNode){if(!vNode){return false;}if(vNode._isFloated!==void 0){return vNode._isFloated;}var floatStyle=vNode.getComputedStylePropertyValue('float');if(floatStyle!=='none'){vNode._isFloated=true;return true;}var floated=isFloated(vNode.parent);vNode._isFloated=floated;return floated;}function getRectStack(grid,rect){var recursed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var center=_getRectCenter(rect);var gridCell=grid.getCellFromPoint(center)||[];var floorX=Math.floor(center.x);var floorY=Math.floor(center.y);var stack=gridCell.filter(function(gridCellNode){return gridCellNode.clientRects.some(function(clientRect){var rectX=clientRect.left;var rectY=clientRect.top;return floorX<Math.floor(rectX+clientRect.width)&&floorX>=Math.floor(rectX)&&floorY<Math.floor(rectY+clientRect.height)&&floorY>=Math.floor(rectY);});});var gridContainer=grid.container;if(gridContainer){stack=getRectStack(gridContainer._grid,gridContainer.boundingClientRect,true).concat(stack);}if(!recursed){stack=stack.sort(_visuallySort).map(function(vNode){return vNode.actualNode;}).concat(document.documentElement).filter(function(node,index,array){return array.indexOf(node)===index;});}return stack;}function getElementStack(node){_createGrid();var vNode=get_node_from_tree_default(node);var grid=vNode._grid;if(!grid){return[];}return getRectStack(grid,vNode.boundingClientRect);}var get_element_stack_default=getElementStack;function getTabbableElements(virtualNode){var nodeAndDescendents=query_selector_all_default(virtualNode,'*');var tabbableElements=nodeAndDescendents.filter(function(vNode){var isFocusable2=vNode.isFocusable;var tabIndex=vNode.actualNode.getAttribute('tabindex');tabIndex=tabIndex&&!isNaN(parseInt(tabIndex,10))?parseInt(tabIndex):null;return tabIndex?isFocusable2&&tabIndex>=0:isFocusable2;});return tabbableElements;}var get_tabbable_elements_default=getTabbableElements;function isNativelyFocusable(el){var _nodeLookup4=_nodeLookup(el),vNode=_nodeLookup4.vNode;if(!vNode||focus_disabled_default(vNode)){return false;}switch(vNode.props.nodeName){case'a':case'area':if(vNode.hasAttr('href')){return true;}break;case'input':return vNode.props.type!=='hidden';case'textarea':case'select':case'summary':case'button':return true;case'details':return!query_selector_all_default(vNode,'summary').length;}return false;}var is_natively_focusable_default=isNativelyFocusable;function _isFocusable(el){var _nodeLookup5=_nodeLookup(el),vNode=_nodeLookup5.vNode;if(vNode.props.nodeType!==1){return false;}if(focus_disabled_default(vNode)){return false;}else if(is_natively_focusable_default(vNode)){return true;}var tabindex=vNode.attr('tabindex');if(tabindex&&!isNaN(parseInt(tabindex,10))){return true;}return false;}function _isInTabOrder(el){var _nodeLookup6=_nodeLookup(el),vNode=_nodeLookup6.vNode;if(vNode.props.nodeType!==1){return false;}var tabindex=parseInt(vNode.attr('tabindex',10));if(tabindex<=-1){return false;}return _isFocusable(vNode);}var get_target_rects_default=memoize_default(getTargetRects);function getTargetRects(vNode){var nodeRect=vNode.boundingClientRect;var overlappingVNodes=_findNearbyElms(vNode).filter(function(vNeighbor){return _hasVisualOverlap(vNode,vNeighbor)&&vNeighbor.getComputedStylePropertyValue('pointer-events')!=='none'&&!isDescendantNotInTabOrder(vNode,vNeighbor);});if(!overlappingVNodes.length){return[nodeRect];}var obscuringRects=overlappingVNodes.map(function(_ref25){var rect=_ref25.boundingClientRect;return rect;});return _splitRects(nodeRect,obscuringRects);}function isDescendantNotInTabOrder(vAncestor,vNode){return vAncestor.actualNode.contains(vNode.actualNode)&&!_isInTabOrder(vNode);}var get_target_size_default=memoize_default(getTargetSize);function getTargetSize(vNode,minSize){var rects=get_target_rects_default(vNode);return getLargestRect(rects,minSize);}function getLargestRect(rects,minSize){return rects.reduce(function(rectA,rectB){var rectAisMinimum=_rectHasMinimumSize(minSize,rectA);var rectBisMinimum=_rectHasMinimumSize(minSize,rectB);if(rectAisMinimum!==rectBisMinimum){return rectAisMinimum?rectA:rectB;}var areaA=rectA.width*rectA.height;var areaB=rectB.width*rectB.height;return areaA>areaB?rectA:rectB;});}var text_exports={};__export(text_exports,{accessibleText:function accessibleText(){return accessible_text_default;},accessibleTextVirtual:function accessibleTextVirtual(){return _accessibleTextVirtual;},autocomplete:function autocomplete(){return _autocomplete;},formControlValue:function formControlValue(){return form_control_value_default;},formControlValueMethods:function formControlValueMethods(){return _formControlValueMethods;},hasUnicode:function hasUnicode(){return has_unicode_default;},isHumanInterpretable:function isHumanInterpretable(){return is_human_interpretable_default;},isIconLigature:function isIconLigature(){return _isIconLigature;},isValidAutocomplete:function isValidAutocomplete(){return is_valid_autocomplete_default;},label:function label(){return label_default;},labelText:function labelText(){return label_text_default;},labelVirtual:function labelVirtual(){return label_virtual_default2;},nativeElementType:function nativeElementType(){return native_element_type_default;},nativeTextAlternative:function nativeTextAlternative(){return _nativeTextAlternative;},nativeTextMethods:function nativeTextMethods(){return native_text_methods_default;},removeUnicode:function removeUnicode(){return remove_unicode_default;},sanitize:function sanitize(){return sanitize_default;},subtreeText:function subtreeText(){return subtree_text_default;},titleText:function titleText(){return title_text_default;},unsupported:function unsupported(){return unsupported_default;},visible:function visible(){return visible_default;},visibleTextNodes:function visibleTextNodes(){return visible_text_nodes_default;},visibleVirtual:function visibleVirtual(){return visible_virtual_default;}});function idrefs(node,attr){node=node.actualNode||node;try{var doc=get_root_node_default2(node);var result=[];var attrValue=node.getAttribute(attr);if(attrValue){attrValue=token_list_default(attrValue);for(var index=0;index<attrValue.length;index++){result.push(doc.getElementById(attrValue[index]));}}return result;}catch(e){throw new TypeError('Cannot resolve id references for non-DOM nodes');}}var idrefs_default=idrefs;function accessibleText(element,context){var virtualNode=get_node_from_tree_default(element);return _accessibleTextVirtual(virtualNode,context);}var accessible_text_default=accessibleText;function arialabelledbyText(element){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _nodeLookup7=_nodeLookup(element),vNode=_nodeLookup7.vNode;if((vNode===null||vNode===void 0?void 0:vNode.props.nodeType)!==1){return'';}if(vNode.props.nodeType!==1||context.inLabelledByContext||context.inControlContext||!vNode.attr('aria-labelledby')){return'';}var refs=idrefs_default(vNode,'aria-labelledby').filter(function(elm){return elm;});return refs.reduce(function(accessibleName,elm){var accessibleNameAdd=accessible_text_default(elm,_extends({inLabelledByContext:true,startNode:context.startNode||vNode},context));if(!accessibleName){return accessibleNameAdd;}else{return''.concat(accessibleName,' ').concat(accessibleNameAdd);}},'');}var arialabelledby_text_default=arialabelledbyText;function _arialabelText(element){var _nodeLookup8=_nodeLookup(element),vNode=_nodeLookup8.vNode;if((vNode===null||vNode===void 0?void 0:vNode.props.nodeType)!==1){return'';}return vNode.attr('aria-label')||'';}var ariaAttrs={'aria-activedescendant':{type:'idref',allowEmpty:true},'aria-atomic':{type:'boolean',global:true},'aria-autocomplete':{type:'nmtoken',values:['inline','list','both','none']},'aria-braillelabel':{type:'string',allowEmpty:true,global:true},'aria-brailleroledescription':{type:'string',allowEmpty:true,global:true},'aria-busy':{type:'boolean',global:true},'aria-checked':{type:'nmtoken',values:['false','mixed','true','undefined']},'aria-colcount':{type:'int',minValue:-1},'aria-colindex':{type:'int',minValue:1},'aria-colspan':{type:'int',minValue:1},'aria-controls':{type:'idrefs',allowEmpty:true,global:true},'aria-current':{type:'nmtoken',allowEmpty:true,values:['page','step','location','date','time','true','false'],global:true},'aria-describedby':{type:'idrefs',allowEmpty:true,global:true},'aria-description':{type:'string',allowEmpty:true,global:true},'aria-details':{type:'idref',allowEmpty:true,global:true},'aria-disabled':{type:'boolean',global:true},'aria-dropeffect':{type:'nmtokens',values:['copy','execute','link','move','none','popup'],global:true},'aria-errormessage':{type:'idref',allowEmpty:true,global:true},'aria-expanded':{type:'nmtoken',values:['true','false','undefined']},'aria-flowto':{type:'idrefs',allowEmpty:true,global:true},'aria-grabbed':{type:'nmtoken',values:['true','false','undefined'],global:true},'aria-haspopup':{type:'nmtoken',allowEmpty:true,values:['true','false','menu','listbox','tree','grid','dialog'],global:true},'aria-hidden':{type:'nmtoken',values:['true','false','undefined'],global:true},'aria-invalid':{type:'nmtoken',values:['grammar','false','spelling','true'],global:true},'aria-keyshortcuts':{type:'string',allowEmpty:true,global:true},'aria-label':{type:'string',allowEmpty:true,global:true},'aria-labelledby':{type:'idrefs',allowEmpty:true,global:true},'aria-level':{type:'int',minValue:1},'aria-live':{type:'nmtoken',values:['assertive','off','polite'],global:true},'aria-modal':{type:'boolean'},'aria-multiline':{type:'boolean'},'aria-multiselectable':{type:'boolean'},'aria-orientation':{type:'nmtoken',values:['horizontal','undefined','vertical']},'aria-owns':{type:'idrefs',allowEmpty:true,global:true},'aria-placeholder':{type:'string',allowEmpty:true},'aria-posinset':{type:'int',minValue:1},'aria-pressed':{type:'nmtoken',values:['false','mixed','true','undefined']},'aria-readonly':{type:'boolean'},'aria-relevant':{type:'nmtokens',values:['additions','all','removals','text'],global:true},'aria-required':{type:'boolean'},'aria-roledescription':{type:'string',allowEmpty:true,global:true},'aria-rowcount':{type:'int',minValue:-1},'aria-rowindex':{type:'int',minValue:1},'aria-rowspan':{type:'int',minValue:0},'aria-selected':{type:'nmtoken',values:['false','true','undefined']},'aria-setsize':{type:'int',minValue:-1},'aria-sort':{type:'nmtoken',values:['ascending','descending','none','other']},'aria-valuemax':{type:'decimal'},'aria-valuemin':{type:'decimal'},'aria-valuenow':{type:'decimal'},'aria-valuetext':{type:'string',allowEmpty:true}};var aria_attrs_default=ariaAttrs;var ariaRoles={alert:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['section']},alertdialog:{type:'widget',allowedAttrs:['aria-expanded','aria-modal'],superclassRole:['alert','dialog'],accessibleNameRequired:true},application:{type:'landmark',allowedAttrs:['aria-activedescendant','aria-expanded'],superclassRole:['structure'],accessibleNameRequired:true},article:{type:'structure',allowedAttrs:['aria-posinset','aria-setsize','aria-expanded'],superclassRole:['document']},banner:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},blockquote:{type:'structure',superclassRole:['section']},button:{type:'widget',allowedAttrs:['aria-expanded','aria-pressed'],superclassRole:['command'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},caption:{type:'structure',requiredContext:['figure','table','grid','treegrid'],superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},cell:{type:'structure',requiredContext:['row'],allowedAttrs:['aria-colindex','aria-colspan','aria-rowindex','aria-rowspan','aria-expanded'],superclassRole:['section'],nameFromContent:true},checkbox:{type:'widget',requiredAttrs:['aria-checked'],allowedAttrs:['aria-readonly','aria-expanded','aria-required'],superclassRole:['input'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},code:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},columnheader:{type:'structure',requiredContext:['row'],allowedAttrs:['aria-sort','aria-colindex','aria-colspan','aria-expanded','aria-readonly','aria-required','aria-rowindex','aria-rowspan','aria-selected'],superclassRole:['cell','gridcell','sectionhead'],accessibleNameRequired:false,nameFromContent:true},combobox:{type:'widget',requiredAttrs:['aria-expanded','aria-controls'],allowedAttrs:['aria-owns','aria-autocomplete','aria-readonly','aria-required','aria-activedescendant','aria-orientation'],superclassRole:['select'],accessibleNameRequired:true},command:{type:'abstract',superclassRole:['widget']},complementary:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},composite:{type:'abstract',superclassRole:['widget']},contentinfo:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},comment:{type:'structure',allowedAttrs:['aria-level','aria-posinset','aria-setsize'],superclassRole:['article']},definition:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section']},deletion:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},dialog:{type:'widget',allowedAttrs:['aria-expanded','aria-modal'],superclassRole:['window'],accessibleNameRequired:true},directory:{type:'structure',deprecated:true,allowedAttrs:['aria-expanded'],superclassRole:['list'],nameFromContent:true},document:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['structure']},emphasis:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},feed:{type:'structure',requiredOwned:['article'],allowedAttrs:['aria-expanded'],superclassRole:['list']},figure:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section'],nameFromContent:true},form:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},grid:{type:'composite',requiredOwned:['rowgroup','row'],allowedAttrs:['aria-level','aria-multiselectable','aria-readonly','aria-activedescendant','aria-colcount','aria-expanded','aria-rowcount'],superclassRole:['composite','table'],accessibleNameRequired:false},gridcell:{type:'widget',requiredContext:['row'],allowedAttrs:['aria-readonly','aria-required','aria-selected','aria-colindex','aria-colspan','aria-expanded','aria-rowindex','aria-rowspan'],superclassRole:['cell','widget'],nameFromContent:true},group:{type:'structure',allowedAttrs:['aria-activedescendant','aria-expanded'],superclassRole:['section']},heading:{type:'structure',requiredAttrs:['aria-level'],allowedAttrs:['aria-expanded'],superclassRole:['sectionhead'],accessibleNameRequired:false,nameFromContent:true},img:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section'],accessibleNameRequired:true,childrenPresentational:true},input:{type:'abstract',superclassRole:['widget']},insertion:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},landmark:{type:'abstract',superclassRole:['section']},link:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['command'],accessibleNameRequired:true,nameFromContent:true},list:{type:'structure',requiredOwned:['listitem'],allowedAttrs:['aria-expanded'],superclassRole:['section']},listbox:{type:'widget',requiredOwned:['group','option'],allowedAttrs:['aria-multiselectable','aria-readonly','aria-required','aria-activedescendant','aria-expanded','aria-orientation'],superclassRole:['select'],accessibleNameRequired:true},listitem:{type:'structure',requiredContext:['list'],allowedAttrs:['aria-level','aria-posinset','aria-setsize','aria-expanded'],superclassRole:['section'],nameFromContent:true},log:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['section']},main:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},marquee:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['section']},math:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section'],childrenPresentational:true},menu:{type:'composite',requiredOwned:['group','menuitemradio','menuitem','menuitemcheckbox','menu','separator'],allowedAttrs:['aria-activedescendant','aria-expanded','aria-orientation'],superclassRole:['select']},menubar:{type:'composite',requiredOwned:['group','menuitemradio','menuitem','menuitemcheckbox','menu','separator'],allowedAttrs:['aria-activedescendant','aria-expanded','aria-orientation'],superclassRole:['menu']},menuitem:{type:'widget',requiredContext:['menu','menubar','group'],allowedAttrs:['aria-posinset','aria-setsize','aria-expanded'],superclassRole:['command'],accessibleNameRequired:true,nameFromContent:true},menuitemcheckbox:{type:'widget',requiredContext:['menu','menubar','group'],requiredAttrs:['aria-checked'],allowedAttrs:['aria-expanded','aria-posinset','aria-readonly','aria-setsize'],superclassRole:['checkbox','menuitem'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},menuitemradio:{type:'widget',requiredContext:['menu','menubar','group'],requiredAttrs:['aria-checked'],allowedAttrs:['aria-expanded','aria-posinset','aria-readonly','aria-setsize'],superclassRole:['menuitemcheckbox','radio'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},meter:{type:'structure',requiredAttrs:['aria-valuenow'],allowedAttrs:['aria-valuemax','aria-valuemin','aria-valuetext'],superclassRole:['range'],accessibleNameRequired:true,childrenPresentational:true},mark:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},navigation:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},none:{type:'structure',superclassRole:['structure'],prohibitedAttrs:['aria-label','aria-labelledby']},note:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section']},option:{type:'widget',requiredContext:['group','listbox'],allowedAttrs:['aria-selected','aria-checked','aria-posinset','aria-setsize'],superclassRole:['input'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},paragraph:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},presentation:{type:'structure',superclassRole:['structure'],prohibitedAttrs:['aria-label','aria-labelledby']},progressbar:{type:'widget',allowedAttrs:['aria-expanded','aria-valuemax','aria-valuemin','aria-valuenow','aria-valuetext'],superclassRole:['range'],accessibleNameRequired:true,childrenPresentational:true},radio:{type:'widget',requiredAttrs:['aria-checked'],allowedAttrs:['aria-posinset','aria-setsize','aria-required'],superclassRole:['input'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},radiogroup:{type:'composite',allowedAttrs:['aria-readonly','aria-required','aria-activedescendant','aria-expanded','aria-orientation'],superclassRole:['select'],accessibleNameRequired:false},range:{type:'abstract',superclassRole:['widget']},region:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark'],accessibleNameRequired:false},roletype:{type:'abstract',superclassRole:[]},row:{type:'structure',requiredContext:['grid','rowgroup','table','treegrid'],requiredOwned:['cell','columnheader','gridcell','rowheader'],allowedAttrs:['aria-colindex','aria-level','aria-rowindex','aria-selected','aria-activedescendant','aria-expanded','aria-posinset','aria-setsize'],superclassRole:['group','widget'],nameFromContent:true},rowgroup:{type:'structure',requiredContext:['grid','table','treegrid'],requiredOwned:['row'],superclassRole:['structure'],nameFromContent:true},rowheader:{type:'structure',requiredContext:['row'],allowedAttrs:['aria-sort','aria-colindex','aria-colspan','aria-expanded','aria-readonly','aria-required','aria-rowindex','aria-rowspan','aria-selected'],superclassRole:['cell','gridcell','sectionhead'],accessibleNameRequired:false,nameFromContent:true},scrollbar:{type:'widget',requiredAttrs:['aria-valuenow'],allowedAttrs:['aria-controls','aria-orientation','aria-valuemax','aria-valuemin','aria-valuetext'],superclassRole:['range'],childrenPresentational:true},search:{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},searchbox:{type:'widget',allowedAttrs:['aria-activedescendant','aria-autocomplete','aria-multiline','aria-placeholder','aria-readonly','aria-required'],superclassRole:['textbox'],accessibleNameRequired:true},section:{type:'abstract',superclassRole:['structure'],nameFromContent:true},sectionhead:{type:'abstract',superclassRole:['structure'],nameFromContent:true},select:{type:'abstract',superclassRole:['composite','group']},separator:{type:'structure',requiredAttrs:['aria-valuenow'],allowedAttrs:['aria-valuemax','aria-valuemin','aria-orientation','aria-valuetext'],superclassRole:['structure','widget'],childrenPresentational:true},slider:{type:'widget',requiredAttrs:['aria-valuenow'],allowedAttrs:['aria-valuemax','aria-valuemin','aria-orientation','aria-readonly','aria-required','aria-valuetext'],superclassRole:['input','range'],accessibleNameRequired:true,childrenPresentational:true},spinbutton:{type:'widget',allowedAttrs:['aria-valuemax','aria-valuemin','aria-readonly','aria-required','aria-activedescendant','aria-valuetext','aria-valuenow'],superclassRole:['composite','input','range'],accessibleNameRequired:true},status:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['section']},strong:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},structure:{type:'abstract',superclassRole:['roletype']},subscript:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},superscript:{type:'structure',superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},switch:{type:'widget',requiredAttrs:['aria-checked'],allowedAttrs:['aria-expanded','aria-readonly','aria-required'],superclassRole:['checkbox'],accessibleNameRequired:true,nameFromContent:true,childrenPresentational:true},suggestion:{type:'structure',requiredOwned:['insertion','deletion'],superclassRole:['section'],prohibitedAttrs:['aria-label','aria-labelledby']},tab:{type:'widget',requiredContext:['tablist'],allowedAttrs:['aria-posinset','aria-selected','aria-setsize','aria-expanded'],superclassRole:['sectionhead','widget'],nameFromContent:true,childrenPresentational:true},table:{type:'structure',requiredOwned:['rowgroup','row'],allowedAttrs:['aria-colcount','aria-rowcount','aria-expanded'],superclassRole:['section'],accessibleNameRequired:false,nameFromContent:true},tablist:{type:'composite',requiredOwned:['tab'],allowedAttrs:['aria-level','aria-multiselectable','aria-orientation','aria-activedescendant','aria-expanded'],superclassRole:['composite']},tabpanel:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['section'],accessibleNameRequired:false},term:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section'],nameFromContent:true},text:{type:'structure',superclassRole:['section'],nameFromContent:true},textbox:{type:'widget',allowedAttrs:['aria-activedescendant','aria-autocomplete','aria-multiline','aria-placeholder','aria-readonly','aria-required'],superclassRole:['input'],accessibleNameRequired:true},time:{type:'structure',superclassRole:['section']},timer:{type:'widget',allowedAttrs:['aria-expanded'],superclassRole:['status']},toolbar:{type:'structure',allowedAttrs:['aria-orientation','aria-activedescendant','aria-expanded'],superclassRole:['group'],accessibleNameRequired:true},tooltip:{type:'structure',allowedAttrs:['aria-expanded'],superclassRole:['section'],nameFromContent:true},tree:{type:'composite',requiredOwned:['group','treeitem'],allowedAttrs:['aria-multiselectable','aria-required','aria-activedescendant','aria-expanded','aria-orientation'],superclassRole:['select'],accessibleNameRequired:false},treegrid:{type:'composite',requiredOwned:['rowgroup','row'],allowedAttrs:['aria-activedescendant','aria-colcount','aria-expanded','aria-level','aria-multiselectable','aria-orientation','aria-readonly','aria-required','aria-rowcount'],superclassRole:['grid','tree'],accessibleNameRequired:false},treeitem:{type:'widget',requiredContext:['group','tree'],allowedAttrs:['aria-checked','aria-expanded','aria-level','aria-posinset','aria-selected','aria-setsize'],superclassRole:['listitem','option'],accessibleNameRequired:true,nameFromContent:true},widget:{type:'abstract',superclassRole:['roletype']},window:{type:'abstract',superclassRole:['roletype']}};var aria_roles_default=ariaRoles;var dpubRoles={'doc-abstract':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-acknowledgments':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-afterword':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-appendix':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-backlink':{type:'link',allowedAttrs:['aria-expanded'],nameFromContent:true,superclassRole:['link']},'doc-biblioentry':{type:'listitem',allowedAttrs:['aria-expanded','aria-level','aria-posinset','aria-setsize'],superclassRole:['listitem'],deprecated:true},'doc-bibliography':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-biblioref':{type:'link',allowedAttrs:['aria-expanded'],nameFromContent:true,superclassRole:['link']},'doc-chapter':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-colophon':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-conclusion':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-cover':{type:'img',allowedAttrs:['aria-expanded'],superclassRole:['img']},'doc-credit':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-credits':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-dedication':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-endnote':{type:'listitem',allowedAttrs:['aria-expanded','aria-level','aria-posinset','aria-setsize'],superclassRole:['listitem'],deprecated:true},'doc-endnotes':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-epigraph':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-epilogue':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-errata':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-example':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-footnote':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-foreword':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-glossary':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-glossref':{type:'link',allowedAttrs:['aria-expanded'],nameFromContent:true,superclassRole:['link']},'doc-index':{type:'navigation',allowedAttrs:['aria-expanded'],superclassRole:['navigation']},'doc-introduction':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-noteref':{type:'link',allowedAttrs:['aria-expanded'],nameFromContent:true,superclassRole:['link']},'doc-notice':{type:'note',allowedAttrs:['aria-expanded'],superclassRole:['note']},'doc-pagebreak':{type:'separator',allowedAttrs:['aria-expanded','aria-orientation'],superclassRole:['separator'],childrenPresentational:true},'doc-pagelist':{type:'navigation',allowedAttrs:['aria-expanded'],superclassRole:['navigation']},'doc-part':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-preface':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-prologue':{type:'landmark',allowedAttrs:['aria-expanded'],superclassRole:['landmark']},'doc-pullquote':{type:'none',superclassRole:['none']},'doc-qna':{type:'section',allowedAttrs:['aria-expanded'],superclassRole:['section']},'doc-subtitle':{type:'sectionhead',allowedAttrs:['aria-expanded'],superclassRole:['sectionhead']},'doc-tip':{type:'note',allowedAttrs:['aria-expanded'],superclassRole:['note']},'doc-toc':{type:'navigation',allowedAttrs:['aria-expanded'],superclassRole:['navigation']}};var dpub_roles_default=dpubRoles;var graphicsRoles={'graphics-document':{type:'structure',superclassRole:['document'],accessibleNameRequired:true},'graphics-object':{type:'structure',superclassRole:['group'],nameFromContent:true},'graphics-symbol':{type:'structure',superclassRole:['img'],accessibleNameRequired:true,childrenPresentational:true}};var graphics_roles_default=graphicsRoles;var htmlElms={a:{variant:{href:{matches:'[href]',contentTypes:['interactive','phrasing','flow'],allowedRoles:['button','checkbox','menuitem','menuitemcheckbox','menuitemradio','option','radio','switch','tab','treeitem','doc-backlink','doc-biblioref','doc-glossref','doc-noteref'],namingMethods:['subtreeText']},default:{contentTypes:['phrasing','flow'],allowedRoles:true}}},abbr:{contentTypes:['phrasing','flow'],allowedRoles:true},address:{contentTypes:['flow'],allowedRoles:true},area:{variant:{href:{matches:'[href]',allowedRoles:false},default:{allowedRoles:['button','link']}},contentTypes:['phrasing','flow'],namingMethods:['altText']},article:{contentTypes:['sectioning','flow'],allowedRoles:['feed','presentation','none','document','application','main','region'],shadowRoot:true},aside:{contentTypes:['sectioning','flow'],allowedRoles:['feed','note','presentation','none','region','search','doc-dedication','doc-example','doc-footnote','doc-glossary','doc-pullquote','doc-tip']},audio:{variant:{controls:{matches:'[controls]',contentTypes:['interactive','embedded','phrasing','flow']},default:{contentTypes:['embedded','phrasing','flow']}},allowedRoles:['application'],chromiumRole:'Audio'},b:{contentTypes:['phrasing','flow'],allowedRoles:true},base:{allowedRoles:false,noAriaAttrs:true},bdi:{contentTypes:['phrasing','flow'],allowedRoles:true},bdo:{contentTypes:['phrasing','flow'],allowedRoles:true},blockquote:{contentTypes:['flow'],allowedRoles:true,shadowRoot:true},body:{allowedRoles:false,shadowRoot:true},br:{contentTypes:['phrasing','flow'],allowedRoles:['presentation','none'],namingMethods:['titleText','singleSpace']},button:{contentTypes:['interactive','phrasing','flow'],allowedRoles:['checkbox','combobox','link','menuitem','menuitemcheckbox','menuitemradio','option','radio','switch','tab'],namingMethods:['subtreeText']},canvas:{allowedRoles:true,contentTypes:['embedded','phrasing','flow'],chromiumRole:'Canvas'},caption:{allowedRoles:false},cite:{contentTypes:['phrasing','flow'],allowedRoles:true},code:{contentTypes:['phrasing','flow'],allowedRoles:true},col:{allowedRoles:false,noAriaAttrs:true},colgroup:{allowedRoles:false,noAriaAttrs:true},data:{contentTypes:['phrasing','flow'],allowedRoles:true},datalist:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true,implicitAttrs:{'aria-multiselectable':'false'}},dd:{allowedRoles:false},del:{contentTypes:['phrasing','flow'],allowedRoles:true},dfn:{contentTypes:['phrasing','flow'],allowedRoles:true},details:{contentTypes:['interactive','flow'],allowedRoles:false},dialog:{contentTypes:['flow'],allowedRoles:['alertdialog']},div:{contentTypes:['flow'],allowedRoles:true,shadowRoot:true},dl:{contentTypes:['flow'],allowedRoles:['group','list','presentation','none'],chromiumRole:'DescriptionList'},dt:{allowedRoles:['listitem']},em:{contentTypes:['phrasing','flow'],allowedRoles:true},embed:{contentTypes:['interactive','embedded','phrasing','flow'],allowedRoles:['application','document','img','presentation','none'],chromiumRole:'EmbeddedObject'},fieldset:{contentTypes:['flow'],allowedRoles:['none','presentation','radiogroup'],namingMethods:['fieldsetLegendText']},figcaption:{allowedRoles:['group','none','presentation']},figure:{contentTypes:['flow'],allowedRoles:true,namingMethods:['figureText','titleText']},footer:{contentTypes:['flow'],allowedRoles:['group','none','presentation','doc-footnote'],shadowRoot:true},form:{contentTypes:['flow'],allowedRoles:['search','none','presentation']},h1:{contentTypes:['heading','flow'],allowedRoles:['none','presentation','tab','doc-subtitle'],shadowRoot:true,implicitAttrs:{'aria-level':'1'}},h2:{contentTypes:['heading','flow'],allowedRoles:['none','presentation','tab','doc-subtitle'],shadowRoot:true,implicitAttrs:{'aria-level':'2'}},h3:{contentTypes:['heading','flow'],allowedRoles:['none','presentation','tab','doc-subtitle'],shadowRoot:true,implicitAttrs:{'aria-level':'3'}},h4:{contentTypes:['heading','flow'],allowedRoles:['none','presentation','tab','doc-subtitle'],shadowRoot:true,implicitAttrs:{'aria-level':'4'}},h5:{contentTypes:['heading','flow'],allowedRoles:['none','presentation','tab','doc-subtitle'],shadowRoot:true,implicitAttrs:{'aria-level':'5'}},h6:{contentTypes:['heading','flow'],allowedRoles:['none','presentation','tab','doc-subtitle'],shadowRoot:true,implicitAttrs:{'aria-level':'6'}},head:{allowedRoles:false,noAriaAttrs:true},header:{contentTypes:['flow'],allowedRoles:['group','none','presentation','doc-footnote'],shadowRoot:true},hgroup:{contentTypes:['heading','flow'],allowedRoles:true},hr:{contentTypes:['flow'],allowedRoles:['none','presentation','doc-pagebreak'],namingMethods:['titleText','singleSpace']},html:{allowedRoles:false,noAriaAttrs:true},i:{contentTypes:['phrasing','flow'],allowedRoles:true},iframe:{contentTypes:['interactive','embedded','phrasing','flow'],allowedRoles:['application','document','img','none','presentation'],chromiumRole:'Iframe'},img:{variant:{nonEmptyAlt:{matches:[{attributes:{alt:'/.+/'}},{hasAccessibleName:true}],allowedRoles:['button','checkbox','link','menuitem','menuitemcheckbox','menuitemradio','meter','option','progressbar','radio','scrollbar','separator','slider','switch','tab','treeitem','doc-cover']},usemap:{matches:'[usemap]',contentTypes:['interactive','embedded','flow']},default:{allowedRoles:['presentation','none'],contentTypes:['embedded','flow']}},namingMethods:['altText']},input:{variant:{button:{matches:{properties:{type:'button'}},allowedRoles:['checkbox','combobox','link','menuitem','menuitemcheckbox','menuitemradio','option','radio','switch','tab']},buttonType:{matches:{properties:{type:['button','submit','reset']}},namingMethods:['valueText','titleText','buttonDefaultText']},checkboxPressed:{matches:{properties:{type:'checkbox'},attributes:{'aria-pressed':'/.*/'}},allowedRoles:['button','menuitemcheckbox','option','switch'],implicitAttrs:{'aria-checked':'false'}},checkbox:{matches:{properties:{type:'checkbox'},attributes:{'aria-pressed':null}},allowedRoles:['menuitemcheckbox','option','switch'],implicitAttrs:{'aria-checked':'false'}},noRoles:{matches:{properties:{type:['color','date','datetime-local','file','month','number','password','range','reset','submit','time','week']}},allowedRoles:false},hidden:{matches:{properties:{type:'hidden'}},contentTypes:['flow'],allowedRoles:false,noAriaAttrs:true},image:{matches:{properties:{type:'image'}},allowedRoles:['link','menuitem','menuitemcheckbox','menuitemradio','radio','switch'],namingMethods:['altText','valueText','labelText','titleText','buttonDefaultText']},radio:{matches:{properties:{type:'radio'}},allowedRoles:['menuitemradio'],implicitAttrs:{'aria-checked':'false'}},textWithList:{matches:{properties:{type:'text'},attributes:{list:'/.*/'}},allowedRoles:false},default:{contentTypes:['interactive','flow'],allowedRoles:['combobox','searchbox','spinbutton'],implicitAttrs:{'aria-valuenow':''},namingMethods:['labelText','placeholderText']}}},ins:{contentTypes:['phrasing','flow'],allowedRoles:true},kbd:{contentTypes:['phrasing','flow'],allowedRoles:true},label:{contentTypes:['interactive','phrasing','flow'],allowedRoles:false,chromiumRole:'Label'},legend:{allowedRoles:false},li:{allowedRoles:['menuitem','menuitemcheckbox','menuitemradio','option','none','presentation','radio','separator','tab','treeitem','doc-biblioentry','doc-endnote'],implicitAttrs:{'aria-setsize':'1','aria-posinset':'1'}},link:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},main:{contentTypes:['flow'],allowedRoles:false,shadowRoot:true},map:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},math:{contentTypes:['embedded','phrasing','flow'],allowedRoles:false},mark:{contentTypes:['phrasing','flow'],allowedRoles:true},menu:{contentTypes:['flow'],allowedRoles:['directory','group','listbox','menu','menubar','none','presentation','radiogroup','tablist','toolbar','tree']},meta:{variant:{itemprop:{matches:'[itemprop]',contentTypes:['phrasing','flow']}},allowedRoles:false,noAriaAttrs:true},meter:{contentTypes:['phrasing','flow'],allowedRoles:false,chromiumRole:'progressbar'},nav:{contentTypes:['sectioning','flow'],allowedRoles:['doc-index','doc-pagelist','doc-toc','menu','menubar','none','presentation','tablist'],shadowRoot:true},noscript:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},object:{variant:{usemap:{matches:'[usemap]',contentTypes:['interactive','embedded','phrasing','flow']},default:{contentTypes:['embedded','phrasing','flow']}},allowedRoles:['application','document','img'],chromiumRole:'PluginObject'},ol:{contentTypes:['flow'],allowedRoles:['directory','group','listbox','menu','menubar','none','presentation','radiogroup','tablist','toolbar','tree']},optgroup:{allowedRoles:false},option:{allowedRoles:false,implicitAttrs:{'aria-selected':'false'}},output:{contentTypes:['phrasing','flow'],allowedRoles:true,namingMethods:['subtreeText']},p:{contentTypes:['flow'],allowedRoles:true,shadowRoot:true},param:{allowedRoles:false,noAriaAttrs:true},picture:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},pre:{contentTypes:['flow'],allowedRoles:true},progress:{contentTypes:['phrasing','flow'],allowedRoles:false,implicitAttrs:{'aria-valuemax':'100','aria-valuemin':'0','aria-valuenow':'0'}},q:{contentTypes:['phrasing','flow'],allowedRoles:true},rp:{allowedRoles:true},rt:{allowedRoles:true},ruby:{contentTypes:['phrasing','flow'],allowedRoles:true},s:{contentTypes:['phrasing','flow'],allowedRoles:true},samp:{contentTypes:['phrasing','flow'],allowedRoles:true},script:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},search:{contentTypes:['flow'],allowedRoles:['form','group','none','presentation','region','search']},section:{contentTypes:['sectioning','flow'],allowedRoles:['alert','alertdialog','application','banner','complementary','contentinfo','dialog','document','feed','group','log','main','marquee','navigation','none','note','presentation','search','status','tabpanel','doc-abstract','doc-acknowledgments','doc-afterword','doc-appendix','doc-bibliography','doc-chapter','doc-colophon','doc-conclusion','doc-credit','doc-credits','doc-dedication','doc-endnotes','doc-epigraph','doc-epilogue','doc-errata','doc-example','doc-foreword','doc-glossary','doc-index','doc-introduction','doc-notice','doc-pagelist','doc-part','doc-preface','doc-prologue','doc-pullquote','doc-qna','doc-toc'],shadowRoot:true},select:{variant:{combobox:{matches:{attributes:{multiple:null,size:[null,'1']}},allowedRoles:['menu']},default:{allowedRoles:false}},contentTypes:['interactive','phrasing','flow'],implicitAttrs:{'aria-valuenow':''},namingMethods:['labelText']},slot:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},small:{contentTypes:['phrasing','flow'],allowedRoles:true},source:{allowedRoles:false,noAriaAttrs:true},span:{contentTypes:['phrasing','flow'],allowedRoles:true,shadowRoot:true},strong:{contentTypes:['phrasing','flow'],allowedRoles:true},style:{allowedRoles:false,noAriaAttrs:true},svg:{contentTypes:['embedded','phrasing','flow'],allowedRoles:true,chromiumRole:'SVGRoot',namingMethods:['svgTitleText']},sub:{contentTypes:['phrasing','flow'],allowedRoles:true},summary:{allowedRoles:false,namingMethods:['subtreeText']},sup:{contentTypes:['phrasing','flow'],allowedRoles:true},table:{contentTypes:['flow'],allowedRoles:true,namingMethods:['tableCaptionText','tableSummaryText']},tbody:{allowedRoles:true},template:{contentTypes:['phrasing','flow'],allowedRoles:false,noAriaAttrs:true},textarea:{contentTypes:['interactive','phrasing','flow'],allowedRoles:false,implicitAttrs:{'aria-valuenow':'','aria-multiline':'true'},namingMethods:['labelText','placeholderText']},tfoot:{allowedRoles:true},thead:{allowedRoles:true},time:{contentTypes:['phrasing','flow'],allowedRoles:true},title:{allowedRoles:false,noAriaAttrs:true},td:{allowedRoles:true},th:{allowedRoles:true},tr:{allowedRoles:true},track:{allowedRoles:false,noAriaAttrs:true},u:{contentTypes:['phrasing','flow'],allowedRoles:true},ul:{contentTypes:['flow'],allowedRoles:['directory','group','listbox','menu','menubar','none','presentation','radiogroup','tablist','toolbar','tree']},var:{contentTypes:['phrasing','flow'],allowedRoles:true},video:{variant:{controls:{matches:'[controls]',contentTypes:['interactive','embedded','phrasing','flow']},default:{contentTypes:['embedded','phrasing','flow']}},allowedRoles:['application'],chromiumRole:'video'},wbr:{contentTypes:['phrasing','flow'],allowedRoles:['presentation','none']}};var html_elms_default=htmlElms;var cssColors={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};var css_colors_default=cssColors;var originals={ariaAttrs:aria_attrs_default,ariaRoles:_extends({},aria_roles_default,dpub_roles_default,graphics_roles_default),htmlElms:html_elms_default,cssColors:css_colors_default};var standards=_extends({},originals);function configureStandards(config){Object.keys(standards).forEach(function(propName){if(config[propName]){standards[propName]=deep_merge_default(standards[propName],config[propName]);}});}function resetStandards(){Object.keys(standards).forEach(function(propName){standards[propName]=originals[propName];});}var standards_default=standards;function isUnsupportedRole(role){var roleDefinition=standards_default.ariaRoles[role];return roleDefinition?!!roleDefinition.unsupported:false;}var is_unsupported_role_default=isUnsupportedRole;function isValidRole(role){var _ref26=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},allowAbstract=_ref26.allowAbstract,_ref26$flagUnsupporte=_ref26.flagUnsupported,flagUnsupported=_ref26$flagUnsupporte===void 0?false:_ref26$flagUnsupporte;var roleDefinition=standards_default.ariaRoles[role];var isRoleUnsupported=is_unsupported_role_default(role);if(!roleDefinition||flagUnsupported&&isRoleUnsupported){return false;}return allowAbstract?true:roleDefinition.type!=='abstract';}var is_valid_role_default=isValidRole;function getExplicitRole(vNode){var _ref27=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},fallback=_ref27.fallback,abstracts=_ref27.abstracts,dpub=_ref27.dpub;vNode=vNode instanceof abstract_virtual_node_default?vNode:get_node_from_tree_default(vNode);if(vNode.props.nodeType!==1){return null;}var roleAttr=(vNode.attr('role')||'').trim().toLowerCase();var roleList=fallback?token_list_default(roleAttr):[roleAttr];var firstValidRole=roleList.find(function(role){if(!dpub&&role.substr(0,4)==='doc-'){return false;}return is_valid_role_default(role,{allowAbstract:abstracts});});return firstValidRole||null;}var get_explicit_role_default=getExplicitRole;function getElementsByContentType(type2){return Object.keys(standards_default.htmlElms).filter(function(nodeName2){var elm=standards_default.htmlElms[nodeName2];if(elm.contentTypes){return elm.contentTypes.includes(type2);}if(!elm.variant){return false;}if(elm.variant['default']&&elm.variant['default'].contentTypes){return elm.variant['default'].contentTypes.includes(type2);}return false;});}var get_elements_by_content_type_default=getElementsByContentType;function getGlobalAriaAttrs(){return cache_default.get('globalAriaAttrs',function(){return Object.keys(standards_default.ariaAttrs).filter(function(attrName){return standards_default.ariaAttrs[attrName].global;});});}var get_global_aria_attrs_default=getGlobalAriaAttrs;function toGrid(node){var table=[];var rows=node.rows;for(var i=0,rowLength=rows.length;i<rowLength;i++){var cells=rows[i].cells;table[i]=table[i]||[];var columnIndex=0;for(var j=0,cellLength=cells.length;j<cellLength;j++){for(var colSpan=0;colSpan<cells[j].colSpan;colSpan++){var rowspanAttr=cells[j].getAttribute('rowspan');var rowspanValue=parseInt(rowspanAttr)===0||cells[j].rowspan===0?rows.length:cells[j].rowSpan;for(var rowSpan=0;rowSpan<rowspanValue;rowSpan++){table[i+rowSpan]=table[i+rowSpan]||[];while(table[i+rowSpan][columnIndex]){columnIndex++;}table[i+rowSpan][columnIndex]=cells[j];}columnIndex++;}}}return table;}var to_grid_default=memoize_default(toGrid);function getCellPosition(cell,tableGrid){var rowIndex,index;if(!tableGrid){tableGrid=to_grid_default(find_up_default(cell,'table'));}for(rowIndex=0;rowIndex<tableGrid.length;rowIndex++){if(tableGrid[rowIndex]){index=tableGrid[rowIndex].indexOf(cell);if(index!==-1){return{x:index,y:rowIndex};}}}}var get_cell_position_default=memoize_default(getCellPosition);function _getScope(el){var _nodeLookup9=_nodeLookup(el),vNode=_nodeLookup9.vNode,cell=_nodeLookup9.domNode;var scope=vNode.attr('scope');var role=vNode.attr('role');if(!['td','th'].includes(vNode.props.nodeName)){throw new TypeError('Expected TD or TH element');}if(role==='columnheader'){return'col';}else if(role==='rowheader'){return'row';}else if(scope==='col'||scope==='row'){return scope;}else if(vNode.props.nodeName!=='th'){return false;}else if(!vNode.actualNode){return'auto';}var tableGrid=to_grid_default(find_up_default(cell,'table'));var pos=get_cell_position_default(cell,tableGrid);var headerRow=tableGrid[pos.y].every(function(node){return node.nodeName.toUpperCase()==='TH';});if(headerRow){return'col';}var headerCol=tableGrid.map(function(col){return col[pos.x];}).every(function(node){return node&&node.nodeName.toUpperCase()==='TH';});if(headerCol){return'row';}return'auto';}function isColumnHeader(element){return['col','auto'].indexOf(_getScope(element))!==-1;}var is_column_header_default=isColumnHeader;function isRowHeader(cell){return['row','auto'].includes(_getScope(cell));}var is_row_header_default=isRowHeader;function sanitize(str){if(!str){return'';}return str.replace(/\\r\\n/g,'\\n').replace(/\\u00A0/g,' ').replace(/[\\s]{2,}/g,' ').trim();}var sanitize_default=sanitize;var getSectioningElementSelector=function getSectioningElementSelector(){return cache_default.get('sectioningElementSelector',function(){return get_elements_by_content_type_default('sectioning').map(function(nodeName2){return''.concat(nodeName2,':not([role])');}).join(', ')+' , main:not([role]), [role=article], [role=complementary], [role=main], [role=navigation], [role=region]';});};function hasAccessibleName(vNode){var ariaLabelledby=sanitize_default(arialabelledby_text_default(vNode));var ariaLabel=sanitize_default(_arialabelText(vNode));return!!(ariaLabelledby||ariaLabel);}var implicitHtmlRoles={a:function a(vNode){return vNode.hasAttr('href')?'link':null;},area:function area(vNode){return vNode.hasAttr('href')?'link':null;},article:'article',aside:'complementary',body:'document',button:'button',datalist:'listbox',dd:'definition',dfn:'term',details:'group',dialog:'dialog',dt:'term',fieldset:'group',figure:'figure',footer:function footer(vNode){var sectioningElement=closest_default(vNode,getSectioningElementSelector());return!sectioningElement?'contentinfo':null;},form:function form(vNode){return hasAccessibleName(vNode)?'form':null;},h1:'heading',h2:'heading',h3:'heading',h4:'heading',h5:'heading',h6:'heading',header:function header(vNode){var sectioningElement=closest_default(vNode,getSectioningElementSelector());return!sectioningElement?'banner':null;},hr:'separator',img:function img(vNode){var emptyAlt=vNode.hasAttr('alt')&&!vNode.attr('alt');var hasGlobalAria=get_global_aria_attrs_default().find(function(attr){return vNode.hasAttr(attr);});return emptyAlt&&!hasGlobalAria&&!_isFocusable(vNode)?'presentation':'img';},input:function input(vNode){var suggestionsSourceElement;if(vNode.hasAttr('list')){var listElement=idrefs_default(vNode.actualNode,'list').filter(function(node){return!!node;})[0];suggestionsSourceElement=listElement&&listElement.nodeName.toLowerCase()==='datalist';}switch(vNode.props.type){case'checkbox':return'checkbox';case'number':return'spinbutton';case'radio':return'radio';case'range':return'slider';case'search':return!suggestionsSourceElement?'searchbox':'combobox';case'button':case'image':case'reset':case'submit':return'button';case'text':case'tel':case'url':case'email':case'':return!suggestionsSourceElement?'textbox':'combobox';default:return'textbox';}},li:'listitem',main:'main',math:'math',menu:'list',nav:'navigation',ol:'list',optgroup:'group',option:'option',output:'status',progress:'progressbar',search:'search',section:function section(vNode){return hasAccessibleName(vNode)?'region':null;},select:function select(vNode){return vNode.hasAttr('multiple')||parseInt(vNode.attr('size'))>1?'listbox':'combobox';},summary:'button',table:'table',tbody:'rowgroup',td:function td(vNode){var table=closest_default(vNode,'table');var role=get_explicit_role_default(table);return['grid','treegrid'].includes(role)?'gridcell':'cell';},textarea:'textbox',tfoot:'rowgroup',th:function th(vNode){if(is_column_header_default(vNode)){return'columnheader';}if(is_row_header_default(vNode)){return'rowheader';}},thead:'rowgroup',tr:'row',ul:'list'};var implicit_html_roles_default=implicitHtmlRoles;function fromPrimative(someString,matcher){var matcherType=_typeof(matcher);if(Array.isArray(matcher)&&typeof someString!=='undefined'){return matcher.includes(someString);}if(matcherType==='function'){return!!matcher(someString);}if(someString!==null&&someString!==void 0){if(matcher instanceof RegExp){return matcher.test(someString);}if(/^\\/.*\\/$/.test(matcher)){var pattern=matcher.substring(1,matcher.length-1);return new RegExp(pattern).test(someString);}}return matcher===someString;}var from_primative_default=fromPrimative;function hasAccessibleName2(vNode,matcher){return from_primative_default(!!_accessibleTextVirtual(vNode),matcher);}var has_accessible_name_default=hasAccessibleName2;function fromFunction(getValue,matcher){var matcherType=_typeof(matcher);if(matcherType!=='object'||Array.isArray(matcher)||matcher instanceof RegExp){throw new Error('Expect matcher to be an object');}return Object.keys(matcher).every(function(propName){return from_primative_default(getValue(propName),matcher[propName]);});}var from_function_default=fromFunction;function attributes(vNode,matcher){vNode=_nodeLookup(vNode).vNode;return from_function_default(function(attrName){return vNode.attr(attrName);},matcher);}var attributes_default=attributes;function condition(arg,matcher){return!!matcher(arg);}function explicitRole(vNode,matcher){return from_primative_default(get_explicit_role_default(vNode),matcher);}var explicit_role_default=explicitRole;function implicitRole(vNode,matcher){return from_primative_default(implicit_role_default(vNode),matcher);}var implicit_role_default2=implicitRole;function nodeName(vNode,matcher){vNode=_nodeLookup(vNode).vNode;return from_primative_default(vNode.props.nodeName,matcher);}var node_name_default=nodeName;function properties(vNode,matcher){vNode=_nodeLookup(vNode).vNode;return from_function_default(function(propName){return vNode.props[propName];},matcher);}var properties_default=properties;function semanticRole(vNode,matcher){return from_primative_default(get_role_default(vNode),matcher);}var semantic_role_default=semanticRole;var matchers={hasAccessibleName:has_accessible_name_default,attributes:attributes_default,condition:condition,explicitRole:explicit_role_default,implicitRole:implicit_role_default2,nodeName:node_name_default,properties:properties_default,semanticRole:semantic_role_default};function fromDefinition(vNode,definition){vNode=_nodeLookup(vNode).vNode;if(Array.isArray(definition)){return definition.some(function(definitionItem){return fromDefinition(vNode,definitionItem);});}if(typeof definition==='string'){return _matches(vNode,definition);}return Object.keys(definition).every(function(matcherName){if(!matchers[matcherName]){throw new Error('Unknown matcher type \"'.concat(matcherName,'\"'));}var matchMethod=matchers[matcherName];var matcher=definition[matcherName];return matchMethod(vNode,matcher);});}var from_definition_default=fromDefinition;function matches2(vNode,definition){return from_definition_default(vNode,definition);}var matches_default=matches2;matches_default.hasAccessibleName=has_accessible_name_default;matches_default.attributes=attributes_default;matches_default.condition=condition;matches_default.explicitRole=explicit_role_default;matches_default.fromDefinition=from_definition_default;matches_default.fromFunction=from_function_default;matches_default.fromPrimative=from_primative_default;matches_default.implicitRole=implicit_role_default2;matches_default.nodeName=node_name_default;matches_default.properties=properties_default;matches_default.semanticRole=semantic_role_default;var matches_default2=matches_default;function getElementSpec(vNode){var _ref28=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref28$noMatchAccessi=_ref28.noMatchAccessibleName,noMatchAccessibleName=_ref28$noMatchAccessi===void 0?false:_ref28$noMatchAccessi;var standard=standards_default.htmlElms[vNode.props.nodeName];if(!standard){return{};}if(!standard.variant){return standard;}var variant=standard.variant,spec=_objectWithoutProperties(standard,_excluded4);for(var variantName in variant){if(!variant.hasOwnProperty(variantName)||variantName==='default'){continue;}var _variant$variantName=variant[variantName],matches4=_variant$variantName.matches,props=_objectWithoutProperties(_variant$variantName,_excluded5);var matchProperties=Array.isArray(matches4)?matches4:[matches4];for(var _i9=0;_i9<matchProperties.length&&noMatchAccessibleName;_i9++){if(matchProperties[_i9].hasOwnProperty('hasAccessibleName')){return standard;}}if(matches_default2(vNode,matches4)){for(var propName in props){if(props.hasOwnProperty(propName)){spec[propName]=props[propName];}}}}for(var _propName in variant['default']){if(variant['default'].hasOwnProperty(_propName)&&typeof spec[_propName]==='undefined'){spec[_propName]=variant['default'][_propName];}}return spec;}var get_element_spec_default=getElementSpec;function implicitRole2(node){var _ref29=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},chromium=_ref29.chromium;var vNode=node instanceof abstract_virtual_node_default?node:get_node_from_tree_default(node);node=vNode.actualNode;if(!vNode){throw new ReferenceError('Cannot get implicit role of a node outside the current scope.');}var nodeName2=vNode.props.nodeName;var role=implicit_html_roles_default[nodeName2];if(!role&&chromium){var _get_element_spec_def=get_element_spec_default(vNode),chromiumRole=_get_element_spec_def.chromiumRole;return chromiumRole||null;}if(typeof role==='function'){return role(vNode);}return role||null;}var implicit_role_default=implicitRole2;var inheritsPresentationChain={td:['tr'],th:['tr'],tr:['thead','tbody','tfoot','table'],thead:['table'],tbody:['table'],tfoot:['table'],li:['ol','ul'],dt:['dl','div'],dd:['dl','div'],div:['dl']};function getInheritedRole(vNode,explicitRoleOptions){var parentNodeNames=inheritsPresentationChain[vNode.props.nodeName];if(!parentNodeNames){return null;}if(!vNode.parent){if(!vNode.actualNode){return null;}throw new ReferenceError('Cannot determine role presentational inheritance of a required parent outside the current scope.');}if(!parentNodeNames.includes(vNode.parent.props.nodeName)){return null;}var parentRole=get_explicit_role_default(vNode.parent,explicitRoleOptions);if(['none','presentation'].includes(parentRole)&&!hasConflictResolution(vNode.parent)){return parentRole;}if(parentRole){return null;}return getInheritedRole(vNode.parent,explicitRoleOptions);}function resolveImplicitRole(vNode,_ref30){var chromium=_ref30.chromium,explicitRoleOptions=_objectWithoutProperties(_ref30,_excluded6);var implicitRole3=implicit_role_default(vNode,{chromium:chromium});if(!implicitRole3){return null;}var presentationalRole=getInheritedRole(vNode,explicitRoleOptions);if(presentationalRole){return presentationalRole;}return implicitRole3;}function hasConflictResolution(vNode){var hasGlobalAria=get_global_aria_attrs_default().some(function(attr){return vNode.hasAttr(attr);});return hasGlobalAria||_isFocusable(vNode);}function resolveRole(node){var _ref31=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var noImplicit=_ref31.noImplicit,roleOptions=_objectWithoutProperties(_ref31,_excluded7);var _nodeLookup10=_nodeLookup(node),vNode=_nodeLookup10.vNode;if(vNode.props.nodeType!==1){return null;}var explicitRole2=get_explicit_role_default(vNode,roleOptions);if(!explicitRole2){return noImplicit?null:resolveImplicitRole(vNode,roleOptions);}if(!['presentation','none'].includes(explicitRole2)){return explicitRole2;}if(hasConflictResolution(vNode)){return noImplicit?null:resolveImplicitRole(vNode,roleOptions);}return explicitRole2;}function getRole(node){var _ref32=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var noPresentational=_ref32.noPresentational,options=_objectWithoutProperties(_ref32,_excluded8);var role=resolveRole(node,options);if(noPresentational&&['presentation','none'].includes(role)){return null;}return role;}var get_role_default=getRole;var alwaysTitleElements=['iframe'];function titleText(node){var _nodeLookup11=_nodeLookup(node),vNode=_nodeLookup11.vNode;if(vNode.props.nodeType!==1||!node.hasAttr('title')){return'';}if(!matches_default(vNode,alwaysTitleElements)&&['none','presentation'].includes(get_role_default(vNode))){return'';}return vNode.attr('title');}var title_text_default=titleText;function namedFromContents(vNode){var _ref33=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},strict=_ref33.strict;vNode=vNode instanceof abstract_virtual_node_default?vNode:get_node_from_tree_default(vNode);if(vNode.props.nodeType!==1){return false;}var role=get_role_default(vNode);var roleDef=standards_default.ariaRoles[role];if(roleDef&&roleDef.nameFromContent){return true;}if(strict){return false;}return!roleDef||['presentation','none'].includes(role);}var named_from_contents_default=namedFromContents;function getOwnedVirtual(virtualNode){var actualNode=virtualNode.actualNode,children=virtualNode.children;if(!children){throw new Error('getOwnedVirtual requires a virtual node');}if(virtualNode.hasAttr('aria-owns')){var owns=idrefs_default(actualNode,'aria-owns').filter(function(element){return!!element;}).map(function(element){return axe.utils.getNodeFromTree(element);});return[].concat(_toConsumableArray(children),_toConsumableArray(owns));}return _toConsumableArray(children);}var get_owned_virtual_default=getOwnedVirtual;var unsupported_default={accessibleNameFromFieldValue:['progressbar']};function _isVisibleToScreenReaders(vNode){vNode=_nodeLookup(vNode).vNode;return isVisibleToScreenReadersVirtual(vNode);}var isVisibleToScreenReadersVirtual=memoize_default(function isVisibleToScreenReadersMemoized(vNode,isAncestor){if(ariaHidden(vNode)||_isInert(vNode,{skipAncestors:true,isAncestor:isAncestor})){return false;}if(vNode.actualNode&&vNode.props.nodeName==='area'){return!areaHidden(vNode,isVisibleToScreenReadersVirtual);}if(_isHiddenForEveryone(vNode,{skipAncestors:true,isAncestor:isAncestor})){return false;}if(!vNode.parent){return true;}return isVisibleToScreenReadersVirtual(vNode.parent,true);});function visibleVirtual(element,screenReader,noRecursing){var _nodeLookup12=_nodeLookup(element),vNode=_nodeLookup12.vNode;var visibleMethod=screenReader?_isVisibleToScreenReaders:_isVisibleOnScreen;var visible2=!element.actualNode||element.actualNode&&visibleMethod(element);var result=vNode.children.map(function(child){var _child$props=child.props,nodeType=_child$props.nodeType,nodeValue=_child$props.nodeValue;if(nodeType===3){if(nodeValue&&visible2){return nodeValue;}}else if(!noRecursing){return visibleVirtual(child,screenReader);}}).join('');return sanitize_default(result);}var visible_virtual_default=visibleVirtual;var nonTextInputTypes=['button','checkbox','color','file','hidden','image','password','radio','reset','submit'];function isNativeTextbox(node){node=node instanceof abstract_virtual_node_default?node:get_node_from_tree_default(node);var nodeName2=node.props.nodeName;return nodeName2==='textarea'||nodeName2==='input'&&!nonTextInputTypes.includes((node.attr('type')||'').toLowerCase());}var is_native_textbox_default=isNativeTextbox;function isNativeSelect(node){node=node instanceof abstract_virtual_node_default?node:get_node_from_tree_default(node);var nodeName2=node.props.nodeName;return nodeName2==='select';}var is_native_select_default=isNativeSelect;function isAriaTextbox(node){var role=get_explicit_role_default(node);return role==='textbox';}var is_aria_textbox_default=isAriaTextbox;function isAriaListbox(node){var role=get_explicit_role_default(node);return role==='listbox';}var is_aria_listbox_default=isAriaListbox;function isAriaCombobox(node){var role=get_explicit_role_default(node);return role==='combobox';}var is_aria_combobox_default=isAriaCombobox;var rangeRoles=['progressbar','scrollbar','slider','spinbutton'];function isAriaRange(node){var role=get_explicit_role_default(node);return rangeRoles.includes(role);}var is_aria_range_default=isAriaRange;var controlValueRoles=['textbox','progressbar','scrollbar','slider','spinbutton','combobox','listbox'];var _formControlValueMethods={nativeTextboxValue:nativeTextboxValue,nativeSelectValue:nativeSelectValue,ariaTextboxValue:ariaTextboxValue,ariaListboxValue:ariaListboxValue,ariaComboboxValue:ariaComboboxValue,ariaRangeValue:ariaRangeValue};function formControlValue(virtualNode){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var actualNode=virtualNode.actualNode;var unsupportedRoles=unsupported_default.accessibleNameFromFieldValue||[];var role=get_role_default(virtualNode);if(context.startNode===virtualNode||!controlValueRoles.includes(role)||unsupportedRoles.includes(role)){return'';}var valueMethods=Object.keys(_formControlValueMethods).map(function(name){return _formControlValueMethods[name];});var valueString=valueMethods.reduce(function(accName,step){return accName||step(virtualNode,context);},'');if(context.debug){log_default(valueString||'{empty-value}',actualNode,context);}return valueString;}function nativeTextboxValue(node){var _nodeLookup13=_nodeLookup(node),vNode=_nodeLookup13.vNode;if(is_native_textbox_default(vNode)){return vNode.props.value||'';}return'';}function nativeSelectValue(node){var _nodeLookup14=_nodeLookup(node),vNode=_nodeLookup14.vNode;if(!is_native_select_default(vNode)){return'';}var options=query_selector_all_default(vNode,'option');var selectedOptions=options.filter(function(option){return option.props.selected;});if(!selectedOptions.length){selectedOptions.push(options[0]);}return selectedOptions.map(function(option){return visible_virtual_default(option);}).join(' ')||'';}function ariaTextboxValue(node){var _nodeLookup15=_nodeLookup(node),vNode=_nodeLookup15.vNode,domNode=_nodeLookup15.domNode;if(!is_aria_textbox_default(vNode)){return'';}if(!domNode||domNode&&!_isHiddenForEveryone(domNode)){return visible_virtual_default(vNode,true);}else{return domNode.textContent;}}function ariaListboxValue(node,context){var _nodeLookup16=_nodeLookup(node),vNode=_nodeLookup16.vNode;if(!is_aria_listbox_default(vNode)){return'';}var selected=get_owned_virtual_default(vNode).filter(function(owned){return get_role_default(owned)==='option'&&owned.attr('aria-selected')==='true';});if(selected.length===0){return'';}return _accessibleTextVirtual(selected[0],context);}function ariaComboboxValue(node,context){var _nodeLookup17=_nodeLookup(node),vNode=_nodeLookup17.vNode;if(!is_aria_combobox_default(vNode)){return'';}var listbox=get_owned_virtual_default(vNode).filter(function(elm){return get_role_default(elm)==='listbox';})[0];return listbox?ariaListboxValue(listbox,context):'';}function ariaRangeValue(node){var _nodeLookup18=_nodeLookup(node),vNode=_nodeLookup18.vNode;if(!is_aria_range_default(vNode)||!vNode.hasAttr('aria-valuenow')){return'';}var valueNow=+vNode.attr('aria-valuenow');return!isNaN(valueNow)?String(valueNow):'0';}var form_control_value_default=formControlValue;function subtreeText(virtualNode){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var alreadyProcessed2=_accessibleTextVirtual.alreadyProcessed;context.startNode=context.startNode||virtualNode;var _context=context,strict=_context.strict,inControlContext=_context.inControlContext,inLabelledByContext=_context.inLabelledByContext;var role=get_role_default(virtualNode);var _get_element_spec_def2=get_element_spec_default(virtualNode,{noMatchAccessibleName:true}),contentTypes=_get_element_spec_def2.contentTypes;if(alreadyProcessed2(virtualNode,context)||virtualNode.props.nodeType!==1||contentTypes!==null&&contentTypes!==void 0&&contentTypes.includes('embedded')||controlValueRoles.includes(role)){return'';}if(!context.subtreeDescendant&&!context.inLabelledByContext&&!named_from_contents_default(virtualNode,{strict:strict})){return'';}if(!strict){var subtreeDescendant=!inControlContext&&!inLabelledByContext;context=_extends({subtreeDescendant:subtreeDescendant},context);}return get_owned_virtual_default(virtualNode).reduce(function(contentText,child){return appendAccessibleText(contentText,child,context);},'');}var phrasingElements=get_elements_by_content_type_default('phrasing').concat(['#text']);function appendAccessibleText(contentText,virtualNode,context){var nodeName2=virtualNode.props.nodeName;var contentTextAdd=_accessibleTextVirtual(virtualNode,context);if(!contentTextAdd){return contentText;}if(!phrasingElements.includes(nodeName2)){if(contentTextAdd[0]!==' '){contentTextAdd+=' ';}if(contentText&&contentText[contentText.length-1]!==' '){contentTextAdd=' '+contentTextAdd;}}return contentText+contentTextAdd;}var subtree_text_default=subtreeText;function labelText(virtualNode){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var alreadyProcessed2=_accessibleTextVirtual.alreadyProcessed;if(context.inControlContext||context.inLabelledByContext||alreadyProcessed2(virtualNode,context)){return'';}if(!context.startNode){context.startNode=virtualNode;}var labelContext=_extends({inControlContext:true},context);var explicitLabels=getExplicitLabels(virtualNode);var implicitLabel=closest_default(virtualNode,'label');var labels;if(implicitLabel){labels=[].concat(_toConsumableArray(explicitLabels),[implicitLabel.actualNode]);labels.sort(node_sorter_default);}else{labels=explicitLabels;}return labels.map(function(label3){return accessible_text_default(label3,labelContext);}).filter(function(text){return text!=='';}).join(' ');}function getExplicitLabels(virtualNode){if(!virtualNode.attr('id')){return[];}if(!virtualNode.actualNode){throw new TypeError('Cannot resolve explicit label reference for non-DOM nodes');}return find_elms_in_context_default({elm:'label',attr:'for',value:virtualNode.attr('id'),context:virtualNode.actualNode});}var label_text_default=labelText;var defaultButtonValues={submit:'Submit',image:'Submit',reset:'Reset',button:''};var nativeTextMethods={valueText:function valueText(_ref34){var actualNode=_ref34.actualNode;return actualNode.value||'';},buttonDefaultText:function buttonDefaultText(_ref35){var actualNode=_ref35.actualNode;return defaultButtonValues[actualNode.type]||'';},tableCaptionText:descendantText.bind(null,'caption'),figureText:descendantText.bind(null,'figcaption'),svgTitleText:descendantText.bind(null,'title'),fieldsetLegendText:descendantText.bind(null,'legend'),altText:attrText.bind(null,'alt'),tableSummaryText:attrText.bind(null,'summary'),titleText:title_text_default,subtreeText:subtree_text_default,labelText:label_text_default,singleSpace:function singleSpace(){return' ';},placeholderText:attrText.bind(null,'placeholder')};function attrText(attr,vNode){return vNode.attr(attr)||'';}function descendantText(nodeName2,_ref36,context){var actualNode=_ref36.actualNode;nodeName2=nodeName2.toLowerCase();var nodeNames2=[nodeName2,actualNode.nodeName.toLowerCase()].join(',');var candidate=actualNode.querySelector(nodeNames2);if(!candidate||candidate.nodeName.toLowerCase()!==nodeName2){return'';}return accessible_text_default(candidate,context);}var native_text_methods_default=nativeTextMethods;function _nativeTextAlternative(virtualNode){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var actualNode=virtualNode.actualNode;if(virtualNode.props.nodeType!==1||['presentation','none'].includes(get_role_default(virtualNode))){return'';}var textMethods=findTextMethods(virtualNode);var accessibleName=textMethods.reduce(function(accName,step){return accName||step(virtualNode,context);},'');if(context.debug){axe.log(accessibleName||'{empty-value}',actualNode,context);}return accessibleName;}function findTextMethods(virtualNode){var elmSpec=get_element_spec_default(virtualNode,{noMatchAccessibleName:true});var methods=elmSpec.namingMethods||[];return methods.map(function(methodName){return native_text_methods_default[methodName];});}function getUnicodeNonBmpRegExp(){return /[\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u20A0-\\u20CF\\u20D0-\\u20FF\\u2100-\\u214F\\u2150-\\u218F\\u2190-\\u21FF\\u2200-\\u22FF\\u2300-\\u23FF\\u2400-\\u243F\\u2440-\\u245F\\u2460-\\u24FF\\u2500-\\u257F\\u2580-\\u259F\\u25A0-\\u25FF\\u2600-\\u26FF\\u2700-\\u27BF\\uE000-\\uF8FF]/g;}function getPunctuationRegExp(){return /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&\\xa3\\xa2\\xa5\\xa7\\u20ac()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~\\xb1]/g;}function getSupplementaryPrivateUseRegExp(){return /[\\uDB80-\\uDBBF][\\uDC00-\\uDFFF]/g;}function getCategoryFormatRegExp(){return /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC38]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/g;}var emoji_regex_default=function emoji_regex_default(){return /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC3\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC08\\uDC26](?:\\u200D\\u2B1B)?|[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;};function hasUnicode(str,options){var emoji=options.emoji,nonBmp=options.nonBmp,punctuations=options.punctuations;var value=false;if(emoji){value||(value=emoji_regex_default().test(str));}if(nonBmp){value||(value=getUnicodeNonBmpRegExp().test(str)||getSupplementaryPrivateUseRegExp().test(str)||getCategoryFormatRegExp().test(str));}if(punctuations){value||(value=getPunctuationRegExp().test(str));}return value;}var has_unicode_default=hasUnicode;function _isIconLigature(textVNode){var differenceThreshold=arguments.length>1&&arguments[1]!==undefined?arguments[1]:.15;var occurrenceThreshold=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3;var nodeValue=textVNode.actualNode.nodeValue.trim();if(!sanitize_default(nodeValue)||has_unicode_default(nodeValue,{emoji:true,nonBmp:true})){return false;}var canvasContext=cache_default.get('canvasContext',function(){return document.createElement('canvas').getContext('2d',{willReadFrequently:true});});var canvas=canvasContext.canvas;var fonts=cache_default.get('fonts',function(){return{};});var style=window.getComputedStyle(textVNode.parent.actualNode);var fontFamily=style.getPropertyValue('font-family');if(!fonts[fontFamily]){fonts[fontFamily]={occurrences:0,numLigatures:0};}var font=fonts[fontFamily];if(font.occurrences>=occurrenceThreshold){if(font.numLigatures/font.occurrences===1){return true;}else if(font.numLigatures===0){return false;}}font.occurrences++;var fontSize=30;var fontStyle=''.concat(fontSize,'px ').concat(fontFamily);canvasContext.font=fontStyle;var firstChar=nodeValue.charAt(0);var width=canvasContext.measureText(firstChar).width;if(width===0){font.numLigatures++;return true;}if(width<30){var diff=30/width;width*=diff;fontSize*=diff;fontStyle=''.concat(fontSize,'px ').concat(fontFamily);}canvas.width=width;canvas.height=fontSize;canvasContext.font=fontStyle;canvasContext.textAlign='left';canvasContext.textBaseline='top';canvasContext.fillText(firstChar,0,0);var compareData=new Uint32Array(canvasContext.getImageData(0,0,width,fontSize).data.buffer);if(!compareData.some(function(pixel){return pixel;})){font.numLigatures++;return true;}canvasContext.clearRect(0,0,width,fontSize);canvasContext.fillText(nodeValue,0,0);var compareWith=new Uint32Array(canvasContext.getImageData(0,0,width,fontSize).data.buffer);var differences=compareData.reduce(function(diff,pixel,i){if(pixel===0&&compareWith[i]===0){return diff;}if(pixel!==0&&compareWith[i]!==0){return diff;}return++diff;},0);var expectedWidth=nodeValue.split('').reduce(function(totalWidth,_char2){return totalWidth+canvasContext.measureText(_char2).width;},0);var actualWidth=canvasContext.measureText(nodeValue).width;var pixelDifference=differences/compareData.length;var sizeDifference=1-actualWidth/expectedWidth;if(pixelDifference>=differenceThreshold&&sizeDifference>=differenceThreshold){font.numLigatures++;return true;}return false;}function _accessibleTextVirtual(virtualNode){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};context=prepareContext(virtualNode,context);if(shouldIgnoreHidden(virtualNode,context)){return'';}if(shouldIgnoreIconLigature(virtualNode,context)){return'';}var computationSteps=[arialabelledby_text_default,_arialabelText,_nativeTextAlternative,form_control_value_default,subtree_text_default,textNodeValue,title_text_default];var accessibleName=computationSteps.reduce(function(accName,step){if(context.startNode===virtualNode){accName=sanitize_default(accName);}if(accName!==''){return accName;}return step(virtualNode,context);},'');if(context.debug){axe.log(accessibleName||'{empty-value}',virtualNode.actualNode,context);}return accessibleName;}function textNodeValue(virtualNode){if(virtualNode.props.nodeType!==3){return'';}return virtualNode.props.nodeValue;}function shouldIgnoreHidden(virtualNode,context){if(!virtualNode){return false;}if(virtualNode.props.nodeType!==1||context.includeHidden){return false;}return!_isVisibleToScreenReaders(virtualNode);}function shouldIgnoreIconLigature(virtualNode,context){var _context$occurrenceTh;var ignoreIconLigature=context.ignoreIconLigature,pixelThreshold=context.pixelThreshold;var occurrenceThreshold=(_context$occurrenceTh=context.occurrenceThreshold)!==null&&_context$occurrenceTh!==void 0?_context$occurrenceTh:context.occuranceThreshold;if(virtualNode.props.nodeType!==3||!ignoreIconLigature){return false;}return _isIconLigature(virtualNode,pixelThreshold,occurrenceThreshold);}function prepareContext(virtualNode,context){if(!context.startNode){context=_extends({startNode:virtualNode},context);}if(virtualNode.props.nodeType===1&&context.inLabelledByContext&&context.includeHidden===void 0){context=_extends({includeHidden:!_isVisibleToScreenReaders(virtualNode)},context);}return context;}_accessibleTextVirtual.alreadyProcessed=function alreadyProcessed(virtualnode,context){context.processed=context.processed||[];if(context.processed.includes(virtualnode)){return true;}context.processed.push(virtualnode);return false;};function removeUnicode(str,options){var emoji=options.emoji,nonBmp=options.nonBmp,punctuations=options.punctuations;if(emoji){str=str.replace(emoji_regex_default(),'');}if(nonBmp){str=str.replace(getUnicodeNonBmpRegExp(),'').replace(getSupplementaryPrivateUseRegExp(),'').replace(getCategoryFormatRegExp(),'');}if(punctuations){str=str.replace(getPunctuationRegExp(),'');}return str;}var remove_unicode_default=removeUnicode;function isHumanInterpretable(str){if(!str.length){return 0;}var alphaNumericIconMap=['x','i'];if(alphaNumericIconMap.includes(str)){return 0;}var noUnicodeStr=remove_unicode_default(str,{emoji:true,nonBmp:true,punctuations:true});if(!sanitize_default(noUnicodeStr)){return 0;}return 1;}var is_human_interpretable_default=isHumanInterpretable;var _autocomplete={stateTerms:['on','off'],standaloneTerms:['name','honorific-prefix','given-name','additional-name','family-name','honorific-suffix','nickname','username','new-password','current-password','organization-title','organization','street-address','address-line1','address-line2','address-line3','address-level4','address-level3','address-level2','address-level1','country','country-name','postal-code','cc-name','cc-given-name','cc-additional-name','cc-family-name','cc-number','cc-exp','cc-exp-month','cc-exp-year','cc-csc','cc-type','transaction-currency','transaction-amount','language','bday','bday-day','bday-month','bday-year','sex','url','photo','one-time-code'],qualifiers:['home','work','mobile','fax','pager'],qualifiedTerms:['tel','tel-country-code','tel-national','tel-area-code','tel-local','tel-local-prefix','tel-local-suffix','tel-extension','email','impp'],locations:['billing','shipping']};function isValidAutocomplete(autocompleteValue){var _ref37=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref37$looseTyped=_ref37.looseTyped,looseTyped=_ref37$looseTyped===void 0?false:_ref37$looseTyped,_ref37$stateTerms=_ref37.stateTerms,stateTerms=_ref37$stateTerms===void 0?[]:_ref37$stateTerms,_ref37$locations=_ref37.locations,locations=_ref37$locations===void 0?[]:_ref37$locations,_ref37$qualifiers=_ref37.qualifiers,qualifiers=_ref37$qualifiers===void 0?[]:_ref37$qualifiers,_ref37$standaloneTerm=_ref37.standaloneTerms,standaloneTerms=_ref37$standaloneTerm===void 0?[]:_ref37$standaloneTerm,_ref37$qualifiedTerms=_ref37.qualifiedTerms,qualifiedTerms=_ref37$qualifiedTerms===void 0?[]:_ref37$qualifiedTerms;autocompleteValue=autocompleteValue.toLowerCase().trim();stateTerms=stateTerms.concat(_autocomplete.stateTerms);if(stateTerms.includes(autocompleteValue)||autocompleteValue===''){return true;}qualifiers=qualifiers.concat(_autocomplete.qualifiers);locations=locations.concat(_autocomplete.locations);standaloneTerms=standaloneTerms.concat(_autocomplete.standaloneTerms);qualifiedTerms=qualifiedTerms.concat(_autocomplete.qualifiedTerms);var autocompleteTerms=autocompleteValue.split(/\\s+/g);if(autocompleteTerms[autocompleteTerms.length-1]==='webauthn'){autocompleteTerms.pop();if(autocompleteTerms.length===0){return false;}}if(!looseTyped){if(autocompleteTerms[0].length>8&&autocompleteTerms[0].substr(0,8)==='section-'){autocompleteTerms.shift();}if(locations.includes(autocompleteTerms[0])){autocompleteTerms.shift();}if(qualifiers.includes(autocompleteTerms[0])){autocompleteTerms.shift();standaloneTerms=[];}if(autocompleteTerms.length!==1){return false;}}var purposeTerm=autocompleteTerms[autocompleteTerms.length-1];return standaloneTerms.includes(purposeTerm)||qualifiedTerms.includes(purposeTerm);}var is_valid_autocomplete_default=isValidAutocomplete;function labelVirtual(virtualNode){var ref,candidate;if(virtualNode.attr('aria-labelledby')){ref=idrefs_default(virtualNode.actualNode,'aria-labelledby');candidate=ref.map(function(thing){var vNode=get_node_from_tree_default(thing);return vNode?visible_virtual_default(vNode):'';}).join(' ').trim();if(candidate){return candidate;}}candidate=virtualNode.attr('aria-label');if(candidate){candidate=sanitize_default(candidate);if(candidate){return candidate;}}return null;}var label_virtual_default=labelVirtual;function visible(element,screenReader,noRecursing){element=get_node_from_tree_default(element);return visible_virtual_default(element,screenReader,noRecursing);}var visible_default=visible;function labelVirtual2(virtualNode){var ref,candidate,doc;candidate=label_virtual_default(virtualNode);if(candidate){return candidate;}if(virtualNode.attr('id')){if(!virtualNode.actualNode){throw new TypeError('Cannot resolve explicit label reference for non-DOM nodes');}var id=escape_selector_default(virtualNode.attr('id'));doc=get_root_node_default2(virtualNode.actualNode);ref=doc.querySelector('label[for=\"'+id+'\"]');candidate=ref&&visible_default(ref,true);if(candidate){return candidate;}}ref=closest_default(virtualNode,'label');candidate=ref&&visible_virtual_default(ref,true);if(candidate){return candidate;}return null;}var label_virtual_default2=labelVirtual2;function label(node){node=get_node_from_tree_default(node);return label_virtual_default2(node);}var label_default=label;var nativeElementType=[{matches:[{nodeName:'textarea'},{nodeName:'input',properties:{type:['text','password','search','tel','email','url']}}],namingMethods:'labelText'},{matches:{nodeName:'input',properties:{type:['button','submit','reset']}},namingMethods:['valueText','titleText','buttonDefaultText']},{matches:{nodeName:'input',properties:{type:'image'}},namingMethods:['altText','valueText','labelText','titleText','buttonDefaultText']},{matches:'button',namingMethods:'subtreeText'},{matches:'fieldset',namingMethods:'fieldsetLegendText'},{matches:'OUTPUT',namingMethods:'subtreeText'},{matches:[{nodeName:'select'},{nodeName:'input',properties:{type:/^(?!text|password|search|tel|email|url|button|submit|reset)/}}],namingMethods:'labelText'},{matches:'summary',namingMethods:'subtreeText'},{matches:'figure',namingMethods:['figureText','titleText']},{matches:'img',namingMethods:'altText'},{matches:'table',namingMethods:['tableCaptionText','tableSummaryText']},{matches:['hr','br'],namingMethods:['titleText','singleSpace']}];var native_element_type_default=nativeElementType;function visibleTextNodes(vNode){var parentVisible=_isVisibleOnScreen(vNode);var nodes=[];vNode.children.forEach(function(child){if(child.actualNode.nodeType===3){if(parentVisible){nodes.push(child);}}else{nodes=nodes.concat(visibleTextNodes(child));}});return nodes;}var visible_text_nodes_default=visibleTextNodes;var getVisibleChildTextRects=memoize_default(function getVisibleChildTextRectsMemoized(node){var vNode=get_node_from_tree_default(node);var nodeRect=vNode.boundingClientRect;var clientRects=[];var overflowHiddenNodes=get_overflow_hidden_ancestors_default(vNode);node.childNodes.forEach(function(textNode){if(textNode.nodeType!==3||sanitize_default(textNode.nodeValue)===''){return;}var contentRects=getContentRects(textNode);if(isOutsideNodeBounds(contentRects,nodeRect)){return;}clientRects.push.apply(clientRects,_toConsumableArray(filterHiddenRects(contentRects,overflowHiddenNodes)));});return clientRects.length?clientRects:[nodeRect];});var get_visible_child_text_rects_default=getVisibleChildTextRects;function getContentRects(node){var range2=document.createRange();range2.selectNodeContents(node);return Array.from(range2.getClientRects());}function isOutsideNodeBounds(rects,nodeRect){return rects.some(function(rect){var centerPoint=_getRectCenter(rect);return!_isPointInRect(centerPoint,nodeRect);});}function filterHiddenRects(contentRects,overflowHiddenNodes){var visibleRects=[];contentRects.forEach(function(contentRect){if(contentRect.width<1||contentRect.height<1){return;}var visibleRect=overflowHiddenNodes.reduce(function(rect,overflowNode){return rect&&_getIntersectionRect(rect,overflowNode.boundingClientRect);},contentRect);if(visibleRect){visibleRects.push(visibleRect);}});return visibleRects;}function getTextElementStack(node){_createGrid();var vNode=get_node_from_tree_default(node);var grid=vNode._grid;if(!grid){return[];}var clientRects=get_visible_child_text_rects_default(node);return clientRects.map(function(rect){return getRectStack(grid,rect);});}var get_text_element_stack_default=getTextElementStack;var visualRoles=['checkbox','img','meter','progressbar','scrollbar','radio','slider','spinbutton','textbox'];function isVisualContent(el){var _nodeLookup19=_nodeLookup(el),vNode=_nodeLookup19.vNode;var role=axe.commons.aria.getExplicitRole(vNode);if(role){return visualRoles.indexOf(role)!==-1;}switch(vNode.props.nodeName){case'img':case'iframe':case'object':case'video':case'audio':case'canvas':case'svg':case'math':case'button':case'select':case'textarea':case'keygen':case'progress':case'meter':return true;case'input':return vNode.props.type!=='hidden';default:return false;}}var is_visual_content_default=isVisualContent;var hiddenTextElms=['head','title','template','script','style','iframe','object','video','audio','noscript'];function hasChildTextNodes(elm){if(hiddenTextElms.includes(elm.props.nodeName)){return false;}return elm.children.some(function(_ref38){var props=_ref38.props;return props.nodeType===3&&props.nodeValue.trim();});}function hasContentVirtual(elm,noRecursion,ignoreAria){return hasChildTextNodes(elm)||is_visual_content_default(elm.actualNode)||!ignoreAria&&!!label_virtual_default(elm)||!noRecursion&&elm.children.some(function(child){return child.actualNode.nodeType===1&&hasContentVirtual(child);});}var has_content_virtual_default=hasContentVirtual;function hasContent(elm,noRecursion,ignoreAria){elm=get_node_from_tree_default(elm);return has_content_virtual_default(elm,noRecursion,ignoreAria);}var has_content_default=hasContent;function _hasLangText(virtualNode){if(typeof virtualNode.children==='undefined'||hasChildTextNodes(virtualNode)){return true;}if(virtualNode.props.nodeType===1&&is_visual_content_default(virtualNode)){return!!axe.commons.text.accessibleTextVirtual(virtualNode);}return virtualNode.children.some(function(child){return!child.attr('lang')&&_hasLangText(child)&&!_isHiddenForEveryone(child);});}function insertedIntoFocusOrder(el){var tabIndex=parseInt(el.getAttribute('tabindex'),10);return tabIndex>-1&&_isFocusable(el)&&!is_natively_focusable_default(el);}var inserted_into_focus_order_default=insertedIntoFocusOrder;function isHiddenWithCSS(el,descendentVisibilityValue){var _nodeLookup20=_nodeLookup(el),vNode=_nodeLookup20.vNode,domNode=_nodeLookup20.domNode;if(!vNode){return _isHiddenWithCSS(domNode,descendentVisibilityValue);}if(vNode._isHiddenWithCSS===void 0){vNode._isHiddenWithCSS=_isHiddenWithCSS(domNode,descendentVisibilityValue);}return vNode._isHiddenWithCSS;}function _isHiddenWithCSS(el,descendentVisibilityValue){if(el.nodeType===9){return false;}if(el.nodeType===11){el=el.host;}if(['STYLE','SCRIPT'].includes(el.nodeName.toUpperCase())){return false;}var style=window.getComputedStyle(el,null);if(!style){throw new Error('Style does not exist for the given element.');}var displayValue=style.getPropertyValue('display');if(displayValue==='none'){return true;}var HIDDEN_VISIBILITY_VALUES=['hidden','collapse'];var visibilityValue=style.getPropertyValue('visibility');if(HIDDEN_VISIBILITY_VALUES.includes(visibilityValue)&&!descendentVisibilityValue){return true;}if(HIDDEN_VISIBILITY_VALUES.includes(visibilityValue)&&descendentVisibilityValue&&HIDDEN_VISIBILITY_VALUES.includes(descendentVisibilityValue)){return true;}var parent=get_composed_parent_default(el);if(parent&&!HIDDEN_VISIBILITY_VALUES.includes(visibilityValue)){return isHiddenWithCSS(parent,visibilityValue);}return false;}var is_hidden_with_css_default=isHiddenWithCSS;function isHTML5(doc){var node=doc.doctype;if(node===null){return false;}return node.name==='html'&&!node.publicId&&!node.systemId;}var is_html5_default=isHTML5;function getRoleType(role){var _window3;if(role instanceof abstract_virtual_node_default||(_window3=window)!==null&&_window3!==void 0&&_window3.Node&&role instanceof window.Node){role=axe.commons.aria.getRole(role);}var roleDef=standards_default.ariaRoles[role];return(roleDef===null||roleDef===void 0?void 0:roleDef.type)||null;}var get_role_type_default=getRoleType;function walkDomNode(node,functor){if(functor(node.actualNode)!==false){node.children.forEach(function(child){return walkDomNode(child,functor);});}}var blockLike=['block','list-item','table','flex','grid','inline-block'];function isBlock(elm){var display2=window.getComputedStyle(elm).getPropertyValue('display');return blockLike.includes(display2)||display2.substr(0,6)==='table-';}function getBlockParent(node){var parentBlock=get_composed_parent_default(node);while(parentBlock&&!isBlock(parentBlock)){parentBlock=get_composed_parent_default(parentBlock);}return get_node_from_tree_default(parentBlock);}function isInTextBlock(node,options){if(isBlock(node)){return false;}var virtualParent=getBlockParent(node);var parentText='';var widgetText='';var inBrBlock=0;walkDomNode(virtualParent,function(currNode){if(inBrBlock===2){return false;}if(currNode.nodeType===3){parentText+=currNode.nodeValue;}if(currNode.nodeType!==1){return;}var nodeName2=(currNode.nodeName||'').toUpperCase();if(currNode===node){inBrBlock=1;}if(['BR','HR'].includes(nodeName2)){if(inBrBlock===0){parentText='';widgetText='';}else{inBrBlock=2;}}else if(currNode.style.display==='none'||currNode.style.overflow==='hidden'||!['',null,'none'].includes(currNode.style['float'])||!['',null,'relative'].includes(currNode.style.position)){return false;}else if(get_role_type_default(currNode)==='widget'){widgetText+=currNode.textContent;return false;}});parentText=sanitize_default(parentText);if(options!==null&&options!==void 0&&options.noLengthCompare){return parentText.length!==0;}widgetText=sanitize_default(widgetText);return parentText.length>widgetText.length;}var is_in_text_block_default=isInTextBlock;function isModalOpen(options){options=options||{};var modalPercent=options.modalPercent||.75;if(cache_default.get('isModalOpen')){return cache_default.get('isModalOpen');}var definiteModals=query_selector_all_filter_default(axe._tree[0],'dialog, [role=dialog], [aria-modal=true]',_isVisibleOnScreen);if(definiteModals.length){cache_default.set('isModalOpen',true);return true;}var viewport=get_viewport_size_default(window);var percentWidth=viewport.width*modalPercent;var percentHeight=viewport.height*modalPercent;var x=(viewport.width-percentWidth)/2;var y=(viewport.height-percentHeight)/2;var points=[{x:x,y:y},{x:viewport.width-x,y:y},{x:viewport.width/2,y:viewport.height/2},{x:x,y:viewport.height-y},{x:viewport.width-x,y:viewport.height-y}];var stacks=points.map(function(point){return Array.from(document.elementsFromPoint(point.x,point.y));});var _loop4=function _loop4(_i10){var modalElement=stacks[_i10].find(function(elm){var style=window.getComputedStyle(elm);return parseInt(style.width,10)>=percentWidth&&parseInt(style.height,10)>=percentHeight&&style.getPropertyValue('pointer-events')!=='none'&&(style.position==='absolute'||style.position==='fixed');});if(modalElement&&stacks.every(function(stack){return stack.includes(modalElement);})){cache_default.set('isModalOpen',true);return{v:true};}};for(var _i10=0;_i10<stacks.length;_i10++){var _ret=_loop4(_i10);if(_typeof(_ret)==='object'){return _ret.v;}}cache_default.set('isModalOpen',void 0);return void 0;}var is_modal_open_default=isModalOpen;function _isMultiline(domNode){var margin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;var range2=domNode.ownerDocument.createRange();range2.setStart(domNode,0);range2.setEnd(domNode,domNode.childNodes.length);var lastLineEnd=0;var lineCount=0;var _iterator5=_createForOfIteratorHelper(range2.getClientRects()),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var rect=_step5.value;if(rect.height<=margin){continue;}if(lastLineEnd>rect.top+margin){lastLineEnd=Math.max(lastLineEnd,rect.bottom);}else if(lineCount===0){lastLineEnd=rect.bottom;lineCount++;}else{return true;}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}return false;}function isNode(element){return element instanceof window.Node;}var is_node_default=isNode;var cacheKey='color.incompleteData';var incompleteData={set:function set(key,reason){if(typeof key!=='string'){throw new Error('Incomplete data: key must be a string');}var data=cache_default.get(cacheKey,function(){return{};});if(reason){data[key]=reason;}return data[key];},get:function get(key){var data=cache_default.get(cacheKey);return data===null||data===void 0?void 0:data[key];},clear:function clear(){cache_default.set(cacheKey,{});}};var incomplete_data_default=incompleteData;function elementHasImage(elm,style){var graphicNodes=['IMG','CANVAS','OBJECT','IFRAME','VIDEO','SVG'];var nodeName2=elm.nodeName.toUpperCase();if(graphicNodes.includes(nodeName2)){incomplete_data_default.set('bgColor','imgNode');return true;}style=style||window.getComputedStyle(elm);var bgImageStyle=style.getPropertyValue('background-image');var hasBgImage=bgImageStyle!=='none';if(hasBgImage){var hasGradient=/gradient/.test(bgImageStyle);incomplete_data_default.set('bgColor',hasGradient?'bgGradient':'bgImage');}return hasBgImage;}var element_has_image_default=elementHasImage;var imports_exports={};__export(imports_exports,{Colorjs:function Colorjs(){return Color;},CssSelectorParser:function CssSelectorParser(){return import_css_selector_parser2.CssSelectorParser;},doT:function doT(){return import_dot['default'];},emojiRegexText:function emojiRegexText(){return emoji_regex_default;},memoize:function memoize(){return import_memoizee2['default'];}});var import_css_selector_parser2=__toModule(require_lib());var import_dot=__toModule(require_doT());var import_memoizee2=__toModule(require_memoizee());function multiplyMatrices(A,B){var m3=A.length;if(!Array.isArray(A[0])){A=[A];}if(!Array.isArray(B[0])){B=B.map(function(x){return[x];});}var p2=B[0].length;var B_cols=B[0].map(function(_,i){return B.map(function(x){return x[i];});});var product=A.map(function(row){return B_cols.map(function(col){var ret=0;if(!Array.isArray(row)){var _iterator6=_createForOfIteratorHelper(col),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var c4=_step6.value;ret+=row*c4;}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}return ret;}for(var _i11=0;_i11<row.length;_i11++){ret+=row[_i11]*(col[_i11]||0);}return ret;});});if(m3===1){product=product[0];}if(p2===1){return product.map(function(x){return x[0];});}return product;}function isString(str){return type(str)==='string';}function type(o){var str=Object.prototype.toString.call(o);return(str.match(/^\\[object\\s+(.*?)\\]$/)[1]||'').toLowerCase();}function toPrecision(n2,precision){n2=+n2;precision=+precision;var integerLength=(Math.floor(n2)+'').length;if(precision>integerLength){return+n2.toFixed(precision-integerLength);}else{var p10=Math.pow(10,integerLength-precision);return Math.round(n2/p10)*p10;}}function parseFunction(str){if(!str){return;}str=str.trim();var isFunctionRegex=/^([a-z]+)\\((.+?)\\)$/i;var isNumberRegex=/^-?[\\d.]+$/;var parts=str.match(isFunctionRegex);if(parts){var args=[];parts[2].replace(/\\/?\\s*([-\\w.]+(?:%|deg)?)/g,function($0,arg){if(/%$/.test(arg)){arg=new Number(arg.slice(0,-1)/100);arg.type='<percentage>';}else if(/deg$/.test(arg)){arg=new Number(+arg.slice(0,-3));arg.type='<angle>';arg.unit='deg';}else if(isNumberRegex.test(arg)){arg=new Number(arg);arg.type='<number>';}if($0.startsWith('/')){arg=arg instanceof Number?arg:new Number(arg);arg.alpha=true;}args.push(arg);});return{name:parts[1].toLowerCase(),rawName:parts[1],rawArgs:parts[2],args:args};}}function last(arr){return arr[arr.length-1];}function interpolate(start,end,p2){if(isNaN(start)){return end;}if(isNaN(end)){return start;}return start+(end-start)*p2;}function interpolateInv(start,end,value){return(value-start)/(end-start);}function mapRange(from,to2,value){return interpolate(to2[0],to2[1],interpolateInv(from[0],from[1],value));}function parseCoordGrammar(coordGrammars){return coordGrammars.map(function(coordGrammar2){return coordGrammar2.split('|').map(function(type2){type2=type2.trim();var range2=type2.match(/^(<[a-z]+>)\\[(-?[.\\d]+),\\s*(-?[.\\d]+)\\]?$/);if(range2){var ret=new String(range2[1]);ret.range=[+range2[2],+range2[3]];return ret;}return type2;});});}var util=Object.freeze({__proto__:null,isString:isString,type:type,toPrecision:toPrecision,parseFunction:parseFunction,last:last,interpolate:interpolate,interpolateInv:interpolateInv,mapRange:mapRange,parseCoordGrammar:parseCoordGrammar,multiplyMatrices:multiplyMatrices});var Hooks=function(){function Hooks(){_classCallCheck(this,Hooks);}_createClass(Hooks,[{key:'add',value:function add(name,callback,first){if(typeof arguments[0]!='string'){for(var name in arguments[0]){this.add(name,arguments[0][name],arguments[1]);}return;}(Array.isArray(name)?name:[name]).forEach(function(name2){this[name2]=this[name2]||[];if(callback){this[name2][first?'unshift':'push'](callback);}},this);}},{key:'run',value:function run(name,env){this[name]=this[name]||[];this[name].forEach(function(callback){callback.call(env&&env.context?env.context:env,env);});}}]);return Hooks;}();var hooks=new Hooks();var defaults={gamut_mapping:'lch.c',precision:5,deltaE:'76'};var WHITES={D50:[.3457/.3585,1,(1-.3457-.3585)/.3585],D65:[.3127/.329,1,(1-.3127-.329)/.329]};function getWhite(name){if(Array.isArray(name)){return name;}return WHITES[name];}function adapt$1(W1,W2,XYZ){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};W1=getWhite(W1);W2=getWhite(W2);if(!W1||!W2){throw new TypeError('Missing white point to convert '.concat(!W1?'from':'').concat(!W1&&!W2?'/':'').concat(!W2?'to':''));}if(W1===W2){return XYZ;}var env={W1:W1,W2:W2,XYZ:XYZ,options:options};hooks.run('chromatic-adaptation-start',env);if(!env.M){if(env.W1===WHITES.D65&&env.W2===WHITES.D50){env.M=[[1.0479298208405488,.022946793341019088,-.05019222954313557],[.029627815688159344,.990434484573249,-.01707382502938514],[-.009243058152591178,.015055144896577895,.7518742899580008]];}else if(env.W1===WHITES.D50&&env.W2===WHITES.D65){env.M=[[.9554734527042182,-.023098536874261423,.0632593086610217],[-.028369706963208136,1.0099954580058226,.021041398966943008],[.012314001688319899,-.020507696433477912,1.3303659366080753]];}}hooks.run('chromatic-adaptation-end',env);if(env.M){return multiplyMatrices(env.M,env.XYZ);}else{throw new TypeError('Only Bradford CAT with white points D50 and D65 supported for now.');}}var ε$4=75e-6;var _ColorSpace=(_processFormat=new WeakSet(),_path=new WeakMap(),_getPath=new WeakSet(),function(){function _ColorSpace(options){var _options$coords,_ref39,_options$white,_options$formats,_this$formats$functio,_this$formats,_this$formats2;_classCallCheck(this,_ColorSpace);_classPrivateMethodInitSpec(this,_getPath);_classPrivateMethodInitSpec(this,_processFormat);_classPrivateFieldInitSpec(this,_path,{writable:true,value:void 0});this.id=options.id;this.name=options.name;this.base=options.base?_ColorSpace.get(options.base):null;this.aliases=options.aliases;if(this.base){this.fromBase=options.fromBase;this.toBase=options.toBase;}var _coords=(_options$coords=options.coords)!==null&&_options$coords!==void 0?_options$coords:this.base.coords;this.coords=_coords;var white2=(_ref39=(_options$white=options.white)!==null&&_options$white!==void 0?_options$white:this.base.white)!==null&&_ref39!==void 0?_ref39:'D65';this.white=getWhite(white2);this.formats=(_options$formats=options.formats)!==null&&_options$formats!==void 0?_options$formats:{};for(var name in this.formats){var format=this.formats[name];format.type||(format.type='function');format.name||(format.name=name);}if(options.cssId&&!((_this$formats$functio=this.formats.functions)!==null&&_this$formats$functio!==void 0&&_this$formats$functio.color)){this.formats.color={id:options.cssId};Object.defineProperty(this,'cssId',{value:options.cssId});}else if((_this$formats=this.formats)!==null&&_this$formats!==void 0&&_this$formats.color&&!((_this$formats2=this.formats)!==null&&_this$formats2!==void 0&&_this$formats2.color.id)){this.formats.color.id=this.id;}this.referred=options.referred;_classPrivateFieldSet(this,_path,_classPrivateMethodGet(this,_getPath,_getPath2).call(this).reverse());hooks.run('colorspace-init-end',this);}_createClass(_ColorSpace,[{key:'inGamut',value:function inGamut(coords){var _ref40=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref40$epsilon=_ref40.epsilon,epsilon=_ref40$epsilon===void 0?ε$4:_ref40$epsilon;if(this.isPolar){coords=this.toBase(coords);return this.base.inGamut(coords,{epsilon:epsilon});}var coordMeta=Object.values(this.coords);return coords.every(function(c4,i){var meta=coordMeta[i];if(meta.type!=='angle'&&meta.range){if(Number.isNaN(c4)){return true;}var _meta$range=_slicedToArray(meta.range,2),min=_meta$range[0],max2=_meta$range[1];return(min===void 0||c4>=min-epsilon)&&(max2===void 0||c4<=max2+epsilon);}return true;});}},{key:'cssId',get:function get(){var _this$formats$functio2,_this$formats$functio3;return((_this$formats$functio2=this.formats.functions)===null||_this$formats$functio2===void 0?void 0:(_this$formats$functio3=_this$formats$functio2.color)===null||_this$formats$functio3===void 0?void 0:_this$formats$functio3.id)||this.id;}},{key:'isPolar',get:function get(){for(var id in this.coords){if(this.coords[id].type==='angle'){return true;}}return false;}},{key:'getFormat',value:function getFormat(format){if(_typeof(format)==='object'){format=_classPrivateMethodGet(this,_processFormat,_processFormat2).call(this,format);return format;}var ret;if(format==='default'){ret=Object.values(this.formats)[0];}else{ret=this.formats[format];}if(ret){ret=_classPrivateMethodGet(this,_processFormat,_processFormat2).call(this,ret);return ret;}return null;}},{key:'to',value:function to(space,coords){if(arguments.length===1){var _ref41=[space.space,space.coords];space=_ref41[0];coords=_ref41[1];}space=_ColorSpace.get(space);if(this===space){return coords;}coords=coords.map(function(c4){return Number.isNaN(c4)?0:c4;});var myPath=_classPrivateFieldGet(this,_path);var otherPath=_classPrivateFieldGet(space,_path);var connectionSpace,connectionSpaceIndex;for(var _i12=0;_i12<myPath.length;_i12++){if(myPath[_i12]===otherPath[_i12]){connectionSpace=myPath[_i12];connectionSpaceIndex=_i12;}else{break;}}if(!connectionSpace){throw new Error('Cannot convert between color spaces '.concat(this,' and ').concat(space,': no connection space was found'));}for(var _i13=myPath.length-1;_i13>connectionSpaceIndex;_i13--){coords=myPath[_i13].toBase(coords);}for(var _i14=connectionSpaceIndex+1;_i14<otherPath.length;_i14++){coords=otherPath[_i14].fromBase(coords);}return coords;}},{key:'from',value:function from(space,coords){if(arguments.length===1){var _ref42=[space.space,space.coords];space=_ref42[0];coords=_ref42[1];}space=_ColorSpace.get(space);return space.to(this,coords);}},{key:'toString',value:function toString(){return''.concat(this.name,' (').concat(this.id,')');}},{key:'getMinCoords',value:function getMinCoords(){var ret=[];for(var id in this.coords){var _range2$min;var meta=this.coords[id];var range2=meta.range||meta.refRange;ret.push((_range2$min=range2===null||range2===void 0?void 0:range2.min)!==null&&_range2$min!==void 0?_range2$min:0);}return ret;}}],[{key:'all',get:function get(){return _toConsumableArray(new Set(Object.values(_ColorSpace.registry)));}},{key:'register',value:function register(id,space){if(arguments.length===1){space=arguments[0];id=space.id;}space=this.get(space);if(this.registry[id]&&this.registry[id]!==space){throw new Error('Duplicate color space registration: \\''.concat(id,'\\''));}this.registry[id]=space;if(arguments.length===1&&space.aliases){var _iterator7=_createForOfIteratorHelper(space.aliases),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var alias=_step7.value;this.register(alias,space);}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}}return space;}},{key:'get',value:function get(space){if(!space||space instanceof _ColorSpace){return space;}var argType=type(space);if(argType==='string'){var ret=_ColorSpace.registry[space.toLowerCase()];if(!ret){throw new TypeError('No color space found with id = \"'.concat(space,'\"'));}return ret;}for(var _len2=arguments.length,alternatives=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){alternatives[_key2-1]=arguments[_key2];}if(alternatives.length){return _ColorSpace.get.apply(_ColorSpace,alternatives);}throw new TypeError(''.concat(space,' is not a valid color space'));}},{key:'resolveCoord',value:function resolveCoord(ref,workingSpace){var coordType=type(ref);var space,coord;if(coordType==='string'){if(ref.includes('.')){var _ref$split=ref.split('.');var _ref$split2=_slicedToArray(_ref$split,2);space=_ref$split2[0];coord=_ref$split2[1];}else{space=void 0;coord=ref;}}else if(Array.isArray(ref)){var _ref43=_slicedToArray(ref,2);space=_ref43[0];coord=_ref43[1];}else{space=ref.space;coord=ref.coordId;}space=_ColorSpace.get(space);if(!space){space=workingSpace;}if(!space){throw new TypeError('Cannot resolve coordinate reference '.concat(ref,': No color space specified and relative references are not allowed here'));}coordType=type(coord);if(coordType==='number'||coordType==='string'&&coord>=0){var meta=Object.entries(space.coords)[coord];if(meta){return _extends({space:space,id:meta[0],index:coord},meta[1]);}}space=_ColorSpace.get(space);var normalizedCoord=coord.toLowerCase();var i=0;for(var id in space.coords){var _meta$name;var _meta=space.coords[id];if(id.toLowerCase()===normalizedCoord||((_meta$name=_meta.name)===null||_meta$name===void 0?void 0:_meta$name.toLowerCase())===normalizedCoord){return _extends({space:space,id:id,index:i},_meta);}i++;}throw new TypeError('No \"'.concat(coord,'\" coordinate found in ').concat(space.name,'. Its coordinates are: ').concat(Object.keys(space.coords).join(', ')));}}]);return _ColorSpace;}());function _processFormat2(format){if(format.coords&&!format.coordGrammar){format.type||(format.type='function');format.name||(format.name='color');format.coordGrammar=parseCoordGrammar(format.coords);var coordFormats=Object.entries(this.coords).map(function(_ref151,i){var _ref152=_slicedToArray(_ref151,2),id=_ref152[0],coordMeta=_ref152[1];var outputType=format.coordGrammar[i][0];var fromRange=coordMeta.range||coordMeta.refRange;var toRange=outputType.range,suffix='';if(outputType=='<percentage>'){toRange=[0,100];suffix='%';}else if(outputType=='<angle>'){suffix='deg';}return{fromRange:fromRange,toRange:toRange,suffix:suffix};});format.serializeCoords=function(coords,precision){return coords.map(function(c4,i){var _coordFormats$i=coordFormats[i],fromRange=_coordFormats$i.fromRange,toRange=_coordFormats$i.toRange,suffix=_coordFormats$i.suffix;if(fromRange&&toRange){c4=mapRange(fromRange,toRange,c4);}c4=toPrecision(c4,precision);if(suffix){c4+=suffix;}return c4;});};}return format;}function _getPath2(){var ret=[this];for(var _space2=this;_space2=_space2.base;){ret.push(_space2);}return ret;}var ColorSpace=_ColorSpace;__publicField(ColorSpace,'registry',{});__publicField(ColorSpace,'DEFAULT_FORMAT',{type:'functions',name:'color'});var XYZ_D65=new ColorSpace({id:'xyz-d65',name:'XYZ D65',coords:{x:{name:'X'},y:{name:'Y'},z:{name:'Z'}},white:'D65',formats:{color:{ids:['xyz-d65','xyz']}},aliases:['xyz']});var RGBColorSpace=function(_ColorSpace2){_inherits(RGBColorSpace,_ColorSpace2);var _super=_createSuper(RGBColorSpace);function RGBColorSpace(options){var _options$referred;var _this;_classCallCheck(this,RGBColorSpace);if(!options.coords){options.coords={r:{range:[0,1],name:'Red'},g:{range:[0,1],name:'Green'},b:{range:[0,1],name:'Blue'}};}if(!options.base){options.base=XYZ_D65;}if(options.toXYZ_M&&options.fromXYZ_M){var _options$toBase,_options$fromBase;(_options$toBase=options.toBase)!==null&&_options$toBase!==void 0?_options$toBase:options.toBase=function(rgb){var xyz=multiplyMatrices(options.toXYZ_M,rgb);if(_this.white!==_this.base.white){xyz=adapt$1(_this.white,_this.base.white,xyz);}return xyz;};(_options$fromBase=options.fromBase)!==null&&_options$fromBase!==void 0?_options$fromBase:options.fromBase=function(xyz){xyz=adapt$1(_this.base.white,_this.white,xyz);return multiplyMatrices(options.fromXYZ_M,xyz);};}(_options$referred=options.referred)!==null&&_options$referred!==void 0?_options$referred:options.referred='display';return _this=_super.call(this,options);}return _createClass(RGBColorSpace);}(ColorSpace);function parse2(str){var _String;var env={str:(_String=String(str))===null||_String===void 0?void 0:_String.trim()};hooks.run('parse-start',env);if(env.color){return env.color;}env.parsed=parseFunction(env.str);if(env.parsed){var _ret2=function(){var name=env.parsed.name;if(name==='color'){var id=env.parsed.args.shift();var alpha=env.parsed.rawArgs.indexOf('/')>0?env.parsed.args.pop():1;var _iterator8=_createForOfIteratorHelper(ColorSpace.all),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var space=_step8.value;var colorSpec=space.getFormat('color');if(colorSpec){var _colorSpec$ids;if(id===colorSpec.id||(_colorSpec$ids=colorSpec.ids)!==null&&_colorSpec$ids!==void 0&&_colorSpec$ids.includes(id)){var _ret3=function(){var argCount=Object.keys(space.coords).length;var coords=Array(argCount).fill(0);coords.forEach(function(_,i){return coords[i]=env.parsed.args[i]||0;});return{v:{v:{spaceId:space.id,coords:coords,alpha:alpha}}};}();if(_typeof(_ret3)==='object'){return _ret3.v;}}}}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}var didYouMean='';if(id in ColorSpace.registry){var _ColorSpace$registry$,_ColorSpace$registry$2,_ColorSpace$registry$3;var cssId=(_ColorSpace$registry$=ColorSpace.registry[id].formats)===null||_ColorSpace$registry$===void 0?void 0:(_ColorSpace$registry$2=_ColorSpace$registry$.functions)===null||_ColorSpace$registry$2===void 0?void 0:(_ColorSpace$registry$3=_ColorSpace$registry$2.color)===null||_ColorSpace$registry$3===void 0?void 0:_ColorSpace$registry$3.id;if(cssId){didYouMean='Did you mean color('.concat(cssId,')?');}}throw new TypeError('Cannot parse color('.concat(id,'). ')+(didYouMean||'Missing a plugin?'));}else{var _iterator9=_createForOfIteratorHelper(ColorSpace.all),_step9;try{var _loop5=function _loop5(){var space=_step9.value;var format=space.getFormat(name);if(format&&format.type==='function'){var _alpha=1;if(format.lastAlpha||last(env.parsed.args).alpha){_alpha=env.parsed.args.pop();}var coords=env.parsed.args;if(format.coordGrammar){Object.entries(space.coords).forEach(function(_ref44,i){var _coords$i;var _ref45=_slicedToArray(_ref44,2),id=_ref45[0],coordMeta=_ref45[1];var coordGrammar2=format.coordGrammar[i];var providedType=(_coords$i=coords[i])===null||_coords$i===void 0?void 0:_coords$i.type;coordGrammar2=coordGrammar2.find(function(c4){return c4==providedType;});if(!coordGrammar2){var coordName=coordMeta.name||id;throw new TypeError(''.concat(providedType,' not allowed for ').concat(coordName,' in ').concat(name,'()'));}var fromRange=coordGrammar2.range;if(providedType==='<percentage>'){fromRange||(fromRange=[0,1]);}var toRange=coordMeta.range||coordMeta.refRange;if(fromRange&&toRange){coords[i]=mapRange(fromRange,toRange,coords[i]);}});}return{v:{v:{spaceId:space.id,coords:coords,alpha:_alpha}}};}};for(_iterator9.s();!(_step9=_iterator9.n()).done;){var _ret4=_loop5();if(_typeof(_ret4)==='object'){return _ret4.v;}}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}}}();if(_typeof(_ret2)==='object'){return _ret2.v;}}else{var _iterator10=_createForOfIteratorHelper(ColorSpace.all),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var space=_step10.value;for(var formatId in space.formats){var format=space.formats[formatId];if(format.type!=='custom'){continue;}if(format.test&&!format.test(env.str)){continue;}var color=format.parse(env.str);if(color){var _color$alpha;(_color$alpha=color.alpha)!==null&&_color$alpha!==void 0?_color$alpha:color.alpha=1;return color;}}}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}}throw new TypeError('Could not parse '.concat(str,' as a color. Missing a plugin?'));}function getColor(color){if(!color){throw new TypeError('Empty color reference');}if(isString(color)){color=parse2(color);}var space=color.space||color.spaceId;if(!(space instanceof ColorSpace)){color.space=ColorSpace.get(space);}if(color.alpha===void 0){color.alpha=1;}return color;}function getAll(color,space){space=ColorSpace.get(space);return space.from(color);}function get(color,prop){var _ColorSpace$resolveCo=ColorSpace.resolveCoord(prop,color.space),space=_ColorSpace$resolveCo.space,index=_ColorSpace$resolveCo.index;var coords=getAll(color,space);return coords[index];}function setAll(color,space,coords){space=ColorSpace.get(space);color.coords=space.to(color.space,coords);return color;}function set(color,prop,value){color=getColor(color);if(arguments.length===2&&type(arguments[1])==='object'){var object=arguments[1];for(var p2 in object){set(color,p2,object[p2]);}}else{if(typeof value==='function'){value=value(get(color,prop));}var _ColorSpace$resolveCo2=ColorSpace.resolveCoord(prop,color.space),space=_ColorSpace$resolveCo2.space,index=_ColorSpace$resolveCo2.index;var coords=getAll(color,space);coords[index]=value;setAll(color,space,coords);}return color;}var XYZ_D50=new ColorSpace({id:'xyz-d50',name:'XYZ D50',white:'D50',base:XYZ_D65,fromBase:function fromBase(coords){return adapt$1(XYZ_D65.white,'D50',coords);},toBase:function toBase(coords){return adapt$1('D50',XYZ_D65.white,coords);},formats:{color:{}}});var ε$3=216/24389;var ε3$1=24/116;var κ$1=24389/27;var white$1=WHITES.D50;var lab=new ColorSpace({id:'lab',name:'Lab',coords:{l:{refRange:[0,100],name:'L'},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:white$1,base:XYZ_D50,fromBase:function fromBase(XYZ){var xyz=XYZ.map(function(value,i){return value/white$1[i];});var f=xyz.map(function(value){return value>ε$3?Math.cbrt(value):(κ$1*value+16)/116;});return[116*f[1]-16,500*(f[0]-f[1]),200*(f[1]-f[2])];},toBase:function toBase(Lab){var f=[];f[1]=(Lab[0]+16)/116;f[0]=Lab[1]/500+f[1];f[2]=f[1]-Lab[2]/200;var xyz=[f[0]>ε3$1?Math.pow(f[0],3):(116*f[0]-16)/κ$1,Lab[0]>8?Math.pow((Lab[0]+16)/116,3):Lab[0]/κ$1,f[2]>ε3$1?Math.pow(f[2],3):(116*f[2]-16)/κ$1];return xyz.map(function(value,i){return value*white$1[i];});},formats:{lab:{coords:['<number> | <percentage>','<number>','<number>']}}});function constrain(angle){return(angle%360+360)%360;}function adjust(arc,angles){if(arc==='raw'){return angles;}var _angles$map=angles.map(constrain),_angles$map2=_slicedToArray(_angles$map,2),a1=_angles$map2[0],a2=_angles$map2[1];var angleDiff=a2-a1;if(arc==='increasing'){if(angleDiff<0){a2+=360;}}else if(arc==='decreasing'){if(angleDiff>0){a1+=360;}}else if(arc==='longer'){if(-180<angleDiff&&angleDiff<180){if(angleDiff>0){a2+=360;}else{a1+=360;}}}else if(arc==='shorter'){if(angleDiff>180){a1+=360;}else if(angleDiff<-180){a2+=360;}}return[a1,a2];}var lch=new ColorSpace({id:'lch',name:'LCH',coords:{l:{refRange:[0,100],name:'Lightness'},c:{refRange:[0,150],name:'Chroma'},h:{refRange:[0,360],type:'angle',name:'Hue'}},base:lab,fromBase:function fromBase(Lab){var _Lab=_slicedToArray(Lab,3),L=_Lab[0],a2=_Lab[1],b2=_Lab[2];var hue;var ε2=.02;if(Math.abs(a2)<ε2&&Math.abs(b2)<ε2){hue=NaN;}else{hue=Math.atan2(b2,a2)*180/Math.PI;}return[L,Math.sqrt(Math.pow(a2,2)+Math.pow(b2,2)),constrain(hue)];},toBase:function toBase(LCH){var _LCH=_slicedToArray(LCH,3),Lightness=_LCH[0],Chroma=_LCH[1],Hue=_LCH[2];if(Chroma<0){Chroma=0;}if(isNaN(Hue)){Hue=0;}return[Lightness,Chroma*Math.cos(Hue*Math.PI/180),Chroma*Math.sin(Hue*Math.PI/180)];},formats:{lch:{coords:['<number> | <percentage>','<number>','<number> | <angle>']}}});var Gfactor=Math.pow(25,7);var π$1=Math.PI;var r2d=180/π$1;var d2r$1=π$1/180;function deltaE2000(color,sample){var _ref46=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref46$kL=_ref46.kL,kL=_ref46$kL===void 0?1:_ref46$kL,_ref46$kC=_ref46.kC,kC=_ref46$kC===void 0?1:_ref46$kC,_ref46$kH=_ref46.kH,kH=_ref46$kH===void 0?1:_ref46$kH;var _lab$from=lab.from(color),_lab$from2=_slicedToArray(_lab$from,3),L1=_lab$from2[0],a1=_lab$from2[1],b1=_lab$from2[2];var C1=lch.from(lab,[L1,a1,b1])[1];var _lab$from3=lab.from(sample),_lab$from4=_slicedToArray(_lab$from3,3),L2=_lab$from4[0],a2=_lab$from4[1],b2=_lab$from4[2];var C2=lch.from(lab,[L2,a2,b2])[1];if(C1<0){C1=0;}if(C2<0){C2=0;}var Cbar=(C1+C2)/2;var C7=Math.pow(Cbar,7);var G=.5*(1-Math.sqrt(C7/(C7+Gfactor)));var adash1=(1+G)*a1;var adash2=(1+G)*a2;var Cdash1=Math.sqrt(Math.pow(adash1,2)+Math.pow(b1,2));var Cdash2=Math.sqrt(Math.pow(adash2,2)+Math.pow(b2,2));var h1=adash1===0&&b1===0?0:Math.atan2(b1,adash1);var h2=adash2===0&&b2===0?0:Math.atan2(b2,adash2);if(h1<0){h1+=2*π$1;}if(h2<0){h2+=2*π$1;}h1*=r2d;h2*=r2d;var ΔL=L2-L1;var ΔC=Cdash2-Cdash1;var hdiff=h2-h1;var hsum=h1+h2;var habs=Math.abs(hdiff);var Δh;if(Cdash1*Cdash2===0){Δh=0;}else if(habs<=180){Δh=hdiff;}else if(hdiff>180){Δh=hdiff-360;}else if(hdiff<-180){Δh=hdiff+360;}else{console.log('the unthinkable has happened');}var ΔH=2*Math.sqrt(Cdash2*Cdash1)*Math.sin(Δh*d2r$1/2);var Ldash=(L1+L2)/2;var Cdash=(Cdash1+Cdash2)/2;var Cdash7=Math.pow(Cdash,7);var hdash;if(Cdash1*Cdash2===0){hdash=hsum;}else if(habs<=180){hdash=hsum/2;}else if(hsum<360){hdash=(hsum+360)/2;}else{hdash=(hsum-360)/2;}var lsq=Math.pow(Ldash-50,2);var SL=1+.015*lsq/Math.sqrt(20+lsq);var SC=1+.045*Cdash;var T=1;T-=.17*Math.cos((hdash-30)*d2r$1);T+=.24*Math.cos(2*hdash*d2r$1);T+=.32*Math.cos((3*hdash+6)*d2r$1);T-=.2*Math.cos((4*hdash-63)*d2r$1);var SH=1+.015*Cdash*T;var Δθ=30*Math.exp(-1*Math.pow((hdash-275)/25,2));var RC=2*Math.sqrt(Cdash7/(Cdash7+Gfactor));var RT=-1*Math.sin(2*Δθ*d2r$1)*RC;var dE=Math.pow(ΔL/(kL*SL),2);dE+=Math.pow(ΔC/(kC*SC),2);dE+=Math.pow(ΔH/(kH*SH),2);dE+=RT*(ΔC/(kC*SC))*(ΔH/(kH*SH));return Math.sqrt(dE);}var ε$2=75e-6;function inGamut(color){var space=arguments.length>1&&arguments[1]!==undefined?arguments[1]:color.space;var _ref47=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref47$epsilon=_ref47.epsilon,epsilon=_ref47$epsilon===void 0?ε$2:_ref47$epsilon;color=getColor(color);space=ColorSpace.get(space);var coords=color.coords;if(space!==color.space){coords=space.from(color);}return space.inGamut(coords,{epsilon:epsilon});}function clone2(color){return{space:color.space,coords:color.coords.slice(),alpha:color.alpha};}function toGamut(color){var _ref48=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref48$method=_ref48.method,method=_ref48$method===void 0?defaults.gamut_mapping:_ref48$method,_ref48$space=_ref48.space,space=_ref48$space===void 0?color.space:_ref48$space;if(isString(arguments[1])){space=arguments[1];}space=ColorSpace.get(space);if(inGamut(color,space,{epsilon:0})){return color;}var spaceColor=to(color,space);if(method!=='clip'&&!inGamut(color,space)){var clipped=toGamut(clone2(spaceColor),{method:'clip',space:space});if(deltaE2000(color,clipped)>2){var coordMeta=ColorSpace.resolveCoord(method);var mapSpace=coordMeta.space;var coordId=coordMeta.id;var mappedColor=to(spaceColor,mapSpace);var bounds=coordMeta.range||coordMeta.refRange;var min=bounds[0];var ε2=.01;var low=min;var high=get(mappedColor,coordId);while(high-low>ε2){var clipped2=clone2(mappedColor);clipped2=toGamut(clipped2,{space:space,method:'clip'});var deltaE2=deltaE2000(mappedColor,clipped2);if(deltaE2-2<ε2){low=get(mappedColor,coordId);}else{high=get(mappedColor,coordId);}set(mappedColor,coordId,(low+high)/2);}spaceColor=to(mappedColor,space);}else{spaceColor=clipped;}}if(method==='clip'||!inGamut(spaceColor,space,{epsilon:0})){var _bounds=Object.values(space.coords).map(function(c4){return c4.range||[];});spaceColor.coords=spaceColor.coords.map(function(c4,i){var _bounds$i=_slicedToArray(_bounds[i],2),min=_bounds$i[0],max2=_bounds$i[1];if(min!==void 0){c4=Math.max(min,c4);}if(max2!==void 0){c4=Math.min(c4,max2);}return c4;});}if(space!==color.space){spaceColor=to(spaceColor,color.space);}color.coords=spaceColor.coords;return color;}toGamut.returns='color';function to(color,space){var _ref49=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},inGamut2=_ref49.inGamut;color=getColor(color);space=ColorSpace.get(space);var coords=space.from(color);var ret={space:space,coords:coords,alpha:color.alpha};if(inGamut2){ret=toGamut(ret);}return ret;}to.returns='color';function serialize(color){var _ref51,_color$space$getForma;var _ref50=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref50$precision=_ref50.precision,precision=_ref50$precision===void 0?defaults.precision:_ref50$precision,_ref50$format=_ref50.format,format=_ref50$format===void 0?'default':_ref50$format,_ref50$inGamut=_ref50.inGamut,inGamut$1=_ref50$inGamut===void 0?true:_ref50$inGamut,customOptions=_objectWithoutProperties(_ref50,_excluded9);var ret;color=getColor(color);var formatId=format;format=(_ref51=(_color$space$getForma=color.space.getFormat(format))!==null&&_color$space$getForma!==void 0?_color$space$getForma:color.space.getFormat('default'))!==null&&_ref51!==void 0?_ref51:ColorSpace.DEFAULT_FORMAT;inGamut$1||(inGamut$1=format.toGamut);var coords=color.coords;coords=coords.map(function(c4){return c4?c4:0;});if(inGamut$1&&!inGamut(color)){coords=toGamut(clone2(color),inGamut$1===true?void 0:inGamut$1).coords;}if(format.type==='custom'){customOptions.precision=precision;if(format.serialize){ret=format.serialize(coords,color.alpha,customOptions);}else{throw new TypeError('format '.concat(formatId,' can only be used to parse colors, not for serialization'));}}else{var name=format.name||'color';if(format.serializeCoords){coords=format.serializeCoords(coords,precision);}else{if(precision!==null){coords=coords.map(function(c4){return toPrecision(c4,precision);});}}var args=_toConsumableArray(coords);if(name==='color'){var _format$ids;var cssId=format.id||((_format$ids=format.ids)===null||_format$ids===void 0?void 0:_format$ids[0])||color.space.id;args.unshift(cssId);}var alpha=color.alpha;if(precision!==null){alpha=toPrecision(alpha,precision);}var strAlpha=color.alpha<1&&!format.noAlpha?''.concat(format.commas?',':' /',' ').concat(alpha):'';ret=''.concat(name,'(').concat(args.join(format.commas?', ':' ')).concat(strAlpha,')');}return ret;}var toXYZ_M$5=[[.6369580483012914,.14461690358620832,.1688809751641721],[.2627002120112671,.6779980715188708,.05930171646986196],[0,.028072693049087428,1.060985057710791]];var fromXYZ_M$5=[[1.716651187971268,-.355670783776392,-.25336628137366],[-.666684351832489,1.616481236634939,.0157685458139111],[.017639857445311,-.042770613257809,.942103121235474]];var REC2020Linear=new RGBColorSpace({id:'rec2020-linear',name:'Linear REC.2020',white:'D65',toXYZ_M:toXYZ_M$5,fromXYZ_M:fromXYZ_M$5,formats:{color:{}}});var α=1.09929682680944;var β=.018053968510807;var REC2020=new RGBColorSpace({id:'rec2020',name:'REC.2020',base:REC2020Linear,toBase:function toBase(RGB){return RGB.map(function(val){if(val<β*4.5){return val/4.5;}return Math.pow((val+α-1)/α,1/.45);});},fromBase:function fromBase(RGB){return RGB.map(function(val){if(val>=β){return α*Math.pow(val,.45)-(α-1);}return 4.5*val;});},formats:{color:{}}});var toXYZ_M$4=[[.4865709486482162,.26566769316909306,.1982172852343625],[.2289745640697488,.6917385218365064,.079286914093745],[0,.04511338185890264,1.043944368900976]];var fromXYZ_M$4=[[2.493496911941425,-.9313836179191239,-.40271078445071684],[-.8294889695615747,1.7626640603183463,.023624685841943577],[.03584583024378447,-.07617238926804182,.9568845240076872]];var P3Linear=new RGBColorSpace({id:'p3-linear',name:'Linear P3',white:'D65',toXYZ_M:toXYZ_M$4,fromXYZ_M:fromXYZ_M$4});var toXYZ_M$3=[[.41239079926595934,.357584339383878,.1804807884018343],[.21263900587151027,.715168678767756,.07219231536073371],[.01933081871559182,.11919477979462598,.9505321522496607]];var fromXYZ_M$3=[[3.2409699419045226,-1.537383177570094,-.4986107602930034],[-.9692436362808796,1.8759675015077202,.04155505740717559],[.05563007969699366,-.20397695888897652,1.0569715142428786]];var sRGBLinear=new RGBColorSpace({id:'srgb-linear',name:'Linear sRGB',white:'D65',toXYZ_M:toXYZ_M$3,fromXYZ_M:fromXYZ_M$3,formats:{color:{}}});var KEYWORDS={aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aqua:[0,1,1],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],black:[0,0,0],blanchedalmond:[1,235/255,205/255],blue:[0,0,1],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[153/255,50/255,204/255],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],fuchsia:[1,0,1],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],gray:[128/255,128/255,128/255],green:[0,128/255,0],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,153/255],lightslategrey:[119/255,136/255,153/255],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],lime:[0,1,0],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],maroon:[128/255,0,0],mediumaquamarine:[102/255,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,204/255],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],navy:[0,0,128/255],oldlace:[253/255,245/255,230/255],olive:[128/255,128/255,0],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],purple:[128/255,0,128/255],rebeccapurple:[102/255,51/255,153/255],red:[1,0,0],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],silver:[192/255,192/255,192/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],teal:[0,128/255,128/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],white:[1,1,1],whitesmoke:[245/255,245/255,245/255],yellow:[1,1,0],yellowgreen:[154/255,205/255,50/255]};var coordGrammar=Array(3).fill('<percentage> | <number>[0, 255]');var coordGrammarNumber=Array(3).fill('<number>[0, 255]');var sRGB=new RGBColorSpace({id:'srgb',name:'sRGB',base:sRGBLinear,fromBase:function fromBase(rgb){return rgb.map(function(val){var sign=val<0?-1:1;var abs=val*sign;if(abs>.0031308){return sign*(1.055*Math.pow(abs,1/2.4)-.055);}return 12.92*val;});},toBase:function toBase(rgb){return rgb.map(function(val){var sign=val<0?-1:1;var abs=val*sign;if(abs<.04045){return val/12.92;}return sign*Math.pow((abs+.055)/1.055,2.4);});},formats:{rgb:{coords:coordGrammar},rgb_number:{name:'rgb',commas:true,coords:coordGrammarNumber,noAlpha:true},color:{},rgba:{coords:coordGrammar,commas:true,lastAlpha:true},rgba_number:{name:'rgba',commas:true,coords:coordGrammarNumber},hex:{type:'custom',toGamut:true,test:function test(str){return /^#([a-f0-9]{3,4}){1,2}$/i.test(str);},parse:function parse(str){if(str.length<=5){str=str.replace(/[a-f0-9]/gi,'$&$&');}var rgba=[];str.replace(/[a-f0-9]{2}/gi,function(component){rgba.push(parseInt(component,16)/255);});return{spaceId:'srgb',coords:rgba.slice(0,3),alpha:rgba.slice(3)[0]};},serialize:function serialize(coords,alpha){var _ref52=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref52$collapse=_ref52.collapse,collapse=_ref52$collapse===void 0?true:_ref52$collapse;if(alpha<1){coords.push(alpha);}coords=coords.map(function(c4){return Math.round(c4*255);});var collapsible=collapse&&coords.every(function(c4){return c4%17===0;});var hex=coords.map(function(c4){if(collapsible){return(c4/17).toString(16);}return c4.toString(16).padStart(2,'0');}).join('');return'#'+hex;}},keyword:{type:'custom',test:function test(str){return /^[a-z]+$/i.test(str);},parse:function parse(str){str=str.toLowerCase();var ret={spaceId:'srgb',coords:null,alpha:1};if(str==='transparent'){ret.coords=KEYWORDS.black;ret.alpha=0;}else{ret.coords=KEYWORDS[str];}if(ret.coords){return ret;}}}}});var P3=new RGBColorSpace({id:'p3',name:'P3',base:P3Linear,fromBase:sRGB.fromBase,toBase:sRGB.toBase,formats:{color:{id:'display-p3'}}});defaults.display_space=sRGB;if(typeof CSS!=='undefined'&&CSS.supports){for(var _i15=0,_arr3=[lab,REC2020,P3];_i15<_arr3.length;_i15++){var space=_arr3[_i15];var coords=space.getMinCoords();var color={space:space,coords:coords,alpha:1};var str=serialize(color);if(CSS.supports('color',str)){defaults.display_space=space;break;}}}function _display(color){var _ref53=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref53$space=_ref53.space,space=_ref53$space===void 0?defaults.display_space:_ref53$space,options=_objectWithoutProperties(_ref53,_excluded10);var ret=serialize(color,options);if(typeof CSS==='undefined'||CSS.supports('color',ret)||!defaults.display_space){ret=new String(ret);ret.color=color;}else{var fallbackColor=to(color,space);ret=new String(serialize(fallbackColor,options));ret.color=fallbackColor;}return ret;}function distance(color1,color2){var space=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'lab';space=ColorSpace.get(space);var coords1=space.from(color1);var coords2=space.from(color2);return Math.sqrt(coords1.reduce(function(acc,c12,i){var c22=coords2[i];if(isNaN(c12)||isNaN(c22)){return acc;}return acc+Math.pow(c22-c12,2);},0));}function equals(color1,color2){color1=getColor(color1);color2=getColor(color2);return color1.space===color2.space&&color1.alpha===color2.alpha&&color1.coords.every(function(c4,i){return c4===color2.coords[i];});}function getLuminance(color){return get(color,[XYZ_D65,'y']);}function setLuminance(color,value){set(color,[XYZ_D65,'y'],value);}function register$2(Color3){Object.defineProperty(Color3.prototype,'luminance',{get:function get(){return getLuminance(this);},set:function set(value){setLuminance(this,value);}});}var luminance=Object.freeze({__proto__:null,getLuminance:getLuminance,setLuminance:setLuminance,register:register$2});function contrastWCAG21(color1,color2){color1=getColor(color1);color2=getColor(color2);var Y1=Math.max(getLuminance(color1),0);var Y2=Math.max(getLuminance(color2),0);if(Y2>Y1){var _ref54=[Y2,Y1];Y1=_ref54[0];Y2=_ref54[1];}return(Y1+.05)/(Y2+.05);}var normBG=.56;var normTXT=.57;var revTXT=.62;var revBG=.65;var blkThrs=.022;var blkClmp=1.414;var loClip=.1;var deltaYmin=5e-4;var scaleBoW=1.14;var loBoWoffset=.027;var scaleWoB=1.14;function fclamp(Y){if(Y>=blkThrs){return Y;}return Y+Math.pow(blkThrs-Y,blkClmp);}function linearize(val){var sign=val<0?-1:1;var abs=Math.abs(val);return sign*Math.pow(abs,2.4);}function contrastAPCA(background,foreground){foreground=getColor(foreground);background=getColor(background);var S;var C;var Sapc;var R,G,B;foreground=to(foreground,'srgb');var _foreground$coords=_slicedToArray(foreground.coords,3);R=_foreground$coords[0];G=_foreground$coords[1];B=_foreground$coords[2];var lumTxt=linearize(R)*.2126729+linearize(G)*.7151522+linearize(B)*.072175;background=to(background,'srgb');var _background$coords=_slicedToArray(background.coords,3);R=_background$coords[0];G=_background$coords[1];B=_background$coords[2];var lumBg=linearize(R)*.2126729+linearize(G)*.7151522+linearize(B)*.072175;var Ytxt=fclamp(lumTxt);var Ybg=fclamp(lumBg);var BoW=Ybg>Ytxt;if(Math.abs(Ybg-Ytxt)<deltaYmin){C=0;}else{if(BoW){S=Math.pow(Ybg,normBG)-Math.pow(Ytxt,normTXT);C=S*scaleBoW;}else{S=Math.pow(Ybg,revBG)-Math.pow(Ytxt,revTXT);C=S*scaleWoB;}}if(Math.abs(C)<loClip){Sapc=0;}else if(C>0){Sapc=C-loBoWoffset;}else{Sapc=C+loBoWoffset;}return Sapc*100;}function contrastMichelson(color1,color2){color1=getColor(color1);color2=getColor(color2);var Y1=Math.max(getLuminance(color1),0);var Y2=Math.max(getLuminance(color2),0);if(Y2>Y1){var _ref55=[Y2,Y1];Y1=_ref55[0];Y2=_ref55[1];}var denom=Y1+Y2;return denom===0?0:(Y1-Y2)/denom;}var max=5e4;function contrastWeber(color1,color2){color1=getColor(color1);color2=getColor(color2);var Y1=Math.max(getLuminance(color1),0);var Y2=Math.max(getLuminance(color2),0);if(Y2>Y1){var _ref56=[Y2,Y1];Y1=_ref56[0];Y2=_ref56[1];}return Y2===0?max:(Y1-Y2)/Y2;}function contrastLstar(color1,color2){color1=getColor(color1);color2=getColor(color2);var L1=get(color1,[lab,'l']);var L2=get(color2,[lab,'l']);return Math.abs(L1-L2);}var ε$1=216/24389;var ε3=24/116;var κ=24389/27;var white=WHITES.D65;var lab_d65=new ColorSpace({id:'lab-d65',name:'Lab D65',coords:{l:{refRange:[0,100],name:'L'},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:white,base:XYZ_D65,fromBase:function fromBase(XYZ){var xyz=XYZ.map(function(value,i){return value/white[i];});var f=xyz.map(function(value){return value>ε$1?Math.cbrt(value):(κ*value+16)/116;});return[116*f[1]-16,500*(f[0]-f[1]),200*(f[1]-f[2])];},toBase:function toBase(Lab){var f=[];f[1]=(Lab[0]+16)/116;f[0]=Lab[1]/500+f[1];f[2]=f[1]-Lab[2]/200;var xyz=[f[0]>ε3?Math.pow(f[0],3):(116*f[0]-16)/κ,Lab[0]>8?Math.pow((Lab[0]+16)/116,3):Lab[0]/κ,f[2]>ε3?Math.pow(f[2],3):(116*f[2]-16)/κ];return xyz.map(function(value,i){return value*white[i];});},formats:{'lab-d65':{coords:['<number> | <percentage>','<number>','<number>']}}});var phi=Math.pow(5,.5)*.5+.5;function contrastDeltaPhi(color1,color2){color1=getColor(color1);color2=getColor(color2);var Lstr1=get(color1,[lab_d65,'l']);var Lstr2=get(color2,[lab_d65,'l']);var deltaPhiStar=Math.abs(Math.pow(Lstr1,phi)-Math.pow(Lstr2,phi));var contrast2=Math.pow(deltaPhiStar,1/phi)*Math.SQRT2-40;return contrast2<7.5?0:contrast2;}var contrastMethods=Object.freeze({__proto__:null,contrastWCAG21:contrastWCAG21,contrastAPCA:contrastAPCA,contrastMichelson:contrastMichelson,contrastWeber:contrastWeber,contrastLstar:contrastLstar,contrastDeltaPhi:contrastDeltaPhi});function contrast(background,foreground){var o=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(isString(o)){o={algorithm:o};}var _o=o,algorithm=_o.algorithm,rest=_objectWithoutProperties(_o,_excluded11);if(!algorithm){var algorithms=Object.keys(contrastMethods).map(function(a2){return a2.replace(/^contrast/,'');}).join(', ');throw new TypeError('contrast() function needs a contrast algorithm. Please specify one of: '.concat(algorithms));}background=getColor(background);foreground=getColor(foreground);for(var a2 in contrastMethods){if('contrast'+algorithm.toLowerCase()===a2.toLowerCase()){return contrastMethods[a2](background,foreground,rest);}}throw new TypeError('Unknown contrast algorithm: '.concat(algorithm));}function uv(color){var _getAll=getAll(color,XYZ_D65),_getAll2=_slicedToArray(_getAll,3),X=_getAll2[0],Y=_getAll2[1],Z=_getAll2[2];var denom=X+15*Y+3*Z;return[4*X/denom,9*Y/denom];}function xy(color){var _getAll3=getAll(color,XYZ_D65),_getAll4=_slicedToArray(_getAll3,3),X=_getAll4[0],Y=_getAll4[1],Z=_getAll4[2];var sum=X+Y+Z;return[X/sum,Y/sum];}function register$1(Color3){Object.defineProperty(Color3.prototype,'uv',{get:function get(){return uv(this);}});Object.defineProperty(Color3.prototype,'xy',{get:function get(){return xy(this);}});}var chromaticity=Object.freeze({__proto__:null,uv:uv,xy:xy,register:register$1});function deltaE76(color,sample){return distance(color,sample,'lab');}var π=Math.PI;var d2r=π/180;function deltaECMC(color,sample){var _ref57=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref57$l=_ref57.l,l=_ref57$l===void 0?2:_ref57$l,_ref57$c=_ref57.c,c4=_ref57$c===void 0?1:_ref57$c;var _lab$from5=lab.from(color),_lab$from6=_slicedToArray(_lab$from5,3),L1=_lab$from6[0],a1=_lab$from6[1],b1=_lab$from6[2];var _lch$from=lch.from(lab,[L1,a1,b1]),_lch$from2=_slicedToArray(_lch$from,3),C1=_lch$from2[1],H1=_lch$from2[2];var _lab$from7=lab.from(sample),_lab$from8=_slicedToArray(_lab$from7,3),L2=_lab$from8[0],a2=_lab$from8[1],b2=_lab$from8[2];var C2=lch.from(lab,[L2,a2,b2])[1];if(C1<0){C1=0;}if(C2<0){C2=0;}var ΔL=L1-L2;var ΔC=C1-C2;var Δa=a1-a2;var Δb=b1-b2;var H2=Math.pow(Δa,2)+Math.pow(Δb,2)-Math.pow(ΔC,2);var SL=.511;if(L1>=16){SL=.040975*L1/(1+.01765*L1);}var SC=.0638*C1/(1+.0131*C1)+.638;var T;if(Number.isNaN(H1)){H1=0;}if(H1>=164&&H1<=345){T=.56+Math.abs(.2*Math.cos((H1+168)*d2r));}else{T=.36+Math.abs(.4*Math.cos((H1+35)*d2r));}var C4=Math.pow(C1,4);var F=Math.sqrt(C4/(C4+1900));var SH=SC*(F*T+1-F);var dE=Math.pow(ΔL/(l*SL),2);dE+=Math.pow(ΔC/(c4*SC),2);dE+=H2/Math.pow(SH,2);return Math.sqrt(dE);}var Yw$1=203;var XYZ_Abs_D65=new ColorSpace({id:'xyz-abs-d65',name:'Absolute XYZ D65',coords:{x:{refRange:[0,9504.7],name:'Xa'},y:{refRange:[0,1e4],name:'Ya'},z:{refRange:[0,10888.3],name:'Za'}},base:XYZ_D65,fromBase:function fromBase(XYZ){return XYZ.map(function(v){return Math.max(v*Yw$1,0);});},toBase:function toBase(AbsXYZ){return AbsXYZ.map(function(v){return Math.max(v/Yw$1,0);});}});var b$1=1.15;var g=.66;var n$1=2610/Math.pow(2,14);var ninv$1=Math.pow(2,14)/2610;var c1$2=3424/Math.pow(2,12);var c2$2=2413/Math.pow(2,7);var c3$2=2392/Math.pow(2,7);var p=1.7*2523/Math.pow(2,5);var pinv=Math.pow(2,5)/(1.7*2523);var d=-.56;var d0=16295499532821565e-27;var XYZtoCone_M=[[.41478972,.579999,.014648],[-.20151,1.120649,.0531008],[-.0166008,.2648,.6684799]];var ConetoXYZ_M=[[1.9242264357876067,-1.0047923125953657,.037651404030618],[.35031676209499907,.7264811939316552,-.06538442294808501],[-.09098281098284752,-.3127282905230739,1.5227665613052603]];var ConetoIab_M=[[.5,.5,0],[3.524,-4.066708,.542708],[.199076,1.096799,-1.295875]];var IabtoCone_M=[[1,.1386050432715393,.05804731615611886],[.9999999999999999,-.1386050432715393,-.05804731615611886],[.9999999999999998,-.09601924202631895,-.8118918960560388]];var Jzazbz=new ColorSpace({id:'jzazbz',name:'Jzazbz',coords:{jz:{refRange:[0,1],name:'Jz'},az:{refRange:[-.5,.5]},bz:{refRange:[-.5,.5]}},base:XYZ_Abs_D65,fromBase:function fromBase(XYZ){var _XYZ=_slicedToArray(XYZ,3),Xa=_XYZ[0],Ya=_XYZ[1],Za=_XYZ[2];var Xm=b$1*Xa-(b$1-1)*Za;var Ym=g*Ya-(g-1)*Xa;var LMS=multiplyMatrices(XYZtoCone_M,[Xm,Ym,Za]);var PQLMS=LMS.map(function(val){var num=c1$2+c2$2*Math.pow(val/1e4,n$1);var denom=1+c3$2*Math.pow(val/1e4,n$1);return Math.pow(num/denom,p);});var _multiplyMatrices=multiplyMatrices(ConetoIab_M,PQLMS),_multiplyMatrices2=_slicedToArray(_multiplyMatrices,3),Iz=_multiplyMatrices2[0],az=_multiplyMatrices2[1],bz=_multiplyMatrices2[2];var Jz=(1+d)*Iz/(1+d*Iz)-d0;return[Jz,az,bz];},toBase:function toBase(Jzazbz2){var _Jzazbz=_slicedToArray(Jzazbz2,3),Jz=_Jzazbz[0],az=_Jzazbz[1],bz=_Jzazbz[2];var Iz=(Jz+d0)/(1+d-d*(Jz+d0));var PQLMS=multiplyMatrices(IabtoCone_M,[Iz,az,bz]);var LMS=PQLMS.map(function(val){var num=c1$2-Math.pow(val,pinv);var denom=c3$2*Math.pow(val,pinv)-c2$2;var x=1e4*Math.pow(num/denom,ninv$1);return x;});var _multiplyMatrices3=multiplyMatrices(ConetoXYZ_M,LMS),_multiplyMatrices4=_slicedToArray(_multiplyMatrices3,3),Xm=_multiplyMatrices4[0],Ym=_multiplyMatrices4[1],Za=_multiplyMatrices4[2];var Xa=(Xm+(b$1-1)*Za)/b$1;var Ya=(Ym+(g-1)*Xa)/g;return[Xa,Ya,Za];},formats:{color:{}}});var jzczhz=new ColorSpace({id:'jzczhz',name:'JzCzHz',coords:{jz:{refRange:[0,1],name:'Jz'},cz:{refRange:[0,1],name:'Chroma'},hz:{refRange:[0,360],type:'angle',name:'Hue'}},base:Jzazbz,fromBase:function fromBase(jzazbz){var _jzazbz=_slicedToArray(jzazbz,3),Jz=_jzazbz[0],az=_jzazbz[1],bz=_jzazbz[2];var hue;var ε2=2e-4;if(Math.abs(az)<ε2&&Math.abs(bz)<ε2){hue=NaN;}else{hue=Math.atan2(bz,az)*180/Math.PI;}return[Jz,Math.sqrt(Math.pow(az,2)+Math.pow(bz,2)),constrain(hue)];},toBase:function toBase(jzczhz2){return[jzczhz2[0],jzczhz2[1]*Math.cos(jzczhz2[2]*Math.PI/180),jzczhz2[1]*Math.sin(jzczhz2[2]*Math.PI/180)];},formats:{color:{}}});function deltaEJz(color,sample){var _jzczhz$from=jzczhz.from(color),_jzczhz$from2=_slicedToArray(_jzczhz$from,3),Jz1=_jzczhz$from2[0],Cz1=_jzczhz$from2[1],Hz1=_jzczhz$from2[2];var _jzczhz$from3=jzczhz.from(sample),_jzczhz$from4=_slicedToArray(_jzczhz$from3,3),Jz2=_jzczhz$from4[0],Cz2=_jzczhz$from4[1],Hz2=_jzczhz$from4[2];var ΔJ=Jz1-Jz2;var ΔC=Cz1-Cz2;if(Number.isNaN(Hz1)&&Number.isNaN(Hz2)){Hz1=0;Hz2=0;}else if(Number.isNaN(Hz1)){Hz1=Hz2;}else if(Number.isNaN(Hz2)){Hz2=Hz1;}var Δh=Hz1-Hz2;var ΔH=2*Math.sqrt(Cz1*Cz2)*Math.sin(Δh/2*(Math.PI/180));return Math.sqrt(Math.pow(ΔJ,2)+Math.pow(ΔC,2)+Math.pow(ΔH,2));}var c1$1=3424/4096;var c2$1=2413/128;var c3$1=2392/128;var m1=2610/16384;var m2=2523/32;var im1=16384/2610;var im2=32/2523;var XYZtoLMS_M$1=[[.3592,.6976,-.0358],[-.1922,1.1004,.0755],[.007,.0749,.8434]];var LMStoIPT_M=[[2048/4096,2048/4096,0],[6610/4096,-13613/4096,7003/4096],[17933/4096,-17390/4096,-543/4096]];var IPTtoLMS_M=[[.9999888965628402,.008605050147287059,.11103437159861648],[1.00001110343716,-.008605050147287059,-.11103437159861648],[1.0000320633910054,.56004913547279,-.3206339100541203]];var LMStoXYZ_M$1=[[2.0701800566956137,-1.326456876103021,.20661600684785517],[.3649882500326575,.6804673628522352,-.04542175307585323],[-.04959554223893211,-.04942116118675749,1.1879959417328034]];var ictcp=new ColorSpace({id:'ictcp',name:'ICTCP',coords:{i:{refRange:[0,1],name:'I'},ct:{refRange:[-.5,.5],name:'CT'},cp:{refRange:[-.5,.5],name:'CP'}},base:XYZ_Abs_D65,fromBase:function fromBase(XYZ){var LMS=multiplyMatrices(XYZtoLMS_M$1,XYZ);return LMStoICtCp(LMS);},toBase:function toBase(ICtCp){var LMS=ICtCptoLMS(ICtCp);return multiplyMatrices(LMStoXYZ_M$1,LMS);},formats:{color:{}}});function LMStoICtCp(LMS){var PQLMS=LMS.map(function(val){var num=c1$1+c2$1*Math.pow(val/1e4,m1);var denom=1+c3$1*Math.pow(val/1e4,m1);return Math.pow(num/denom,m2);});return multiplyMatrices(LMStoIPT_M,PQLMS);}function ICtCptoLMS(ICtCp){var PQLMS=multiplyMatrices(IPTtoLMS_M,ICtCp);var LMS=PQLMS.map(function(val){var num=Math.max(Math.pow(val,im2)-c1$1,0);var denom=c2$1-c3$1*Math.pow(val,im2);return 1e4*Math.pow(num/denom,im1);});return LMS;}function deltaEITP(color,sample){var _ictcp$from=ictcp.from(color),_ictcp$from2=_slicedToArray(_ictcp$from,3),I1=_ictcp$from2[0],T1=_ictcp$from2[1],P1=_ictcp$from2[2];var _ictcp$from3=ictcp.from(sample),_ictcp$from4=_slicedToArray(_ictcp$from3,3),I2=_ictcp$from4[0],T2=_ictcp$from4[1],P2=_ictcp$from4[2];return 720*Math.sqrt(Math.pow(I1-I2,2)+.25*Math.pow(T1-T2,2)+Math.pow(P1-P2,2));}var XYZtoLMS_M=[[.8190224432164319,.3619062562801221,-.12887378261216414],[.0329836671980271,.9292868468965546,.03614466816999844],[.048177199566046255,.26423952494422764,.6335478258136937]];var LMStoXYZ_M=[[1.2268798733741557,-.5578149965554813,.28139105017721583],[-.04057576262431372,1.1122868293970594,-.07171106666151701],[-.07637294974672142,-.4214933239627914,1.5869240244272418]];var LMStoLab_M=[[.2104542553,.793617785,-.0040720468],[1.9779984951,-2.428592205,.4505937099],[.0259040371,.7827717662,-.808675766]];var LabtoLMS_M=[[.9999999984505198,.39633779217376786,.2158037580607588],[1.0000000088817609,-.10556134232365635,-.06385417477170591],[1.0000000546724108,-.08948418209496575,-1.2914855378640917]];var OKLab=new ColorSpace({id:'oklab',name:'OKLab',coords:{l:{refRange:[0,1],name:'L'},a:{refRange:[-.4,.4]},b:{refRange:[-.4,.4]}},white:'D65',base:XYZ_D65,fromBase:function fromBase(XYZ){var LMS=multiplyMatrices(XYZtoLMS_M,XYZ);var LMSg=LMS.map(function(val){return Math.cbrt(val);});return multiplyMatrices(LMStoLab_M,LMSg);},toBase:function toBase(OKLab2){var LMSg=multiplyMatrices(LabtoLMS_M,OKLab2);var LMS=LMSg.map(function(val){return Math.pow(val,3);});return multiplyMatrices(LMStoXYZ_M,LMS);},formats:{oklab:{coords:['<number> | <percentage>','<number>','<number>']}}});function deltaEOK(color,sample){var _OKLab$from=OKLab.from(color),_OKLab$from2=_slicedToArray(_OKLab$from,3),L1=_OKLab$from2[0],a1=_OKLab$from2[1],b1=_OKLab$from2[2];var _OKLab$from3=OKLab.from(sample),_OKLab$from4=_slicedToArray(_OKLab$from3,3),L2=_OKLab$from4[0],a2=_OKLab$from4[1],b2=_OKLab$from4[2];var ΔL=L1-L2;var Δa=a1-a2;var Δb=b1-b2;return Math.sqrt(Math.pow(ΔL,2)+Math.pow(Δa,2)+Math.pow(Δb,2));}var deltaEMethods=Object.freeze({__proto__:null,deltaE76:deltaE76,deltaECMC:deltaECMC,deltaE2000:deltaE2000,deltaEJz:deltaEJz,deltaEITP:deltaEITP,deltaEOK:deltaEOK});function deltaE(c12,c22){var o=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(isString(o)){o={method:o};}var _o2=o,_o2$method=_o2.method,method=_o2$method===void 0?defaults.deltaE:_o2$method,rest=_objectWithoutProperties(_o2,_excluded12);c12=getColor(c12);c22=getColor(c22);for(var m3 in deltaEMethods){if('deltae'+method.toLowerCase()===m3.toLowerCase()){return deltaEMethods[m3](c12,c22,rest);}}throw new TypeError('Unknown deltaE method: '.concat(method));}function lighten(color){var amount=arguments.length>1&&arguments[1]!==undefined?arguments[1]:.25;var space=ColorSpace.get('oklch','lch');var lightness=[space,'l'];return set(color,lightness,function(l){return l*(1+amount);});}function darken(color){var amount=arguments.length>1&&arguments[1]!==undefined?arguments[1]:.25;var space=ColorSpace.get('oklch','lch');var lightness=[space,'l'];return set(color,lightness,function(l){return l*(1-amount);});}var variations=Object.freeze({__proto__:null,lighten:lighten,darken:darken});function mix(c12,c22){var p2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:.5;var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var _ref58=[getColor(c12),getColor(c22)];c12=_ref58[0];c22=_ref58[1];if(type(p2)==='object'){var _ref59=[.5,p2];p2=_ref59[0];o=_ref59[1];}var _o3=o,space=_o3.space,outputSpace=_o3.outputSpace,premultiplied=_o3.premultiplied;var r=range(c12,c22,{space:space,outputSpace:outputSpace,premultiplied:premultiplied});return r(p2);}function steps(c12,c22){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var colorRange;if(isRange(c12)){colorRange=c12;options=c22;var _colorRange$rangeArgs=_slicedToArray(colorRange.rangeArgs.colors,2);c12=_colorRange$rangeArgs[0];c22=_colorRange$rangeArgs[1];}var _options=options,maxDeltaE=_options.maxDeltaE,deltaEMethod=_options.deltaEMethod,_options$steps=_options.steps,steps2=_options$steps===void 0?2:_options$steps,_options$maxSteps=_options.maxSteps,maxSteps=_options$maxSteps===void 0?1e3:_options$maxSteps,rangeOptions=_objectWithoutProperties(_options,_excluded13);if(!colorRange){var _ref60=[getColor(c12),getColor(c22)];c12=_ref60[0];c22=_ref60[1];colorRange=range(c12,c22,rangeOptions);}var totalDelta=deltaE(c12,c22);var actualSteps=maxDeltaE>0?Math.max(steps2,Math.ceil(totalDelta/maxDeltaE)+1):steps2;var ret=[];if(maxSteps!==void 0){actualSteps=Math.min(actualSteps,maxSteps);}if(actualSteps===1){ret=[{p:.5,color:colorRange(.5)}];}else{var step=1/(actualSteps-1);ret=Array.from({length:actualSteps},function(_,i){var p2=i*step;return{p:p2,color:colorRange(p2)};});}if(maxDeltaE>0){var maxDelta=ret.reduce(function(acc,cur,i){if(i===0){return 0;}var ΔΕ=deltaE(cur.color,ret[i-1].color,deltaEMethod);return Math.max(acc,ΔΕ);},0);while(maxDelta>maxDeltaE){maxDelta=0;for(var _i16=1;_i16<ret.length&&ret.length<maxSteps;_i16++){var prev=ret[_i16-1];var cur=ret[_i16];var p2=(cur.p+prev.p)/2;var _color=colorRange(p2);maxDelta=Math.max(maxDelta,deltaE(_color,prev.color),deltaE(_color,cur.color));ret.splice(_i16,0,{p:p2,color:colorRange(p2)});_i16++;}}}ret=ret.map(function(a2){return a2.color;});return ret;}function range(color1,color2){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(isRange(color1)){var r=color1,options2=color2;return range.apply(void 0,_toConsumableArray(r.rangeArgs.colors).concat([_extends({},r.rangeArgs.options,options2)]));}var space=options.space,outputSpace=options.outputSpace,progression=options.progression,premultiplied=options.premultiplied;color1=getColor(color1);color2=getColor(color2);color1=clone2(color1);color2=clone2(color2);var rangeArgs={colors:[color1,color2],options:options};if(space){space=ColorSpace.get(space);}else{space=ColorSpace.registry[defaults.interpolationSpace]||color1.space;}outputSpace=outputSpace?ColorSpace.get(outputSpace):space;color1=to(color1,space);color2=to(color2,space);color1=toGamut(color1);color2=toGamut(color2);if(space.coords.h&&space.coords.h.type==='angle'){var arc=options.hue=options.hue||'shorter';var hue=[space,'h'];var _ref61=[get(color1,hue),get(color2,hue)],θ1=_ref61[0],θ2=_ref61[1];var _adjust=adjust(arc,[θ1,θ2]);var _adjust2=_slicedToArray(_adjust,2);θ1=_adjust2[0];θ2=_adjust2[1];set(color1,hue,θ1);set(color2,hue,θ2);}if(premultiplied){color1.coords=color1.coords.map(function(c4){return c4*color1.alpha;});color2.coords=color2.coords.map(function(c4){return c4*color2.alpha;});}return Object.assign(function(p2){p2=progression?progression(p2):p2;var coords=color1.coords.map(function(start,i){var end=color2.coords[i];return interpolate(start,end,p2);});var alpha=interpolate(color1.alpha,color2.alpha,p2);var ret={space:space,coords:coords,alpha:alpha};if(premultiplied){ret.coords=ret.coords.map(function(c4){return c4/alpha;});}if(outputSpace!==space){ret=to(ret,outputSpace);}return ret;},{rangeArgs:rangeArgs});}function isRange(val){return type(val)==='function'&&!!val.rangeArgs;}defaults.interpolationSpace='lab';function register(Color3){Color3.defineFunction('mix',mix,{returns:'color'});Color3.defineFunction('range',range,{returns:'function<color>'});Color3.defineFunction('steps',steps,{returns:'array<color>'});}var interpolation=Object.freeze({__proto__:null,mix:mix,steps:steps,range:range,isRange:isRange,register:register});var HSL=new ColorSpace({id:'hsl',name:'HSL',coords:{h:{refRange:[0,360],type:'angle',name:'Hue'},s:{range:[0,100],name:'Saturation'},l:{range:[0,100],name:'Lightness'}},base:sRGB,fromBase:function fromBase(rgb){var max2=Math.max.apply(Math,_toConsumableArray(rgb));var min=Math.min.apply(Math,_toConsumableArray(rgb));var _rgb=_slicedToArray(rgb,3),r=_rgb[0],g2=_rgb[1],b2=_rgb[2];var h=NaN,s=0,l=(min+max2)/2;var d2=max2-min;if(d2!==0){s=l===0||l===1?0:(max2-l)/Math.min(l,1-l);switch(max2){case r:h=(g2-b2)/d2+(g2<b2?6:0);break;case g2:h=(b2-r)/d2+2;break;case b2:h=(r-g2)/d2+4;}h=h*60;}return[h,s*100,l*100];},toBase:function toBase(hsl){var _hsl=_slicedToArray(hsl,3),h=_hsl[0],s=_hsl[1],l=_hsl[2];h=h%360;if(h<0){h+=360;}s/=100;l/=100;function f(n2){var k=(n2+h/30)%12;var a2=s*Math.min(l,1-l);return l-a2*Math.max(-1,Math.min(k-3,9-k,1));}return[f(0),f(8),f(4)];},formats:{hsl:{toGamut:true,coords:['<number> | <angle>','<percentage>','<percentage>']},hsla:{coords:['<number> | <angle>','<percentage>','<percentage>'],commas:true,lastAlpha:true}}});var HSV=new ColorSpace({id:'hsv',name:'HSV',coords:{h:{refRange:[0,360],type:'angle',name:'Hue'},s:{range:[0,100],name:'Saturation'},v:{range:[0,100],name:'Value'}},base:HSL,fromBase:function fromBase(hsl){var _hsl2=_slicedToArray(hsl,3),h=_hsl2[0],s=_hsl2[1],l=_hsl2[2];s/=100;l/=100;var v=l+s*Math.min(l,1-l);return[h,v===0?0:200*(1-l/v),100*v];},toBase:function toBase(hsv){var _hsv=_slicedToArray(hsv,3),h=_hsv[0],s=_hsv[1],v=_hsv[2];s/=100;v/=100;var l=v*(1-s/2);return[h,l===0||l===1?0:(v-l)/Math.min(l,1-l)*100,l*100];},formats:{color:{toGamut:true}}});var hwb=new ColorSpace({id:'hwb',name:'HWB',coords:{h:{refRange:[0,360],type:'angle',name:'Hue'},w:{range:[0,100],name:'Whiteness'},b:{range:[0,100],name:'Blackness'}},base:HSV,fromBase:function fromBase(hsv){var _hsv2=_slicedToArray(hsv,3),h=_hsv2[0],s=_hsv2[1],v=_hsv2[2];return[h,v*(100-s)/100,100-v];},toBase:function toBase(hwb2){var _hwb=_slicedToArray(hwb2,3),h=_hwb[0],w=_hwb[1],b2=_hwb[2];w/=100;b2/=100;var sum=w+b2;if(sum>=1){var gray=w/sum;return[h,0,gray*100];}var v=1-b2;var s=v===0?0:1-w/v;return[h,s*100,v*100];},formats:{hwb:{toGamut:true,coords:['<number> | <angle>','<percentage>','<percentage>']}}});var toXYZ_M$2=[[.5766690429101305,.1855582379065463,.1882286462349947],[.29734497525053605,.6273635662554661,.07529145849399788],[.02703136138641234,.07068885253582723,.9913375368376388]];var fromXYZ_M$2=[[2.0415879038107465,-.5650069742788596,-.34473135077832956],[-.9692436362808795,1.8759675015077202,.04155505740717557],[.013444280632031142,-.11836239223101838,1.0151749943912054]];var A98Linear=new RGBColorSpace({id:'a98rgb-linear',name:'Linear Adobe\\xae 98 RGB compatible',white:'D65',toXYZ_M:toXYZ_M$2,fromXYZ_M:fromXYZ_M$2});var a98rgb=new RGBColorSpace({id:'a98rgb',name:'Adobe\\xae 98 RGB compatible',base:A98Linear,toBase:function toBase(RGB){return RGB.map(function(val){return Math.pow(Math.abs(val),563/256)*Math.sign(val);});},fromBase:function fromBase(RGB){return RGB.map(function(val){return Math.pow(Math.abs(val),256/563)*Math.sign(val);});},formats:{color:{id:'a98-rgb'}}});var toXYZ_M$1=[[.7977604896723027,.13518583717574031,.0313493495815248],[.2880711282292934,.7118432178101014,8565396060525902e-20],[0,0,.8251046025104601]];var fromXYZ_M$1=[[1.3457989731028281,-.25558010007997534,-.05110628506753401],[-.5446224939028347,1.5082327413132781,.02053603239147973],[0,0,1.2119675456389454]];var ProPhotoLinear=new RGBColorSpace({id:'prophoto-linear',name:'Linear ProPhoto',white:'D50',base:XYZ_D50,toXYZ_M:toXYZ_M$1,fromXYZ_M:fromXYZ_M$1});var Et=1/512;var Et2=16/512;var prophoto=new RGBColorSpace({id:'prophoto',name:'ProPhoto',base:ProPhotoLinear,toBase:function toBase(RGB){return RGB.map(function(v){return v<Et2?v/16:Math.pow(v,1.8);});},fromBase:function fromBase(RGB){return RGB.map(function(v){return v>=Et?Math.pow(v,1/1.8):16*v;});},formats:{color:{id:'prophoto-rgb'}}});var oklch=new ColorSpace({id:'oklch',name:'OKLCh',coords:{l:{refRange:[0,1],name:'Lightness'},c:{refRange:[0,.4],name:'Chroma'},h:{refRange:[0,360],type:'angle',name:'Hue'}},white:'D65',base:OKLab,fromBase:function fromBase(oklab){var _oklab=_slicedToArray(oklab,3),L=_oklab[0],a2=_oklab[1],b2=_oklab[2];var h;var ε2=2e-4;if(Math.abs(a2)<ε2&&Math.abs(b2)<ε2){h=NaN;}else{h=Math.atan2(b2,a2)*180/Math.PI;}return[L,Math.sqrt(Math.pow(a2,2)+Math.pow(b2,2)),constrain(h)];},toBase:function toBase(oklch2){var _oklch=_slicedToArray(oklch2,3),L=_oklch[0],C=_oklch[1],h=_oklch[2];var a2,b2;if(isNaN(h)){a2=0;b2=0;}else{a2=C*Math.cos(h*Math.PI/180);b2=C*Math.sin(h*Math.PI/180);}return[L,a2,b2];},formats:{oklch:{coords:['<number> | <percentage>','<number>','<number> | <angle>']}}});var Yw=203;var n=2610/Math.pow(2,14);var ninv=Math.pow(2,14)/2610;var m=2523/Math.pow(2,5);var minv=Math.pow(2,5)/2523;var c1=3424/Math.pow(2,12);var c2=2413/Math.pow(2,7);var c3=2392/Math.pow(2,7);var rec2100Pq=new RGBColorSpace({id:'rec2100pq',name:'REC.2100-PQ',base:REC2020Linear,toBase:function toBase(RGB){return RGB.map(function(val){var x=Math.pow(Math.max(Math.pow(val,minv)-c1,0)/(c2-c3*Math.pow(val,minv)),ninv);return x*1e4/Yw;});},fromBase:function fromBase(RGB){return RGB.map(function(val){var x=Math.max(val*Yw/1e4,0);var num=c1+c2*Math.pow(x,n);var denom=1+c3*Math.pow(x,n);return Math.pow(num/denom,m);});},formats:{color:{id:'rec2100-pq'}}});var a=.17883277;var b=.28466892;var c=.55991073;var scale=3.7743;var rec2100Hlg=new RGBColorSpace({id:'rec2100hlg',cssid:'rec2100-hlg',name:'REC.2100-HLG',referred:'scene',base:REC2020Linear,toBase:function toBase(RGB){return RGB.map(function(val){if(val<=.5){return Math.pow(val,2)/3*scale;}return Math.exp((val-c)/a+b)/12*scale;});},fromBase:function fromBase(RGB){return RGB.map(function(val){val/=scale;if(val<=1/12){return Math.sqrt(3*val);}return a*Math.log(12*val-b)+c;});},formats:{color:{id:'rec2100-hlg'}}});var CATs={};hooks.add('chromatic-adaptation-start',function(env){if(env.options.method){env.M=adapt(env.W1,env.W2,env.options.method);}});hooks.add('chromatic-adaptation-end',function(env){if(!env.M){env.M=adapt(env.W1,env.W2,env.options.method);}});function defineCAT(_ref62){var id=_ref62.id,toCone_M=_ref62.toCone_M,fromCone_M=_ref62.fromCone_M;CATs[id]=arguments[0];}function adapt(W1,W2){var id=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'Bradford';var method=CATs[id];var _multiplyMatrices5=multiplyMatrices(method.toCone_M,W1),_multiplyMatrices6=_slicedToArray(_multiplyMatrices5,3),ρs=_multiplyMatrices6[0],γs=_multiplyMatrices6[1],βs=_multiplyMatrices6[2];var _multiplyMatrices7=multiplyMatrices(method.toCone_M,W2),_multiplyMatrices8=_slicedToArray(_multiplyMatrices7,3),ρd=_multiplyMatrices8[0],γd=_multiplyMatrices8[1],βd=_multiplyMatrices8[2];var scale2=[[ρd/ρs,0,0],[0,γd/γs,0],[0,0,βd/βs]];var scaled_cone_M=multiplyMatrices(scale2,method.toCone_M);var adapt_M=multiplyMatrices(method.fromCone_M,scaled_cone_M);return adapt_M;}defineCAT({id:'von Kries',toCone_M:[[.40024,.7076,-.08081],[-.2263,1.16532,.0457],[0,0,.91822]],fromCone_M:[[1.8599364,-1.1293816,.2198974],[.3611914,.6388125,-64e-7],[0,0,1.0890636]]});defineCAT({id:'Bradford',toCone_M:[[.8951,.2664,-.1614],[-.7502,1.7135,.0367],[.0389,-.0685,1.0296]],fromCone_M:[[.9869929,-.1470543,.1599627],[.4323053,.5183603,.0492912],[-.0085287,.0400428,.9684867]]});defineCAT({id:'CAT02',toCone_M:[[.7328,.4296,-.1624],[-.7036,1.6975,.0061],[.003,.0136,.9834]],fromCone_M:[[1.0961238,-.278869,.1827452],[.454369,.4735332,.0720978],[-.0096276,-.005698,1.0153256]]});defineCAT({id:'CAT16',toCone_M:[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],fromCone_M:[[1.862067855087233,-1.011254630531685,.1491867754444518],[.3875265432361372,.6214474419314753,-.008973985167612518],[-.01584149884933386,-.03412293802851557,1.04996443687785]]});Object.assign(WHITES,{A:[1.0985,1,.35585],C:[.98074,1,1.18232],D55:[.95682,1,.92149],D75:[.94972,1,1.22638],E:[1,1,1],F2:[.99186,1,.67393],F7:[.95041,1,1.08747],F11:[1.00962,1,.6435]});WHITES.ACES=[.32168/.33767,1,(1-.32168-.33767)/.33767];var toXYZ_M=[[.6624541811085053,.13400420645643313,.1561876870049078],[.27222871678091454,.6740817658111484,.05368951740793705],[-.005574649490394108,.004060733528982826,1.0103391003129971]];var fromXYZ_M=[[1.6410233796943257,-.32480329418479,-.23642469523761225],[-.6636628587229829,1.6153315916573379,.016756347685530137],[.011721894328375376,-.008284441996237409,.9883948585390215]];var ACEScg=new RGBColorSpace({id:'acescg',name:'ACEScg',coords:{r:{range:[0,65504],name:'Red'},g:{range:[0,65504],name:'Green'},b:{range:[0,65504],name:'Blue'}},referred:'scene',white:WHITES.ACES,toXYZ_M:toXYZ_M,fromXYZ_M:fromXYZ_M,formats:{color:{}}});var ε=Math.pow(2,-16);var ACES_min_nonzero=-.35828683;var ACES_cc_max=(Math.log2(65504)+9.72)/17.52;var acescc=new RGBColorSpace({id:'acescc',name:'ACEScc',coords:{r:{range:[ACES_min_nonzero,ACES_cc_max],name:'Red'},g:{range:[ACES_min_nonzero,ACES_cc_max],name:'Green'},b:{range:[ACES_min_nonzero,ACES_cc_max],name:'Blue'}},referred:'scene',base:ACEScg,toBase:function toBase(RGB){var low=(9.72-15)/17.52;return RGB.map(function(val){if(val<=low){return(Math.pow(2,val*17.52-9.72)-ε)*2;}else if(val<ACES_cc_max){return Math.pow(2,val*17.52-9.72);}else{return 65504;}});},fromBase:function fromBase(RGB){return RGB.map(function(val){if(val<=0){return(Math.log2(ε)+9.72)/17.52;}else if(val<ε){return(Math.log2(ε+val*.5)+9.72)/17.52;}else{return(Math.log2(val)+9.72)/17.52;}});},formats:{color:{}}});var spaces=Object.freeze({__proto__:null,XYZ_D65:XYZ_D65,XYZ_D50:XYZ_D50,XYZ_ABS_D65:XYZ_Abs_D65,Lab_D65:lab_d65,Lab:lab,LCH:lch,sRGB_Linear:sRGBLinear,sRGB:sRGB,HSL:HSL,HWB:hwb,HSV:HSV,P3_Linear:P3Linear,P3:P3,A98RGB_Linear:A98Linear,A98RGB:a98rgb,ProPhoto_Linear:ProPhotoLinear,ProPhoto:prophoto,REC_2020_Linear:REC2020Linear,REC_2020:REC2020,OKLab:OKLab,OKLCH:oklch,Jzazbz:Jzazbz,JzCzHz:jzczhz,ICTCP:ictcp,REC_2100_PQ:rec2100Pq,REC_2100_HLG:rec2100Hlg,ACEScg:ACEScg,ACEScc:acescc});var Color=(_space=new WeakMap(),function(){function Color(){var _this2=this;_classCallCheck(this,Color);_classPrivateFieldInitSpec(this,_space,{writable:true,value:void 0});var color;for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}if(args.length===1){color=getColor(args[0]);}var space,coords,alpha;if(color){space=color.space||color.spaceId;coords=color.coords;alpha=color.alpha;}else{space=args[0];coords=args[1];alpha=args[2];}_classPrivateFieldSet(this,_space,ColorSpace.get(space));this.coords=coords?coords.slice():[0,0,0];this.alpha=alpha<1?alpha:1;for(var _i17=0;_i17<this.coords.length;_i17++){if(this.coords[_i17]==='NaN'){this.coords[_i17]=NaN;}}var _loop6=function _loop6(id){Object.defineProperty(_this2,id,{get:function get(){return _this2.get(id);},set:function set(value){return _this2.set(id,value);}});};for(var id in _classPrivateFieldGet(this,_space).coords){_loop6(id);}}_createClass(Color,[{key:'space',get:function get(){return _classPrivateFieldGet(this,_space);}},{key:'spaceId',get:function get(){return _classPrivateFieldGet(this,_space).id;}},{key:'clone',value:function clone(){return new Color(this.space,this.coords,this.alpha);}},{key:'toJSON',value:function toJSON(){return{spaceId:this.spaceId,coords:this.coords,alpha:this.alpha};}},{key:'display',value:function display(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}var ret=_display.apply(void 0,[this].concat(args));ret.color=new Color(ret.color);return ret;}}],[{key:'get',value:function get(color){if(color instanceof Color){return color;}for(var _len5=arguments.length,args=new Array(_len5>1?_len5-1:0),_key5=1;_key5<_len5;_key5++){args[_key5-1]=arguments[_key5];}return _construct(Color,[color].concat(args));}},{key:'defineFunction',value:function defineFunction(name,code){var o=arguments.length>2&&arguments[2]!==undefined?arguments[2]:code;var _o$instance=o.instance,instance=_o$instance===void 0?true:_o$instance,returns=o.returns;var func=function func(){var ret=code.apply(void 0,arguments);if(returns==='color'){ret=Color.get(ret);}else if(returns==='function<color>'){var f=ret;ret=function ret(){var ret2=f.apply(void 0,arguments);return Color.get(ret2);};Object.assign(ret,f);}else if(returns==='array<color>'){ret=ret.map(function(c4){return Color.get(c4);});}return ret;};if(!(name in Color)){Color[name]=func;}if(instance){Color.prototype[name]=function(){for(var _len6=arguments.length,args=new Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}return func.apply(void 0,[this].concat(args));};}}},{key:'defineFunctions',value:function defineFunctions(o){for(var name in o){Color.defineFunction(name,o[name],o[name]);}}},{key:'extend',value:function extend(exports){if(exports.register){exports.register(Color);}else{for(var name in exports){Color.defineFunction(name,exports[name]);}}}}]);return Color;}());Color.defineFunctions({get:get,getAll:getAll,set:set,setAll:setAll,to:to,equals:equals,inGamut:inGamut,toGamut:toGamut,distance:distance,toString:serialize});Object.assign(Color,{util:util,hooks:hooks,WHITES:WHITES,Space:ColorSpace,spaces:ColorSpace.registry,parse:parse2,defaults:defaults});for(var _i18=0,_Object$keys2=Object.keys(spaces);_i18<_Object$keys2.length;_i18++){var key=_Object$keys2[_i18];ColorSpace.register(spaces[key]);}for(var id in ColorSpace.registry){addSpaceAccessors(id,ColorSpace.registry[id]);}hooks.add('colorspace-init-end',function(space){var _space$aliases;addSpaceAccessors(space.id,space);(_space$aliases=space.aliases)===null||_space$aliases===void 0?void 0:_space$aliases.forEach(function(alias){addSpaceAccessors(alias,space);});});function addSpaceAccessors(id,space){Object.keys(space.coords);Object.values(space.coords).map(function(c4){return c4.name;});var propId=id.replace(/-/g,'_');Object.defineProperty(Color.prototype,propId,{get:function get(){var _this3=this;var ret=this.getAll(id);if(typeof Proxy==='undefined'){return ret;}return new Proxy(ret,{has:function has(obj,property){try{ColorSpace.resolveCoord([space,property]);return true;}catch(e){}return Reflect.has(obj,property);},get:function get(obj,property,receiver){if(property&&_typeof(property)!=='symbol'&&!(property in obj)){var _ColorSpace$resolveCo3=ColorSpace.resolveCoord([space,property]),index=_ColorSpace$resolveCo3.index;if(index>=0){return obj[index];}}return Reflect.get(obj,property,receiver);},set:function set(obj,property,value,receiver){if(property&&_typeof(property)!=='symbol'&&!(property in obj)||property>=0){var _ColorSpace$resolveCo4=ColorSpace.resolveCoord([space,property]),index=_ColorSpace$resolveCo4.index;if(index>=0){obj[index]=value;_this3.setAll(id,obj);return true;}}return Reflect.set(obj,property,value,receiver);}});},set:function set(coords){this.setAll(id,coords);},configurable:true,enumerable:true});}Color.extend(deltaEMethods);Color.extend({deltaE:deltaE});Color.extend(variations);Color.extend({contrast:contrast});Color.extend(chromaticity);Color.extend(luminance);Color.extend(interpolation);Color.extend(contrastMethods);var import_es6_promise=__toModule(require_es6_promise());var import_typedarray=__toModule(require_typedarray());var import_weakmap_polyfill=__toModule(require_weakmap_polyfill());var import_has_own=__toModule(require_has_own3());if(!('hasOwn'in Object)){Object.hasOwn=import_has_own['default'];}import_dot['default'].templateSettings.strip=false;if(!('Promise'in window)){import_es6_promise['default'].polyfill();}if(!('Uint32Array'in window)){window.Uint32Array=import_typedarray.Uint32Array;}if(window.Uint32Array){if(!('some'in window.Uint32Array.prototype)){Object.defineProperty(window.Uint32Array.prototype,'some',{value:Array.prototype.some});}if(!('reduce'in window.Uint32Array.prototype)){Object.defineProperty(window.Uint32Array.prototype,'reduce',{value:Array.prototype.reduce});}}var hexRegex=/^#[0-9a-f]{3,8}$/i;var hslRegex=/hsl\\(\\s*([\\d.]+)(rad|turn)/;var Color2=function(){function Color2(red,green,blue){var alpha=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,Color2);this.red=red;this.green=green;this.blue=blue;this.alpha=alpha;}_createClass(Color2,[{key:'toHexString',value:function toHexString(){var redString=Math.round(this.red).toString(16);var greenString=Math.round(this.green).toString(16);var blueString=Math.round(this.blue).toString(16);return'#'+(this.red>15.5?redString:'0'+redString)+(this.green>15.5?greenString:'0'+greenString)+(this.blue>15.5?blueString:'0'+blueString);}},{key:'toJSON',value:function toJSON(){var red=this.red,green=this.green,blue=this.blue,alpha=this.alpha;return{red:red,green:green,blue:blue,alpha:alpha};}},{key:'parseString',value:function parseString(colorString){colorString=colorString.replace(hslRegex,function(match,angle,unit){var value=angle+unit;switch(unit){case'rad':return match.replace(value,radToDeg(angle));case'turn':return match.replace(value,turnToDeg(angle));}});try{var _color2=new Color(colorString).to('srgb');this.red=Math.round(clamp(_color2.r,0,1)*255);this.green=Math.round(clamp(_color2.g,0,1)*255);this.blue=Math.round(clamp(_color2.b,0,1)*255);this.alpha=+_color2.alpha;}catch(err2){throw new Error('Unable to parse color \"'.concat(colorString,'\"'));}return this;}},{key:'parseRgbString',value:function parseRgbString(colorString){this.parseString(colorString);}},{key:'parseHexString',value:function parseHexString(colorString){if(!colorString.match(hexRegex)||[6,8].includes(colorString.length)){return;}this.parseString(colorString);}},{key:'parseColorFnString',value:function parseColorFnString(colorString){this.parseString(colorString);}},{key:'getRelativeLuminance',value:function getRelativeLuminance(){var rSRGB=this.red/255;var gSRGB=this.green/255;var bSRGB=this.blue/255;var r=rSRGB<=.03928?rSRGB/12.92:Math.pow((rSRGB+.055)/1.055,2.4);var g2=gSRGB<=.03928?gSRGB/12.92:Math.pow((gSRGB+.055)/1.055,2.4);var b2=bSRGB<=.03928?bSRGB/12.92:Math.pow((bSRGB+.055)/1.055,2.4);return .2126*r+.7152*g2+.0722*b2;}}]);return Color2;}();var color_default=Color2;function clamp(value,min,max2){return Math.min(Math.max(min,value),max2);}function radToDeg(rad){return rad*180/Math.PI;}function turnToDeg(turn){return turn*360;}function getOwnBackgroundColor(elmStyle){var bgColor=new color_default();bgColor.parseString(elmStyle.getPropertyValue('background-color'));if(bgColor.alpha!==0){var opacity=elmStyle.getPropertyValue('opacity');bgColor.alpha=bgColor.alpha*opacity;}return bgColor;}var get_own_background_color_default=getOwnBackgroundColor;function isOpaque(node){var style=window.getComputedStyle(node);return element_has_image_default(node,style)||get_own_background_color_default(style).alpha===1;}var is_opaque_default=isOpaque;function _isSkipLink(element){if(!element.href){return false;}var firstPageLink=cache_default.get('firstPageLink',generateFirstPageLink);if(!firstPageLink){return true;}return element.compareDocumentPosition(firstPageLink.actualNode)===element.DOCUMENT_POSITION_FOLLOWING;}function generateFirstPageLink(){var firstPageLink;if(!window.location.origin){firstPageLink=query_selector_all_default(axe._tree,'a:not([href^=\"#\"]):not([href^=\"/#\"]):not([href^=\"javascript:\"])')[0];}else{firstPageLink=query_selector_all_default(axe._tree,'a[href]:not([href^=\"javascript:\"])').find(function(link){return!_isCurrentPageLink(link.actualNode);});}return firstPageLink||null;}var clipRegex2=/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/;var clipPathRegex2=/(\\w+)\\((\\d+)/;function isClipped(style){var matchesClip=style.getPropertyValue('clip').match(clipRegex2);var matchesClipPath=style.getPropertyValue('clip-path').match(clipPathRegex2);if(matchesClip&&matchesClip.length===5){var position=style.getPropertyValue('position');if(['fixed','absolute'].includes(position)){return matchesClip[3]-matchesClip[1]<=0&&matchesClip[2]-matchesClip[4]<=0;}}if(matchesClipPath){var type2=matchesClipPath[1];var value=parseInt(matchesClipPath[2],10);switch(type2){case'inset':return value>=50;case'circle':return value===0;default:}}return false;}function isAreaVisible(el,screenReader,recursed){var mapEl=find_up_default(el,'map');if(!mapEl){return false;}var mapElName=mapEl.getAttribute('name');if(!mapElName){return false;}var mapElRootNode=get_root_node_default2(el);if(!mapElRootNode||mapElRootNode.nodeType!==9){return false;}var refs=query_selector_all_default(axe._tree,'img[usemap=\"#'.concat(escape_selector_default(mapElName),'\"]'));if(!refs||!refs.length){return false;}return refs.some(function(_ref63){var actualNode=_ref63.actualNode;return isVisible(actualNode,screenReader,recursed);});}function isVisible(el,screenReader,recursed){var _window$Node2;if(!el){throw new TypeError('Cannot determine if element is visible for non-DOM nodes');}var vNode=el instanceof abstract_virtual_node_default?el:get_node_from_tree_default(el);el=vNode?vNode.actualNode:el;var cacheName='_isVisible'+(screenReader?'ScreenReader':'');var _ref64=(_window$Node2=window.Node)!==null&&_window$Node2!==void 0?_window$Node2:{},DOCUMENT_NODE=_ref64.DOCUMENT_NODE,DOCUMENT_FRAGMENT_NODE=_ref64.DOCUMENT_FRAGMENT_NODE;var nodeType=vNode?vNode.props.nodeType:el.nodeType;var nodeName2=vNode?vNode.props.nodeName:el.nodeName.toLowerCase();if(vNode&&typeof vNode[cacheName]!=='undefined'){return vNode[cacheName];}if(nodeType===DOCUMENT_NODE){return true;}if(['style','script','noscript','template'].includes(nodeName2)){return false;}if(el&&nodeType===DOCUMENT_FRAGMENT_NODE){el=el.host;}if(screenReader){var ariaHiddenValue=vNode?vNode.attr('aria-hidden'):el.getAttribute('aria-hidden');if(ariaHiddenValue==='true'){return false;}}if(!el){var parent2=vNode.parent;var visible3=true;if(parent2){visible3=isVisible(parent2,screenReader,true);}if(vNode){vNode[cacheName]=visible3;}return visible3;}var style=window.getComputedStyle(el,null);if(style===null){return false;}if(nodeName2==='area'){return isAreaVisible(el,screenReader,recursed);}if(style.getPropertyValue('display')==='none'){return false;}var elHeight=parseInt(style.getPropertyValue('height'));var elWidth=parseInt(style.getPropertyValue('width'));var scroll=get_scroll_default(el);var scrollableWithZeroHeight=scroll&&elHeight===0;var scrollableWithZeroWidth=scroll&&elWidth===0;var posAbsoluteOverflowHiddenAndSmall=style.getPropertyValue('position')==='absolute'&&(elHeight<2||elWidth<2)&&style.getPropertyValue('overflow')==='hidden';if(!screenReader&&(isClipped(style)||style.getPropertyValue('opacity')==='0'||scrollableWithZeroHeight||scrollableWithZeroWidth||posAbsoluteOverflowHiddenAndSmall)){return false;}if(!recursed&&(style.getPropertyValue('visibility')==='hidden'||!screenReader&&is_offscreen_default(el))){return false;}var parent=el.assignedSlot?el.assignedSlot:el.parentNode;var visible2=false;if(parent){visible2=isVisible(parent,screenReader,true);}if(vNode){vNode[cacheName]=visible2;}return visible2;}var is_visible_default=isVisible;function reduceToElementsBelowFloating(elements,targetNode){var floatingPositions=['fixed','sticky'];var finalElements=[];var targetFound=false;for(var index=0;index<elements.length;++index){var currentNode=elements[index];if(currentNode===targetNode){targetFound=true;}var style=window.getComputedStyle(currentNode);if(!targetFound&&floatingPositions.indexOf(style.position)!==-1){finalElements=[];continue;}finalElements.push(currentNode);}return finalElements;}var reduce_to_elements_below_floating_default=reduceToElementsBelowFloating;function _visuallyContains(node,parent){var parentScrollAncestor=getScrollAncestor(parent);do{var nextScrollAncestor=getScrollAncestor(node);if(nextScrollAncestor===parentScrollAncestor||nextScrollAncestor===parent){return contains2(node,parent);}node=nextScrollAncestor;}while(node);return false;}function getScrollAncestor(node){var vNode=get_node_from_tree_default(node);var ancestor=vNode.parent;while(ancestor){if(get_scroll_default(ancestor.actualNode)){return ancestor.actualNode;}ancestor=ancestor.parent;}}function contains2(node,parent){var style=window.getComputedStyle(parent);var overflow=style.getPropertyValue('overflow');if(style.getPropertyValue('display')==='inline'){return true;}var clientRects=Array.from(node.getClientRects());var boundingRect=parent.getBoundingClientRect();var rect={left:boundingRect.left,top:boundingRect.top,width:boundingRect.width,height:boundingRect.height};if(['scroll','auto'].includes(overflow)||parent instanceof window.HTMLHtmlElement){rect.width=parent.scrollWidth;rect.height=parent.scrollHeight;}if(clientRects.length===1&&overflow==='hidden'&&style.getPropertyValue('white-space')==='nowrap'){clientRects[0]=rect;}return clientRects.some(function(clientRect){return!(Math.ceil(clientRect.left)<Math.floor(rect.left)||Math.ceil(clientRect.top)<Math.floor(rect.top)||Math.floor(clientRect.left+clientRect.width)>Math.ceil(rect.left+rect.width)||Math.floor(clientRect.top+clientRect.height)>Math.ceil(rect.top+rect.height));});}function shadowElementsFromPoint(nodeX,nodeY){var root=arguments.length>2&&arguments[2]!==undefined?arguments[2]:document;var i=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(i>999){throw new Error('Infinite loop detected');}return Array.from(root.elementsFromPoint(nodeX,nodeY)||[]).filter(function(nodes){return get_root_node_default2(nodes)===root;}).reduce(function(stack,elm){if(is_shadow_root_default(elm)){var shadowStack=shadowElementsFromPoint(nodeX,nodeY,elm.shadowRoot,i+1);stack=stack.concat(shadowStack);if(stack.length&&_visuallyContains(stack[0],elm)){stack.push(elm);}}else{stack.push(elm);}return stack;},[]);}var shadow_elements_from_point_default=shadowElementsFromPoint;function urlPropsFromAttribute(node,attribute){if(!node.hasAttribute(attribute)){return void 0;}var nodeName2=node.nodeName.toUpperCase();var parser2=node;if(!['A','AREA'].includes(nodeName2)||node.ownerSVGElement){parser2=document.createElement('a');parser2.href=node.getAttribute(attribute);}var protocol=['https:','ftps:'].includes(parser2.protocol)?parser2.protocol.replace(/s:$/,':'):parser2.protocol;var parserPathname=/^\\//.test(parser2.pathname)?parser2.pathname:'/'.concat(parser2.pathname);var _getPathnameOrFilenam=getPathnameOrFilename(parserPathname),pathname=_getPathnameOrFilenam.pathname,filename=_getPathnameOrFilenam.filename;return{protocol:protocol,hostname:parser2.hostname,port:getPort(parser2.port),pathname:/\\/$/.test(pathname)?pathname:''.concat(pathname,'/'),search:getSearchPairs(parser2.search),hash:getHashRoute(parser2.hash),filename:filename};}function getPort(port){var excludePorts=['443','80'];return!excludePorts.includes(port)?port:'';}function getPathnameOrFilename(pathname){var filename=pathname.split('/').pop();if(!filename||filename.indexOf('.')===-1){return{pathname:pathname,filename:''};}return{pathname:pathname.replace(filename,''),filename:/index./.test(filename)?'':filename};}function getSearchPairs(searchStr){var query={};if(!searchStr||!searchStr.length){return query;}var pairs=searchStr.substring(1).split('&');if(!pairs||!pairs.length){return query;}for(var index=0;index<pairs.length;index++){var pair=pairs[index];var _pair$split=pair.split('='),_pair$split2=_slicedToArray(_pair$split,2),_key7=_pair$split2[0],_pair$split2$=_pair$split2[1],value=_pair$split2$===void 0?'':_pair$split2$;query[decodeURIComponent(_key7)]=decodeURIComponent(value);}return query;}function getHashRoute(hash){if(!hash){return'';}var hashRegex=/#!?\\/?/g;var hasMatch=hash.match(hashRegex);if(!hasMatch){return'';}var _hasMatch=_slicedToArray(hasMatch,1),matchedStr=_hasMatch[0];if(matchedStr==='#'){return'';}return hash;}var url_props_from_attribute_default=urlPropsFromAttribute;function visuallyOverlaps(rect,parent){var parentRect=parent.getBoundingClientRect();var parentTop=parentRect.top;var parentLeft=parentRect.left;var parentScrollArea={top:parentTop-parent.scrollTop,bottom:parentTop-parent.scrollTop+parent.scrollHeight,left:parentLeft-parent.scrollLeft,right:parentLeft-parent.scrollLeft+parent.scrollWidth};if(rect.left>parentScrollArea.right&&rect.left>parentRect.right||rect.top>parentScrollArea.bottom&&rect.top>parentRect.bottom||rect.right<parentScrollArea.left&&rect.right<parentRect.left||rect.bottom<parentScrollArea.top&&rect.bottom<parentRect.top){return false;}var style=window.getComputedStyle(parent);if(rect.left>parentRect.right||rect.top>parentRect.bottom){return style.overflow==='scroll'||style.overflow==='auto'||parent instanceof window.HTMLBodyElement||parent instanceof window.HTMLHtmlElement;}return true;}var visually_overlaps_default=visuallyOverlaps;var nodeIndex2=0;var VirtualNode=function(_abstract_virtual_nod){_inherits(VirtualNode,_abstract_virtual_nod);var _super2=_createSuper(VirtualNode);function VirtualNode(node,parent,shadowId){var _this4;_classCallCheck(this,VirtualNode);_this4=_super2.call(this);_this4.shadowId=shadowId;_this4.children=[];_this4.actualNode=node;_this4.parent=parent;if(!parent){nodeIndex2=0;}_this4.nodeIndex=nodeIndex2++;_this4._isHidden=null;_this4._cache={};_this4._isXHTML=is_xhtml_default(node.ownerDocument);if(node.nodeName.toLowerCase()==='input'){var type2=node.getAttribute('type');type2=_this4._isXHTML?type2:(type2||'').toLowerCase();if(!valid_input_type_default().includes(type2)){type2='text';}_this4._type=type2;}if(cache_default.get('nodeMap')){cache_default.get('nodeMap').set(node,_assertThisInitialized(_this4));}return _this4;}_createClass(VirtualNode,[{key:'props',get:function get(){if(!this._cache.hasOwnProperty('props')){var _this$actualNode=this.actualNode,nodeType=_this$actualNode.nodeType,nodeName2=_this$actualNode.nodeName,_id=_this$actualNode.id,multiple=_this$actualNode.multiple,nodeValue=_this$actualNode.nodeValue,value=_this$actualNode.value,selected=_this$actualNode.selected,checked=_this$actualNode.checked,indeterminate=_this$actualNode.indeterminate;this._cache.props={nodeType:nodeType,nodeName:this._isXHTML?nodeName2:nodeName2.toLowerCase(),id:_id,type:this._type,multiple:multiple,nodeValue:nodeValue,value:value,selected:selected,checked:checked,indeterminate:indeterminate};}return this._cache.props;}},{key:'attr',value:function attr(attrName){if(typeof this.actualNode.getAttribute!=='function'){return null;}return this.actualNode.getAttribute(attrName);}},{key:'hasAttr',value:function hasAttr(attrName){if(typeof this.actualNode.hasAttribute!=='function'){return false;}return this.actualNode.hasAttribute(attrName);}},{key:'attrNames',get:function get(){if(!this._cache.hasOwnProperty('attrNames')){var attrs;if(this.actualNode.attributes instanceof window.NamedNodeMap){attrs=this.actualNode.attributes;}else{attrs=this.actualNode.cloneNode(false).attributes;}this._cache.attrNames=Array.from(attrs).map(function(attr){return attr.name;});}return this._cache.attrNames;}},{key:'getComputedStylePropertyValue',value:function getComputedStylePropertyValue(property){var key='computedStyle_'+property;if(!this._cache.hasOwnProperty(key)){if(!this._cache.hasOwnProperty('computedStyle')){this._cache.computedStyle=window.getComputedStyle(this.actualNode);}this._cache[key]=this._cache.computedStyle.getPropertyValue(property);}return this._cache[key];}},{key:'isFocusable',get:function get(){if(!this._cache.hasOwnProperty('isFocusable')){this._cache.isFocusable=_isFocusable(this.actualNode);}return this._cache.isFocusable;}},{key:'tabbableElements',get:function get(){if(!this._cache.hasOwnProperty('tabbableElements')){this._cache.tabbableElements=get_tabbable_elements_default(this);}return this._cache.tabbableElements;}},{key:'clientRects',get:function get(){if(!this._cache.hasOwnProperty('clientRects')){this._cache.clientRects=Array.from(this.actualNode.getClientRects()).filter(function(rect){return rect.width>0;});}return this._cache.clientRects;}},{key:'boundingClientRect',get:function get(){if(!this._cache.hasOwnProperty('boundingClientRect')){this._cache.boundingClientRect=this.actualNode.getBoundingClientRect();}return this._cache.boundingClientRect;}}]);return VirtualNode;}(abstract_virtual_node_default);var virtual_node_default=VirtualNode;function tokenList(str){return(str||'').trim().replace(/\\s{2,}/g,' ').split(' ');}var token_list_default=tokenList;var idsKey=' [idsMap]';function getNodesMatchingExpression(domTree,expressions,filter){var selectorMap=domTree[0]._selectorMap;if(!selectorMap){return;}var shadowId=domTree[0].shadowId;for(var _i19=0;_i19<expressions.length;_i19++){if(expressions[_i19].length>1&&expressions[_i19].some(function(expression){return isGlobalSelector(expression);})){return;}}var nodeSet=new Set();expressions.forEach(function(expression){var _matchingNodes$nodes;var matchingNodes=findMatchingNodes(expression,selectorMap,shadowId);matchingNodes===null||matchingNodes===void 0?void 0:(_matchingNodes$nodes=matchingNodes.nodes)===null||_matchingNodes$nodes===void 0?void 0:_matchingNodes$nodes.forEach(function(node){if(matchingNodes.isComplexSelector&&!_matchesExpression(node,expression)){return;}nodeSet.add(node);});});var matchedNodes=[];nodeSet.forEach(function(node){return matchedNodes.push(node);});if(filter){matchedNodes=matchedNodes.filter(filter);}return matchedNodes.sort(function(a2,b2){return a2.nodeIndex-b2.nodeIndex;});}function findMatchingNodes(expression,selectorMap,shadowId){var exp=expression[expression.length-1];var nodes=null;var isComplexSelector=expression.length>1||!!exp.pseudos||!!exp.classes;if(isGlobalSelector(exp)){nodes=selectorMap['*'];}else{if(exp.id){var _selectorMap$idsKey$e;if(!selectorMap[idsKey]||!Object.hasOwn(selectorMap[idsKey],exp.id)||!((_selectorMap$idsKey$e=selectorMap[idsKey][exp.id])!==null&&_selectorMap$idsKey$e!==void 0&&_selectorMap$idsKey$e.length)){return;}nodes=selectorMap[idsKey][exp.id].filter(function(node){return node.shadowId===shadowId;});}if(exp.tag&&exp.tag!=='*'){var _selectorMap$exp$tag;if(!((_selectorMap$exp$tag=selectorMap[exp.tag])!==null&&_selectorMap$exp$tag!==void 0&&_selectorMap$exp$tag.length)){return;}var cachedNodes=selectorMap[exp.tag];nodes=nodes?getSharedValues(cachedNodes,nodes):cachedNodes;}if(exp.classes){var _selectorMap$Class;if(!((_selectorMap$Class=selectorMap['[class]'])!==null&&_selectorMap$Class!==void 0&&_selectorMap$Class.length)){return;}var _cachedNodes=selectorMap['[class]'];nodes=nodes?getSharedValues(_cachedNodes,nodes):_cachedNodes;}if(exp.attributes){for(var _i20=0;_i20<exp.attributes.length;_i20++){var _selectorMap;var attr=exp.attributes[_i20];if(attr.type==='attrValue'){isComplexSelector=true;}if(!((_selectorMap=selectorMap['['.concat(attr.key,']')])!==null&&_selectorMap!==void 0&&_selectorMap.length)){return;}var _cachedNodes2=selectorMap['['.concat(attr.key,']')];nodes=nodes?getSharedValues(_cachedNodes2,nodes):_cachedNodes2;}}}return{nodes:nodes,isComplexSelector:isComplexSelector};}function isGlobalSelector(expression){return expression.tag==='*'&&!expression.attributes&&!expression.id&&!expression.classes;}function getSharedValues(a2,b2){return a2.filter(function(node){return b2.includes(node);});}function cacheSelector(key,vNode,map){if(!Object.hasOwn(map,key)){map[key]=[];}map[key].push(vNode);}function cacheNodeSelectors(vNode,selectorMap){if(vNode.props.nodeType!==1){return;}cacheSelector(vNode.props.nodeName,vNode,selectorMap);cacheSelector('*',vNode,selectorMap);vNode.attrNames.forEach(function(attrName){if(attrName==='id'){selectorMap[idsKey]=selectorMap[idsKey]||{};token_list_default(vNode.attr(attrName)).forEach(function(value){cacheSelector(value,vNode,selectorMap[idsKey]);});}cacheSelector('['.concat(attrName,']'),vNode,selectorMap);});}var hasShadowRoot;function _getFlattenedTree(){var node=arguments.length>0&&arguments[0]!==undefined?arguments[0]:document.documentElement;var shadowId=arguments.length>1?arguments[1]:undefined;hasShadowRoot=false;var selectorMap={};cache_default.set('nodeMap',new WeakMap());cache_default.set('selectorMap',selectorMap);var tree=flattenTree(node,shadowId,null);tree[0]._selectorMap=selectorMap;tree[0]._hasShadowRoot=hasShadowRoot;return tree;}function getSlotChildren(node){var retVal=[];node=node.firstChild;while(node){retVal.push(node);node=node.nextSibling;}return retVal;}function createNode(node,parent,shadowId){var vNode=new virtual_node_default(node,parent,shadowId);cacheNodeSelectors(vNode,cache_default.get('selectorMap'));return vNode;}function flattenTree(node,shadowId,parent){var retVal,realArray,nodeName2;function reduceShadowDOM(res,child,parentVNode){var replacements=flattenTree(child,shadowId,parentVNode);if(replacements){res=res.concat(replacements);}return res;}if(node.documentElement){node=node.documentElement;}nodeName2=node.nodeName.toLowerCase();if(is_shadow_root_default(node)){hasShadowRoot=true;retVal=createNode(node,parent,shadowId);shadowId='a'+Math.random().toString().substring(2);realArray=Array.from(node.shadowRoot.childNodes);retVal.children=realArray.reduce(function(res,child){return reduceShadowDOM(res,child,retVal);},[]);return[retVal];}else{if(nodeName2==='content'&&typeof node.getDistributedNodes==='function'){realArray=Array.from(node.getDistributedNodes());return realArray.reduce(function(res,child){return reduceShadowDOM(res,child,parent);},[]);}else if(nodeName2==='slot'&&typeof node.assignedNodes==='function'){realArray=Array.from(node.assignedNodes());if(!realArray.length){realArray=getSlotChildren(node);}var styl=window.getComputedStyle(node);if(false){retVal=createNode(node,parent,shadowId);retVal.children=realArray.reduce(function(res,child){return reduceShadowDOM(res,child,retVal);},[]);return[retVal];}else{return realArray.reduce(function(res,child){return reduceShadowDOM(res,child,parent);},[]);}}else{if(node.nodeType===1){retVal=createNode(node,parent,shadowId);realArray=Array.from(node.childNodes);retVal.children=realArray.reduce(function(res,child){return reduceShadowDOM(res,child,retVal);},[]);return[retVal];}else if(node.nodeType===3){return[createNode(node,parent)];}return void 0;}}}function getBaseLang(lang){if(!lang){return'';}return lang.trim().split('-')[0].toLowerCase();}var get_base_lang_default=getBaseLang;function failureSummary(nodeData){var failingChecks={};failingChecks.none=nodeData.none.concat(nodeData.all);failingChecks.any=nodeData.any;return Object.keys(failingChecks).map(function(key){if(!failingChecks[key].length){return;}var sum=axe._audit.data.failureSummaries[key];if(sum&&typeof sum.failureMessage==='function'){return sum.failureMessage(failingChecks[key].map(function(check){return check.message||'';}));}}).filter(function(i){return i!==void 0;}).join('\\n\\n');}var failure_summary_default=failureSummary;function incompleteFallbackMessage(){var message=axe._audit.data.incompleteFallbackMessage;if(typeof message==='function'){message=message();}if(typeof message!=='string'){return'';}return message;}var resultKeys=constants_default.resultGroups;function processAggregate(results,options){var resultObject=axe.utils.aggregateResult(results);resultKeys.forEach(function(key){if(options.resultTypes&&!options.resultTypes.includes(key)){(resultObject[key]||[]).forEach(function(ruleResult){if(Array.isArray(ruleResult.nodes)&&ruleResult.nodes.length>0){ruleResult.nodes=[ruleResult.nodes[0]];}});}resultObject[key]=(resultObject[key]||[]).map(function(ruleResult){ruleResult=Object.assign({},ruleResult);if(Array.isArray(ruleResult.nodes)&&ruleResult.nodes.length>0){ruleResult.nodes=ruleResult.nodes.map(function(subResult){if(_typeof(subResult.node)==='object'){var serialElm=trimElementSpec(subResult.node,options);Object.assign(subResult,serialElm);}delete subResult.result;delete subResult.node;normalizeRelatedNodes(subResult,options);return subResult;});}resultKeys.forEach(function(resultKey){return delete ruleResult[resultKey];});delete ruleResult.pageLevel;delete ruleResult.result;return ruleResult;});});return resultObject;}function normalizeRelatedNodes(node,options){['any','all','none'].forEach(function(type2){if(!Array.isArray(node[type2])){return;}node[type2].filter(function(checkRes){return Array.isArray(checkRes.relatedNodes);}).forEach(function(checkRes){checkRes.relatedNodes=checkRes.relatedNodes.map(function(relatedNode){return trimElementSpec(relatedNode,options);});});});}function trimElementSpec(){var elmSpec=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var runOptions=arguments.length>1?arguments[1]:undefined;elmSpec=node_serializer_default.dqElmToSpec(elmSpec,runOptions);var serialElm={};if(axe._audit.noHtml){serialElm.html=null;}else{var _elmSpec$source;serialElm.html=(_elmSpec$source=elmSpec.source)!==null&&_elmSpec$source!==void 0?_elmSpec$source:'Undefined';}if(runOptions.elementRef&&!elmSpec.fromFrame){var _elmSpec$element;serialElm.element=(_elmSpec$element=elmSpec.element)!==null&&_elmSpec$element!==void 0?_elmSpec$element:null;}if(runOptions.selectors!==false||elmSpec.fromFrame){var _elmSpec$selector;serialElm.target=(_elmSpec$selector=elmSpec.selector)!==null&&_elmSpec$selector!==void 0?_elmSpec$selector:[':root'];}if(runOptions.ancestry){var _elmSpec$ancestry;serialElm.ancestry=(_elmSpec$ancestry=elmSpec.ancestry)!==null&&_elmSpec$ancestry!==void 0?_elmSpec$ancestry:[':root'];}if(runOptions.xpath){var _elmSpec$xpath;serialElm.xpath=(_elmSpec$xpath=elmSpec.xpath)!==null&&_elmSpec$xpath!==void 0?_elmSpec$xpath:['/'];}return serialElm;}var dataRegex=/\\$\\{\\s?data\\s?\\}/g;function substitute(str,data){if(typeof data==='string'){return str.replace(dataRegex,data);}for(var prop in data){if(data.hasOwnProperty(prop)){var regex=new RegExp('\\\\${\\\\s?data\\\\.'+prop+'\\\\s?}','g');var replace=typeof data[prop]==='undefined'?'':String(data[prop]);str=str.replace(regex,replace);}}return str;}function processMessage(message,data){if(!message){return;}if(Array.isArray(data)){data.values=data.join(', ');if(typeof message.singular==='string'&&typeof message.plural==='string'){var str2=data.length===1?message.singular:message.plural;return substitute(str2,data);}return substitute(message,data);}if(typeof message==='string'){return substitute(message,data);}if(typeof data==='string'){var _str=message[data];return substitute(_str,data);}var str=message['default']||incompleteFallbackMessage();if(data&&data.messageKey&&message[data.messageKey]){str=message[data.messageKey];}return processMessage(str,data);}var process_message_default=processMessage;function getCheckMessage(checkId,type2,data){var check=axe._audit.data.checks[checkId];if(!check){throw new Error('Cannot get message for unknown check: '.concat(checkId,'.'));}if(!check.messages[type2]){throw new Error('Check \"'.concat(checkId,'\"\" does not have a \"').concat(type2,'\" message.'));}return process_message_default(check.messages[type2],data);}var get_check_message_default=getCheckMessage;function getCheckOption(check,ruleID,options){var ruleCheckOption=((options.rules&&options.rules[ruleID]||{}).checks||{})[check.id];var checkOption=(options.checks||{})[check.id];var enabled=check.enabled;var opts=check.options;if(checkOption){if(checkOption.hasOwnProperty('enabled')){enabled=checkOption.enabled;}if(checkOption.hasOwnProperty('options')){opts=checkOption.options;}}if(ruleCheckOption){if(ruleCheckOption.hasOwnProperty('enabled')){enabled=ruleCheckOption.enabled;}if(ruleCheckOption.hasOwnProperty('options')){opts=ruleCheckOption.options;}}return{enabled:enabled,options:opts,absolutePaths:options.absolutePaths};}var get_check_option_default=getCheckOption;function _getEnvironmentData(){var _win$location;var metadata=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var win=arguments.length>1&&arguments[1]!==undefined?arguments[1]:window;if(metadata&&_typeof(metadata)==='object'){return metadata;}else if(_typeof(win)!=='object'){return{};}return{testEngine:{name:'axe-core',version:axe.version},testRunner:{name:axe._audit.brand},testEnvironment:getTestEnvironment(win),timestamp:new Date().toISOString(),url:(_win$location=win.location)===null||_win$location===void 0?void 0:_win$location.href};}function getTestEnvironment(win){if(!win.navigator||_typeof(win.navigator)!=='object'){return{};}var navigator=win.navigator,innerHeight=win.innerHeight,innerWidth=win.innerWidth;var _ref65=getOrientation(win)||{},angle=_ref65.angle,type2=_ref65.type;return{userAgent:navigator.userAgent,windowWidth:innerWidth,windowHeight:innerHeight,orientationAngle:angle,orientationType:type2};}function getOrientation(_ref66){var screen=_ref66.screen;return screen.orientation||screen.msOrientation||screen.mozOrientation;}function createFrameContext(frame,_ref67){var focusable=_ref67.focusable,page=_ref67.page;return{node:frame,include:[],exclude:[],initiator:false,focusable:focusable&&frameFocusable(frame),size:getBoundingSize(frame),page:page};}function frameFocusable(frame){var tabIndex=frame.getAttribute('tabindex');if(!tabIndex){return true;}var _int=parseInt(tabIndex,10);return isNaN(_int)||_int>=0;}function getBoundingSize(domNode){var width=parseInt(domNode.getAttribute('width'),10);var height=parseInt(domNode.getAttribute('height'),10);if(isNaN(width)||isNaN(height)){var rect=domNode.getBoundingClientRect();width=isNaN(width)?rect.width:width;height=isNaN(height)?rect.height:height;}return{width:width,height:height};}function normalizeContext(contextSpec){if(isContextObject(contextSpec)){var msg=' must be used inside include or exclude. It should not be on the same object.';assert2(!objectHasOwn(contextSpec,'fromFrames'),'fromFrames'+msg);assert2(!objectHasOwn(contextSpec,'fromShadowDom'),'fromShadowDom'+msg);}else if(isContextProp(contextSpec)){contextSpec={include:contextSpec,exclude:[]};}else{return{include:[document],exclude:[]};}var include=normalizeContextList(contextSpec.include);if(include.length===0){include.push(document);}var exclude=normalizeContextList(contextSpec.exclude);return{include:include,exclude:exclude};}function isContextSpec(contextSpec){return isContextObject(contextSpec)||isContextProp(contextSpec);}function normalizeContextList(){var selectorList=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var normalizedList=[];if(!isArrayLike(selectorList)){selectorList=[selectorList];}for(var _i21=0;_i21<selectorList.length;_i21++){var normalizedSelector=normalizeContextSelector(selectorList[_i21]);if(normalizedSelector){normalizedList.push(normalizedSelector);}}return normalizedList;}function normalizeContextSelector(selector){if(selector instanceof window.Node){return selector;}if(typeof selector==='string'){return[selector];}if(isLabelledFramesSelector(selector)){assertLabelledFrameSelector(selector);selector=selector.fromFrames;}else if(isLabelledShadowDomSelector(selector)){selector=[selector];}return normalizeFrameSelectors(selector);}function normalizeFrameSelectors(frameSelectors){if(!Array.isArray(frameSelectors)){return;}var normalizedSelectors=[];var _iterator11=_createForOfIteratorHelper(frameSelectors),_step11;try{for(_iterator11.s();!(_step11=_iterator11.n()).done;){var selector=_step11.value;if(isLabelledShadowDomSelector(selector)){assertLabelledShadowDomSelector(selector);selector=selector.fromShadowDom;}if(typeof selector!=='string'&&!isShadowSelector(selector)){return;}normalizedSelectors.push(selector);}}catch(err){_iterator11.e(err);}finally{_iterator11.f();}return normalizedSelectors;}function isContextObject(contextSpec){return['include','exclude'].some(function(prop){return objectHasOwn(contextSpec,prop)&&isContextProp(contextSpec[prop]);});}function isContextProp(contextList){return typeof contextList==='string'||contextList instanceof window.Node||isLabelledFramesSelector(contextList)||isLabelledShadowDomSelector(contextList)||isArrayLike(contextList);}function isLabelledFramesSelector(selector){return objectHasOwn(selector,'fromFrames');}function isLabelledShadowDomSelector(selector){return objectHasOwn(selector,'fromShadowDom');}function assertLabelledFrameSelector(selector){assert2(Array.isArray(selector.fromFrames),'fromFrames property must be an array');assert2(selector.fromFrames.every(function(fromFrameSelector){return!objectHasOwn(fromFrameSelector,'fromFrames');}),'Invalid context; fromFrames selector must be appended, rather than nested');assert2(!objectHasOwn(selector,'fromShadowDom'),'fromFrames and fromShadowDom cannot be used on the same object');}function assertLabelledShadowDomSelector(selector){assert2(Array.isArray(selector.fromShadowDom),'fromShadowDom property must be an array');assert2(selector.fromShadowDom.every(function(fromShadowDomSelector){return!objectHasOwn(fromShadowDomSelector,'fromFrames');}),'shadow selector must be inside fromFrame instead');assert2(selector.fromShadowDom.every(function(fromShadowDomSelector){return!objectHasOwn(fromShadowDomSelector,'fromShadowDom');}),'fromShadowDom selector must be appended, rather than nested');}function isShadowSelector(selector){return Array.isArray(selector)&&selector.every(function(str){return typeof str==='string';});}function isArrayLike(arr){return arr&&_typeof(arr)==='object'&&typeof arr.length==='number'&&arr instanceof window.Node===false;}function assert2(bool,str){assert_default(bool,'Invalid context; '.concat(str,'\\nSee: https://github.com/dequelabs/axe-core/blob/master/doc/context.md'));}function objectHasOwn(obj,prop){if(!obj||_typeof(obj)!=='object'){return false;}return Object.prototype.hasOwnProperty.call(obj,prop);}function parseSelectorArray(context,type2){var result=[];for(var _i22=0,l=context[type2].length;_i22<l;_i22++){var item=context[type2][_i22];if(item instanceof window.Node){if(item.documentElement instanceof window.Node){result.push(context.flatTree[0]);}else{result.push(get_node_from_tree_default(item));}}else if(item&&item.length){if(item.length>1){pushUniqueFrameSelector(context,type2,item);}else{var nodeList=_shadowSelectAll(item[0]);result.push.apply(result,_toConsumableArray(nodeList.map(function(node){return get_node_from_tree_default(node);})));}}}return result.filter(function(r){return r;});}function pushUniqueFrameSelector(context,type2,selectorArray){context.frames=context.frames||[];var frameSelector=selectorArray.shift();var frames=_shadowSelectAll(frameSelector);frames.forEach(function(frame){var frameContext=context.frames.find(function(result){return result.node===frame;});if(!frameContext){frameContext=createFrameContext(frame,context);context.frames.push(frameContext);}frameContext[type2].push(selectorArray);});}function Context(spec,flatTree){var _spec,_spec2,_spec3,_spec4,_this5=this;spec=_clone(spec);this.frames=[];this.page=typeof((_spec=spec)===null||_spec===void 0?void 0:_spec.page)==='boolean'?spec.page:void 0;this.initiator=typeof((_spec2=spec)===null||_spec2===void 0?void 0:_spec2.initiator)==='boolean'?spec.initiator:true;this.focusable=typeof((_spec3=spec)===null||_spec3===void 0?void 0:_spec3.focusable)==='boolean'?spec.focusable:true;this.size=_typeof((_spec4=spec)===null||_spec4===void 0?void 0:_spec4.size)==='object'?spec.size:{};spec=normalizeContext(spec);this.flatTree=flatTree!==null&&flatTree!==void 0?flatTree:_getFlattenedTree(getRootNode2(spec));this.exclude=spec.exclude;this.include=spec.include;this.include=parseSelectorArray(this,'include');this.exclude=parseSelectorArray(this,'exclude');_select('frame, iframe',this).forEach(function(frame){if(_isNodeInContext(frame,_this5)){pushUniqueFrame(_this5,frame.actualNode);}});if(typeof this.page==='undefined'){this.page=isPageContext(this);this.frames.forEach(function(frame){frame.page=_this5.page;});}validateContext(this);if(!Array.isArray(this.include)){this.include=Array.from(this.include);}this.include.sort(node_sorter_default);}function pushUniqueFrame(context,frame){if(!_isVisibleToScreenReaders(frame)||find_by_default(context.frames,'node',frame)){return;}context.frames.push(createFrameContext(frame,context));}function isPageContext(_ref68){var include=_ref68.include;return include.length===1&&include[0].actualNode===document.documentElement;}function validateContext(context){if(context.include.length===0&&context.frames.length===0){var env=_respondable.isInFrame()?'frame':'page';throw new Error('No elements found for include in '+env+' Context');}}function getRootNode2(_ref69){var include=_ref69.include,exclude=_ref69.exclude;var selectors=Array.from(include).concat(Array.from(exclude));for(var _i23=0;_i23<selectors.length;_i23++){var item=selectors[_i23];if(item instanceof window.Element){return item.ownerDocument.documentElement;}if(item instanceof window.Document){return item.documentElement;}}return document.documentElement;}function _getFrameContexts(context){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(options.iframes===false){return[];}var _Context=new Context(context),frames=_Context.frames;return frames.map(function(_ref70){var node=_ref70.node,frameContext=_objectWithoutProperties(_ref70,_excluded14);frameContext.initiator=false;var frameSelector=_getAncestry(node);return{frameSelector:frameSelector,frameContext:frameContext};});}function _getRule(ruleId){var rule=axe._audit.rules.find(function(_ref71){var id=_ref71.id;return id===ruleId;});if(!rule){throw new Error('Cannot find rule by id: '.concat(ruleId));}return rule;}function getScroll(elm){var buffer=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var overflowX=elm.scrollWidth>elm.clientWidth+buffer;var overflowY=elm.scrollHeight>elm.clientHeight+buffer;if(!(overflowX||overflowY)){return;}var style=window.getComputedStyle(elm);var scrollableX=isScrollable(style,'overflow-x');var scrollableY=isScrollable(style,'overflow-y');if(overflowX&&scrollableX||overflowY&&scrollableY){return{elm:elm,top:elm.scrollTop,left:elm.scrollLeft};}}function isScrollable(style,prop){var overflowProp=style.getPropertyValue(prop);return['scroll','auto'].includes(overflowProp);}var get_scroll_default=memoize_default(getScroll);function getElmScrollRecursive(root){return Array.from(root.children||root.childNodes||[]).reduce(function(scrolls,elm){var scroll=get_scroll_default(elm);if(scroll){scrolls.push(scroll);}return scrolls.concat(getElmScrollRecursive(elm));},[]);}function getScrollState(){var win=arguments.length>0&&arguments[0]!==undefined?arguments[0]:window;var root=win.document.documentElement;var windowScroll=[win.pageXOffset!==void 0?{elm:win,top:win.pageYOffset,left:win.pageXOffset}:{elm:root,top:root.scrollTop,left:root.scrollLeft}];return windowScroll.concat(getElmScrollRecursive(document.body));}var get_scroll_state_default=getScrollState;function _getStandards(){return _clone(standards_default);}function getStyleSheetFactory(dynamicDoc){if(!dynamicDoc){throw new Error('axe.utils.getStyleSheetFactory should be invoked with an argument');}return function(options){var data=options.data,_options$isCrossOrigi=options.isCrossOrigin,isCrossOrigin=_options$isCrossOrigi===void 0?false:_options$isCrossOrigi,shadowId=options.shadowId,root=options.root,priority=options.priority,_options$isLink=options.isLink,isLink=_options$isLink===void 0?false:_options$isLink;var style=dynamicDoc.createElement('style');if(isLink){var text=dynamicDoc.createTextNode('@import \"'.concat(data.href,'\"'));style.appendChild(text);}else{style.appendChild(dynamicDoc.createTextNode(data));}dynamicDoc.head.appendChild(style);return{sheet:style.sheet,isCrossOrigin:isCrossOrigin,shadowId:shadowId,root:root,priority:priority};};}var get_stylesheet_factory_default=getStyleSheetFactory;var styleSheet;function injectStyle(style){if(styleSheet&&styleSheet.parentNode){if(styleSheet.styleSheet===void 0){styleSheet.appendChild(document.createTextNode(style));}else{styleSheet.styleSheet.cssText+=style;}return styleSheet;}if(!style){return;}var head=document.head||document.getElementsByTagName('head')[0];styleSheet=document.createElement('style');styleSheet.type='text/css';if(styleSheet.styleSheet===void 0){styleSheet.appendChild(document.createTextNode(style));}else{styleSheet.styleSheet.cssText=style;}head.appendChild(styleSheet);return styleSheet;}var inject_style_default=injectStyle;function isHidden(el,recursed){var node=get_node_from_tree_default(el);if(el.nodeType===9){return false;}if(el.nodeType===11){el=el.host;}if(node&&node._isHidden!==null){return node._isHidden;}var style=window.getComputedStyle(el,null);if(!style||!el.parentNode||style.getPropertyValue('display')==='none'||!recursed&&style.getPropertyValue('visibility')==='hidden'||el.getAttribute('aria-hidden')==='true'){return true;}var parent=el.assignedSlot?el.assignedSlot:el.parentNode;var hidden=isHidden(parent,true);if(node){node._isHidden=hidden;}return hidden;}var is_hidden_default=isHidden;function isHtmlElement(node){var _node$props$nodeName,_node$props;var nodeName2=(_node$props$nodeName=(_node$props=node.props)===null||_node$props===void 0?void 0:_node$props.nodeName)!==null&&_node$props$nodeName!==void 0?_node$props$nodeName:node.nodeName.toLowerCase();if(node.namespaceURI==='http://www.w3.org/2000/svg'){return false;}return!!standards_default.htmlElms[nodeName2];}var is_html_element_default=isHtmlElement;function _isNodeInContext(node,_ref72){var _ref72$include=_ref72.include,include=_ref72$include===void 0?[]:_ref72$include,_ref72$exclude=_ref72.exclude,exclude=_ref72$exclude===void 0?[]:_ref72$exclude;var filterInclude=include.filter(function(candidate){return _contains(candidate,node);});if(filterInclude.length===0){return false;}var filterExcluded=exclude.filter(function(candidate){return _contains(candidate,node);});if(filterExcluded.length===0){return true;}var deepestInclude=getDeepest(filterInclude);var deepestExclude=getDeepest(filterExcluded);return _contains(deepestExclude,deepestInclude);}function getDeepest(collection){var deepest;var _iterator12=_createForOfIteratorHelper(collection),_step12;try{for(_iterator12.s();!(_step12=_iterator12.n()).done;){var node=_step12.value;if(!deepest||!_contains(node,deepest)){deepest=node;}}}catch(err){_iterator12.e(err);}finally{_iterator12.f();}return deepest;}function _matchAncestry(ancestryA,ancestryB){if(ancestryA.length!==ancestryB.length){return false;}return ancestryA.every(function(selectorA,ancestorIndex){var selectorB=ancestryB[ancestorIndex];if(!Array.isArray(selectorA)){return selectorA===selectorB;}if(selectorA.length!==selectorB.length){return false;}return selectorA.every(function(str,selectorIndex){return selectorB[selectorIndex]===str;});});}function nodeSorter(nodeA,nodeB){nodeA=nodeA.actualNode||nodeA;nodeB=nodeB.actualNode||nodeB;if(nodeA===nodeB){return 0;}if(nodeA.compareDocumentPosition(nodeB)&4){return-1;}else{return 1;}}var node_sorter_default=nodeSorter;function _nodeLookup(node){if(node instanceof abstract_virtual_node_default){return{vNode:node,domNode:node.actualNode};}return{vNode:get_node_from_tree_default(node),domNode:node};}function parseSameOriginStylesheet(sheet,options,priority,importedUrls){var isCrossOrigin=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var rules=Array.from(sheet.cssRules);if(!rules){return Promise.resolve();}var cssImportRules=rules.filter(function(r){return r.type===3;});if(!cssImportRules.length){return Promise.resolve({isCrossOrigin:isCrossOrigin,priority:priority,root:options.rootNode,shadowId:options.shadowId,sheet:sheet});}var cssImportUrlsNotAlreadyImported=cssImportRules.filter(function(rule){return rule.href;}).map(function(rule){return rule.href;}).filter(function(url){return!importedUrls.includes(url);});var promises=cssImportUrlsNotAlreadyImported.map(function(importUrl,cssRuleIndex){var newPriority=[].concat(_toConsumableArray(priority),[cssRuleIndex]);var isCrossOriginRequest=/^https?:\\/\\/|^\\/\\//i.test(importUrl);return parse_crossorigin_stylesheet_default(importUrl,options,newPriority,importedUrls,isCrossOriginRequest);});var nonImportCSSRules=rules.filter(function(r){return r.type!==3;});if(!nonImportCSSRules.length){return Promise.all(promises);}promises.push(Promise.resolve(options.convertDataToStylesheet({data:nonImportCSSRules.map(function(rule){return rule.cssText;}).join(),isCrossOrigin:isCrossOrigin,priority:priority,root:options.rootNode,shadowId:options.shadowId})));return Promise.all(promises);}var parse_sameorigin_stylesheet_default=parseSameOriginStylesheet;function parseStylesheet(sheet,options,priority,importedUrls){var isCrossOrigin=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var isSameOrigin=isSameOriginStylesheet(sheet);if(isSameOrigin){return parse_sameorigin_stylesheet_default(sheet,options,priority,importedUrls,isCrossOrigin);}return parse_crossorigin_stylesheet_default(sheet.href,options,priority,importedUrls,true);}function isSameOriginStylesheet(sheet){try{var rules=sheet.cssRules;if(!rules&&sheet.href){return false;}return true;}catch(e){return false;}}var parse_stylesheet_default=parseStylesheet;function parseCrossOriginStylesheet(url,options,priority,importedUrls,isCrossOrigin){importedUrls.push(url);return new Promise(function(resolve,reject){var request=new window.XMLHttpRequest();request.open('GET',url);request.timeout=constants_default.preload.timeout;request.addEventListener('error',reject);request.addEventListener('timeout',reject);request.addEventListener('loadend',function(event){if(event.loaded&&request.responseText){return resolve(request.responseText);}reject(request.responseText);});request.send();}).then(function(data){var result=options.convertDataToStylesheet({data:data,isCrossOrigin:isCrossOrigin,priority:priority,root:options.rootNode,shadowId:options.shadowId});return parse_stylesheet_default(result.sheet,options,priority,importedUrls,result.isCrossOrigin);});}var parse_crossorigin_stylesheet_default=parseCrossOriginStylesheet;var performanceTimer=function(){function now(){if(window.performance&&window.performance){return window.performance.now();}}var originalTime=null;var lastRecordedTime=now();return{start:function start(){this.mark('mark_axe_start');},end:function end(){this.mark('mark_axe_end');this.measure('axe','mark_axe_start','mark_axe_end');this.logMeasures('axe');},auditStart:function auditStart(){this.mark('mark_audit_start');},auditEnd:function auditEnd(){this.mark('mark_audit_end');this.measure('audit_start_to_end','mark_audit_start','mark_audit_end');this.logMeasures();},mark:function mark(markName){if(window.performance&&window.performance.mark!==void 0){window.performance.mark(markName);}},measure:function measure(measureName,startMark,endMark){if(window.performance&&window.performance.measure!==void 0){window.performance.measure(measureName,startMark,endMark);}},logMeasures:function logMeasures(measureName){function logMeasure(req2){log_default('Measure '+req2.name+' took '+req2.duration+'ms');}if(window.performance&&window.performance.getEntriesByType!==void 0){var axeStart=window.performance.getEntriesByName('mark_axe_start')[0];var measures=window.performance.getEntriesByType('measure').filter(function(measure){return measure.startTime>=axeStart.startTime;});for(var i=0;i<measures.length;++i){var req=measures[i];if(req.name===measureName){logMeasure(req);return;}logMeasure(req);}}},timeElapsed:function timeElapsed(){return now()-lastRecordedTime;},reset:function reset(){if(!originalTime){originalTime=now();}lastRecordedTime=now();}};}();var performance_timer_default=performanceTimer;if(typeof Object.assign!=='function'){(function(){Object.assign=function(target){if(target===void 0||target===null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);for(var index=1;index<arguments.length;index++){var source=arguments[index];if(source!==void 0&&source!==null){for(var nextKey in source){if(source.hasOwnProperty(nextKey)){output[nextKey]=source[nextKey];}}}}return output;};})();}if(!Array.prototype.find){Object.defineProperty(Array.prototype,'find',{value:function value(predicate){if(this===null){throw new TypeError('Array.prototype.find called on null or undefined');}if(typeof predicate!=='function'){throw new TypeError('predicate must be a function');}var list=Object(this);var length=list.length>>>0;var thisArg=arguments[1];var value;for(var i=0;i<length;i++){value=list[i];if(predicate.call(thisArg,value,i,list)){return value;}}return void 0;}});}if(!Array.prototype.findIndex){Object.defineProperty(Array.prototype,'findIndex',{value:function value(predicate,thisArg){if(this===null){throw new TypeError('Array.prototype.find called on null or undefined');}if(typeof predicate!=='function'){throw new TypeError('predicate must be a function');}var list=Object(this);var length=list.length>>>0;var value;for(var i=0;i<length;i++){value=list[i];if(predicate.call(thisArg,value,i,list)){return i;}}return-1;}});}function _pollyfillElementsFromPoint(){if(document.elementsFromPoint){return document.elementsFromPoint;}if(document.msElementsFromPoint){return document.msElementsFromPoint;}var usePointer=function(){var element=document.createElement('x');element.style.cssText='pointer-events:auto';return element.style.pointerEvents==='auto';}();var cssProp=usePointer?'pointer-events':'visibility';var cssDisableVal=usePointer?'none':'hidden';var style=document.createElement('style');style.innerHTML=usePointer?'* { pointer-events: all }':'* { visibility: visible }';return function(x,y){var current,i,d2;var elements=[];var previousPointerEvents=[];document.head.appendChild(style);while((current=document.elementFromPoint(x,y))&&elements.indexOf(current)===-1){elements.push(current);previousPointerEvents.push({value:current.style.getPropertyValue(cssProp),priority:current.style.getPropertyPriority(cssProp)});current.style.setProperty(cssProp,cssDisableVal,'important');}if(elements.indexOf(document.documentElement)<elements.length-1){elements.splice(elements.indexOf(document.documentElement),1);elements.push(document.documentElement);}for(i=previousPointerEvents.length;!!(d2=previousPointerEvents[--i]);){elements[i].style.setProperty(cssProp,d2.value?d2.value:'',d2.priority);}document.head.removeChild(style);return elements;};}if(typeof window.addEventListener==='function'){document.elementsFromPoint=_pollyfillElementsFromPoint();}if(!Array.prototype.includes){Object.defineProperty(Array.prototype,'includes',{value:function value(searchElement){var O=Object(this);var len=parseInt(O.length,10)||0;if(len===0){return false;}var n2=parseInt(arguments[1],10)||0;var k;if(n2>=0){k=n2;}else{k=len+n2;if(k<0){k=0;}}var currentElement;while(k<len){currentElement=O[k];if(searchElement===currentElement||searchElement!==searchElement&&currentElement!==currentElement){return true;}k++;}return false;}});}if(!Array.prototype.some){Object.defineProperty(Array.prototype,'some',{value:function value(fun){if(this==null){throw new TypeError('Array.prototype.some called on null or undefined');}if(typeof fun!=='function'){throw new TypeError();}var t=Object(this);var len=t.length>>>0;var thisArg=arguments.length>=2?arguments[1]:void 0;for(var i=0;i<len;i++){if(i in t&&fun.call(thisArg,t[i],i,t)){return true;}}return false;}});}if(!Array.from){Object.defineProperty(Array,'from',{value:function(){var toStr=Object.prototype.toString;var isCallable=function isCallable(fn){return typeof fn==='function'||toStr.call(fn)==='[object Function]';};var toInteger=function toInteger(value){var number=Number(value);if(isNaN(number)){return 0;}if(number===0||!isFinite(number)){return number;}return(number>0?1:-1)*Math.floor(Math.abs(number));};var maxSafeInteger=Math.pow(2,53)-1;var toLength=function toLength(value){var len=toInteger(value);return Math.min(Math.max(len,0),maxSafeInteger);};return function from(arrayLike){var C=this;var items=Object(arrayLike);if(arrayLike==null){throw new TypeError('Array.from requires an array-like object - not null or undefined');}var mapFn=arguments.length>1?arguments[1]:void 0;var T;if(typeof mapFn!=='undefined'){if(!isCallable(mapFn)){throw new TypeError('Array.from: when provided, the second argument must be a function');}if(arguments.length>2){T=arguments[2];}}var len=toLength(items.length);var A=isCallable(C)?Object(new C(len)):new Array(len);var k=0;var kValue;while(k<len){kValue=items[k];if(mapFn){A[k]=typeof T==='undefined'?mapFn(kValue,k):mapFn.call(T,kValue,k);}else{A[k]=kValue;}k+=1;}A.length=len;return A;};}()});}if(!String.prototype.includes){String.prototype.includes=function(search,start){if(typeof start!=='number'){start=0;}if(start+search.length>this.length){return false;}else{return this.indexOf(search,start)!==-1;}};}if(!Array.prototype.flat){Object.defineProperty(Array.prototype,'flat',{configurable:true,value:function flat(){var depth=isNaN(arguments[0])?1:Number(arguments[0]);return depth?Array.prototype.reduce.call(this,function(acc,cur){if(Array.isArray(cur)){acc.push.apply(acc,flat.call(cur,depth-1));}else{acc.push(cur);}return acc;},[]):Array.prototype.slice.call(this);},writable:true});}if(window.Node&&!('isConnected'in window.Node.prototype)){Object.defineProperty(window.Node.prototype,'isConnected',{get:function get(){return!this.ownerDocument||!(this.ownerDocument.compareDocumentPosition(this)&this.DOCUMENT_POSITION_DISCONNECTED);}});}function uniqueArray(arr1,arr2){return arr1.concat(arr2).filter(function(elem,pos,arr){return arr.indexOf(elem)===pos;});}var unique_array_default=uniqueArray;function createLocalVariables(vNodes,anyLevel,thisLevel,parentShadowId,recycledLocalVariable){var retVal=recycledLocalVariable||{};retVal.vNodes=vNodes;retVal.vNodesIndex=0;retVal.anyLevel=anyLevel;retVal.thisLevel=thisLevel;retVal.parentShadowId=parentShadowId;return retVal;}function matchExpressions(domTree,expressions,filter){var recycledLocalVariables=cache_default.get('qsa.recycledLocalVariables',function(){return[];});var stack=[];var vNodes=Array.isArray(domTree)?domTree:[domTree];var currentLevel=createLocalVariables(vNodes,expressions,null,domTree[0].shadowId,recycledLocalVariables.pop());var result=[];while(currentLevel.vNodesIndex<currentLevel.vNodes.length){var _currentLevel$anyLeve,_currentLevel$thisLev;var vNode=currentLevel.vNodes[currentLevel.vNodesIndex++];var childOnly=null;var childAny=null;var combinedLength=(((_currentLevel$anyLeve=currentLevel.anyLevel)===null||_currentLevel$anyLeve===void 0?void 0:_currentLevel$anyLeve.length)||0)+(((_currentLevel$thisLev=currentLevel.thisLevel)===null||_currentLevel$thisLev===void 0?void 0:_currentLevel$thisLev.length)||0);var added=false;for(var _i24=0;_i24<combinedLength;_i24++){var _currentLevel$anyLeve2,_currentLevel$anyLeve3,_currentLevel$anyLeve4;var exp=_i24<(((_currentLevel$anyLeve2=currentLevel.anyLevel)===null||_currentLevel$anyLeve2===void 0?void 0:_currentLevel$anyLeve2.length)||0)?currentLevel.anyLevel[_i24]:currentLevel.thisLevel[_i24-(((_currentLevel$anyLeve3=currentLevel.anyLevel)===null||_currentLevel$anyLeve3===void 0?void 0:_currentLevel$anyLeve3.length)||0)];if((!exp[0].id||vNode.shadowId===currentLevel.parentShadowId)&&_matchesExpression(vNode,exp[0])){if(exp.length===1){if(!added&&(!filter||filter(vNode))){result.push(vNode);added=true;}}else{var rest=exp.slice(1);if([' ','>'].includes(rest[0].combinator)===false){throw new Error('axe.utils.querySelectorAll does not support the combinator: '+exp[1].combinator);}if(rest[0].combinator==='>'){(childOnly=childOnly||[]).push(rest);}else{(childAny=childAny||[]).push(rest);}}}if((!exp[0].id||vNode.shadowId===currentLevel.parentShadowId)&&(_currentLevel$anyLeve4=currentLevel.anyLevel)!==null&&_currentLevel$anyLeve4!==void 0&&_currentLevel$anyLeve4.includes(exp)){(childAny=childAny||[]).push(exp);}}if(vNode.children&&vNode.children.length){stack.push(currentLevel);currentLevel=createLocalVariables(vNode.children,childAny,childOnly,vNode.shadowId,recycledLocalVariables.pop());}while(currentLevel.vNodesIndex===currentLevel.vNodes.length&&stack.length){recycledLocalVariables.push(currentLevel);currentLevel=stack.pop();}}return result;}function querySelectorAllFilter(domTree,selector,filter){domTree=Array.isArray(domTree)?domTree:[domTree];var expressions=_convertSelector(selector);var nodes=getNodesMatchingExpression(domTree,expressions,filter);if(nodes){return nodes;}return matchExpressions(domTree,expressions,filter);}var query_selector_all_filter_default=querySelectorAllFilter;function preloadCssom(_ref73){var _ref73$treeRoot=_ref73.treeRoot,treeRoot=_ref73$treeRoot===void 0?axe._tree[0]:_ref73$treeRoot;var rootNodes=getAllRootNodesInTree(treeRoot);if(!rootNodes.length){return Promise.resolve();}var dynamicDoc=document.implementation.createHTMLDocument('Dynamic document for loading cssom');var convertDataToStylesheet=get_stylesheet_factory_default(dynamicDoc);return getCssomForAllRootNodes(rootNodes,convertDataToStylesheet).then(function(assets){return flattenAssets(assets);});}var preload_cssom_default=preloadCssom;function getAllRootNodesInTree(tree){var ids=[];var rootNodes=query_selector_all_filter_default(tree,'*',function(node){if(ids.includes(node.shadowId)){return false;}ids.push(node.shadowId);return true;}).map(function(node){return{shadowId:node.shadowId,rootNode:get_root_node_default(node.actualNode)};});return unique_array_default(rootNodes,[]);}function getCssomForAllRootNodes(rootNodes,convertDataToStylesheet){var promises=[];rootNodes.forEach(function(_ref74,index){var rootNode=_ref74.rootNode,shadowId=_ref74.shadowId;var sheets=getStylesheetsOfRootNode(rootNode,shadowId,convertDataToStylesheet);if(!sheets){return Promise.all(promises);}var rootIndex=index+1;var parseOptions={rootNode:rootNode,shadowId:shadowId,convertDataToStylesheet:convertDataToStylesheet,rootIndex:rootIndex};var importedUrls=[];var p2=Promise.all(sheets.map(function(sheet,sheetIndex){var priority=[rootIndex,sheetIndex];return parse_stylesheet_default(sheet,parseOptions,priority,importedUrls);}));promises.push(p2);});return Promise.all(promises);}function flattenAssets(assets){return assets.reduce(function(acc,val){return Array.isArray(val)?acc.concat(flattenAssets(val)):acc.concat(val);},[]);}function getStylesheetsOfRootNode(rootNode,shadowId,convertDataToStylesheet){var sheets;if(rootNode.nodeType===11&&shadowId){sheets=getStylesheetsFromDocumentFragment(rootNode,convertDataToStylesheet);}else{sheets=getStylesheetsFromDocument(rootNode);}return filterStylesheetsWithSameHref(sheets);}function getStylesheetsFromDocumentFragment(rootNode,convertDataToStylesheet){return Array.from(rootNode.children).filter(filerStyleAndLinkAttributesInDocumentFragment).reduce(function(out,node){var nodeName2=node.nodeName.toUpperCase();var data=nodeName2==='STYLE'?node.textContent:node;var isLink=nodeName2==='LINK';var stylesheet=convertDataToStylesheet({data:data,isLink:isLink,root:rootNode});if(stylesheet.sheet){out.push(stylesheet.sheet);}return out;},[]);}function getStylesheetsFromDocument(rootNode){return Array.from(rootNode.styleSheets).filter(function(sheet){if(!sheet.media){return false;}return filterMediaIsPrint(sheet.media.mediaText);});}function filerStyleAndLinkAttributesInDocumentFragment(node){var nodeName2=node.nodeName.toUpperCase();var linkHref=node.getAttribute('href');var linkRel=node.getAttribute('rel');var isLink=nodeName2==='LINK'&&linkHref&&linkRel&&node.rel.toUpperCase().includes('STYLESHEET');var isStyle=nodeName2==='STYLE';return isStyle||isLink&&filterMediaIsPrint(node.media);}function filterMediaIsPrint(media){if(!media){return true;}return!media.toUpperCase().includes('PRINT');}function filterStylesheetsWithSameHref(sheets){var hrefs=[];return sheets.filter(function(sheet){if(!sheet.href){return true;}if(hrefs.includes(sheet.href)){return false;}hrefs.push(sheet.href);return true;});}function preloadMedia(_ref75){var _ref75$treeRoot=_ref75.treeRoot,treeRoot=_ref75$treeRoot===void 0?axe._tree[0]:_ref75$treeRoot;var mediaVirtualNodes=query_selector_all_filter_default(treeRoot,'video, audio',function(_ref76){var actualNode=_ref76.actualNode;if(actualNode.hasAttribute('src')){return!!actualNode.getAttribute('src');}var sourceWithSrc=Array.from(actualNode.getElementsByTagName('source')).filter(function(source){return!!source.getAttribute('src');});if(sourceWithSrc.length<=0){return false;}return true;});return Promise.all(mediaVirtualNodes.map(function(_ref77){var actualNode=_ref77.actualNode;return isMediaElementReady(actualNode);}));}var preload_media_default=preloadMedia;function isMediaElementReady(elm){return new Promise(function(resolve){if(elm.readyState>0){resolve(elm);}function onMediaReady(){elm.removeEventListener('loadedmetadata',onMediaReady);resolve(elm);}elm.addEventListener('loadedmetadata',onMediaReady);});}function _preload(options){var preloadFunctionsMap={cssom:preload_cssom_default,media:preload_media_default};if(!_shouldPreload(options)){return Promise.resolve();}return new Promise(function(resolve,reject){var _getPreloadConfig2=_getPreloadConfig(options),assets=_getPreloadConfig2.assets,timeout=_getPreloadConfig2.timeout;var preloadTimeout=setTimeout(function(){return reject(new Error('Preload assets timed out.'));},timeout);Promise.all(assets.map(function(asset){return preloadFunctionsMap[asset](options).then(function(results){return _defineProperty({},asset,results);});})).then(function(results){var preloadAssets=results.reduce(function(out,result){return _extends({},out,result);},{});clearTimeout(preloadTimeout);resolve(preloadAssets);})['catch'](function(err2){clearTimeout(preloadTimeout);reject(err2);});});}function isValidPreloadObject(preloadObj){return _typeof(preloadObj)==='object'&&Array.isArray(preloadObj.assets);}function _shouldPreload(options){if(!options||options.preload===void 0||options.preload===null){return true;}if(typeof options.preload==='boolean'){return options.preload;}return isValidPreloadObject(options.preload);}function _getPreloadConfig(options){var _constants_default$pr=constants_default.preload,assets=_constants_default$pr.assets,timeout=_constants_default$pr.timeout;var config={assets:assets,timeout:timeout};if(!options.preload){return config;}if(typeof options.preload==='boolean'){return config;}var areRequestedAssetsValid=options.preload.assets.every(function(a2){return assets.includes(a2.toLowerCase());});if(!areRequestedAssetsValid){throw new Error('Requested assets, not supported. Supported assets are: '.concat(assets.join(', '),'.'));}config.assets=unique_array_default(options.preload.assets.map(function(a2){return a2.toLowerCase();}),[]);if(options.preload.timeout&&typeof options.preload.timeout==='number'&&!isNaN(options.preload.timeout)){config.timeout=options.preload.timeout;}return config;}function _publishMetaData(ruleResult){var checksData=axe._audit.data.checks||{};var rulesData=axe._audit.data.rules||{};var rule=find_by_default(axe._audit.rules,'id',ruleResult.id)||{};ruleResult.tags=_clone(rule.tags||[]);var shouldBeTrue=extender(checksData,true,rule);var shouldBeFalse=extender(checksData,false,rule);ruleResult.nodes.forEach(function(detail){detail.any.forEach(shouldBeTrue);detail.all.forEach(shouldBeTrue);detail.none.forEach(shouldBeFalse);});extend_meta_data_default(ruleResult,_clone(rulesData[ruleResult.id]||{}));}function getIncompleteReason(checkData,messages){function getDefaultMsg(message){if(message.incomplete&&message.incomplete['default']){return message.incomplete['default'];}else{return incompleteFallbackMessage();}}if(checkData&&checkData.missingData){try{var msg=messages.incomplete[checkData.missingData[0].reason];if(!msg){throw new Error();}return msg;}catch(e){if(typeof checkData.missingData==='string'){return messages.incomplete[checkData.missingData];}else{return getDefaultMsg(messages);}}}else if(checkData&&checkData.messageKey){return messages.incomplete[checkData.messageKey];}else{return getDefaultMsg(messages);}}function extender(checksData,shouldBeTrue,rule){return function(check){var sourceData=checksData[check.id]||{};var messages=sourceData.messages||{};var data=Object.assign({},sourceData);delete data.messages;if(!rule.reviewOnFail&&check.result===void 0){if(_typeof(messages.incomplete)==='object'&&!Array.isArray(check.data)){data.message=getIncompleteReason(check.data,messages);}if(!data.message){data.message=messages.incomplete;}}else{data.message=check.result===shouldBeTrue?messages.pass:messages.fail;}if(typeof data.message!=='function'){data.message=process_message_default(data.message,check.data);}extend_meta_data_default(check,data);};}function querySelectorAll(domTree,selector){return query_selector_all_filter_default(domTree,selector);}var query_selector_all_default=querySelectorAll;function matchTags(rule,runOnly){var include,exclude,matching;var defaultExclude=axe._audit&&axe._audit.tagExclude?axe._audit.tagExclude:[];if(runOnly.hasOwnProperty('include')||runOnly.hasOwnProperty('exclude')){include=runOnly.include||[];include=Array.isArray(include)?include:[include];exclude=runOnly.exclude||[];exclude=Array.isArray(exclude)?exclude:[exclude];exclude=exclude.concat(defaultExclude.filter(function(tag){return include.indexOf(tag)===-1;}));}else{include=Array.isArray(runOnly)?runOnly:[runOnly];exclude=defaultExclude.filter(function(tag){return include.indexOf(tag)===-1;});}matching=include.some(function(tag){return rule.tags.indexOf(tag)!==-1;});if(matching||include.length===0&&rule.enabled!==false){return exclude.every(function(tag){return rule.tags.indexOf(tag)===-1;});}else{return false;}}function ruleShouldRun(rule,context,options){var runOnly=options.runOnly||{};var ruleOptions=(options.rules||{})[rule.id];if(rule.pageLevel&&!context.page){return false;}else if(runOnly.type==='rule'){return runOnly.values.indexOf(rule.id)!==-1;}else if(ruleOptions&&typeof ruleOptions.enabled==='boolean'){return ruleOptions.enabled;}else if(runOnly.type==='tag'&&runOnly.values){return matchTags(rule,runOnly.values);}else{return matchTags(rule,[]);}}var rule_should_run_default=ruleShouldRun;function _filterHtmlAttrs(element,filterAttrs){if(!filterAttrs){return element;}var node=element.cloneNode(false);var attributes2=get_node_attributes_default(node);if(node.nodeType===1){var outerHTML=node.outerHTML;node=cache_default.get(outerHTML,function(){return setNodeAttributes(node,attributes2,element,filterAttrs);});}else{node=setNodeAttributes(node,attributes2,element,filterAttrs);}Array.from(element.childNodes).forEach(function(child){node.appendChild(_filterHtmlAttrs(child,filterAttrs));});return node;}function setNodeAttributes(node,attributes2,element,filterAttrs){if(!attributes2){return node;}node=document.createElement(node.nodeName);Array.from(attributes2).forEach(function(attr){if(!attributeMatches(element,attr.name,filterAttrs)){node.setAttribute(attr.name,attr.value);}});return node;}function attributeMatches(node,attrName,filterAttrs){if(typeof filterAttrs[attrName]==='undefined'){return false;}if(filterAttrs[attrName]===true){return true;}return element_matches_default(node,filterAttrs[attrName]);}function _select(selector,context){var result=[];var candidate;if(axe._selectCache){for(var j=0,l=axe._selectCache.length;j<l;j++){var item=axe._selectCache[j];if(item.selector===selector){return item.result;}}}var outerIncludes=getOuterIncludes(context.include);var isInContext=getContextFilter(context);for(var _i25=0;_i25<outerIncludes.length;_i25++){candidate=outerIncludes[_i25];var nodes=query_selector_all_filter_default(candidate,selector,isInContext);result=mergeArrayUniques(result,nodes);}if(axe._selectCache){axe._selectCache.push({selector:selector,result:result});}return result;}function getOuterIncludes(includes){return includes.reduce(function(res,el){if(!res.length||!_contains(res[res.length-1],el)){res.push(el);}return res;},[]);}function getContextFilter(context){if(!context.exclude||context.exclude.length===0){return null;}return function(node){return _isNodeInContext(node,context);};}function mergeArrayUniques(arr1,arr2){if(arr1.length===0){return arr2;}if(arr1.length<arr2.length){var temp=arr1;arr1=arr2;arr2=temp;}for(var _i26=0,l=arr2.length;_i26<l;_i26++){if(!arr1.includes(arr2[_i26])){arr1.push(arr2[_i26]);}}return arr1;}function setScroll(elm,top,left){if(elm===window){return elm.scroll(left,top);}else{elm.scrollTop=top;elm.scrollLeft=left;}}function setScrollState(scrollState){scrollState.forEach(function(_ref79){var elm=_ref79.elm,top=_ref79.top,left=_ref79.left;return setScroll(elm,top,left);});}var set_scroll_state_default=setScrollState;function _shadowSelect(selectors){var selectorArr=Array.isArray(selectors)?_toConsumableArray(selectors):[selectors];return selectRecursive(selectorArr,document);}function selectRecursive(selectors,doc){var selectorStr=selectors.shift();var elm=selectorStr?doc.querySelector(selectorStr):null;if(selectors.length===0){return elm;}if(!(elm!==null&&elm!==void 0&&elm.shadowRoot)){return null;}return selectRecursive(selectors,elm.shadowRoot);}function _shadowSelectAll(selectors){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;var selectorArr=Array.isArray(selectors)?_toConsumableArray(selectors):[selectors];if(selectors.length===0){return[];}return selectAllRecursive(selectorArr,doc);}function selectAllRecursive(_ref80,doc){var _ref81=_toArray(_ref80),selectorStr=_ref81[0],restSelector=_ref81.slice(1);var elms=doc.querySelectorAll(selectorStr);if(restSelector.length===0){return Array.from(elms);}var selected=[];var _iterator13=_createForOfIteratorHelper(elms),_step13;try{for(_iterator13.s();!(_step13=_iterator13.n()).done;){var elm=_step13.value;if(elm!==null&&elm!==void 0&&elm.shadowRoot){selected.push.apply(selected,_toConsumableArray(selectAllRecursive(restSelector,elm.shadowRoot)));}}}catch(err){_iterator13.e(err);}finally{_iterator13.f();}return selected;}function validInputTypes(){return['hidden','text','search','tel','url','email','password','date','month','week','time','datetime-local','number','range','color','checkbox','radio','file','submit','image','reset','button'];}var valid_input_type_default=validInputTypes;var langs=[,[,[1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,,1,1,1,1,1,1,,1],[1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,1,1,,1,1,,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,1,1,,1,1,1,1],[1,1,1,1,1,1,,,,,,1,1,1,1,,,1,1,1,,1,,1,,1,1],[1,1,1,,1,1,,1,1,1,,1,,,1,1,1,,,1,1,1,,,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,,,,1,1,1,,1,1,1,1,1,1,,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1],[,1,,,,,,1,,1,,,,,1,,1,,,,1,1,,1,,,1],[1,,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,,1,1,1,1,,,1,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,1,1,,,1,,,,,1,1,1,,1,,1,,1,,,,,,1],[1,,1,1,1,1,,,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[1,,1,,1,,,,,1,,1,1,1,1,1,,,,1,1,1,1],[,1,1,1,1,1,,1,1,1,,1,,1,1,1,,,1,1,1,1,1,1,1,1],[,,1,,,1,,1,,,,1,1,1,,,,,,,,,,,1],[1,1,1,1,1,1,,1,1,1,,1,1,,1,1,1,1,1,1,1,1,,,1,1,1],[1,1,1,1,1,,,1,,,1,,,1,1,1,,,,,1,,,,,,1]],[,[1,1,1,1,1,1,1,1,1,1,1,,1,,1,1,1,,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,,,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1],[,1,1,,1,,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,,1,1,,1,1,1,1,1,1,1,,1],[,1,,1,1,1,,1,1,,1,,1,1,1,1,1,1,1,1],[,1,,1,1,1,1,1,1,1,1,,,1,1,1,,,1,1,,,,,,1,1],[1,1,1,,,,,1,,,,1,1,,1,,,,,,1,,,,,1],[,1,,,1,,,1,,,,,,1],[,1,,1,,,,1,,,,1],[1,,1,1,1,,1,1,1,,1,1,1,1,1,1,1,1,1,,1,,,1,1,1,1],[,1,1,1,1,1,,,1,,,1,,1,1,,1,,1,,,,,1,,1],[,1,,,,1,,,1,1,,1,,1,1,1,1,,1,1,,,1,,,1],[,1,1,,,,,,1,,,,1,1,1,1,,1,1,1,1,1,1,,1,1,1],[,1,,1,1,1,,,1,1,1,1,1,1,,1,,,,,1,1,,1,,1],[,1,,1,,1,,1,,1,,1,1,1,1,1,,,1,1,1],[,1,1,1,,,,1,1,1,,1,1,,,1,1,,1,1,1,1,,1,1],[1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,,,1,1,1,1,1,1,1],[,1,1,1,,1,1,1,,1,,,,,1,1,1,,,1,,1,,,1,1],[,,,,1,,,,,,,,,,,,,,,,,1],[1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[,1,,1,1,1,,1,1,,,,1,1,1,1,1,,,1,1,1,,,,,1],[1,1,1,1,,,,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[1,,,,,,,1,,,,,,,1],[,1,1,,1,1,,1,,,,,,,,,,,,,1],,[1,1,1,,,,,,,,,,,,,1],[,,,,,,,,1,,,1,,,1,1,,,,,1]],[,[1,1,,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,,1,1,1,1,1,1],[,1,1,,1,1,1,1,,1,1,,1,1,1,1,1,1,1,,1,1,1,1,,1],[,,,1,,,,,,,,,,,,,,,1],[,1,,,1,1,,1,,1,1,,,,1,1,,,1,1,,,,1],[1,,,1,1,1,1,1,1,1,,1,1,1,1,,1,1,1,1,,,1,,,,1],,[,1,1,1,1,1,,1,1,1,,1,1,,1,1,,,1,1,1,1,,1,1,,1],[,1,,,1,,,1,,1,,,1,1,1,1,,,1,1,,1,1,1,1],[,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[,1,1,1,1,1,1,,,1,1,1,1,1,1,1,,,1,,,1,,1],[,1,,,,,,,,,,1,1,,,,,,1,1,,,,,1],[,,,,,,,1,,,,1,,1,1],[,1,1,1,1,1,1,1,,,,1,1,1,1,1,,,1,1,,1,1,1,1,1],[,1,,,1,1,,1,,1,1,1,,,1,1,,,1,,1,1,1,1,,1],[,1,1,1,,1,1,,1,1,,1,1,,1,1,1,1,1,1,1,,1,1,1,1,1],[,,,,,,,,,,,,,,,,1],,[,1,1,1,1,1,,1,1,1,,,1,,1,1,,1,1,1,1,1,,1,,1],[,,1,,,1,,,1,1,,,1,,1,1,,1],[,1,1,,1,,,,1,1,,1,,1,1,1,1,,1,1,1,1,,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1],[1,1],[,1,,,,,,,,,,1,1,,,,,,1,1,,1,,1,,1,1],,[,1,1,,1,,,1,,1,,,,1,1,1,,,,,,1,,,,1],[1,1,,,1,1,,1,,,,,1,,1]],[,[,1],[,,,1,,,,1,,,,1,,,,1,,,1,,,1],[,,,,,,,,,,,,,,,,,,1,1,,,,,,1],,[1,,,,,1],[,1,,,,1,,,,1],[,1,,,,,,,,,,,1,,,1,,,,,,,,,1,1],[,,,,,,,,,,,,,,,,,,,,,1],[,,,,,,,,,,,,,,,,1,,,,1,,1],[,1],[,1,,1,,1,,1,,1,,1,1,1,,1,1,,1,,,,,,,1],[1,,,,,1,,,1,1,,1,,1,,1,1,,,,,1,,,1],[,1,1,,,1,,1,,1,,1,,1,1,1,1,,,1,,1,,1,1,1],[1,1,1,1,1,,1,,1,,,,1,1,1,1,,1,1,,,1,1,1,1],[1,,,,,,,,,,,,,,,,,,,,1],[,,,,,,,,,1],,[,1,,,,,,1,1,1,,1,,,,1,,,1,1,1,,,1],[1,,,,,1,,1,1,1,,1,1,1,1,1,,1,,1,,1,,,1,1],[1,,1,1,,,,,1,,,,,,1,1,,,1,1,1,1,,,1,,1],[1,,,,,,,,,,,,,,,,,1],[,,,,,1,,,1,,,,,,1],[,,,,,,,,,,,,,,,1],[,,,,,,,,,,,,,,,,,,,,1],[,1,,,,,,,,,,,,,,1],[,1,,,,1]],[,[1,1,1,,1,,1,1,1,1,1,1,1,1,1,,1,,1,,1,1,,,1,1,1],[,,,,,,,,,,,,1],[,,,,,,,,,,,,,,,,,,,1],,[,,,,,,,,,,,,,,,,,,1],[1,,,,,,,,,1,,,,1],[,,,,,,,,,,,,,,,,,,1],,[1,1,,,,1,1,,,,,,1,,,,1,,1,,1,1,,1],[1],[,,,,,,,,,,,1,,,,,,,,,,,1],[,1,,,,,,,1,1,,,1,,1,,,,1,,,,,,,1],[,,,,,,,,,,,,,,,,1,,,,,1],[,,1,,,,,1,,1],[1,,,,1,,,,,1,,,,1,1,,,,1,1,,,,,1],[,,,,,1],[,,,,,,,,,,,,,,,,,,,1],[1,,,1,1,,,,,,,1,,1,,1,1,1,1,1,1],[,,,,,1,,,,,,,1,,,,,,,1],,[,,1,1,1,1,1,,1,1,1,,,1,1,,,1,1,,1,1,1,,,1],[,,,,,,,,,,,,,,,,,,1],[,1,,,,1],,[1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1],[,,,1,1,1,1,,,,,,1,,1,,,,1,,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,,,1],[,1,1,1,1,,1,1,1,1,1,1,1,1,,,,1,,1,,,1,1,1,1,1],[,,,,,,,,,,,1,,,,,,,,,1,,,,1],[,1,1,,1,1,,1,,,,1,1,,1,1,,,1,,1,1,,1],[,1,,1,,1,,,1,,,1,1,,1,1,,,1,1,1],[,1,1,1,1,1,,1,1,,,,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[,,,,,,,,,1,,1,,1,1,,,,1,,,1],[,1,,,1,1,,,,,,,,,1,1,1,,,,,1],[1,,,1,1,,,,1,1,1,1,1,,,1,,,1,,,1,,1,,1],[,1,1,,1,1,,1,1,,,,1,1,1,,,1,1,,,1,1,1,1,1,1],[1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,,1,1,,1,1,,1,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[,1,,,,1,,,,,,,,,1],[,1,,,,,,,,1,,,,,1,,,,1,,,1],[,1,1,1,1,,,1,1,1,1,1,,1,,1,,1,1,1,1,1,1,1,1,1,1],[,,,,,1,,1,,,,,1,1,1,1,1,,,1,,,,1],[,1,,,,,,,,1,,,,,,,,,,,,1],[1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1],[1,1,,1,,1,1,,,,1,,1,1,1,1,1,,1,1,,,,,,1],[,1,1,1,1,1,1,1,,1,1,,,1,1,,,,1,,1,1,,1,1],[,,,,,,,,,,,,,,,,,,,,,,,,1],[,1,1,,1,1,1,1,,1,,,1,1,1,1,,,1,,,,,,,1],[,1,,,,,,,,1,,,,,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,1],[,1,1,,,,,,,,,,,,1,1,,,,,,1],[,1,,,,,,,1],[,,,,,,,,,,,,,,1,,,,,1,,,,,,1],[1,1,,,1,,,1,1,1,,,,1],,[,,,,,,,,,,,,,1,,,,,,,,,,1],[,,,,,,,,,1,,,,,,,,,1,,,,,,,1],[1,1,1,,1,,1,1,1,1,1,1,1,1,,1,,,1,,1,,,1,1],[,,,,,,,,,1],[,1,,,,1,,,,,,1,,,1,,,,,1],[,1,1,,1,1,,,,,,,,,,,,,,,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[,1,,,1,1,,1,1,1,1,,,,1,1,,,,1,,1],[1,1,1,1,1,1,,,1,1,1,1,1,1,,1,1,,1,1,1,,1,1,,1,1],[,,,,,,,,,,,,,,,1,,,,1],,[1,1,,1,,1,,,,,,1,,1,,1,1,,1,,1,1,,1,1,,1],[,,1,,,,,,1,,,,1,,1,,,,,1],[1,,,,,,,,,1,,,,,,1,,,,1,,1,,,1],[1,,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,,,1,,1,,,,,,1,,,1,,,,,,,,1],[,1,,1,,,,,,,,,,,,1],,[1,1,,,,,,,,,,,,,,,,,,,,,,1,1],[1]],[,[1,,,,,,,,,1,,,,,1,,1,,1],[,1,1,,1,1,,1,1,1,,,1,1,1,,,,1,,,1,,,,1],[,1,,,,,,,1,,,,1,,,,,,1],[1,1,1,1,1,1,,,,1,,,,,,,,,1,1,1,1],[1],[,1,1,,,1,1,,,,,1,,1,,,,,,,,1,,,,1],[1,,1,,,1,,1,,,,,1,1,1,1,,,,1,,,,1],[,,1,,,,,,,1,,,,,,,1,,,,,,,1],[1,,,,,,,,,,,,,,1,,,,1],[,,,1,,1,,,,,1,,,,1,1,,,,1],[1,,,,,1,,,,1,,1,1,,,1,1,,1,1,1,,1,1,1,,1],[,1,1,,,,,1,,1,,1,1,1,,1,1,,,1,,1,1,1],[,1,,,,1,,,,1,,,1,,1,1,,,1,1,,,,,,1],[1,,1,1,,1,,1,1,,1,,1,1,1,1,1,,,1,1,,,,,,1],[1,,,,,,,,,,,,,,,,,,1,,,1,,1],[,,,,,,,,,1,,,,,,1],[,,,,,,,,,,,,,,,,,,,,,1,,1],[,1,,,,1,,,1,1,,1,,,1,1,,,1,,,1,,,1,1],[1,1,,1,1,1,,1,1,1,,1,,1,1,1,,,1,,1,1],[1,,1,1,1,1,,,,1,,1,1,1,,1,,,1,1,1,,1,1,1,1,1],[1,,,,,,,,,,,,,1],[,,1,,,,,,,,,,,,,,,,,,,,1],[1,,,,,,,,,,,1,,1,,1,,,,1],[,,,1,,,,,,,,,1],[,1,,,,,,,,,,,,,,1,,,,,,,,,1],[,,,,,,,,1,1,,,,,,,,,1,,,,,,,,1]],[,[1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,,1,1,1,1,1,,,1,1,1],[,,,,,1,,,,1,1,1,,,1,1,,,1,,1,1,,1],[,,,,,,,,,,,,,,,,,,,1,1],[,1,,,,,,1,,,,,,,,,,,,,1],[,,1,,,1,,1,1,1,,1,1,,1,,,,1,,1,1],,[,,1,,,1,,,,,,1,,,,1],[,,,,,,,,,1,,,,,,,,,,1],[1,1,1,1,1,1,,1,1,1,,,1,1,,1,,1,,,1,1,1,,,1],[,,,,,1,,,,,,,,,,,,,1],[,1,,,,,,,,,,,,1,,1,1,,1,,,1],[,,,,,1,,,,,,,,,,,,,,1],[,1,1,1,1,,,,,1,,,1,,1,,,,1,1,,,,1,1],[,1,,,1,,,1,,1,1,,1,,,,,,,1],[,,1,,1,,,1,,,,,,,,,,,1,1,,,,1],[,1,,,,,,,,,,,,,,,,,1,,,,,,1],[,,,,,,,,,,,,,,,,,,1],[,1,1,,,,,,,,,,,,,,,,1,,1,1],[,,,,,,,,,,,,1],,[,1,1,1,1,,,,1,1,,1,1,1,1,1,1,,1,1,1,1,,1,,1],[1,,,,1,,,,,,,,,,1],[1,,,,,,,,,1],,[,1,,,,1,,,,,,,,,,,,,,,,,,,,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,,1,,1,1,1,1,,,,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,,1,1,,1,1,1,,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,,1,1,1,1,1,1,1,1,1,1,,,1,1,1,,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,,1,,1,1,1,1],[1,1,1,1,,1,1,1,,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1],[,,,1,1,1,1,,1,,,,1,1,,,1,1,,1],[,1,1,,1,,,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,,,,,,,,,,,,1],[1,1,1,,,,,1,1,1,,1,1,1,1,,,1,1,,1,1,,,,,1],[,1,,,,,,,1,1,,,1,1,1,,1,,,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,1,,1,1,1,1,1,1],[,1,,,,1,,,,1,,,1,,,,1,,,,,,,1,1],[,1,1,1,1,1,,,1,1,1,,1,1,1,1,,,1,1,1,1,,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,,1,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,1,1],[1,1,1,,1,,,1,1,1,1,,1,1,1,1,,,,1,,1,,1,,,1],[1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,,,1,,,,,,,,,1,1,,,,,,,,,1],,[,1,,1,,1,,1,,1,,1,1,1,1,1,,,1,,1,,1,,,,1],[,1,,,1,1,,1,1,1,,,1,1,1,1,1,,1,1,1,,1,,,1],[1,,,1,,,,1,1,1,,,,,1,1,,,,1,,1],[1,1,,1,1,1,1,,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[1,1,,,,,,,,1,,1,,,,,,,,1,,1],[,1,,,,1,,1,1,,,,1,1,,1,,,,1,1,1,,1],,[,1,,,,,,1,,,,,,,1],[,,,,,,,,1,,,,1,,1,,,,,,,,,,,,1]],[,[,1,1,,1,1,1,1,,1,1,1,,1,1,,1,1,,1,1,1,1,1,1,,1],[,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,,1,1,1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1],[,1,1,,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,,1],[1,1,1,1,1,,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,,1,1,1,1,1,1,1,1,1,1],[,1,,,1,,,,,,,,1,,,,,,1,,,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,,,,1,1,1,,1,1,1,1,,,1,1,1,1,,,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,,1],[1,1,,1,,1,,1,,1,1,1,1,1,1,1,,1,1,,,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,,1,1],[,1,1,,,,,1,1,1,,,1,,1,1,,,,1,,1,,,1,1],[,,,,,,,1,,,,1,1,1,1,1,,1,,,,,,,,1],[1,1,1,1,,1,1,1,,1,,1,1,1,1,,1,,1,,1,1,,,1,,1],[,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,,,,1,1,,1,,1,1,1,,1,,1,1,,1,1,,1,,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,,,,,,,,1,,,,,1,,1],[,1,1,1,,1,,1,,1,,,,1,,1,,,1,,,,,,1,1],[,1,,,1,1,,1,,1,,1,1,1,1,1,,1,1,,,1,,,1],[1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,,,,,1,,1,,1,,,,,,1,,1,,,,1,1]],[,[,1,,1,,,,,,,,,,,,,,,1,,,,1],[,,,,,,,,,1,,1,1,1,,1,,,1,,1,1],[1,1,,,,,,,1,,,,,,,1,,,,,,1],[,1,,,,,,,,,,1,,,,,,,,,1,1],,[,,,,,,,,,,,,,,,1,,,,1,,1],[,,1,1,,1,,1,,,,,,,,1,,,,,,1],[,,,,,,,,,,,,,,,,,,,,1,1],[,1,,,,,,,,,,,,,1],[1,,1,1,,,,1,,,,,,,,,1,,,1,,,1,1],[,1,1,,1,1,,1,1,1,1,1,1,1,1,1,,,1,1,,1,1,,1],[,1,,,1,1,,,,,,1,,1,,1,,,1,,1,1],[1,1,1,1,,1,,1,,1,,1,1,,1,1,1,1,1,,1,1,1,1,1],[,1,1,,,1,,1,,1,1,1,,,1,1,1,,1,1,1,1,,1,1],[,,,,1,,,1,,,,,,,1,,,,1,1],[,1,,,,,,,,,,1,,1,,1,,,,,1,,,,,1],,[1,1,,1,,1,,1,1,,,,,,1,1,,,1,1,1,1,1,1,1,1,1],[1,1,,1,,,,,,1,,,,,,1,1,,,,1,1,,,1],[,1,1,,1,1,,,,1,,1,1,1,1,1,,1,1,1,1,1,,1,1,1,1],[,1,1,,,1,,,,1,,,,1,1],[,,,,1],[,,,,,,,,,1,,,1],,[,,1,,1,,,,,,,,,1,,,,,,,,,,,,1],[,,,,,,,,,,,,,1]],[,[1,1,1,1,1,1,1,1,1,1,,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,,1,1,,1,1,1,1,1,,,1,1,1,1,1,,1,1,1,1,1,,,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,,1,,,,,1],[,1,,1,,,,,,1,,,,,1,1,,,,,1,1],[,1,1,,1,1,1,1,1,1,1,1,1,1,,1,1,1,,1,,,1,,1,1,1],[,1,,,,1,,,,,,,1],[,1,,,1,,,1,,1,,1,1,,1,,,,,1,,1,,,,1,1],[,1,,,1,,,1,1,1,,1,1,1,1,1,,1,1,,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,,1,1,1,1,1,1,1,1,1],[,,,,,,,,,,,,,,,,,,,,1],[,1,1,1,,,,1,1,,,,,,1,1,1,,1,1,1,1],[1,1,1,1,1,1,1,1,1,,1,1,1,,1,1,1,1,1,1,1,1,1,1,,1,1],[,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,,1,1,1,1,1,,1,1,1,1],[,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,,,1,1,1,1,1,1,1,,1,,1,1,1,1,1,,1,1,,1,1,1,1,1],[,1,,,,1,,,,1,,1,1,1,1,1,1,1,1,1,1,1],[,1,,,,1,,,,,,,,1,,,,,,,,,,1],[,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1],[1,1,,1,1,1,,1,1,1,,,1,1,1,1,1,1,1,1,1,1,,1,,1],[1,1,,,,,,,1,1,,,,,1,1,1,1,1,,1,1,1,1,,1],[,1,1,1,1,1,1,1,,1,1,1,,1,,1,1,1,1,,1,1,,1,1,1,1],,[,1,1,,,,,1,,1,,,,1,1,1,,,1,,,,,1],[,,,,,,,,,,,,,1],[,,,,,1,,,,,,,,1,1,,,,,1,,1,,,1,1],[,,,,,,,,,,,,,,1]],[,[,1],,,,,,,,,,,,,,,,,,,,[1,1,1,1,1,,1,1,1,1,,1,1,1,1,,1,1,1,1,,,1,1,1,1,1],[,1,,1,,1,,,1,1,1,,1,1,1,1,1,,,1,,,,1,,1,1],[,1,,1,,1,,,1,,,,,1,,,,,,1,1],[,1,,1,,,,,1,,,,1,,1,1,1,1,1,1,1,1,,1],[,1,,,,,,,,,,,,,,,1]],[,[,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,,1,,,,,,,,,1,1,,,,1],[,,,,,,1],[,,1],[,1,1,,,1,,1,,1,1,,1,1,1,,,,1,1,1,,,,,1],,[,1,,,,1,,,,,,1,,,1,,,,1,1,,1],[,,,,,,,1,,,,,,,,,1],[,1,,,,1,1,,,,,,1,1,1,,,,1,,1,1],[,,,,,,,1,,1,,,,,,,,,,1],[,1,1,,,,,,1,1,,,,1,,,,,,,1,,,1],,[1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,,,1,,,1,,,,,1,,1,,1,,1,,,,,1],[1,1,1,1,1,1,1,1,,,,,1,1,,1,1,,1,,,1,,1],[,,,,,,,,,,,,,,1,,,,,,1],,[,,,,,,,,,1,,,,,,1,,,,,1],[,,1,,,,,,,1,,,1,1],[,,,1,,,,,1,,,,,1,,,,,,1,,,,1],[1,,1,1,,1,1,1,1,1,,1,,,,1,1,1,,,1,1,,,,1,1],,[1,1,,,,,,,,,,1,,1,,1,,,1],[,,,,1,,,,,,,,,,,,,,,,,,,1],[,,,,,,,,,,,,,,1,,,,,1,,1],[,,,,,,,,1]],[,[1,1,1,1,1,1,1,,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,,,1,1,1,1,1,,1,1,,1,1,1,1,,1,1,1,1,1,1],[1,1,1,1,,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[,,1,,,1,,,,,,,,1,,,,,,1,,,,1],[1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,,1,1,1,1],[1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,1,,1,,,,1,1,1,1,1,1,,1,1,1,1,,1],[1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,,1,1,1,1,1,1,1,1,,1,1,1,,1,1,1,1,1,1,,1,1,1,1],[1,1,1,1,1,,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[1,,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1],[1,1,1,1,1,1,,1,1,1,1,1,1,,1,1,1,1,1,1,,1,1,1,1,1,1],[,,1,1,1,1,,1,,1,,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[1,1,,,,,,,1,,1,1,,1,1,1,,1,1,1,1,1],[1,1,1,1,,1,1,1,1,1,,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1],[1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1],[1,1,1,1,,1,,1,,1,1,1,1,1,,,,1,1,1,1,,1,1,1,1,1],[1,1,1,1,,1,,,,,,1,,1,,,,,1,1,,,,,1],[1,,1,1,,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,,1,1,,1,,1,,,,1,1,1,1,1,,,1,1,,1,,1],[,1,1,1,1,,,,,1,,1,1,1,1,1,,,1,1,,,,1,1,1],[,1,1,1,1,1,,1,,,,,1,,1,,1,,,1,,,1,1,,1]],[,[1,1,1,1,1,1,1,1,,1,1,1,1,,1,1,1,1,1,1,,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,,1,1,1,,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,,1,1],[1,1,1,1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,,,,,,,,,1,,,,,1,1,,,1,,1],[1,1,1,1,1,1,1,1,1,1,1,,,,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,,,1,1,1,1,,1,1,,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1],[1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1],[,1,,,,,,1,,1,1,,1,1,1,1,1,,,1,,1,,1],[1,1,1,,1,1,1,1,,,,1,1,1,1,,1,1,1,1,1,1,1,1,1,,1],[1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,,1,1,1,1,1,1,1,1,1,,1,1,,1,1,1,1,1,,1,1,1,1,1,1],[,1,,1,,1,1,1,,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1],[,,1,,,,,,,,,,1,1,1,1,1,1,1,,1,1,,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,,1,1,1,1,1,1,1,1],[,1,,,1,1,,,,,,1,1,1,1,1,,,,1,1,1,,1,1,1],[1,1,1,1,1,1,1,1,1,,,,1,1,1,1,1,1,1,,1,1,,1,1,1],[,1,1,1,,1,,1,1,1,1,,,1,1,1,,1,1,1,1,1,,,1,1],[1,1,,,,1,,,1,1,1,,1,,1,,1,,1,1,1,1,1,,1,,1],[,1,,,,,,,1,,1,,1,1,1,1,,,,,,,,,1]],[,[,,,,,,,,,,,,,1,1,,,,1],[,1,,,,,,,,1,,,1,,,,,,1,,,1,,,,1],,[,1,,,,1,,1,,1,1,,1,1,,,,,,,,1],[,,,,,,,,,,,,,,,,,,,1],[,,,,,,,,,1],[1,1,1,,,1,,,,,,,,,1,1,,,,,,,,,,1],[,1,,,,,,,,,,,,,1],[,,,,,,,,,,,,,,,,,,,1,,,1],[,,,,,,,,,1],[1,1,,,,,,1,1,1,,1,1,,,,1,1,,1,,1,1,1,,1],[,1,1,1,,1,1,,,1,,1,1,1,1,,,,,,,1,,1],[,1,1,1,1,,,1,,1,,,,1,1,1,1,,1,1,,1],[,1,,,1,1,,1,,,,1,,1,1,,1,,1,,,1,,,1,,1],[,,,,,,,,,,,1],[,,,,,,,,,1,,,,,,,,,,,,,1],,[1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,,1,,1,1,1,1,1,1,1],[,1,,,,,,,1,1,,1,,,,,1,,,1,,1],[,1,,,,1,,,1,,,,,,,,1,,1,,,1],[,,,,,,,,,,,,,1,1,,,,1,,,1],[,,,,,1,,,1,,,,1],[,1],,[,1],[1,,,,,,,,,,,,,,1,,,,,1]],[,[,1,,,,1,1,1,1,1,1,,1,1,1,1,1,,1,1,,1,1,,,1],[,,1,,,,,,,,,1],,,[1,,,1,1,,,,,,,,1,1,,1,1,,1],,[,,,,,,,,,,,,,,,,,,1,,1],,[1,,,1,1,,1,1,,,,,1,,1,,,,,1,1,,1],,[,1,,,,,,,,1,1,1,1,1,,1,1,,,,1,1],[,,,,,,,,,,,,,,,,1,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,,,1,1,1,1,,1,1,1,1,1,1],[,,,,,,,,,,,1,,1,,,1],[1,,,,,,,,,,,,,,,,,,1,,1],,,[,1,,,,,,,,,,,,,,1,,,,1,1],[,,,,,,,,,1,,,1,,,,,,,,,,1],[,,,,,,,,,,,,,,,1],[,,,,,,,,,,,,,1,1,,,,,,1],,[,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,,1,1,,1,1,1,1,1,1,,,1,1,1,1,1,,1,1],[,1,,,,,,,,1],[,,,,1,,,1,,,1,1,,,,,,,,,,1,,,,1],[,1,,1,1,,,1,1,1,,,,1,1,1,1,,1,1,1,1,,1],[,,,,,,,1],[,1,1,,,,,1,,1,,,,,,1,,,,,,1,,1,,1],[,1,,,,,,1,,,,1,,,,,,,,,,1],[,,1,1,,1,1,1,1,1,1,1,1,1,1,,,,1,,1,1,1,1,,1],[,1,,,,,,,,1],[,1,1,,1,,,,,,,,1,,,,,,1,,,1,,1,,1],[,1,,1,,1,,1,1,1,,1,1,1,,1,,,1,1,,1,1,1,1,1],[,1,1,1,1,1,,,1,1,,,,1,1,1,,,,1,1,,,1,1],[,,1,1,1,1,,1,,1,,1,,1,1,1,1,,,,,1,,1,,1],[1,1,1,1,1,1,1,1,,1,,1,,1,1,1,,,1,1,,,,1,,1],[,,,1],,[,1,1,,1,,,1,1,1,,1,1,1,1,1,1,,1,1,,1,1,1,1,1,1],[,1,,,,,,1,,1,,1,,,,,,,1,1,,1,1],[,,,,,,1,,1,1,,1,,1,,,,,,,,,,1],[,1,1,,1,,,,1,,,,1,1,1,,,,1,,1,1,1,,1,1],,[,1,1,,,,,,,,,,,,,1,,,1,,,,,1],[,1,,,,,,,,,,,,,,,,,,,,,,1],[,1,1,,,,,,,1,,,,1,,,,,1,,,,,,,1]],[,[,1,1,1,1,1,,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1],[,1,1,1,1,1,,1,,1,1,,,1,1,1,1,,1,,,,,1,1,1],[,,1,1,,1,,1,1,,,,1,1,1,1,,,1,,1,1,1,1,,1],[,1,,1,,,,,,,,1,,1,,1,,,,,,,,,,1],[,,1,,1,,,1,,,,,1,1,,,1,,1,1,1,1],[,1],[,1,1,,1,,1,1,,1,,,1,1,1,,,,1,,,1,,1],[1,1,,1,1,1,,,,,,,,,,,,,1,,1,1,1],[,1,1,,,,,,,1,,,1,,1,,1,,1,1,,,1,,,1],[,,1,,,,,,,,,,,,,,,,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,1,1,1,,1,,1,,,,,1,1,1,,,1,,1,,,,1],[,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,,,1,1,1,,1,,1,1,1,,,1,1,1,1,,,,1,1],[,,,1,1,,,1,,1,,1,,1,1,1,1,,1,,,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,,,,,,,,,,,,,,,,,,1],[,1,1,,1,1,,1,,1,,,,1,1,,,1,1,,1,1,,1],[,1,1,1,1,1,,,1,1,1,,1,1,1,1,1,1,1,1,,1,1,,,1],[,1,1,1,1,1,,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1,,1,1],[,1,1,,1,,,1,,,1,,1,1,1,1,1,,1,,1,1],[,,,,,1,,,,1,,,,,1,1,,,,1],[,1,,1,1,1,,1,,,1,1,1,,,1,,,1,,1,,,1],[,,1,,,,,,,,,1,,1,,,,,1,,1],[,1,1,,,,,,,,1,1,1,,,,,,,,1,,,,,1],[,,,,,,,,1,,,,,1,,,1]],[,[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,1,,1,1,,,1,1,1,1,1,1,1,1,,,,,,,,,1,1],[,,,,,,,,1,,,,1,,1,,1],[,1,,,1,1,,1,,,,1,,,,,,,,1],[,1,,1,,1,,,,1,1,,1,,1,,,,1,1,1,1,1,,,1],,[,1,,,,,,,,1,,,1,1,,,1,,1,1,,1,,1],[,1,,,1,,,,,,,,1,,,,,,,1],[1,1,,,,,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,,1,1,1],,[,1,,,,,,1,,1,,1,1,1,1,1,,,1,,1,1,,,,1],[,1,1,,,1,,1,,1,,,1,1,1,1,,,1,,,1,,,,1],[,1,1,1,1,1,,1,1,1,,1,1,1,1,1,1,1,1,1,1,,,,1,,1],[,1,,,1,1,,1,1,,,1,1,,1,1,,1,,1,,1],[1,,1,,,,,1,,1,,1,1,1,1,,,,,1,1,,,,1,1],[,1,1,,,,,1,1,,,1,,1,1,1,1,,,,,,,,,,1],,[,1,1,,,1,,,,1,,1,1,1,1,1,,,,1,,,,1,,1],[,,,1,1,,,1,,,,,1,,1,1,1,,1,1,,,,,,1],[,1,,,,,,,,,,,1,,,,1,,,,,,,1,,1],[,1,1,1,1,1,1,1,,1,1,1,1,1,1,,1,1,1,,1,1,,1,1,1,1],[,1,,,,,,,,,,,,,,,,,,,1],[,1,,,,,,1,,,,,1,,1,,,1,1,,1,1,,1],[,1,,,,,,1,,,,,1,1,,,,,,,,1,,,,1],[,,,,,,,,,,,,,,,,,,1,,,1,,,,,1],[,,,,,,,1,,,,1]],[,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,1,,1,,,,,,,1,,,,,,,,1,,,1],[,1,,,,,,,1],[,,,,,,,,,,1],[,1,,,,,,1,1,,,,,,1],,[,1,1,,,,,,1,,,,,1,1,,,,1],[1,,1,,1,,,,,1,,,,,1,,,,,,,,,1,1],[,1,1,,,,,,,,,1,1,1,1,,,,1,,,,,1,,,1],,[,1,1,,1,,,1,1,,,1,,,1,1,1,,1,,1,1,1,,,,1],[,,,,,1,,,,,1,,,1,1,,,1,,1,,,,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,1,,,1,1,,1,,,,1,,,,,,,,1],[,,,1,,,,,1,,,,,1,,1,,1,1,1],[,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[,,,,,1],[,1,,,,,,1,,,,,,,1,1,1,,,1],[,1,,,,,,,,,,1,1,1,,,,,1,,,1],[,,,,,1,,1,,,,,1,1,1,,1,1,,1,1,1,,,1,1],[1,1,,,,,,,1,,,,,1,1,,,,,,,,,,,1],,[,1],[,,,,,,,,,,,,,,,,,,,,,,,,1],[,,1,,,,,1,,,1,,,,1,,1],[,1,,,,,,,,,1]]];function isValidLang(lang){var array=langs;while(lang.length<3){lang+='`';}for(var _i27=0;_i27<=lang.length-1;_i27++){var index=lang.charCodeAt(_i27)-96;array=array[index];if(!array){return false;}}return true;}function _validLangs(langArray){langArray=Array.isArray(langArray)?langArray:langs;var codes=[];langArray.forEach(function(lang,index){var _char3=String.fromCharCode(index+96).replace('`','');if(Array.isArray(lang)){codes=codes.concat(_validLangs(lang).map(function(newLang){return _char3+newLang;}));}else{codes.push(_char3);}});return codes;}var valid_langs_default=isValidLang;var SerialVirtualNode=function(_abstract_virtual_nod2){_inherits(SerialVirtualNode,_abstract_virtual_nod2);var _super3=_createSuper(SerialVirtualNode);function SerialVirtualNode(serialNode){var _this6;_classCallCheck(this,SerialVirtualNode);_this6=_super3.call(this);_this6._props=normaliseProps(serialNode);_this6._attrs=normaliseAttrs(serialNode);return _this6;}_createClass(SerialVirtualNode,[{key:'props',get:function get(){return this._props;}},{key:'attr',value:function attr(attrName){var _this$_attrs$attrName;return(_this$_attrs$attrName=this._attrs[attrName])!==null&&_this$_attrs$attrName!==void 0?_this$_attrs$attrName:null;}},{key:'hasAttr',value:function hasAttr(attrName){return this._attrs[attrName]!==void 0;}},{key:'attrNames',get:function get(){return Object.keys(this._attrs);}}]);return SerialVirtualNode;}(abstract_virtual_node_default);var nodeNamesToTypes={'#cdata-section':2,'#text':3,'#comment':8,'#document':9,'#document-fragment':11};var nodeTypeToName={};var nodeNames=Object.keys(nodeNamesToTypes);nodeNames.forEach(function(nodeName2){nodeTypeToName[nodeNamesToTypes[nodeName2]]=nodeName2;});function normaliseProps(serialNode){var _serialNode$nodeName,_ref82,_serialNode$nodeType;var nodeName2=(_serialNode$nodeName=serialNode.nodeName)!==null&&_serialNode$nodeName!==void 0?_serialNode$nodeName:nodeTypeToName[serialNode.nodeType];var nodeType=(_ref82=(_serialNode$nodeType=serialNode.nodeType)!==null&&_serialNode$nodeType!==void 0?_serialNode$nodeType:nodeNamesToTypes[serialNode.nodeName])!==null&&_ref82!==void 0?_ref82:1;assert_default(typeof nodeType==='number','nodeType has to be a number, got \\''.concat(nodeType,'\\''));assert_default(typeof nodeName2==='string','nodeName has to be a string, got \\''.concat(nodeName2,'\\''));nodeName2=nodeName2.toLowerCase();var type2=null;if(nodeName2==='input'){type2=(serialNode.type||serialNode.attributes&&serialNode.attributes.type||'').toLowerCase();if(!valid_input_type_default().includes(type2)){type2='text';}}var props=_extends({},serialNode,{nodeType:nodeType,nodeName:nodeName2});if(type2){props.type=type2;}delete props.attributes;return Object.freeze(props);}function normaliseAttrs(_ref83){var _ref83$attributes=_ref83.attributes,attributes2=_ref83$attributes===void 0?{}:_ref83$attributes;var attrMap={htmlFor:'for',className:'class'};return Object.keys(attributes2).reduce(function(attrs,attrName){var value=attributes2[attrName];assert_default(_typeof(value)!=='object'||value===null,'expects attributes not to be an object, \\''.concat(attrName,'\\' was'));if(value!==void 0){var mappedName=attrMap[attrName]||attrName;attrs[mappedName]=value!==null?String(value):null;}return attrs;},{});}var serial_virtual_node_default=SerialVirtualNode;function cleanup(resolve,reject){resolve=resolve||function res(){};reject=reject||axe.log;if(!axe._audit){throw new Error('No audit configured');}var q=axe.utils.queue();var cleanupErrors=[];Object.keys(axe.plugins).forEach(function(key){q.defer(function(res){var rej=function rej2(err2){cleanupErrors.push(err2);res();};try{axe.plugins[key].cleanup(res,rej);}catch(err2){rej(err2);}});});var flattenedTree=axe.utils.getFlattenedTree(document.body);axe.utils.querySelectorAll(flattenedTree,'iframe, frame').forEach(function(node){q.defer(function(res,rej){return axe.utils.sendCommandToFrame(node.actualNode,{command:'cleanup-plugin'},res,rej);});});q.then(function(results){if(cleanupErrors.length===0){resolve(results);}else{reject(cleanupErrors);}})['catch'](reject);}var cleanup_default=cleanup;var reporters={};var defaultReporter;function hasReporter(reporterName){return reporters.hasOwnProperty(reporterName);}function getReporter(reporter){if(typeof reporter==='string'&&reporters[reporter]){return reporters[reporter];}if(typeof reporter==='function'){return reporter;}return defaultReporter;}function addReporter(name,cb,isDefault){reporters[name]=cb;if(isDefault){defaultReporter=cb;}}function configure(spec){var audit;audit=axe._audit;if(!audit){throw new Error('No audit configured');}if(spec.axeVersion||spec.ver){var specVersion=spec.axeVersion||spec.ver;if(!/^\\d+\\.\\d+\\.\\d+(-canary)?/.test(specVersion)){throw new Error('Invalid configured version '.concat(specVersion));}var _specVersion$split=specVersion.split('-'),_specVersion$split2=_slicedToArray(_specVersion$split,2),version=_specVersion$split2[0],canary=_specVersion$split2[1];var _version$split$map=version.split('.').map(Number),_version$split$map2=_slicedToArray(_version$split$map,3),major=_version$split$map2[0],minor=_version$split$map2[1],patch=_version$split$map2[2];var _axe$version$split=axe.version.split('-'),_axe$version$split2=_slicedToArray(_axe$version$split,2),axeVersion=_axe$version$split2[0],axeCanary=_axe$version$split2[1];var _axeVersion$split$map=axeVersion.split('.').map(Number),_axeVersion$split$map2=_slicedToArray(_axeVersion$split$map,3),axeMajor=_axeVersion$split$map2[0],axeMinor=_axeVersion$split$map2[1],axePatch=_axeVersion$split$map2[2];if(major!==axeMajor||axeMinor<minor||axeMinor===minor&&axePatch<patch||major===axeMajor&&minor===axeMinor&&patch===axePatch&&canary&&canary!==axeCanary){throw new Error('Configured version '.concat(specVersion,' is not compatible with current axe version ').concat(axe.version));}}if(spec.reporter&&(typeof spec.reporter==='function'||hasReporter(spec.reporter))){audit.reporter=spec.reporter;}if(spec.checks){if(!Array.isArray(spec.checks)){throw new TypeError('Checks property must be an array');}spec.checks.forEach(function(check){if(!check.id){throw new TypeError('Configured check '.concat(JSON.stringify(check),' is invalid. Checks must be an object with at least an id property'));}audit.addCheck(check);});}var modifiedRules=[];if(spec.rules){if(!Array.isArray(spec.rules)){throw new TypeError('Rules property must be an array');}spec.rules.forEach(function(rule){if(!rule.id){throw new TypeError('Configured rule '.concat(JSON.stringify(rule),' is invalid. Rules must be an object with at least an id property'));}modifiedRules.push(rule.id);audit.addRule(rule);});}if(spec.disableOtherRules){audit.rules.forEach(function(rule){if(modifiedRules.includes(rule.id)===false){rule.enabled=false;}});}if(typeof spec.branding!=='undefined'){audit.setBranding(spec.branding);}else{audit._constructHelpUrls();}if(spec.tagExclude){audit.tagExclude=spec.tagExclude;}if(spec.locale){audit.applyLocale(spec.locale);}if(spec.standards){configureStandards(spec.standards);}if(spec.noHtml){audit.noHtml=true;}if(spec.allowedOrigins){if(!Array.isArray(spec.allowedOrigins)){throw new TypeError('Allowed origins property must be an array');}if(spec.allowedOrigins.includes('*')){throw new Error('\"*\" is not allowed. Use \"'.concat(constants_default.allOrigins,'\" instead'));}audit.setAllowedOrigins(spec.allowedOrigins);}}var configure_default=configure;function frameMessenger2(frameHandler){_respondable.updateMessenger(frameHandler);}function getRules(tags){tags=tags||[];var matchingRules=!tags.length?axe._audit.rules:axe._audit.rules.filter(function(item){return!!tags.filter(function(tag){return item.tags.indexOf(tag)!==-1;}).length;});var ruleData=axe._audit.data.rules||{};return matchingRules.map(function(matchingRule){var rd=ruleData[matchingRule.id]||{};return{ruleId:matchingRule.id,description:rd.description,help:rd.help,helpUrl:rd.helpUrl,tags:matchingRule.tags,actIds:matchingRule.actIds};});}var get_rules_default=getRules;var aria_exports={};__export(aria_exports,{allowedAttr:function allowedAttr(){return allowed_attr_default;},arialabelText:function arialabelText(){return _arialabelText;},arialabelledbyText:function arialabelledbyText(){return arialabelledby_text_default;},getAccessibleRefs:function getAccessibleRefs(){return get_accessible_refs_default;},getElementUnallowedRoles:function getElementUnallowedRoles(){return get_element_unallowed_roles_default;},getExplicitRole:function getExplicitRole(){return get_explicit_role_default;},getImplicitRole:function getImplicitRole(){return implicit_role_default;},getOwnedVirtual:function getOwnedVirtual(){return get_owned_virtual_default;},getRole:function getRole(){return get_role_default;},getRoleType:function getRoleType(){return get_role_type_default;},getRolesByType:function getRolesByType(){return get_roles_by_type_default;},getRolesWithNameFromContents:function getRolesWithNameFromContents(){return get_roles_with_name_from_contents_default;},implicitNodes:function implicitNodes(){return implicit_nodes_default;},implicitRole:function implicitRole(){return implicit_role_default;},isAccessibleRef:function isAccessibleRef(){return is_accessible_ref_default;},isAriaRoleAllowedOnElement:function isAriaRoleAllowedOnElement(){return is_aria_role_allowed_on_element_default;},isComboboxPopup:function isComboboxPopup(){return _isComboboxPopup;},isUnsupportedRole:function isUnsupportedRole(){return is_unsupported_role_default;},isValidRole:function isValidRole(){return is_valid_role_default;},label:function label(){return label_default2;},labelVirtual:function labelVirtual(){return label_virtual_default;},lookupTable:function lookupTable(){return lookup_table_default;},namedFromContents:function namedFromContents(){return named_from_contents_default;},requiredAttr:function requiredAttr(){return required_attr_default;},requiredContext:function requiredContext(){return required_context_default;},requiredOwned:function requiredOwned(){return required_owned_default;},validateAttr:function validateAttr(){return validate_attr_default;},validateAttrValue:function validateAttrValue(){return validate_attr_value_default;}});function allowedAttr(role){var roleDef=standards_default.ariaRoles[role];var attrs=_toConsumableArray(get_global_aria_attrs_default());if(!roleDef){return attrs;}if(roleDef.allowedAttrs){attrs.push.apply(attrs,_toConsumableArray(roleDef.allowedAttrs));}if(roleDef.requiredAttrs){attrs.push.apply(attrs,_toConsumableArray(roleDef.requiredAttrs));}return attrs;}var allowed_attr_default=allowedAttr;var idRefsRegex=/^idrefs?$/;function cacheIdRefs(node,idRefs,refAttrs){if(node.hasAttribute){if(node.nodeName.toUpperCase()==='LABEL'&&node.hasAttribute('for')){var _id2=node.getAttribute('for');if(!idRefs.has(_id2)){idRefs.set(_id2,[node]);}else{idRefs.get(_id2).push(node);}}for(var _i28=0;_i28<refAttrs.length;++_i28){var attr=refAttrs[_i28];var attrValue=sanitize_default(node.getAttribute(attr)||'');if(!attrValue){continue;}var _iterator14=_createForOfIteratorHelper(token_list_default(attrValue)),_step14;try{for(_iterator14.s();!(_step14=_iterator14.n()).done;){var token=_step14.value;if(!idRefs.has(token)){idRefs.set(token,[node]);}else{idRefs.get(token).push(node);}}}catch(err){_iterator14.e(err);}finally{_iterator14.f();}}}for(var _i29=0;_i29<node.childNodes.length;_i29++){if(node.childNodes[_i29].nodeType===1){cacheIdRefs(node.childNodes[_i29],idRefs,refAttrs);}}}function getAccessibleRefs(node){var _idRefs$get;node=node.actualNode||node;var root=get_root_node_default2(node);root=root.documentElement||root;var idRefsByRoot=cache_default.get('idRefsByRoot',function(){return new Map();});var idRefs=idRefsByRoot.get(root);if(!idRefs){idRefs=new Map();idRefsByRoot.set(root,idRefs);var refAttrs=Object.keys(standards_default.ariaAttrs).filter(function(attr){var type2=standards_default.ariaAttrs[attr].type;return idRefsRegex.test(type2);});cacheIdRefs(root,idRefs,refAttrs);}return(_idRefs$get=idRefs.get(node.id))!==null&&_idRefs$get!==void 0?_idRefs$get:[];}var get_accessible_refs_default=getAccessibleRefs;function isAriaRoleAllowedOnElement(node,role){var vNode=node instanceof abstract_virtual_node_default?node:get_node_from_tree_default(node);var implicitRole3=implicit_role_default(vNode);var spec=get_element_spec_default(vNode);if(Array.isArray(spec.allowedRoles)){return spec.allowedRoles.includes(role);}if(role===implicitRole3){return false;}return!!spec.allowedRoles;}var is_aria_role_allowed_on_element_default=isAriaRoleAllowedOnElement;var dpubRoles2=['doc-backlink','doc-biblioentry','doc-biblioref','doc-cover','doc-endnote','doc-glossref','doc-noteref'];var landmarkRoles={header:'banner',footer:'contentinfo'};function getRoleSegments(vNode){var roles=[];if(!vNode){return roles;}if(vNode.hasAttr('role')){var nodeRoles=token_list_default(vNode.attr('role').toLowerCase());roles=roles.concat(nodeRoles);}return roles.filter(function(role){return is_valid_role_default(role);});}function getElementUnallowedRoles(node){var allowImplicit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var _nodeLookup21=_nodeLookup(node),vNode=_nodeLookup21.vNode;if(!is_html_element_default(vNode)){return[];}var nodeName2=vNode.props.nodeName;var implicitRole3=implicit_role_default(vNode)||landmarkRoles[nodeName2];var roleSegments=getRoleSegments(vNode);return roleSegments.filter(function(role){return!roleIsAllowed(role,vNode,allowImplicit,implicitRole3);});}function roleIsAllowed(role,vNode,allowImplicit,implicitRole3){if(allowImplicit&&role===implicitRole3){return true;}if(dpubRoles2.includes(role)&&get_role_type_default(role)!==implicitRole3){return false;}return is_aria_role_allowed_on_element_default(vNode,role);}var get_element_unallowed_roles_default=getElementUnallowedRoles;function getAriaRolesByType(type2){return Object.keys(standards_default.ariaRoles).filter(function(roleName){return standards_default.ariaRoles[roleName].type===type2;});}var get_aria_roles_by_type_default=getAriaRolesByType;function getRolesByType(roleType){return get_aria_roles_by_type_default(roleType);}var get_roles_by_type_default=getRolesByType;function getAriaRolesSupportingNameFromContent(){return cache_default.get('ariaRolesNameFromContent',function(){return Object.keys(standards_default.ariaRoles).filter(function(roleName){return standards_default.ariaRoles[roleName].nameFromContent;});});}var get_aria_roles_supporting_name_from_content_default=getAriaRolesSupportingNameFromContent;function getRolesWithNameFromContents(){return get_aria_roles_supporting_name_from_content_default();}var get_roles_with_name_from_contents_default=getRolesWithNameFromContents;var isNull=function isNull(value){return value===null;};var isNotNull=function isNotNull(value){return value!==null;};var lookupTable={};lookupTable.attributes={'aria-activedescendant':{type:'idref',allowEmpty:true,unsupported:false},'aria-atomic':{type:'boolean',values:['true','false'],unsupported:false},'aria-autocomplete':{type:'nmtoken',values:['inline','list','both','none'],unsupported:false},'aria-busy':{type:'boolean',values:['true','false'],unsupported:false},'aria-checked':{type:'nmtoken',values:['true','false','mixed','undefined'],unsupported:false},'aria-colcount':{type:'int',unsupported:false},'aria-colindex':{type:'int',unsupported:false},'aria-colspan':{type:'int',unsupported:false},'aria-controls':{type:'idrefs',allowEmpty:true,unsupported:false},'aria-current':{type:'nmtoken',allowEmpty:true,values:['page','step','location','date','time','true','false'],unsupported:false},'aria-describedby':{type:'idrefs',allowEmpty:true,unsupported:false},'aria-describedat':{unsupported:true,unstandardized:true},'aria-details':{type:'idref',allowEmpty:true,unsupported:false},'aria-disabled':{type:'boolean',values:['true','false'],unsupported:false},'aria-dropeffect':{type:'nmtokens',values:['copy','move','reference','execute','popup','none'],unsupported:false},'aria-errormessage':{type:'idref',allowEmpty:true,unsupported:false},'aria-expanded':{type:'nmtoken',values:['true','false','undefined'],unsupported:false},'aria-flowto':{type:'idrefs',allowEmpty:true,unsupported:false},'aria-grabbed':{type:'nmtoken',values:['true','false','undefined'],unsupported:false},'aria-haspopup':{type:'nmtoken',allowEmpty:true,values:['true','false','menu','listbox','tree','grid','dialog'],unsupported:false},'aria-hidden':{type:'boolean',values:['true','false'],unsupported:false},'aria-invalid':{type:'nmtoken',allowEmpty:true,values:['true','false','spelling','grammar'],unsupported:false},'aria-keyshortcuts':{type:'string',allowEmpty:true,unsupported:false},'aria-label':{type:'string',allowEmpty:true,unsupported:false},'aria-labelledby':{type:'idrefs',allowEmpty:true,unsupported:false},'aria-level':{type:'int',unsupported:false},'aria-live':{type:'nmtoken',values:['off','polite','assertive'],unsupported:false},'aria-modal':{type:'boolean',values:['true','false'],unsupported:false},'aria-multiline':{type:'boolean',values:['true','false'],unsupported:false},'aria-multiselectable':{type:'boolean',values:['true','false'],unsupported:false},'aria-orientation':{type:'nmtoken',values:['horizontal','vertical'],unsupported:false},'aria-owns':{type:'idrefs',allowEmpty:true,unsupported:false},'aria-placeholder':{type:'string',allowEmpty:true,unsupported:false},'aria-posinset':{type:'int',unsupported:false},'aria-pressed':{type:'nmtoken',values:['true','false','mixed','undefined'],unsupported:false},'aria-readonly':{type:'boolean',values:['true','false'],unsupported:false},'aria-relevant':{type:'nmtokens',values:['additions','removals','text','all'],unsupported:false},'aria-required':{type:'boolean',values:['true','false'],unsupported:false},'aria-roledescription':{type:'string',allowEmpty:true,unsupported:false},'aria-rowcount':{type:'int',unsupported:false},'aria-rowindex':{type:'int',unsupported:false},'aria-rowspan':{type:'int',unsupported:false},'aria-selected':{type:'nmtoken',values:['true','false','undefined'],unsupported:false},'aria-setsize':{type:'int',unsupported:false},'aria-sort':{type:'nmtoken',values:['ascending','descending','other','none'],unsupported:false},'aria-valuemax':{type:'decimal',unsupported:false},'aria-valuemin':{type:'decimal',unsupported:false},'aria-valuenow':{type:'decimal',unsupported:false},'aria-valuetext':{type:'string',unsupported:false}};lookupTable.globalAttributes=['aria-atomic','aria-busy','aria-controls','aria-current','aria-describedby','aria-details','aria-disabled','aria-dropeffect','aria-flowto','aria-grabbed','aria-haspopup','aria-hidden','aria-invalid','aria-keyshortcuts','aria-label','aria-labelledby','aria-live','aria-owns','aria-relevant','aria-roledescription'];lookupTable.role={alert:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},alertdialog:{type:'widget',attributes:{allowed:['aria-expanded','aria-modal','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['dialog','section']},application:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage','aria-activedescendant']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['article','audio','embed','iframe','object','section','svg','video']},article:{type:'structure',attributes:{allowed:['aria-expanded','aria-posinset','aria-setsize','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['article'],unsupported:false},banner:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['header'],unsupported:false,allowedElements:['section']},button:{type:'widget',attributes:{allowed:['aria-expanded','aria-pressed','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,implicit:['button','input[type=\"button\"]','input[type=\"image\"]','input[type=\"reset\"]','input[type=\"submit\"]','summary'],unsupported:false,allowedElements:[{nodeName:'a',attributes:{href:isNotNull}}]},cell:{type:'structure',attributes:{allowed:['aria-colindex','aria-colspan','aria-rowindex','aria-rowspan','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['row'],implicit:['td','th'],unsupported:false},checkbox:{type:'widget',attributes:{allowed:['aria-checked','aria-required','aria-readonly','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,implicit:['input[type=\"checkbox\"]'],unsupported:false,allowedElements:['button']},columnheader:{type:'structure',attributes:{allowed:['aria-colindex','aria-colspan','aria-expanded','aria-rowindex','aria-rowspan','aria-required','aria-readonly','aria-selected','aria-sort','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['row'],implicit:['th'],unsupported:false},combobox:{type:'composite',attributes:{allowed:['aria-autocomplete','aria-required','aria-activedescendant','aria-orientation','aria-errormessage'],required:['aria-expanded']},owned:{all:['listbox','tree','grid','dialog','textbox']},nameFrom:['author'],context:null,unsupported:false,allowedElements:[{nodeName:'input',properties:{type:['text','search','tel','url','email']}}]},command:{nameFrom:['author'],type:'abstract',unsupported:false},complementary:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['aside'],unsupported:false,allowedElements:['section']},composite:{nameFrom:['author'],type:'abstract',unsupported:false},contentinfo:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['footer'],unsupported:false,allowedElements:['section']},definition:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['dd','dfn'],unsupported:false},dialog:{type:'widget',attributes:{allowed:['aria-expanded','aria-modal','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['dialog'],unsupported:false,allowedElements:['section']},directory:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,unsupported:false,allowedElements:['ol','ul']},document:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['body'],unsupported:false,allowedElements:['article','embed','iframe','object','section','svg']},'doc-abstract':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-acknowledgments':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-afterword':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-appendix':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-backlink':{type:'link',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,unsupported:false,allowedElements:[{nodeName:'a',attributes:{href:isNotNull}}]},'doc-biblioentry':{type:'listitem',attributes:{allowed:['aria-expanded','aria-level','aria-posinset','aria-setsize','aria-errormessage']},owned:null,nameFrom:['author'],context:['doc-bibliography'],unsupported:false,allowedElements:['li']},'doc-bibliography':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:{one:['doc-biblioentry']},nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-biblioref':{type:'link',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,unsupported:false,allowedElements:[{nodeName:'a',attributes:{href:isNotNull}}]},'doc-chapter':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-colophon':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-conclusion':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-cover':{type:'img',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false},'doc-credit':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-credits':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-dedication':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-endnote':{type:'listitem',attributes:{allowed:['aria-expanded','aria-level','aria-posinset','aria-setsize','aria-errormessage']},owned:null,namefrom:['author'],context:['doc-endnotes'],unsupported:false,allowedElements:['li']},'doc-endnotes':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:{one:['doc-endnote']},namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-epigraph':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false},'doc-epilogue':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-errata':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-example':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['aside','section']},'doc-footnote':{type:'section',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['aside','footer','header']},'doc-foreword':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-glossary':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:['term','definition'],namefrom:['author'],context:null,unsupported:false,allowedElements:['dl']},'doc-glossref':{type:'link',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author','contents'],context:null,unsupported:false,allowedElements:[{nodeName:'a',attributes:{href:isNotNull}}]},'doc-index':{type:'navigation',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['nav','section']},'doc-introduction':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-noteref':{type:'link',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author','contents'],context:null,unsupported:false,allowedElements:[{nodeName:'a',attributes:{href:isNotNull}}]},'doc-notice':{type:'note',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-pagebreak':{type:'separator',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['hr']},'doc-pagelist':{type:'navigation',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['nav','section']},'doc-part':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-preface':{type:'landmark',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-prologue':{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-pullquote':{type:'none',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['aside','section']},'doc-qna':{type:'section',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['section']},'doc-subtitle':{type:'sectionhead',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:{nodeName:['h1','h2','h3','h4','h5','h6']}},'doc-tip':{type:'note',attributes:{allowed:['aria-expanded']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['aside']},'doc-toc':{type:'navigation',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,namefrom:['author'],context:null,unsupported:false,allowedElements:['nav','section']},feed:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:{one:['article']},nameFrom:['author'],context:null,unsupported:false,allowedElements:['article','aside','section']},figure:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,implicit:['figure'],unsupported:false},form:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['form'],unsupported:false},grid:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-colcount','aria-level','aria-multiselectable','aria-readonly','aria-rowcount','aria-errormessage']},owned:{one:['rowgroup','row']},nameFrom:['author'],context:null,implicit:['table'],unsupported:false},gridcell:{type:'widget',attributes:{allowed:['aria-colindex','aria-colspan','aria-expanded','aria-rowindex','aria-rowspan','aria-selected','aria-readonly','aria-required','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['row'],implicit:['td','th'],unsupported:false},group:{type:'structure',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['details','optgroup'],unsupported:false,allowedElements:['dl','figcaption','fieldset','figure','footer','header','ol','ul']},heading:{type:'structure',attributes:{required:['aria-level'],allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,implicit:['h1','h2','h3','h4','h5','h6'],unsupported:false},img:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['img'],unsupported:false,allowedElements:['embed','iframe','object','svg']},input:{nameFrom:['author'],type:'abstract',unsupported:false},landmark:{nameFrom:['author'],type:'abstract',unsupported:false},link:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,implicit:['a[href]','area[href]'],unsupported:false,allowedElements:['button',{nodeName:'input',properties:{type:['image','button']}}]},list:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:{all:['listitem']},nameFrom:['author'],context:null,implicit:['ol','ul','dl'],unsupported:false},listbox:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-multiselectable','aria-readonly','aria-required','aria-expanded','aria-orientation','aria-errormessage']},owned:{all:['option']},nameFrom:['author'],context:null,implicit:['select'],unsupported:false,allowedElements:['ol','ul']},listitem:{type:'structure',attributes:{allowed:['aria-level','aria-posinset','aria-setsize','aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['list'],implicit:['li','dt'],unsupported:false},log:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},main:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['main'],unsupported:false,allowedElements:['article','section']},marquee:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},math:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['math'],unsupported:false},menu:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-orientation','aria-errormessage']},owned:{one:['menuitem','menuitemradio','menuitemcheckbox']},nameFrom:['author'],context:null,implicit:['menu[type=\"context\"]'],unsupported:false,allowedElements:['ol','ul']},menubar:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-orientation','aria-errormessage']},owned:{one:['menuitem','menuitemradio','menuitemcheckbox']},nameFrom:['author'],context:null,unsupported:false,allowedElements:['ol','ul']},menuitem:{type:'widget',attributes:{allowed:['aria-posinset','aria-setsize','aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['menu','menubar'],implicit:['menuitem[type=\"command\"]'],unsupported:false,allowedElements:['button','li',{nodeName:'iput',properties:{type:['image','button']}},{nodeName:'a',attributes:{href:isNotNull}}]},menuitemcheckbox:{type:'widget',attributes:{allowed:['aria-checked','aria-posinset','aria-setsize','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['menu','menubar'],implicit:['menuitem[type=\"checkbox\"]'],unsupported:false,allowedElements:[{nodeName:['button','li']},{nodeName:'input',properties:{type:['checkbox','image','button']}},{nodeName:'a',attributes:{href:isNotNull}}]},menuitemradio:{type:'widget',attributes:{allowed:['aria-checked','aria-selected','aria-posinset','aria-setsize','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['menu','menubar'],implicit:['menuitem[type=\"radio\"]'],unsupported:false,allowedElements:[{nodeName:['button','li']},{nodeName:'input',properties:{type:['image','button','radio']}},{nodeName:'a',attributes:{href:isNotNull}}]},navigation:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['nav'],unsupported:false,allowedElements:['section']},none:{type:'structure',attributes:null,owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:[{nodeName:['article','aside','dl','embed','figcaption','fieldset','figure','footer','form','h1','h2','h3','h4','h5','h6','header','hr','iframe','li','ol','section','ul']},{nodeName:'img',attributes:{alt:isNotNull}}]},note:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['aside']},option:{type:'widget',attributes:{allowed:['aria-selected','aria-posinset','aria-setsize','aria-checked','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['listbox'],implicit:['option'],unsupported:false,allowedElements:[{nodeName:['button','li']},{nodeName:'input',properties:{type:['checkbox','button']}},{nodeName:'a',attributes:{href:isNotNull}}]},presentation:{type:'structure',attributes:null,owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:[{nodeName:['article','aside','dl','embed','figcaption','fieldset','figure','footer','form','h1','h2','h3','h4','h5','h6','header','hr','iframe','li','ol','section','ul']},{nodeName:'img',attributes:{alt:isNotNull}}]},progressbar:{type:'widget',attributes:{allowed:['aria-valuetext','aria-valuenow','aria-valuemax','aria-valuemin','aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['progress'],unsupported:false},radio:{type:'widget',attributes:{allowed:['aria-selected','aria-posinset','aria-setsize','aria-required','aria-errormessage','aria-checked']},owned:null,nameFrom:['author','contents'],context:null,implicit:['input[type=\"radio\"]'],unsupported:false,allowedElements:[{nodeName:['button','li']},{nodeName:'input',properties:{type:['image','button']}}]},radiogroup:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-required','aria-expanded','aria-readonly','aria-errormessage','aria-orientation']},owned:{all:['radio']},nameFrom:['author'],context:null,unsupported:false,allowedElements:{nodeName:['ol','ul','fieldset']}},range:{nameFrom:['author'],type:'abstract',unsupported:false},region:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['section[aria-label]','section[aria-labelledby]','section[title]'],unsupported:false,allowedElements:{nodeName:['article','aside']}},roletype:{type:'abstract',unsupported:false},row:{type:'structure',attributes:{allowed:['aria-activedescendant','aria-colindex','aria-expanded','aria-level','aria-selected','aria-rowindex','aria-errormessage']},owned:{one:['cell','columnheader','rowheader','gridcell']},nameFrom:['author','contents'],context:['rowgroup','grid','treegrid','table'],implicit:['tr'],unsupported:false},rowgroup:{type:'structure',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-errormessage']},owned:{all:['row']},nameFrom:['author','contents'],context:['grid','table','treegrid'],implicit:['tbody','thead','tfoot'],unsupported:false},rowheader:{type:'structure',attributes:{allowed:['aria-colindex','aria-colspan','aria-expanded','aria-rowindex','aria-rowspan','aria-required','aria-readonly','aria-selected','aria-sort','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['row'],implicit:['th'],unsupported:false},scrollbar:{type:'widget',attributes:{required:['aria-controls','aria-valuenow'],allowed:['aria-valuetext','aria-orientation','aria-errormessage','aria-valuemax','aria-valuemin']},owned:null,nameFrom:['author'],context:null,unsupported:false},search:{type:'landmark',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:{nodeName:['aside','form','section']}},searchbox:{type:'widget',attributes:{allowed:['aria-activedescendant','aria-autocomplete','aria-multiline','aria-readonly','aria-required','aria-placeholder','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['input[type=\"search\"]'],unsupported:false,allowedElements:{nodeName:'input',properties:{type:'text'}}},section:{nameFrom:['author','contents'],type:'abstract',unsupported:false},sectionhead:{nameFrom:['author','contents'],type:'abstract',unsupported:false},select:{nameFrom:['author'],type:'abstract',unsupported:false},separator:{type:'structure',attributes:{allowed:['aria-expanded','aria-orientation','aria-valuenow','aria-valuemax','aria-valuemin','aria-valuetext','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['hr'],unsupported:false,allowedElements:['li']},slider:{type:'widget',attributes:{allowed:['aria-valuetext','aria-orientation','aria-readonly','aria-errormessage','aria-valuemax','aria-valuemin'],required:['aria-valuenow']},owned:null,nameFrom:['author'],context:null,implicit:['input[type=\"range\"]'],unsupported:false},spinbutton:{type:'widget',attributes:{allowed:['aria-valuetext','aria-required','aria-readonly','aria-errormessage','aria-valuemax','aria-valuemin'],required:['aria-valuenow']},owned:null,nameFrom:['author'],context:null,implicit:['input[type=\"number\"]'],unsupported:false,allowedElements:{nodeName:'input',properties:{type:['text','tel']}}},status:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['output'],unsupported:false,allowedElements:['section']},structure:{type:'abstract',unsupported:false},switch:{type:'widget',attributes:{allowed:['aria-errormessage'],required:['aria-checked']},owned:null,nameFrom:['author','contents'],context:null,unsupported:false,allowedElements:['button',{nodeName:'input',properties:{type:['checkbox','image','button']}},{nodeName:'a',attributes:{href:isNotNull}}]},tab:{type:'widget',attributes:{allowed:['aria-selected','aria-expanded','aria-setsize','aria-posinset','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['tablist'],unsupported:false,allowedElements:[{nodeName:['button','h1','h2','h3','h4','h5','h6','li']},{nodeName:'input',properties:{type:'button'}},{nodeName:'a',attributes:{href:isNotNull}}]},table:{type:'structure',attributes:{allowed:['aria-colcount','aria-rowcount','aria-errormessage']},owned:{one:['rowgroup','row']},nameFrom:['author','contents'],context:null,implicit:['table'],unsupported:false},tablist:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-level','aria-multiselectable','aria-orientation','aria-errormessage']},owned:{all:['tab']},nameFrom:['author'],context:null,unsupported:false,allowedElements:['ol','ul']},tabpanel:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false,allowedElements:['section']},term:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,implicit:['dt'],unsupported:false},textbox:{type:'widget',attributes:{allowed:['aria-activedescendant','aria-autocomplete','aria-multiline','aria-readonly','aria-required','aria-placeholder','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['input[type=\"text\"]','input[type=\"email\"]','input[type=\"password\"]','input[type=\"tel\"]','input[type=\"url\"]','input:not([type])','textarea'],unsupported:false},timer:{type:'widget',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author'],context:null,unsupported:false},toolbar:{type:'structure',attributes:{allowed:['aria-activedescendant','aria-expanded','aria-orientation','aria-errormessage']},owned:null,nameFrom:['author'],context:null,implicit:['menu[type=\"toolbar\"]'],unsupported:false,allowedElements:['ol','ul']},tooltip:{type:'structure',attributes:{allowed:['aria-expanded','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:null,unsupported:false},tree:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-multiselectable','aria-required','aria-expanded','aria-orientation','aria-errormessage']},owned:{all:['treeitem']},nameFrom:['author'],context:null,unsupported:false,allowedElements:['ol','ul']},treegrid:{type:'composite',attributes:{allowed:['aria-activedescendant','aria-colcount','aria-expanded','aria-level','aria-multiselectable','aria-readonly','aria-required','aria-rowcount','aria-orientation','aria-errormessage']},owned:{one:['rowgroup','row']},nameFrom:['author'],context:null,unsupported:false},treeitem:{type:'widget',attributes:{allowed:['aria-checked','aria-selected','aria-expanded','aria-level','aria-posinset','aria-setsize','aria-errormessage']},owned:null,nameFrom:['author','contents'],context:['group','tree'],unsupported:false,allowedElements:['li',{nodeName:'a',attributes:{href:isNotNull}}]},widget:{type:'abstract',unsupported:false},window:{nameFrom:['author'],type:'abstract',unsupported:false}};lookupTable.implicitHtmlRole=implicit_html_roles_default;lookupTable.elementsAllowedNoRole=[{nodeName:['base','body','caption','col','colgroup','datalist','dd','details','dt','head','html','keygen','label','legend','main','map','math','meta','meter','noscript','optgroup','param','picture','progress','script','source','style','template','textarea','title','track']},{nodeName:'area',attributes:{href:isNotNull}},{nodeName:'input',properties:{type:['color','data','datatime','file','hidden','month','number','password','range','reset','submit','time','week']}},{nodeName:'link',attributes:{href:isNotNull}},{nodeName:'menu',attributes:{type:'context'}},{nodeName:'menuitem',attributes:{type:['command','checkbox','radio']}},{nodeName:'select',condition:function condition(vNode){if(!(vNode instanceof axe.AbstractVirtualNode)){vNode=axe.utils.getNodeFromTree(vNode);}return Number(vNode.attr('size'))>1;},properties:{multiple:true}},{nodeName:['clippath','cursor','defs','desc','feblend','fecolormatrix','fecomponenttransfer','fecomposite','feconvolvematrix','fediffuselighting','fedisplacementmap','fedistantlight','fedropshadow','feflood','fefunca','fefuncb','fefuncg','fefuncr','fegaussianblur','feimage','femerge','femergenode','femorphology','feoffset','fepointlight','fespecularlighting','fespotlight','fetile','feturbulence','filter','hatch','hatchpath','lineargradient','marker','mask','meshgradient','meshpatch','meshrow','metadata','mpath','pattern','radialgradient','solidcolor','stop','switch','view']}];lookupTable.elementsAllowedAnyRole=[{nodeName:'a',attributes:{href:isNull}},{nodeName:'img',attributes:{alt:isNull}},{nodeName:['abbr','address','canvas','div','p','pre','blockquote','ins','del','output','span','table','tbody','thead','tfoot','td','em','strong','small','s','cite','q','dfn','abbr','time','code','var','samp','kbd','sub','sup','i','b','u','mark','ruby','rt','rp','bdi','bdo','br','wbr','th','tr']}];lookupTable.evaluateRoleForElement={A:function A(_ref84){var node=_ref84.node,out=_ref84.out;if(node.namespaceURI==='http://www.w3.org/2000/svg'){return true;}if(node.href.length){return out;}return true;},AREA:function AREA(_ref85){var node=_ref85.node;return!node.href;},BUTTON:function BUTTON(_ref86){var node=_ref86.node,role=_ref86.role,out=_ref86.out;if(node.getAttribute('type')==='menu'){return role==='menuitem';}return out;},IMG:function IMG(_ref87){var node=_ref87.node,role=_ref87.role,out=_ref87.out;switch(node.alt){case null:return out;case'':return role==='presentation'||role==='none';default:return role!=='presentation'&&role!=='none';}},INPUT:function INPUT(_ref88){var node=_ref88.node,role=_ref88.role,out=_ref88.out;switch(node.type){case'button':case'image':return out;case'checkbox':if(role==='button'&&node.hasAttribute('aria-pressed')){return true;}return out;case'radio':return role==='menuitemradio';case'text':return role==='combobox'||role==='searchbox'||role==='spinbutton';case'tel':return role==='combobox'||role==='spinbutton';case'url':case'search':case'email':return role==='combobox';default:return false;}},LI:function LI(_ref89){var node=_ref89.node,out=_ref89.out;var hasImplicitListitemRole=axe.utils.matchesSelector(node,'ol li, ul li');if(hasImplicitListitemRole){return out;}return true;},MENU:function MENU(_ref90){var node=_ref90.node;if(node.getAttribute('type')==='context'){return false;}return true;},OPTION:function OPTION(_ref91){var node=_ref91.node;var withinOptionList=axe.utils.matchesSelector(node,'select > option, datalist > option, optgroup > option');return!withinOptionList;},SELECT:function SELECT(_ref92){var node=_ref92.node,role=_ref92.role;return!node.multiple&&node.size<=1&&role==='menu';},SVG:function SVG(_ref93){var node=_ref93.node,out=_ref93.out;if(node.parentNode&&node.parentNode.namespaceURI==='http://www.w3.org/2000/svg'){return true;}return out;}};lookupTable.rolesOfType={widget:['button','checkbox','dialog','gridcell','link','log','marquee','menuitem','menuitemcheckbox','menuitemradio','option','progressbar','radio','scrollbar','searchbox','slider','spinbutton','status','switch','tab','tabpanel','textbox','timer','tooltip','tree','treeitem']};var lookup_table_default=lookupTable;function implicitNodes(role){var implicit=null;var roles=lookup_table_default.role[role];if(roles&&roles.implicit){implicit=_clone(roles.implicit);}return implicit;}var implicit_nodes_default=implicitNodes;function isAccessibleRef(node){return!!get_accessible_refs_default(node).length;}var is_accessible_ref_default=isAccessibleRef;function _isComboboxPopup(virtualNode){var _popupRoles;var _ref94=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},popupRoles=_ref94.popupRoles;var role=get_role_default(virtualNode);(_popupRoles=popupRoles)!==null&&_popupRoles!==void 0?_popupRoles:popupRoles=aria_attrs_default['aria-haspopup'].values;if(!popupRoles.includes(role)){return false;}var vParent=nearestParentWithRole(virtualNode);if(isCombobox(vParent)){return true;}var id=virtualNode.props.id;if(!id){return false;}if(!virtualNode.actualNode){throw new Error('Unable to determine combobox popup without an actualNode');}var root=get_root_node_default(virtualNode.actualNode);var ownedCombobox=root.querySelectorAll('[aria-owns~=\"'.concat(id,'\"][role~=\"combobox\"]:not(select),\\n     [aria-controls~=\"').concat(id,'\"][role~=\"combobox\"]:not(select)'));return Array.from(ownedCombobox).some(isCombobox);}var isCombobox=function isCombobox(node){return node&&get_role_default(node)==='combobox';};function nearestParentWithRole(vNode){while(vNode=vNode.parent){if(get_role_default(vNode,{noPresentational:true})!==null){return vNode;}}return null;}function label2(node){node=get_node_from_tree_default(node);return label_virtual_default(node);}var label_default2=label2;function requiredAttr(role){var roleDef=standards_default.ariaRoles[role];if(!roleDef||!Array.isArray(roleDef.requiredAttrs)){return[];}return _toConsumableArray(roleDef.requiredAttrs);}var required_attr_default=requiredAttr;function requiredContext(role){var roleDef=standards_default.ariaRoles[role];if(!roleDef||!Array.isArray(roleDef.requiredContext)){return null;}return _toConsumableArray(roleDef.requiredContext);}var required_context_default=requiredContext;function requiredOwned(role){var roleDef=standards_default.ariaRoles[role];if(!roleDef||!Array.isArray(roleDef.requiredOwned)){return null;}return _toConsumableArray(roleDef.requiredOwned);}var required_owned_default=requiredOwned;function validateAttrValue(vNode,attr){vNode=vNode instanceof abstract_virtual_node_default?vNode:get_node_from_tree_default(vNode);var matches4;var list;var value=vNode.attr(attr);var attrInfo=standards_default.ariaAttrs[attr];if(!attrInfo){return true;}if(attrInfo.allowEmpty&&(!value||value.trim()==='')){return true;}switch(attrInfo.type){case'boolean':return['true','false'].includes(value.toLowerCase());case'nmtoken':return typeof value==='string'&&attrInfo.values.includes(value.toLowerCase());case'nmtokens':list=token_list_default(value);return list.reduce(function(result,token){return result&&attrInfo.values.includes(token);},list.length!==0);case'idref':try{var doc=get_root_node_default2(vNode.actualNode);return!!(value&&doc.getElementById(value));}catch(e){throw new TypeError('Cannot resolve id references for partial DOM');}case'idrefs':return idrefs_default(vNode,attr).some(function(node){return!!node;});case'string':return value.trim()!=='';case'decimal':matches4=value.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/);return!!(matches4&&(matches4[1]||matches4[2]));case'int':var minValue=typeof attrInfo.minValue!=='undefined'?attrInfo.minValue:-Infinity;return /^[-+]?[0-9]+$/.test(value)&&parseInt(value)>=minValue;}}var validate_attr_value_default=validateAttrValue;function validateAttr(att){var attrDefinition=standards_default.ariaAttrs[att];return!!attrDefinition;}var validate_attr_default=validateAttr;function abstractroleEvaluate(node,options,virtualNode){var abstractRoles=token_list_default(virtualNode.attr('role')).filter(function(role){return get_role_type_default(role)==='abstract';});if(abstractRoles.length>0){this.data(abstractRoles);return true;}return false;}var abstractrole_evaluate_default=abstractroleEvaluate;function ariaAllowedAttrEvaluate(node,options,virtualNode){var invalid=[];var role=get_role_default(virtualNode);var allowed=allowed_attr_default(role);if(Array.isArray(options[role])){allowed=unique_array_default(options[role].concat(allowed));}var _iterator15=_createForOfIteratorHelper(virtualNode.attrNames),_step15;try{for(_iterator15.s();!(_step15=_iterator15.n()).done;){var attrName=_step15.value;if(validate_attr_default(attrName)&&!allowed.includes(attrName)){invalid.push(attrName);}}}catch(err){_iterator15.e(err);}finally{_iterator15.f();}if(!invalid.length){return true;}this.data(invalid.map(function(attrName){return attrName+'=\"'+virtualNode.attr(attrName)+'\"';}));if(!role&&!is_html_element_default(virtualNode)&&!_isFocusable(virtualNode)){return void 0;}return false;}function ariaAllowedRoleEvaluate(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var virtualNode=arguments.length>2?arguments[2]:undefined;var _options$allowImplici=options.allowImplicit,allowImplicit=_options$allowImplici===void 0?true:_options$allowImplici,_options$ignoredTags=options.ignoredTags,ignoredTags=_options$ignoredTags===void 0?[]:_options$ignoredTags;var nodeName2=virtualNode.props.nodeName;if(ignoredTags.map(function(tag){return tag.toLowerCase();}).includes(nodeName2)){return true;}var unallowedRoles=get_element_unallowed_roles_default(virtualNode,allowImplicit);if(unallowedRoles.length){this.data(unallowedRoles);if(!_isVisibleToScreenReaders(virtualNode)){return void 0;}return false;}return true;}var aria_allowed_role_evaluate_default=ariaAllowedRoleEvaluate;function ariaBusyEvaluate(node,options,virtualNode){return virtualNode.attr('aria-busy')==='true';}function ariaConditionalCheckboxAttr(node,options,virtualNode){var _virtualNode$props=virtualNode.props,nodeName2=_virtualNode$props.nodeName,type2=_virtualNode$props.type;var ariaChecked=normalizeAriaChecked(virtualNode.attr('aria-checked'));if(nodeName2!=='input'||type2!=='checkbox'||!ariaChecked){return true;}var checkState=getCheckState(virtualNode);if(ariaChecked===checkState){return true;}this.data({messageKey:'checkbox',checkState:checkState});return false;}function getCheckState(vNode){if(vNode.props.indeterminate){return'mixed';}return vNode.props.checked?'true':'false';}function normalizeAriaChecked(ariaCheckedVal){if(!ariaCheckedVal){return'';}ariaCheckedVal=ariaCheckedVal.toLowerCase();if(['mixed','true'].includes(ariaCheckedVal)){return ariaCheckedVal;}return'false';}function ariaConditionalRowAttr(node){var _invalidTableRowAttrs,_invalidTableRowAttrs2;var _ref95=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},invalidTableRowAttrs=_ref95.invalidTableRowAttrs;var virtualNode=arguments.length>2?arguments[2]:undefined;var invalidAttrs=(_invalidTableRowAttrs=invalidTableRowAttrs===null||invalidTableRowAttrs===void 0?void 0:(_invalidTableRowAttrs2=invalidTableRowAttrs.filter)===null||_invalidTableRowAttrs2===void 0?void 0:_invalidTableRowAttrs2.call(invalidTableRowAttrs,function(invalidAttr){return virtualNode.hasAttr(invalidAttr);}))!==null&&_invalidTableRowAttrs!==void 0?_invalidTableRowAttrs:[];if(invalidAttrs.length===0){return true;}var owner=getRowOwner(virtualNode);var ownerRole=owner&&get_role_default(owner);if(!ownerRole||ownerRole==='treegrid'){return true;}var messageKey='row'.concat(invalidAttrs.length>1?'Plural':'Singular');this.data({messageKey:messageKey,invalidAttrs:invalidAttrs,ownerRole:ownerRole});return false;}function getRowOwner(virtualNode){if(!virtualNode.parent){return;}var rowOwnerQuery='table:not([role]), [role~=\"treegrid\"], [role~=\"table\"], [role~=\"grid\"]';return closest_default(virtualNode,rowOwnerQuery);}var conditionalRoleMap={row:ariaConditionalRowAttr,checkbox:ariaConditionalCheckboxAttr};function ariaConditionalAttrEvaluate(node,options,virtualNode){var role=get_role_default(virtualNode);if(!conditionalRoleMap[role]){return true;}return conditionalRoleMap[role].call(this,node,options,virtualNode);}function ariaErrormessageEvaluate(node,options,virtualNode){options=Array.isArray(options)?options:[];var errorMessageAttr=virtualNode.attr('aria-errormessage');var hasAttr=virtualNode.hasAttr('aria-errormessage');var invaid=virtualNode.attr('aria-invalid');var hasInvallid=virtualNode.hasAttr('aria-invalid');if(!hasInvallid||invaid==='false'){return true;}function validateAttrValue2(attr){if(attr.trim()===''){return standards_default.ariaAttrs['aria-errormessage'].allowEmpty;}var idref;try{idref=attr&&idrefs_default(virtualNode,'aria-errormessage')[0];}catch(e){this.data({messageKey:'idrefs',values:token_list_default(attr)});return void 0;}if(idref){if(!_isVisibleToScreenReaders(idref)){this.data({messageKey:'hidden',values:token_list_default(attr)});return false;}return idref.getAttribute('role')==='alert'||idref.getAttribute('aria-live')==='assertive'||idref.getAttribute('aria-live')==='polite'||token_list_default(virtualNode.attr('aria-describedby')).indexOf(attr)>-1;}return;}if(options.indexOf(errorMessageAttr)===-1&&hasAttr){this.data(token_list_default(errorMessageAttr));return validateAttrValue2.call(this,errorMessageAttr);}return true;}function ariaHiddenBodyEvaluate(node,options,virtualNode){return virtualNode.attr('aria-hidden')!=='true';}var aria_hidden_body_evaluate_default=ariaHiddenBodyEvaluate;function ariaLevelEvaluate(node,options,virtualNode){var ariaHeadingLevel=virtualNode.attr('aria-level');var ariaLevel=parseInt(ariaHeadingLevel,10);if(ariaLevel>6){return void 0;}return true;}var aria_level_evaluate_default=ariaLevelEvaluate;function ariaProhibitedAttrEvaluate(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var virtualNode=arguments.length>2?arguments[2]:undefined;var elementsAllowedAriaLabel=(options===null||options===void 0?void 0:options.elementsAllowedAriaLabel)||[];var nodeName2=virtualNode.props.nodeName;var role=get_role_default(virtualNode,{chromium:true});var prohibitedList=listProhibitedAttrs(role,nodeName2,elementsAllowedAriaLabel);var prohibited=prohibitedList.filter(function(attrName){if(!virtualNode.attrNames.includes(attrName)){return false;}return sanitize_default(virtualNode.attr(attrName))!=='';});if(prohibited.length===0){return false;}var messageKey=virtualNode.hasAttr('role')?'hasRole':'noRole';messageKey+=prohibited.length>1?'Plural':'Singular';this.data({role:role,nodeName:nodeName2,messageKey:messageKey,prohibited:prohibited});var textContent=subtree_text_default(virtualNode,{subtreeDescendant:true});if(sanitize_default(textContent)!==''){return void 0;}return true;}function listProhibitedAttrs(role,nodeName2,elementsAllowedAriaLabel){var roleSpec=standards_default.ariaRoles[role];if(roleSpec){return roleSpec.prohibitedAttrs||[];}if(!!role||elementsAllowedAriaLabel.includes(nodeName2)){return[];}return['aria-label','aria-labelledby'];}var standards_exports={};__export(standards_exports,{getAriaRolesByType:function getAriaRolesByType(){return get_aria_roles_by_type_default;},getAriaRolesSupportingNameFromContent:function getAriaRolesSupportingNameFromContent(){return get_aria_roles_supporting_name_from_content_default;},getElementSpec:function getElementSpec(){return get_element_spec_default;},getElementsByContentType:function getElementsByContentType(){return get_elements_by_content_type_default;},getGlobalAriaAttrs:function getGlobalAriaAttrs(){return get_global_aria_attrs_default;},implicitHtmlRoles:function implicitHtmlRoles(){return implicit_html_roles_default;}});function ariaRequiredAttrEvaluate(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var virtualNode=arguments.length>2?arguments[2]:undefined;var role=get_explicit_role_default(virtualNode);var attrs=virtualNode.attrNames;var requiredAttrs=required_attr_default(role);if(Array.isArray(options[role])){requiredAttrs=unique_array_default(options[role],requiredAttrs);}if(!role||!attrs.length||!requiredAttrs.length){return true;}if(isStaticSeparator(virtualNode,role)||isClosedCombobox(virtualNode,role)){return true;}var elmSpec=get_element_spec_default(virtualNode);var missingAttrs=requiredAttrs.filter(function(requiredAttr2){return!virtualNode.attr(requiredAttr2)&&!hasImplicitAttr(elmSpec,requiredAttr2);});if(missingAttrs.length){this.data(missingAttrs);return false;}return true;}function isStaticSeparator(vNode,role){return role==='separator'&&!_isFocusable(vNode);}function hasImplicitAttr(elmSpec,attr){var _elmSpec$implicitAttr;return((_elmSpec$implicitAttr=elmSpec.implicitAttrs)===null||_elmSpec$implicitAttr===void 0?void 0:_elmSpec$implicitAttr[attr])!==void 0;}function isClosedCombobox(vNode,role){return role==='combobox'&&vNode.attr('aria-expanded')==='false';}function ariaRequiredChildrenEvaluate(node,options,virtualNode){var reviewEmpty=options&&Array.isArray(options.reviewEmpty)?options.reviewEmpty:[];var explicitRole2=get_explicit_role_default(virtualNode,{dpub:true});var required=required_owned_default(explicitRole2);if(required===null){return true;}var ownedRoles=getOwnedRoles(virtualNode,required);var unallowed=ownedRoles.filter(function(_ref96){var role=_ref96.role,vNode=_ref96.vNode;return vNode.props.nodeType===1&&!required.includes(role);});if(unallowed.length){this.relatedNodes(unallowed.map(function(_ref97){var vNode=_ref97.vNode;return vNode;}));this.data({messageKey:'unallowed',values:unallowed.map(function(_ref98){var vNode=_ref98.vNode,attr=_ref98.attr;return getUnallowedSelector(vNode,attr);}).filter(function(selector,index,array){return array.indexOf(selector)===index;}).join(', ')});return false;}if(hasRequiredChildren(required,ownedRoles)){return true;}this.data(required);if(reviewEmpty.includes(explicitRole2)&&!ownedRoles.some(isContent)){return void 0;}return false;}function getOwnedRoles(virtualNode,required){var vNode;var ownedRoles=[];var ownedVirtual=get_owned_virtual_default(virtualNode);var _loop7=function _loop7(){if(vNode.props.nodeType===3){ownedRoles.push({vNode:vNode,role:null});}if(vNode.props.nodeType!==1||!_isVisibleToScreenReaders(vNode)){return'continue';}var role=get_role_default(vNode,{noPresentational:true});var globalAriaAttr=getGlobalAriaAttr(vNode);var hasGlobalAriaOrFocusable=!!globalAriaAttr||_isFocusable(vNode);if(!role&&!hasGlobalAriaOrFocusable||['group','rowgroup'].includes(role)&&required.some(function(requiredRole){return requiredRole===role;})){ownedVirtual.push.apply(ownedVirtual,_toConsumableArray(vNode.children));}else if(role||hasGlobalAriaOrFocusable){var attr=globalAriaAttr||'tabindex';ownedRoles.push({role:role,attr:attr,vNode:vNode});}};while(vNode=ownedVirtual.shift()){var _ret5=_loop7();if(_ret5==='continue'){continue;}}return ownedRoles;}function hasRequiredChildren(required,ownedRoles){return ownedRoles.some(function(_ref99){var role=_ref99.role;return role&&required.includes(role);});}function getGlobalAriaAttr(vNode){return get_global_aria_attrs_default().find(function(attr){return vNode.hasAttr(attr);});}function getUnallowedSelector(vNode,attr){var _vNode$props=vNode.props,nodeName2=_vNode$props.nodeName,nodeType=_vNode$props.nodeType;if(nodeType===3){return'#text';}var role=get_explicit_role_default(vNode,{dpub:true});if(role){return'[role='.concat(role,']');}if(attr){return nodeName2+'['.concat(attr,']');}return nodeName2;}function isContent(_ref100){var vNode=_ref100.vNode;if(vNode.props.nodeType===3){return vNode.props.nodeValue.trim().length>0;}return has_content_virtual_default(vNode,false,true);}function getMissingContext(virtualNode,ownGroupRoles,reqContext,includeElement){var explicitRole2=get_explicit_role_default(virtualNode);if(!reqContext){reqContext=required_context_default(explicitRole2);}if(!reqContext){return null;}var allowsGroup=reqContext.includes('group');var vNode=includeElement?virtualNode:virtualNode.parent;while(vNode){var role=get_role_default(vNode,{noPresentational:true});if(!role){vNode=vNode.parent;}else if(role==='group'&&allowsGroup){if(ownGroupRoles.includes(explicitRole2)){reqContext.push(explicitRole2);}reqContext=reqContext.filter(function(r){return r!=='group';});vNode=vNode.parent;}else if(reqContext.includes(role)){return null;}else{return reqContext;}}return reqContext;}function getAriaOwners(element){var owners=[],o=null;while(element){if(element.getAttribute('id')){var _id3=escape_selector_default(element.getAttribute('id'));var doc=get_root_node_default2(element);o=doc.querySelector('[aria-owns~='.concat(_id3,']'));if(o){owners.push(o);}}element=element.parentElement;}return owners.length?owners:null;}function ariaRequiredParentEvaluate(node,options,virtualNode){var ownGroupRoles=options&&Array.isArray(options.ownGroupRoles)?options.ownGroupRoles:[];var missingParents=getMissingContext(virtualNode,ownGroupRoles);if(!missingParents){return true;}var owners=getAriaOwners(node);if(owners){for(var _i30=0,l=owners.length;_i30<l;_i30++){missingParents=getMissingContext(get_node_from_tree_default(owners[_i30]),ownGroupRoles,missingParents,true);if(!missingParents){return true;}}}this.data(missingParents);return false;}var aria_required_parent_evaluate_default=ariaRequiredParentEvaluate;function ariaRoledescriptionEvaluate(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var virtualNode=arguments.length>2?arguments[2]:undefined;var role=get_role_default(virtualNode);var supportedRoles=options.supportedRoles||[];if(supportedRoles.includes(role)){return true;}if(role&&role!=='presentation'&&role!=='none'){return void 0;}return false;}var aria_roledescription_evaluate_default=ariaRoledescriptionEvaluate;function ariaUnsupportedAttrEvaluate(node,options,virtualNode){var unsupportedAttrs=virtualNode.attrNames.filter(function(name){var attribute=standards_default.ariaAttrs[name];if(!validate_attr_default(name)){return false;}var unsupported=attribute.unsupported;if(_typeof(unsupported)!=='object'){return!!unsupported;}return!matches_default2(node,unsupported.exceptions);});if(unsupportedAttrs.length){this.data(unsupportedAttrs);return true;}return false;}var aria_unsupported_attr_evaluate_default=ariaUnsupportedAttrEvaluate;function ariaValidAttrEvaluate(node,options,virtualNode){options=Array.isArray(options.value)?options.value:[];var invalid=[];var aria=/^aria-/;virtualNode.attrNames.forEach(function(attr){if(options.indexOf(attr)===-1&&aria.test(attr)&&!validate_attr_default(attr)){invalid.push(attr);}});if(invalid.length){this.data(invalid);return false;}return true;}var aria_valid_attr_evaluate_default=ariaValidAttrEvaluate;function ariaValidAttrValueEvaluate(node,options,virtualNode){options=Array.isArray(options.value)?options.value:[];var needsReview='';var messageKey='';var invalid=[];var aria=/^aria-/;var skipAttrs=['aria-errormessage'];var preChecks={'aria-controls':function ariaControls(){return virtualNode.attr('aria-expanded')!=='false'&&virtualNode.attr('aria-selected')!=='false';},'aria-current':function ariaCurrent(validValue){if(!validValue){needsReview='aria-current=\"'.concat(virtualNode.attr('aria-current'),'\"');messageKey='ariaCurrent';}return;},'aria-owns':function ariaOwns(){return virtualNode.attr('aria-expanded')!=='false';},'aria-describedby':function ariaDescribedby(validValue){if(!validValue){needsReview='aria-describedby=\"'.concat(virtualNode.attr('aria-describedby'),'\"');messageKey=axe._tree&&axe._tree[0]._hasShadowRoot?'noIdShadow':'noId';}return;},'aria-labelledby':function ariaLabelledby(validValue){if(!validValue){needsReview='aria-labelledby=\"'.concat(virtualNode.attr('aria-labelledby'),'\"');messageKey=axe._tree&&axe._tree[0]._hasShadowRoot?'noIdShadow':'noId';}}};virtualNode.attrNames.forEach(function(attrName){if(skipAttrs.includes(attrName)||options.includes(attrName)||!aria.test(attrName)){return;}var validValue;var attrValue=virtualNode.attr(attrName);try{validValue=validate_attr_value_default(virtualNode,attrName);}catch(e){needsReview=''.concat(attrName,'=\"').concat(attrValue,'\"');messageKey='idrefs';return;}if((preChecks[attrName]?preChecks[attrName](validValue):true)&&!validValue){if(attrValue===''&&!isStringType(attrName)){needsReview=attrName;messageKey='empty';}else{invalid.push(''.concat(attrName,'=\"').concat(attrValue,'\"'));}}});if(invalid.length){this.data(invalid);return false;}if(needsReview){this.data({messageKey:messageKey,needsReview:needsReview});return void 0;}return true;}function isStringType(attrName){var _standards_default$ar;return((_standards_default$ar=standards_default.ariaAttrs[attrName])===null||_standards_default$ar===void 0?void 0:_standards_default$ar.type)==='string';}function brailleLabelEquivalentEvaluate(node,options,virtualNode){var _virtualNode$attr;var brailleLabel=(_virtualNode$attr=virtualNode.attr('aria-braillelabel'))!==null&&_virtualNode$attr!==void 0?_virtualNode$attr:'';if(!brailleLabel.trim()){return true;}try{return sanitize_default(_accessibleTextVirtual(virtualNode))!=='';}catch(_unused){return void 0;}}function brailleRoleDescriptionEquivalentEvaluate(node,options,virtualNode){var _virtualNode$attr2;var brailleRoleDesc=(_virtualNode$attr2=virtualNode.attr('aria-brailleroledescription'))!==null&&_virtualNode$attr2!==void 0?_virtualNode$attr2:'';if(sanitize_default(brailleRoleDesc)===''){return true;}var roleDesc=virtualNode.attr('aria-roledescription');if(typeof roleDesc!=='string'){this.data({messageKey:'noRoleDescription'});return false;}if(sanitize_default(roleDesc)===''){this.data({messageKey:'emptyRoleDescription'});return false;}return true;}function deprecatedroleEvaluate(node,options,virtualNode){var role=get_role_default(virtualNode,{dpub:true,fallback:true});var roleDefinition=standards_default.ariaRoles[role];if(!(roleDefinition!==null&&roleDefinition!==void 0&&roleDefinition.deprecated)){return false;}this.data(role);return true;}function nonePresentationOnElementWithNoImplicitRole(virtualNode,explicitRoles){var hasImplicitRole=implicit_role_default(virtualNode);return!hasImplicitRole&&explicitRoles.length===2&&explicitRoles.includes('none')&&explicitRoles.includes('presentation');}function fallbackroleEvaluate(node,options,virtualNode){var explicitRoles=token_list_default(virtualNode.attr('role'));if(explicitRoles.length<=1){return false;}return nonePresentationOnElementWithNoImplicitRole(virtualNode,explicitRoles)?void 0:true;}var fallbackrole_evaluate_default=fallbackroleEvaluate;function hasGlobalAriaAttributeEvaluate(node,options,virtualNode){var globalAttrs=get_global_aria_attrs_default().filter(function(attr){return virtualNode.hasAttr(attr);});this.data(globalAttrs);return globalAttrs.length>0;}var has_global_aria_attribute_evaluate_default=hasGlobalAriaAttributeEvaluate;function hasWidgetRoleEvaluate(node){var role=node.getAttribute('role');if(role===null){return false;}var roleType=get_role_type_default(role);return roleType==='widget'||roleType==='composite';}var has_widget_role_evaluate_default=hasWidgetRoleEvaluate;function invalidroleEvaluate(node,options,virtualNode){var allRoles=token_list_default(virtualNode.attr('role'));var allInvalid=allRoles.every(function(role){return!is_valid_role_default(role,{allowAbstract:true});});if(allInvalid){this.data(allRoles);return true;}return false;}var invalidrole_evaluate_default=invalidroleEvaluate;function isElementFocusableEvaluate(node,options,virtualNode){return _isFocusable(virtualNode);}var is_element_focusable_evaluate_default=isElementFocusableEvaluate;function noImplicitExplicitLabelEvaluate(node,options,virtualNode){var role=get_role_default(virtualNode,{noImplicit:true});this.data(role);var label3;var accText;try{label3=sanitize_default(label_text_default(virtualNode)).toLowerCase();accText=sanitize_default(_accessibleTextVirtual(virtualNode)).toLowerCase();}catch(e){return void 0;}if(!accText&&!label3){return false;}if(!accText&&label3){return void 0;}if(!accText.includes(label3)){return void 0;}return false;}var no_implicit_explicit_label_evaluate_default=noImplicitExplicitLabelEvaluate;function unsupportedroleEvaluate(node,options,virtualNode){var role=get_role_default(virtualNode,{dpub:true,fallback:true});var isUnsupported=is_unsupported_role_default(role);if(isUnsupported){this.data(role);}return isUnsupported;}var unsupportedrole_evaluate_default=unsupportedroleEvaluate;var VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS={ARTICLE:true,ASIDE:true,NAV:true,SECTION:true};var VALID_ROLES_FOR_SCROLLABLE_REGIONS={application:true,article:true,banner:false,complementary:true,contentinfo:true,form:true,main:true,navigation:true,region:true,search:false};function validScrollableTagName(node){var nodeName2=node.nodeName.toUpperCase();return VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS[nodeName2]||false;}function validScrollableRole(node,options){var role=get_explicit_role_default(node);if(!role){return false;}return VALID_ROLES_FOR_SCROLLABLE_REGIONS[role]||options.roles.includes(role)||false;}function validScrollableSemanticsEvaluate(node,options){return validScrollableRole(node,options)||validScrollableTagName(node);}var valid_scrollable_semantics_evaluate_default=validScrollableSemanticsEvaluate;var color_exports={};__export(color_exports,{Color:function Color(){return color_default;},centerPointOfRect:function centerPointOfRect(){return center_point_of_rect_default;},elementHasImage:function elementHasImage(){return element_has_image_default;},elementIsDistinct:function elementIsDistinct(){return element_is_distinct_default;},filteredRectStack:function filteredRectStack(){return filtered_rect_stack_default;},flattenColors:function flattenColors(){return flatten_colors_default;},flattenShadowColors:function flattenShadowColors(){return _flattenShadowColors;},getBackgroundColor:function getBackgroundColor(){return _getBackgroundColor2;},getBackgroundStack:function getBackgroundStack(){return _getBackgroundStack;},getContrast:function getContrast(){return get_contrast_default;},getForegroundColor:function getForegroundColor(){return _getForegroundColor;},getOwnBackgroundColor:function getOwnBackgroundColor(){return get_own_background_color_default;},getRectStack:function getRectStack(){return get_rect_stack_default;},getStackingContext:function getStackingContext(){return _getStackingContext;},getStrokeColorsFromShadows:function getStrokeColorsFromShadows(){return _getStrokeColorsFromShadows;},getTextShadowColors:function getTextShadowColors(){return _getTextShadowColors;},hasValidContrastRatio:function hasValidContrastRatio(){return has_valid_contrast_ratio_default;},incompleteData:function incompleteData(){return incomplete_data_default;},parseTextShadows:function parseTextShadows(){return _parseTextShadows;},stackingContextToColor:function stackingContextToColor(){return _stackingContextToColor;}});function centerPointOfRect(rect){if(rect.left>window.innerWidth){return void 0;}if(rect.top>window.innerHeight){return void 0;}var x=Math.min(Math.ceil(rect.left+rect.width/2),window.innerWidth-1);var y=Math.min(Math.ceil(rect.top+rect.height/2),window.innerHeight-1);return{x:x,y:y};}var center_point_of_rect_default=centerPointOfRect;function _getFonts(style){return style.getPropertyValue('font-family').split(/[,;]/g).map(function(font){return font.trim().toLowerCase();});}function elementIsDistinct(node,ancestorNode){var nodeStyle=window.getComputedStyle(node);if(nodeStyle.getPropertyValue('background-image')!=='none'){return true;}var hasBorder=['border-bottom','border-top','outline'].reduce(function(result,edge){var borderClr=new color_default();borderClr.parseString(nodeStyle.getPropertyValue(edge+'-color'));return result||nodeStyle.getPropertyValue(edge+'-style')!=='none'&&parseFloat(nodeStyle.getPropertyValue(edge+'-width'))>0&&borderClr.alpha!==0;},false);if(hasBorder){return true;}var parentStyle=window.getComputedStyle(ancestorNode);if(_getFonts(nodeStyle)[0]!==_getFonts(parentStyle)[0]){return true;}var hasStyle=['text-decoration-line','text-decoration-style','font-weight','font-style','font-size'].reduce(function(result,cssProp){return result||nodeStyle.getPropertyValue(cssProp)!==parentStyle.getPropertyValue(cssProp);},false);var tDec=nodeStyle.getPropertyValue('text-decoration');if(tDec.split(' ').length<3){hasStyle=hasStyle||tDec!==parentStyle.getPropertyValue('text-decoration');}return hasStyle;}var element_is_distinct_default=elementIsDistinct;function getRectStack2(elm){var boundingStack=get_element_stack_default(elm);var filteredArr=get_text_element_stack_default(elm);if(!filteredArr||filteredArr.length<=1){return[boundingStack];}if(filteredArr.some(function(stack){return stack===void 0;})){return null;}filteredArr.splice(0,0,boundingStack);return filteredArr;}var get_rect_stack_default=getRectStack2;function filteredRectStack(elm){var rectStack=get_rect_stack_default(elm);if(rectStack&&rectStack.length===1){return rectStack[0];}if(rectStack&&rectStack.length>1){var boundingStack=rectStack.shift();var isSame;rectStack.forEach(function(rectList,index){if(index===0){return;}var rectA=rectStack[index-1],rectB=rectStack[index];isSame=rectA.every(function(element,elementIndex){return element===rectB[elementIndex];})||boundingStack.includes(elm);});if(!isSame){incomplete_data_default.set('bgColor','elmPartiallyObscuring');return null;}return rectStack[0];}incomplete_data_default.set('bgColor','outsideViewport');return null;}var filtered_rect_stack_default=filteredRectStack;function clamp2(value,min,max2){return Math.min(Math.max(min,value),max2);}var blendFunctions={normal:function normal(Cb,Cs){return Cs;},multiply:function multiply(Cb,Cs){return Cs*Cb;},screen:function screen(Cb,Cs){return Cb+Cs-Cb*Cs;},overlay:function overlay(Cb,Cs){return this['hard-light'](Cs,Cb);},darken:function darken(Cb,Cs){return Math.min(Cb,Cs);},lighten:function lighten(Cb,Cs){return Math.max(Cb,Cs);},'color-dodge':function colorDodge(Cb,Cs){return Cb===0?0:Cs===1?1:Math.min(1,Cb/(1-Cs));},'color-burn':function colorBurn(Cb,Cs){return Cb===1?1:Cs===0?0:1-Math.min(1,(1-Cb)/Cs);},'hard-light':function hardLight(Cb,Cs){return Cs<=.5?this.multiply(Cb,2*Cs):this.screen(Cb,2*Cs-1);},'soft-light':function softLight(Cb,Cs){if(Cs<=.5){return Cb-(1-2*Cs)*Cb*(1-Cb);}else{var D=Cb<=.25?((16*Cb-12)*Cb+4)*Cb:Math.sqrt(Cb);return Cb+(2*Cs-1)*(D-Cb);}},difference:function difference(Cb,Cs){return Math.abs(Cb-Cs);},exclusion:function exclusion(Cb,Cs){return Cb+Cs-2*Cb*Cs;}};function simpleAlphaCompositing(Cs,αs,Cb,αb,blendMode){return αs*(1-αb)*Cs+αs*αb*blendFunctions[blendMode](Cb/255,Cs/255)*255+(1-αs)*αb*Cb;}function flattenColors(sourceColor,backdrop){var blendMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'normal';var r=simpleAlphaCompositing(sourceColor.red,sourceColor.alpha,backdrop.red,backdrop.alpha,blendMode);var g2=simpleAlphaCompositing(sourceColor.green,sourceColor.alpha,backdrop.green,backdrop.alpha,blendMode);var b2=simpleAlphaCompositing(sourceColor.blue,sourceColor.alpha,backdrop.blue,backdrop.alpha,blendMode);var αo=clamp2(sourceColor.alpha+backdrop.alpha*(1-sourceColor.alpha),0,1);if(αo===0){return new color_default(r,g2,b2,αo);}var Cr=Math.round(r/αo);var Cg=Math.round(g2/αo);var Cb=Math.round(b2/αo);return new color_default(Cr,Cg,Cb,αo);}var flatten_colors_default=flattenColors;function _flattenShadowColors(fgColor,bgColor){var alpha=fgColor.alpha;var r=(1-alpha)*bgColor.red+alpha*fgColor.red;var g2=(1-alpha)*bgColor.green+alpha*fgColor.green;var b2=(1-alpha)*bgColor.blue+alpha*fgColor.blue;var a2=fgColor.alpha+bgColor.alpha*(1-fgColor.alpha);return new color_default(r,g2,b2,a2);}function _getBackgroundStack(node){var stacks=get_text_element_stack_default(node).map(function(stack){stack=reduce_to_elements_below_floating_default(stack,node);stack=sortPageBackground(stack);return stack;});for(var index=0;index<stacks.length;index++){var stack=stacks[index];if(stack[0]!==node){incomplete_data_default.set('bgColor','bgOverlap');return null;}if(index!==0&&!shallowArraysEqual(stack,stacks[0])){incomplete_data_default.set('bgColor','elmPartiallyObscuring');return null;}}return stacks[0]||null;}function sortPageBackground(elmStack){var bodyIndex=elmStack.indexOf(document.body);var bgNodes=elmStack;var htmlBgColor=get_own_background_color_default(window.getComputedStyle(document.documentElement));if(bodyIndex>1&&htmlBgColor.alpha===0&&!element_has_image_default(document.documentElement)){if(bodyIndex>1){bgNodes.splice(bodyIndex,1);bgNodes.push(document.body);}var htmlIndex=bgNodes.indexOf(document.documentElement);if(htmlIndex>0){bgNodes.splice(htmlIndex,1);bgNodes.push(document.documentElement);}}return bgNodes;}function shallowArraysEqual(a2,b2){if(a2===b2){return true;}if(a2===null||b2===null){return false;}if(a2.length!==b2.length){return false;}for(var i=0;i<a2.length;++i){if(a2[i]!==b2[i]){return false;}}return true;}var SHADOW_STROKE_ALPHA=.54;var VISIBLE_SHADOW_MIN_PX=.5;var OPAQUE_STROKE_OFFSET_MIN_PX=1.5;var edges=['top','right','bottom','left'];function _getStrokeColorsFromShadows(parsedShadows){var _ref101=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref101$ignoreEdgeCou=_ref101.ignoreEdgeCount,ignoreEdgeCount=_ref101$ignoreEdgeCou===void 0?false:_ref101$ignoreEdgeCou;var shadowMap=getShadowColorsMap(parsedShadows);var shadowsByColor=Object.entries(shadowMap).map(function(_ref102){var _ref103=_slicedToArray(_ref102,2),colorStr=_ref103[0],sides=_ref103[1];var edgeCount=edges.filter(function(side){return sides[side].length!==0;}).length;return{colorStr:colorStr,sides:sides,edgeCount:edgeCount};});if(!ignoreEdgeCount&&shadowsByColor.some(function(_ref104){var edgeCount=_ref104.edgeCount;return edgeCount>1&&edgeCount<4;})){return null;}return shadowsByColor.map(shadowGroupToColor).filter(function(shadow){return shadow!==null;});}function getShadowColorsMap(parsedShadows){var colorMap={};var _iterator16=_createForOfIteratorHelper(parsedShadows),_step16;try{for(_iterator16.s();!(_step16=_iterator16.n()).done;){var _colorMap$colorStr;var _step16$value=_step16.value,colorStr=_step16$value.colorStr,pixels=_step16$value.pixels;(_colorMap$colorStr=colorMap[colorStr])!==null&&_colorMap$colorStr!==void 0?_colorMap$colorStr:colorMap[colorStr]={top:[],right:[],bottom:[],left:[]};var borders=colorMap[colorStr];var _pixels=_slicedToArray(pixels,2),offsetX=_pixels[0],offsetY=_pixels[1];if(offsetX>VISIBLE_SHADOW_MIN_PX){borders.right.push(offsetX);}else if(-offsetX>VISIBLE_SHADOW_MIN_PX){borders.left.push(-offsetX);}if(offsetY>VISIBLE_SHADOW_MIN_PX){borders.bottom.push(offsetY);}else if(-offsetY>VISIBLE_SHADOW_MIN_PX){borders.top.push(-offsetY);}}}catch(err){_iterator16.e(err);}finally{_iterator16.f();}return colorMap;}function shadowGroupToColor(_ref105){var colorStr=_ref105.colorStr,sides=_ref105.sides,edgeCount=_ref105.edgeCount;if(edgeCount!==4){return null;}var strokeColor=new color_default();strokeColor.parseString(colorStr);var density=0;var isSolid=true;edges.forEach(function(edge){density+=sides[edge].length/4;isSolid&&(isSolid=sides[edge].every(function(offset){return offset>OPAQUE_STROKE_OFFSET_MIN_PX;}));});if(!isSolid){strokeColor.alpha=1-Math.pow(SHADOW_STROKE_ALPHA,density);}return strokeColor;}function _parseTextShadows(textShadow){var current={pixels:[]};var str=textShadow.trim();var shadows=[current];if(!str){return[];}while(str){var colorMatch=str.match(/^[a-z]+(\\([^)]+\\))?/i)||str.match(/^#[0-9a-f]+/i);var pixelMatch=str.match(/^([0-9.-]+)px/i)||str.match(/^(0)/);if(colorMatch){assert_default(!current.colorStr,'Multiple colors identified in text-shadow: '.concat(textShadow));str=str.replace(colorMatch[0],'').trim();current.colorStr=colorMatch[0];}else if(pixelMatch){assert_default(current.pixels.length<3,'Too many pixel units in text-shadow: '.concat(textShadow));str=str.replace(pixelMatch[0],'').trim();var pixelUnit=parseFloat((pixelMatch[1][0]==='.'?'0':'')+pixelMatch[1]);current.pixels.push(pixelUnit);}else if(str[0]===','){assert_default(current.pixels.length>=2,'Missing pixel value in text-shadow: '.concat(textShadow));current={pixels:[]};shadows.push(current);str=str.substr(1).trim();}else{throw new Error('Unable to process text-shadows: '.concat(str));}}shadows.forEach(function(_ref106){var pixels=_ref106.pixels;if(pixels.length===2){pixels.push(0);}});return shadows;}function _getTextShadowColors(node){var _ref107=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},minRatio=_ref107.minRatio,maxRatio=_ref107.maxRatio,ignoreEdgeCount=_ref107.ignoreEdgeCount;var shadowColors=[];var style=window.getComputedStyle(node);var textShadow=style.getPropertyValue('text-shadow');if(textShadow==='none'){return shadowColors;}var fontSizeStr=style.getPropertyValue('font-size');var fontSize=parseInt(fontSizeStr);assert_default(isNaN(fontSize)===false,'Unable to determine font-size value '.concat(fontSizeStr));var thinShadows=[];var shadows=_parseTextShadows(textShadow);var _iterator17=_createForOfIteratorHelper(shadows),_step17;try{for(_iterator17.s();!(_step17=_iterator17.n()).done;){var shadow=_step17.value;var colorStr=shadow.colorStr||style.getPropertyValue('color');var _shadow$pixels=_slicedToArray(shadow.pixels,3),offsetX=_shadow$pixels[0],offsetY=_shadow$pixels[1],_shadow$pixels$=_shadow$pixels[2],blurRadius=_shadow$pixels$===void 0?0:_shadow$pixels$;if(maxRatio&&blurRadius>=fontSize*maxRatio){continue;}if(minRatio&&blurRadius<fontSize*minRatio){thinShadows.push({colorStr:colorStr,pixels:shadow.pixels});continue;}if(thinShadows.length>0){var _strokeColors=_getStrokeColorsFromShadows(thinShadows,{ignoreEdgeCount:ignoreEdgeCount});if(_strokeColors===null){return null;}shadowColors.push.apply(shadowColors,_toConsumableArray(_strokeColors));thinShadows.splice(0,thinShadows.length);}var _color3=textShadowColor({colorStr:colorStr,offsetX:offsetX,offsetY:offsetY,blurRadius:blurRadius,fontSize:fontSize});shadowColors.push(_color3);}}catch(err){_iterator17.e(err);}finally{_iterator17.f();}if(thinShadows.length>0){var strokeColors=_getStrokeColorsFromShadows(thinShadows,{ignoreEdgeCount:ignoreEdgeCount});if(strokeColors===null){return null;}shadowColors.push.apply(shadowColors,_toConsumableArray(strokeColors));}return shadowColors;}function textShadowColor(_ref108){var colorStr=_ref108.colorStr,offsetX=_ref108.offsetX,offsetY=_ref108.offsetY,blurRadius=_ref108.blurRadius,fontSize=_ref108.fontSize;if(offsetX>blurRadius||offsetY>blurRadius){return new color_default(0,0,0,0);}var shadowColor=new color_default();shadowColor.parseString(colorStr);shadowColor.alpha*=blurRadiusToAlpha(blurRadius,fontSize);return shadowColor;}function blurRadiusToAlpha(blurRadius,fontSize){if(blurRadius===0){return 1;}var relativeBlur=blurRadius/fontSize;return .185/(relativeBlur+.4);}function _getStackingContext(elm,elmStack){var _elmStack;var virtualNode=get_node_from_tree_default(elm);if(virtualNode._stackingContext){return virtualNode._stackingContext;}var stackingContext=[];var contextMap=new Map();elmStack=(_elmStack=elmStack)!==null&&_elmStack!==void 0?_elmStack:_getBackgroundStack(elm);elmStack.forEach(function(bgElm){var _stackingOrder2;var bgVNode=get_node_from_tree_default(bgElm);var bgColor=getOwnBackgroundColor2(bgVNode);var stackingOrder=bgVNode._stackingOrder.filter(function(_ref109){var vNode=_ref109.vNode;return!!vNode;});stackingOrder.forEach(function(_ref110,index){var _stackingOrder;var vNode=_ref110.vNode;var ancestorVNode2=(_stackingOrder=stackingOrder[index-1])===null||_stackingOrder===void 0?void 0:_stackingOrder.vNode;var context2=addToStackingContext(contextMap,vNode,ancestorVNode2);if(index===0&&!contextMap.get(vNode)){stackingContext.unshift(context2);}contextMap.set(vNode,context2);});var ancestorVNode=(_stackingOrder2=stackingOrder[stackingOrder.length-1])===null||_stackingOrder2===void 0?void 0:_stackingOrder2.vNode;var context=addToStackingContext(contextMap,bgVNode,ancestorVNode);if(!stackingOrder.length){stackingContext.unshift(context);}context.bgColor=bgColor;});virtualNode._stackingContext=stackingContext;return stackingContext;}function _stackingContextToColor(context){var _context$descendants;if(!((_context$descendants=context.descendants)!==null&&_context$descendants!==void 0&&_context$descendants.length)){var color2=context.bgColor;color2.alpha*=context.opacity;return{color:color2,blendMode:context.blendMode};}var sourceColor=context.descendants.reduce(reduceToColor,createStackingContext2());var color=flatten_colors_default(sourceColor,context.bgColor,context.descendants[0].blendMode);color.alpha*=context.opacity;return{color:color,blendMode:context.blendMode};}function reduceToColor(backdropContext,sourceContext){var backdrop;if(backdropContext instanceof color_default){backdrop=backdropContext;}else{backdrop=_stackingContextToColor(backdropContext).color;}var sourceColor=_stackingContextToColor(sourceContext).color;return flatten_colors_default(sourceColor,backdrop,sourceContext.blendMode);}function createStackingContext2(vNode,ancestorContext){var _vNode$getComputedSty;return{vNode:vNode,ancestor:ancestorContext,opacity:parseFloat((_vNode$getComputedSty=vNode===null||vNode===void 0?void 0:vNode.getComputedStylePropertyValue('opacity'))!==null&&_vNode$getComputedSty!==void 0?_vNode$getComputedSty:1),bgColor:new color_default(0,0,0,0),blendMode:normalizeBlendMode(vNode===null||vNode===void 0?void 0:vNode.getComputedStylePropertyValue('mix-blend-mode')),descendants:[]};}function normalizeBlendMode(blendmode){return!!blendmode?blendmode:void 0;}function addToStackingContext(contextMap,vNode,ancestorVNode){var _contextMap$get;var ancestorContext=contextMap.get(ancestorVNode);var context=(_contextMap$get=contextMap.get(vNode))!==null&&_contextMap$get!==void 0?_contextMap$get:createStackingContext2(vNode,ancestorContext);if(ancestorContext&&ancestorVNode!==vNode&&!ancestorContext.descendants.includes(context)){ancestorContext.descendants.unshift(context);}return context;}function getOwnBackgroundColor2(vNode){var bgColor=new color_default();bgColor.parseString(vNode.getComputedStylePropertyValue('background-color'));return bgColor;}function _getBackgroundColor2(elm){var bgElms=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var shadowOutlineEmMax=arguments.length>2&&arguments[2]!==undefined?arguments[2]:.1;var vNode=get_node_from_tree_default(elm);var bgColorCache=vNode._cache.getBackgroundColor;if(bgColorCache){bgElms.push.apply(bgElms,_toConsumableArray(bgColorCache.bgElms));incomplete_data_default.set('bgColor',bgColorCache.incompleteData);return bgColorCache.bgColor;}var bgColor=_getBackgroundColor(elm,bgElms,shadowOutlineEmMax);vNode._cache.getBackgroundColor={bgColor:bgColor,bgElms:bgElms,incompleteData:incomplete_data_default.get('bgColor')};return bgColor;}function _getBackgroundColor(elm,bgElms,shadowOutlineEmMax){var _getTextShadowColors2,_bgColors;var elmStack=_getBackgroundStack(elm);if(!elmStack){return null;}var textRects=get_visible_child_text_rects_default(elm);var bgColors=(_getTextShadowColors2=_getTextShadowColors(elm,{minRatio:shadowOutlineEmMax,ignoreEdgeCount:true}))!==null&&_getTextShadowColors2!==void 0?_getTextShadowColors2:[];if(bgColors.length){bgColors=[{color:bgColors.reduce(_flattenShadowColors)}];}for(var _i31=0;_i31<elmStack.length;_i31++){var bgElm=elmStack[_i31];var bgElmStyle=window.getComputedStyle(bgElm);if(element_has_image_default(bgElm,bgElmStyle)){bgElms.push(bgElm);return null;}var bgColor=get_own_background_color_default(bgElmStyle);if(bgColor.alpha===0){continue;}if(bgElmStyle.getPropertyValue('display')!=='inline'&&!fullyEncompasses(bgElm,textRects)){bgElms.push(bgElm);incomplete_data_default.set('bgColor','elmPartiallyObscured');return null;}bgElms.push(bgElm);if(bgColor.alpha===1){break;}}var stackingContext=_getStackingContext(elm,elmStack);bgColors=stackingContext.map(_stackingContextToColor).concat(bgColors);var pageBgs=getPageBackgroundColors(elm,elmStack.includes(document.body));(_bgColors=bgColors).unshift.apply(_bgColors,_toConsumableArray(pageBgs));if(bgColors.length===0){return new color_default(255,255,255,1);}var blendedColor=bgColors.reduce(function(bgColor,fgColor){return flatten_colors_default(fgColor.color,bgColor.color instanceof color_default?bgColor.color:bgColor,fgColor.blendMode);});return flatten_colors_default(blendedColor.color instanceof color_default?blendedColor.color:blendedColor,new color_default(255,255,255,1));}function fullyEncompasses(node,rects){rects=Array.isArray(rects)?rects:[rects];var nodeRect=node.getBoundingClientRect();var right=nodeRect.right,bottom=nodeRect.bottom;var style=window.getComputedStyle(node);var overflow=style.getPropertyValue('overflow');if(['scroll','auto'].includes(overflow)||node instanceof window.HTMLHtmlElement){right=nodeRect.left+node.scrollWidth;bottom=nodeRect.top+node.scrollHeight;}return rects.every(function(rect){return rect.top>=nodeRect.top&&rect.bottom<=bottom&&rect.left>=nodeRect.left&&rect.right<=right;});}function normalizeBlendMode2(blendmode){return!!blendmode?blendmode:void 0;}function getPageBackgroundColors(elm,stackContainsBody){var pageColors=[];if(!stackContainsBody){var html=document.documentElement;var body=document.body;var htmlStyle=window.getComputedStyle(html);var bodyStyle=window.getComputedStyle(body);var htmlBgColor=get_own_background_color_default(htmlStyle);var bodyBgColor=get_own_background_color_default(bodyStyle);var bodyBgColorApplies=bodyBgColor.alpha!==0&&fullyEncompasses(body,elm.getBoundingClientRect());if(bodyBgColor.alpha!==0&&htmlBgColor.alpha===0||bodyBgColorApplies&&bodyBgColor.alpha!==1){pageColors.unshift({color:bodyBgColor,blendMode:normalizeBlendMode2(bodyStyle.getPropertyValue('mix-blend-mode'))});}if(htmlBgColor.alpha!==0&&(!bodyBgColorApplies||bodyBgColorApplies&&bodyBgColor.alpha!==1)){pageColors.unshift({color:htmlBgColor,blendMode:normalizeBlendMode2(htmlStyle.getPropertyValue('mix-blend-mode'))});}}return pageColors;}function getContrast(bgColor,fgColor){if(!fgColor||!bgColor){return null;}if(fgColor.alpha<1){fgColor=flatten_colors_default(fgColor,bgColor);}var bL=bgColor.getRelativeLuminance();var fL=fgColor.getRelativeLuminance();return(Math.max(fL,bL)+.05)/(Math.min(fL,bL)+.05);}var get_contrast_default=getContrast;function _getForegroundColor(node,_,bgColor){var _bgColor;var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var nodeStyle=window.getComputedStyle(node);var colorStack=[function(){return getStrokeColor(nodeStyle,options);},function(){return getTextColor(nodeStyle);},function(){return _getTextShadowColors(node,{minRatio:0});}];var fgColors=[];for(var _i32=0,_colorStack=colorStack;_i32<_colorStack.length;_i32++){var colorFn=_colorStack[_i32];var _color4=colorFn();if(!_color4){continue;}fgColors=fgColors.concat(_color4);if(_color4.alpha===1){break;}}var fgColor=fgColors.reduce(function(source,backdrop){return flatten_colors_default(source,backdrop);});(_bgColor=bgColor)!==null&&_bgColor!==void 0?_bgColor:bgColor=_getBackgroundColor2(node,[]);if(bgColor===null){var reason=incomplete_data_default.get('bgColor');incomplete_data_default.set('fgColor',reason);return null;}var stackingContexts=_getStackingContext(node);var context=findNodeInContexts(stackingContexts,node);return flatten_colors_default(calculateBlendedForegroundColor(fgColor,context,stackingContexts),new color_default(255,255,255,1));}function getTextColor(nodeStyle){return new color_default().parseString(nodeStyle.getPropertyValue('-webkit-text-fill-color')||nodeStyle.getPropertyValue('color'));}function getStrokeColor(nodeStyle,_ref111){var _ref111$textStrokeEmM=_ref111.textStrokeEmMin,textStrokeEmMin=_ref111$textStrokeEmM===void 0?0:_ref111$textStrokeEmM;var strokeWidth=parseFloat(nodeStyle.getPropertyValue('-webkit-text-stroke-width'));if(strokeWidth===0){return null;}var fontSize=nodeStyle.getPropertyValue('font-size');var relativeStrokeWidth=strokeWidth/parseFloat(fontSize);if(isNaN(relativeStrokeWidth)||relativeStrokeWidth<textStrokeEmMin){return null;}var strokeColor=nodeStyle.getPropertyValue('-webkit-text-stroke-color');return new color_default().parseString(strokeColor);}function calculateBlendedForegroundColor(fgColor,context,stackingContexts){while(context){var _context$ancestor;if(context.opacity===1&&context.ancestor){context=context.ancestor;continue;}fgColor.alpha*=context.opacity;var stack=((_context$ancestor=context.ancestor)===null||_context$ancestor===void 0?void 0:_context$ancestor.descendants)||stackingContexts;if(context.opacity!==1){stack=stack.slice(0,stack.indexOf(context));}var bgColors=stack.map(_stackingContextToColor);if(!bgColors.length){context=context.ancestor;continue;}var bgColor=bgColors.reduce(function(backdrop,source){return flatten_colors_default(source.color,backdrop.color instanceof color_default?backdrop.color:backdrop);},{color:new color_default(0,0,0,0),blendMode:'normal'});fgColor=flatten_colors_default(fgColor,bgColor);context=context.ancestor;}return fgColor;}function findNodeInContexts(contexts,node){var _iterator18=_createForOfIteratorHelper(contexts),_step18;try{for(_iterator18.s();!(_step18=_iterator18.n()).done;){var _context$vNode;var context=_step18.value;if(((_context$vNode=context.vNode)===null||_context$vNode===void 0?void 0:_context$vNode.actualNode)===node){return context;}var found=findNodeInContexts(context.descendants,node);if(found){return found;}}}catch(err){_iterator18.e(err);}finally{_iterator18.f();}}function hasValidContrastRatio(bg,fg,fontSize,isBold){var contrast2=get_contrast_default(bg,fg);var isSmallFont=isBold&&Math.ceil(fontSize*72)/96<14||!isBold&&Math.ceil(fontSize*72)/96<18;var expectedContrastRatio=isSmallFont?4.5:3;return{isValid:contrast2>expectedContrastRatio,contrastRatio:contrast2,expectedContrastRatio:expectedContrastRatio};}var has_valid_contrast_ratio_default=hasValidContrastRatio;function colorContrastEvaluate(node,options,virtualNode){var ignoreUnicode=options.ignoreUnicode,ignoreLength=options.ignoreLength,ignorePseudo=options.ignorePseudo,boldValue=options.boldValue,boldTextPt=options.boldTextPt,largeTextPt=options.largeTextPt,contrastRatio=options.contrastRatio,shadowOutlineEmMax=options.shadowOutlineEmMax,pseudoSizeThreshold=options.pseudoSizeThreshold;if(!_isVisibleOnScreen(node)){this.data({messageKey:'hidden'});return true;}var visibleText=visible_virtual_default(virtualNode,false,true);if(ignoreUnicode&&textIsEmojis(visibleText)){this.data({messageKey:'nonBmp'});return void 0;}var nodeStyle=window.getComputedStyle(node);var fontSize=parseFloat(nodeStyle.getPropertyValue('font-size'));var fontWeight=nodeStyle.getPropertyValue('font-weight');var bold=parseFloat(fontWeight)>=boldValue||fontWeight==='bold';var ptSize=Math.ceil(fontSize*72)/96;var isSmallFont=bold&&ptSize<boldTextPt||!bold&&ptSize<largeTextPt;var _ref112=isSmallFont?contrastRatio.normal:contrastRatio.large,expected=_ref112.expected,minThreshold=_ref112.minThreshold,maxThreshold=_ref112.maxThreshold;var pseudoElm=findPseudoElement(virtualNode,{ignorePseudo:ignorePseudo,pseudoSizeThreshold:pseudoSizeThreshold});if(pseudoElm){this.data({fontSize:''.concat((fontSize*72/96).toFixed(1),'pt (').concat(fontSize,'px)'),fontWeight:bold?'bold':'normal',messageKey:'pseudoContent',expectedContrastRatio:expected+':1'});this.relatedNodes(pseudoElm.actualNode);return void 0;}var shadowColors=_getTextShadowColors(node,{minRatio:.001,maxRatio:shadowOutlineEmMax});if(shadowColors===null){this.data({messageKey:'complexTextShadows'});return void 0;}var bgNodes=[];var bgColor=_getBackgroundColor2(node,bgNodes,shadowOutlineEmMax);var fgColor=_getForegroundColor(node,false,bgColor,options);var contrast2=null;var contrastContributor=null;var shadowColor=null;if(shadowColors.length===0){contrast2=get_contrast_default(bgColor,fgColor);}else if(fgColor&&bgColor){shadowColor=[].concat(_toConsumableArray(shadowColors),[bgColor]).reduce(_flattenShadowColors);var fgBgContrast=get_contrast_default(bgColor,fgColor);var bgShContrast=get_contrast_default(bgColor,shadowColor);var fgShContrast=get_contrast_default(shadowColor,fgColor);contrast2=Math.max(fgBgContrast,bgShContrast,fgShContrast);if(contrast2!==fgBgContrast){contrastContributor=bgShContrast>fgShContrast?'shadowOnBgColor':'fgOnShadowColor';}}var isValid=contrast2>expected;if(typeof minThreshold==='number'&&(typeof contrast2!=='number'||contrast2<minThreshold)||typeof maxThreshold==='number'&&(typeof contrast2!=='number'||contrast2>maxThreshold)){this.data({contrastRatio:contrast2});return true;}var truncatedResult=Math.floor(contrast2*100)/100;var missing;if(bgColor===null){missing=incomplete_data_default.get('bgColor');}else if(!isValid){missing=contrastContributor;}var equalRatio=truncatedResult===1;var shortTextContent=visibleText.length===1;if(equalRatio){missing=incomplete_data_default.set('bgColor','equalRatio');}else if(!isValid&&shortTextContent&&!ignoreLength){missing='shortTextContent';}this.data({fgColor:fgColor?fgColor.toHexString():void 0,bgColor:bgColor?bgColor.toHexString():void 0,contrastRatio:truncatedResult,fontSize:''.concat((fontSize*72/96).toFixed(1),'pt (').concat(fontSize,'px)'),fontWeight:bold?'bold':'normal',messageKey:missing,expectedContrastRatio:expected+':1',shadowColor:shadowColor?shadowColor.toHexString():void 0});if(fgColor===null||bgColor===null||equalRatio||shortTextContent&&!ignoreLength&&!isValid){missing=null;incomplete_data_default.clear();this.relatedNodes(bgNodes);return void 0;}if(!isValid){this.relatedNodes(bgNodes);}return isValid;}function findPseudoElement(vNode,_ref113){var _ref113$pseudoSizeThr=_ref113.pseudoSizeThreshold,pseudoSizeThreshold=_ref113$pseudoSizeThr===void 0?.25:_ref113$pseudoSizeThr,_ref113$ignorePseudo=_ref113.ignorePseudo,ignorePseudo=_ref113$ignorePseudo===void 0?false:_ref113$ignorePseudo;if(ignorePseudo){return;}var rect=vNode.boundingClientRect;var minimumSize=rect.width*rect.height*pseudoSizeThreshold;do{var beforeSize=getPseudoElementArea(vNode.actualNode,':before');var afterSize=getPseudoElementArea(vNode.actualNode,':after');if(beforeSize+afterSize>minimumSize){return vNode;}}while(vNode=vNode.parent);}var getPseudoElementArea=memoize_default(function getPseudoElementArea2(node,pseudo){var style=window.getComputedStyle(node,pseudo);var matchPseudoStyle=function matchPseudoStyle(prop,value){return style.getPropertyValue(prop)===value;};if(matchPseudoStyle('content','none')||matchPseudoStyle('display','none')||matchPseudoStyle('visibility','hidden')||matchPseudoStyle('position','absolute')===false){return 0;}if(get_own_background_color_default(style).alpha===0&&matchPseudoStyle('background-image','none')){return 0;}var pseudoWidth=parseUnit(style.getPropertyValue('width'));var pseudoHeight=parseUnit(style.getPropertyValue('height'));if(pseudoWidth.unit!=='px'||pseudoHeight.unit!=='px'){return pseudoWidth.value===0||pseudoHeight.value===0?0:Infinity;}return pseudoWidth.value*pseudoHeight.value;});function textIsEmojis(visibleText){var options={nonBmp:true};var hasUnicodeChars=has_unicode_default(visibleText,options);var hasNonUnicodeChars=sanitize_default(remove_unicode_default(visibleText,options))==='';return hasUnicodeChars&&hasNonUnicodeChars;}function parseUnit(str){var unitRegex=/^([0-9.]+)([a-z]+)$/i;var _ref114=str.match(unitRegex)||[],_ref115=_slicedToArray(_ref114,3),_ref115$=_ref115[1],value=_ref115$===void 0?'':_ref115$,_ref115$2=_ref115[2],unit=_ref115$2===void 0?'':_ref115$2;return{value:parseFloat(value),unit:unit.toLowerCase()};}function getContrast2(color1,color2){var c1lum=color1.getRelativeLuminance();var c2lum=color2.getRelativeLuminance();return(Math.max(c1lum,c2lum)+.05)/(Math.min(c1lum,c2lum)+.05);}var blockLike2=['block','list-item','table','flex','grid','inline-block'];function isBlock2(elm){var display2=window.getComputedStyle(elm).getPropertyValue('display');return blockLike2.indexOf(display2)!==-1||display2.substr(0,6)==='table-';}function linkInTextBlockEvaluate(node,options){var requiredContrastRatio=options.requiredContrastRatio,allowSameColor=options.allowSameColor;if(isBlock2(node)){return false;}var parentBlock=get_composed_parent_default(node);while(parentBlock&&parentBlock.nodeType===1&&!isBlock2(parentBlock)){parentBlock=get_composed_parent_default(parentBlock);}if(!parentBlock){return void 0;}this.relatedNodes([parentBlock]);var nodeColor=_getForegroundColor(node);var parentColor=_getForegroundColor(parentBlock);var nodeBackgroundColor=_getBackgroundColor2(node);var parentBackgroundColor=_getBackgroundColor2(parentBlock);var textContrast=nodeColor&&parentColor?getContrast2(nodeColor,parentColor):void 0;if(textContrast){textContrast=Math.floor(textContrast*100)/100;}if(textContrast&&textContrast>=requiredContrastRatio){return true;}var backgroundContrast=nodeBackgroundColor&&parentBackgroundColor?getContrast2(nodeBackgroundColor,parentBackgroundColor):void 0;if(backgroundContrast){backgroundContrast=Math.floor(backgroundContrast*100)/100;}if(backgroundContrast&&backgroundContrast>=requiredContrastRatio){return true;}if(!backgroundContrast){var _incomplete_data_defa;var reason=(_incomplete_data_defa=incomplete_data_default.get('bgColor'))!==null&&_incomplete_data_defa!==void 0?_incomplete_data_defa:'bgContrast';this.data({messageKey:reason});incomplete_data_default.clear();return void 0;}if(!textContrast){return void 0;}if(allowSameColor&&textContrast===1&&backgroundContrast===1){return true;}if(textContrast===1&&backgroundContrast>1){this.data({messageKey:'bgContrast',contrastRatio:backgroundContrast,requiredContrastRatio:requiredContrastRatio,nodeBackgroundColor:nodeBackgroundColor?nodeBackgroundColor.toHexString():void 0,parentBackgroundColor:parentBackgroundColor?parentBackgroundColor.toHexString():void 0});return false;}this.data({messageKey:'fgContrast',contrastRatio:textContrast,requiredContrastRatio:requiredContrastRatio,nodeColor:nodeColor?nodeColor.toHexString():void 0,parentColor:parentColor?parentColor.toHexString():void 0});return false;}var link_in_text_block_evaluate_default=linkInTextBlockEvaluate;var blockLike3=['block','list-item','table','flex','grid','inline-block'];function linkInTextBlockStyleEvaluate(node){if(isBlock3(node)){return false;}var parentBlock=get_composed_parent_default(node);while(parentBlock&&parentBlock.nodeType===1&&!isBlock3(parentBlock)){parentBlock=get_composed_parent_default(parentBlock);}if(!parentBlock){return void 0;}this.relatedNodes([parentBlock]);if(element_is_distinct_default(node,parentBlock)){return true;}if(hasPseudoContent(node)){this.data({messageKey:'pseudoContent'});return void 0;}return false;}function isBlock3(elm){var display2=window.getComputedStyle(elm).getPropertyValue('display');return blockLike3.indexOf(display2)!==-1||display2.substr(0,6)==='table-';}function hasPseudoContent(node){for(var _i33=0,_arr4=['before','after'];_i33<_arr4.length;_i33++){var pseudo=_arr4[_i33];var style=window.getComputedStyle(node,':'.concat(pseudo));var content=style.getPropertyValue('content');if(content!=='none'){return true;}}return false;}function autocompleteAppropriateEvaluate(node,options,virtualNode){if(virtualNode.props.nodeName!=='input'){return true;}var number=['text','search','number','tel'];var url=['text','search','url'];var allowedTypesMap={bday:['text','search','date'],email:['text','search','email'],username:['text','search','email'],'street-address':['text'],tel:['text','search','tel'],'tel-country-code':['text','search','tel'],'tel-national':['text','search','tel'],'tel-area-code':['text','search','tel'],'tel-local':['text','search','tel'],'tel-local-prefix':['text','search','tel'],'tel-local-suffix':['text','search','tel'],'tel-extension':['text','search','tel'],'cc-number':number,'cc-exp':['text','search','month','tel'],'cc-exp-month':number,'cc-exp-year':number,'cc-csc':number,'transaction-amount':number,'bday-day':number,'bday-month':number,'bday-year':number,'new-password':['text','search','password'],'current-password':['text','search','password'],url:url,photo:url,impp:url};if(_typeof(options)==='object'){Object.keys(options).forEach(function(key){if(!allowedTypesMap[key]){allowedTypesMap[key]=[];}allowedTypesMap[key]=allowedTypesMap[key].concat(options[key]);});}var autocompleteAttr=virtualNode.attr('autocomplete');var autocompleteTerms=autocompleteAttr.split(/\\s+/g).map(function(term){return term.toLowerCase();});var purposeTerm=autocompleteTerms[autocompleteTerms.length-1];if(_autocomplete.stateTerms.includes(purposeTerm)){return true;}var allowedTypes=allowedTypesMap[purposeTerm];var type2=virtualNode.hasAttr('type')?sanitize_default(virtualNode.attr('type')).toLowerCase():'text';type2=valid_input_type_default().includes(type2)?type2:'text';if(typeof allowedTypes==='undefined'){return type2==='text';}return allowedTypes.includes(type2);}var autocomplete_appropriate_evaluate_default=autocompleteAppropriateEvaluate;function autocompleteValidEvaluate(node,options,virtualNode){var autocomplete2=virtualNode.attr('autocomplete')||'';return is_valid_autocomplete_default(autocomplete2,options);}var autocomplete_valid_evaluate_default=autocompleteValidEvaluate;function attrNonSpaceContentEvaluate(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var vNode=arguments.length>2?arguments[2]:undefined;if(!options.attribute||typeof options.attribute!=='string'){throw new TypeError('attr-non-space-content requires options.attribute to be a string');}if(!vNode.hasAttr(options.attribute)){this.data({messageKey:'noAttr'});return false;}var attribute=vNode.attr(options.attribute);var attributeIsEmpty=!sanitize_default(attribute);if(attributeIsEmpty){this.data({messageKey:'emptyAttr'});return false;}return true;}var attr_non_space_content_evaluate_default=attrNonSpaceContentEvaluate;function pageHasElmAfter(results){var elmUsedAnywhere=results.some(function(frameResult){return frameResult.result===true;});if(elmUsedAnywhere){results.forEach(function(result){result.result=true;});}return results;}var has_descendant_after_default=pageHasElmAfter;function hasDescendant(node,options,virtualNode){if(!options||!options.selector||typeof options.selector!=='string'){throw new TypeError('has-descendant requires options.selector to be a string');}if(options.passForModal&&is_modal_open_default()){return true;}var matchingElms=query_selector_all_filter_default(virtualNode,options.selector,function(vNode){return _isVisibleToScreenReaders(vNode);});this.relatedNodes(matchingElms.map(function(vNode){return vNode.actualNode;}));return matchingElms.length>0;}var has_descendant_evaluate_default=hasDescendant;function hasTextContentEvaluate(node,options,virtualNode){try{return sanitize_default(subtree_text_default(virtualNode))!=='';}catch(e){return void 0;}}function matchesDefinitionEvaluate(_,options,virtualNode){return matches_default2(virtualNode,options.matcher);}var matches_definition_evaluate_default=matchesDefinitionEvaluate;function pageNoDuplicateAfter(results){return results.filter(function(checkResult){return checkResult.data!=='ignored';});}var page_no_duplicate_after_default=pageNoDuplicateAfter;function pageNoDuplicateEvaluate(node,options,virtualNode){if(!options||!options.selector||typeof options.selector!=='string'){throw new TypeError('page-no-duplicate requires options.selector to be a string');}var key='page-no-duplicate;'+options.selector;if(cache_default.get(key)){this.data('ignored');return;}cache_default.set(key,true);var elms=query_selector_all_filter_default(axe._tree[0],options.selector,function(elm){return _isVisibleToScreenReaders(elm);});if(typeof options.nativeScopeFilter==='string'){elms=elms.filter(function(elm){return elm.actualNode.hasAttribute('role')||!find_up_virtual_default(elm,options.nativeScopeFilter);});}if(typeof options.role==='string'){elms=elms.filter(function(elm){return get_role_default(elm)===options.role;});}this.relatedNodes(elms.filter(function(elm){return elm!==virtualNode;}).map(function(elm){return elm.actualNode;}));return elms.length<=1;}var page_no_duplicate_evaluate_default=pageNoDuplicateEvaluate;function accesskeysAfter(results){var seen={};return results.filter(function(r){if(!r.data){return false;}var key=r.data.toUpperCase();if(!seen[key]){seen[key]=r;r.relatedNodes=[];return true;}seen[key].relatedNodes.push(r.relatedNodes[0]);return false;}).map(function(r){r.result=!!r.relatedNodes.length;return r;});}var accesskeys_after_default=accesskeysAfter;function accesskeysEvaluate(node,options,vNode){if(!_isHiddenForEveryone(vNode)){this.data(vNode.attr('accesskey'));this.relatedNodes([node]);}return true;}var accesskeys_evaluate_default=accesskeysEvaluate;function focusableContentEvaluate(node,options,virtualNode){var tabbableElements=virtualNode.tabbableElements;if(!tabbableElements){return false;}var tabbableContentElements=tabbableElements.filter(function(el){return el!==virtualNode;});return tabbableContentElements.length>0;}var focusable_content_evaluate_default=focusableContentEvaluate;function focusableDisabledEvaluate(node,options,virtualNode){var elementsThatCanBeDisabled=['button','fieldset','input','select','textarea'];var tabbableElements=virtualNode.tabbableElements;if(!tabbableElements||!tabbableElements.length){return true;}var relatedNodes=tabbableElements.filter(function(vNode){return elementsThatCanBeDisabled.includes(vNode.props.nodeName);});this.relatedNodes(relatedNodes.map(function(vNode){return vNode.actualNode;}));if(relatedNodes.length===0||is_modal_open_default()){return true;}return relatedNodes.every(function(vNode){var pointerEvents=vNode.getComputedStylePropertyValue('pointer-events');var width=parseInt(vNode.getComputedStylePropertyValue('width'));var height=parseInt(vNode.getComputedStylePropertyValue('height'));return vNode.actualNode.onfocus||(width===0||height===0)&&pointerEvents==='none';})?void 0:false;}var focusable_disabled_evaluate_default=focusableDisabledEvaluate;function focusableElementEvaluate(node,options,virtualNode){if(virtualNode.hasAttr('contenteditable')&&isContenteditable(virtualNode)){return true;}return _isInTabOrder(virtualNode);function isContenteditable(vNode){var contenteditable=vNode.attr('contenteditable');if(contenteditable==='true'||contenteditable===''){return true;}if(contenteditable==='false'){return false;}var ancestor=closest_default(virtualNode.parent,'[contenteditable]');if(!ancestor){return false;}return isContenteditable(ancestor);}}var focusable_element_evaluate_default=focusableElementEvaluate;function focusableModalOpenEvaluate(node,options,virtualNode){var tabbableElements=virtualNode.tabbableElements.map(function(_ref116){var actualNode=_ref116.actualNode;return actualNode;});if(!tabbableElements||!tabbableElements.length){return true;}if(is_modal_open_default()){this.relatedNodes(tabbableElements);return void 0;}return true;}var focusable_modal_open_evaluate_default=focusableModalOpenEvaluate;function focusableNoNameEvaluate(node,options,virtualNode){var tabIndex=virtualNode.attr('tabindex');var inFocusOrder=_isFocusable(virtualNode)&&tabIndex>-1;if(!inFocusOrder){return false;}try{return!_accessibleTextVirtual(virtualNode);}catch(e){return void 0;}}var focusable_no_name_evaluate_default=focusableNoNameEvaluate;function focusableNotTabbableEvaluate(node,options,virtualNode){var elementsThatCanBeDisabled=['button','fieldset','input','select','textarea'];var tabbableElements=virtualNode.tabbableElements;if(!tabbableElements||!tabbableElements.length){return true;}var relatedNodes=tabbableElements.filter(function(vNode){return!elementsThatCanBeDisabled.includes(vNode.props.nodeName);});this.relatedNodes(relatedNodes.map(function(vNode){return vNode.actualNode;}));if(relatedNodes.length===0||is_modal_open_default()){return true;}return relatedNodes.every(function(vNode){var pointerEvents=vNode.getComputedStylePropertyValue('pointer-events');var width=parseInt(vNode.getComputedStylePropertyValue('width'));var height=parseInt(vNode.getComputedStylePropertyValue('height'));return vNode.actualNode.onfocus||(width===0||height===0)&&pointerEvents==='none';})?void 0:false;}var focusable_not_tabbable_evaluate_default=focusableNotTabbableEvaluate;function frameFocusableContentEvaluate(node,options,virtualNode){if(!virtualNode.children){return void 0;}try{return!virtualNode.children.some(function(child){return focusableDescendants(child);});}catch(e){return void 0;}}function focusableDescendants(vNode){if(_isInTabOrder(vNode)){return true;}if(!vNode.children){if(vNode.props.nodeType===1){throw new Error('Cannot determine children');}return false;}return vNode.children.some(function(child){return focusableDescendants(child);});}function landmarkIsTopLevelEvaluate(node){var landmarks=get_aria_roles_by_type_default('landmark');var parent=get_composed_parent_default(node);var nodeRole=get_role_default(node);this.data({role:nodeRole});while(parent){var role=parent.getAttribute('role');if(!role&&parent.nodeName.toUpperCase()!=='FORM'){role=implicit_role_default(parent);}if(role&&landmarks.includes(role)&&!(role==='main'&&nodeRole==='complementary')){return false;}parent=get_composed_parent_default(parent);}return true;}var landmark_is_top_level_evaluate_default=landmarkIsTopLevelEvaluate;function noFocusableContentEvaluate(node,options,virtualNode){if(!virtualNode.children){return void 0;}try{var focusableDescendants2=getFocusableDescendants(virtualNode);if(!focusableDescendants2.length){return true;}var notHiddenElements=focusableDescendants2.filter(usesUnreliableHidingStrategy);if(notHiddenElements.length>0){this.data({messageKey:'notHidden'});this.relatedNodes(notHiddenElements);}else{this.relatedNodes(focusableDescendants2);}return false;}catch(e){return void 0;}}function getFocusableDescendants(vNode){if(!vNode.children){if(vNode.props.nodeType===1){throw new Error('Cannot determine children');}return[];}var retVal=[];vNode.children.forEach(function(child){if(get_role_type_default(child)==='widget'&&_isFocusable(child)){retVal.push(child);}else{retVal.push.apply(retVal,_toConsumableArray(getFocusableDescendants(child)));}});return retVal;}function usesUnreliableHidingStrategy(vNode){var tabIndex=parseInt(vNode.attr('tabindex'),10);return!isNaN(tabIndex)&&tabIndex<0;}function tabindexEvaluate(node,options,virtualNode){var tabIndex=parseInt(virtualNode.attr('tabindex'),10);return isNaN(tabIndex)?true:tabIndex<=0;}var tabindex_evaluate_default=tabindexEvaluate;function altSpaceValueEvaluate(node,options,virtualNode){var alt=virtualNode.attr('alt');var isOnlySpace=/^\\s+$/;return typeof alt==='string'&&isOnlySpace.test(alt);}var alt_space_value_evaluate_default=altSpaceValueEvaluate;function duplicateImgLabelEvaluate(node,options,virtualNode){if(['none','presentation'].includes(get_role_default(virtualNode))){return false;}var parentVNode=closest_default(virtualNode,options.parentSelector);if(!parentVNode){return false;}var visibleText=visible_virtual_default(parentVNode,true).toLowerCase();if(visibleText===''){return false;}return visibleText===_accessibleTextVirtual(virtualNode).toLowerCase();}var duplicate_img_label_evaluate_default=duplicateImgLabelEvaluate;function explicitEvaluate(node,options,virtualNode){var _this7=this;if(!virtualNode.attr('id')){return false;}if(!virtualNode.actualNode){return void 0;}var root=get_root_node_default2(virtualNode.actualNode);var id=escape_selector_default(virtualNode.attr('id'));var labels=Array.from(root.querySelectorAll('label[for=\"'.concat(id,'\"]')));this.relatedNodes(labels);if(!labels.length){return false;}try{return labels.some(function(label3){if(!_isVisibleOnScreen(label3)){return true;}else{var explicitLabel=sanitize_default(accessible_text_default(label3,{inControlContext:true,startNode:virtualNode}));_this7.data({explicitLabel:explicitLabel});return!!explicitLabel;}});}catch(e){return void 0;}}var explicit_evaluate_default=explicitEvaluate;function helpSameAsLabelEvaluate(node,options,virtualNode){var labelText2=label_virtual_default2(virtualNode),check=node.getAttribute('title');if(!labelText2){return false;}if(!check){check='';if(node.getAttribute('aria-describedby')){var ref=idrefs_default(node,'aria-describedby');check=ref.map(function(thing){return thing?accessible_text_default(thing):'';}).join('');}}return sanitize_default(check)===sanitize_default(labelText2);}var help_same_as_label_evaluate_default=helpSameAsLabelEvaluate;function hiddenExplicitLabelEvaluate(node,options,virtualNode){if(virtualNode.hasAttr('id')){if(!virtualNode.actualNode){return void 0;}var root=get_root_node_default2(node);var _id4=escape_selector_default(node.getAttribute('id'));var label3=root.querySelector('label[for=\"'.concat(_id4,'\"]'));if(label3&&!_isVisibleToScreenReaders(label3)){var name;try{name=_accessibleTextVirtual(virtualNode).trim();}catch(e){return void 0;}var isNameEmpty=name==='';return isNameEmpty;}}return false;}var hidden_explicit_label_evaluate_default=hiddenExplicitLabelEvaluate;function implicitEvaluate(node,options,virtualNode){try{var label3=closest_default(virtualNode,'label');if(label3){var implicitLabel=sanitize_default(_accessibleTextVirtual(label3,{inControlContext:true,startNode:virtualNode}));if(label3.actualNode){this.relatedNodes([label3.actualNode]);}this.data({implicitLabel:implicitLabel});return!!implicitLabel;}return false;}catch(e){return void 0;}}var implicit_evaluate_default=implicitEvaluate;function isStringContained(compare,compareWith){var curatedCompareWith=curateString(compareWith);var curatedCompare=curateString(compare);if(!curatedCompareWith||!curatedCompare){return false;}return curatedCompareWith.includes(curatedCompare);}function curateString(str){var noUnicodeStr=remove_unicode_default(str,{emoji:true,nonBmp:true,punctuations:true});return sanitize_default(noUnicodeStr);}function labelContentNameMismatchEvaluate(node,options,virtualNode){var _options$occurrenceTh;var pixelThreshold=options===null||options===void 0?void 0:options.pixelThreshold;var occurrenceThreshold=(_options$occurrenceTh=options===null||options===void 0?void 0:options.occurrenceThreshold)!==null&&_options$occurrenceTh!==void 0?_options$occurrenceTh:options===null||options===void 0?void 0:options.occuranceThreshold;var accText=accessible_text_default(node).toLowerCase();if(is_human_interpretable_default(accText)<1){return void 0;}var visibleText=sanitize_default(subtree_text_default(virtualNode,{subtreeDescendant:true,ignoreIconLigature:true,pixelThreshold:pixelThreshold,occurrenceThreshold:occurrenceThreshold})).toLowerCase();if(!visibleText){return true;}if(is_human_interpretable_default(visibleText)<1){if(isStringContained(visibleText,accText)){return true;}return void 0;}return isStringContained(visibleText,accText);}var label_content_name_mismatch_evaluate_default=labelContentNameMismatchEvaluate;function multipleLabelEvaluate(node){var id=escape_selector_default(node.getAttribute('id'));var parent=node.parentNode;var root=get_root_node_default2(node);root=root.documentElement||root;var labels=Array.from(root.querySelectorAll('label[for=\"'.concat(id,'\"]')));if(labels.length){labels=labels.filter(function(label3){return!_isHiddenForEveryone(label3);});}while(parent){if(parent.nodeName.toUpperCase()==='LABEL'&&labels.indexOf(parent)===-1){labels.push(parent);}parent=parent.parentNode;}this.relatedNodes(labels);if(labels.length>1){var ATVisibleLabels=labels.filter(function(label3){return _isVisibleToScreenReaders(label3);});if(ATVisibleLabels.length>1){return void 0;}var labelledby=idrefs_default(node,'aria-labelledby');return!labelledby.includes(ATVisibleLabels[0])?void 0:false;}return false;}var multiple_label_evaluate_default=multipleLabelEvaluate;function titleOnlyEvaluate(node,options,virtualNode){var labelText2=label_virtual_default2(virtualNode);var title=title_text_default(virtualNode);var ariaDescribedBy=virtualNode.attr('aria-describedby');return!labelText2&&!!(title||ariaDescribedBy);}var title_only_evaluate_default=titleOnlyEvaluate;function landmarkIsUniqueAfter(results){var uniqueLandmarks=[];return results.filter(function(currentResult){var findMatch=function findMatch(someResult){return currentResult.data.role===someResult.data.role&&currentResult.data.accessibleText===someResult.data.accessibleText;};var matchedResult=uniqueLandmarks.find(findMatch);if(matchedResult){matchedResult.result=false;matchedResult.relatedNodes.push(currentResult.relatedNodes[0]);return false;}uniqueLandmarks.push(currentResult);currentResult.relatedNodes=[];return true;});}var landmark_is_unique_after_default=landmarkIsUniqueAfter;function landmarkIsUniqueEvaluate(node,options,virtualNode){var role=get_role_default(node);var accessibleText2=_accessibleTextVirtual(virtualNode);accessibleText2=accessibleText2?accessibleText2.toLowerCase():null;this.data({role:role,accessibleText:accessibleText2});this.relatedNodes([node]);return true;}var landmark_is_unique_evaluate_default=landmarkIsUniqueEvaluate;function hasValue(value){return(value||'').trim()!=='';}function hasLangEvaluate(node,options,virtualNode){var xhtml=typeof document!=='undefined'?is_xhtml_default(document):false;if(options.attributes.includes('xml:lang')&&options.attributes.includes('lang')&&hasValue(virtualNode.attr('xml:lang'))&&!hasValue(virtualNode.attr('lang'))&&!xhtml){this.data({messageKey:'noXHTML'});return false;}var hasLang=options.attributes.some(function(name){return hasValue(virtualNode.attr(name));});if(!hasLang){this.data({messageKey:'noLang'});return false;}return true;}var has_lang_evaluate_default=hasLangEvaluate;function validLangEvaluate(node,options,virtualNode){var invalid=[];options.attributes.forEach(function(langAttr){var langVal=virtualNode.attr(langAttr);if(typeof langVal!=='string'){return;}var baselangVal=get_base_lang_default(langVal);var invalidLang=options.value?!options.value.map(get_base_lang_default).includes(baselangVal):!valid_langs_default(baselangVal);if(baselangVal!==''&&invalidLang||langVal!==''&&!sanitize_default(langVal)){invalid.push(langAttr+'=\"'+virtualNode.attr(langAttr)+'\"');}});if(!invalid.length){return false;}if(virtualNode.props.nodeName!=='html'&&!_hasLangText(virtualNode)){return false;}this.data(invalid);return true;}var valid_lang_evaluate_default=validLangEvaluate;function xmlLangMismatchEvaluate(node,options,vNode){var primaryLangValue=get_base_lang_default(vNode.attr('lang'));var primaryXmlLangValue=get_base_lang_default(vNode.attr('xml:lang'));return primaryLangValue===primaryXmlLangValue;}var xml_lang_mismatch_evaluate_default=xmlLangMismatchEvaluate;function dlitemEvaluate(node){var parent=get_composed_parent_default(node);var parentTagName=parent.nodeName.toUpperCase();var parentRole=get_explicit_role_default(parent);if(parentTagName==='DIV'&&['presentation','none',null].includes(parentRole)){parent=get_composed_parent_default(parent);parentTagName=parent.nodeName.toUpperCase();parentRole=get_explicit_role_default(parent);}if(parentTagName!=='DL'){return false;}if(!parentRole||['presentation','none','list'].includes(parentRole)){return true;}return false;}var dlitem_evaluate_default=dlitemEvaluate;function invalidChildrenEvaluate(node){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var virtualNode=arguments.length>2?arguments[2]:undefined;var relatedNodes=[];var issues=[];if(!virtualNode.children){return void 0;}var vChildren=mapWithNested(virtualNode.children);while(vChildren.length){var _vChild$actualNode;var _vChildren$shift=vChildren.shift(),vChild=_vChildren$shift.vChild,nested=_vChildren$shift.nested;if(options.divGroups&&!nested&&isDivGroup(vChild)){if(!vChild.children){return void 0;}var vGrandChildren=mapWithNested(vChild.children,true);vChildren.push.apply(vChildren,_toConsumableArray(vGrandChildren));continue;}var issue=getInvalidSelector(vChild,nested,options);if(!issue){continue;}if(!issues.includes(issue)){issues.push(issue);}if((vChild===null||vChild===void 0?void 0:(_vChild$actualNode=vChild.actualNode)===null||_vChild$actualNode===void 0?void 0:_vChild$actualNode.nodeType)===1){relatedNodes.push(vChild.actualNode);}}if(issues.length===0){return false;}this.data({values:issues.join(', ')});this.relatedNodes(relatedNodes);return true;}function getInvalidSelector(vChild,nested,_ref117){var _ref117$validRoles=_ref117.validRoles,validRoles=_ref117$validRoles===void 0?[]:_ref117$validRoles,_ref117$validNodeName=_ref117.validNodeNames,validNodeNames=_ref117$validNodeName===void 0?[]:_ref117$validNodeName;var _vChild$props=vChild.props,nodeName2=_vChild$props.nodeName,nodeType=_vChild$props.nodeType,nodeValue=_vChild$props.nodeValue;var selector=nested?'div > ':'';if(nodeType===3&&nodeValue.trim()!==''){return selector+'#text';}if(nodeType!==1||!_isVisibleToScreenReaders(vChild)){return false;}var role=get_explicit_role_default(vChild);if(role){return validRoles.includes(role)?false:selector+'[role='.concat(role,']');}else{return validNodeNames.includes(nodeName2)?false:selector+nodeName2;}}function isDivGroup(vNode){return vNode.props.nodeName==='div'&&get_explicit_role_default(vNode)===null;}function mapWithNested(vNodes){var nested=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return vNodes.map(function(vChild){return{vChild:vChild,nested:nested};});}function listitemEvaluate(node,options,virtualNode){var parent=virtualNode.parent;if(!parent){return void 0;}var parentNodeName=parent.props.nodeName;var parentRole=get_explicit_role_default(parent);if(['presentation','none','list'].includes(parentRole)){return true;}if(parentRole&&is_valid_role_default(parentRole)){this.data({messageKey:'roleNotValid'});return false;}return['ul','ol','menu'].includes(parentNodeName);}function onlyDlitemsEvaluate(node,options,virtualNode){var ALLOWED_ROLES=['definition','term','list'];var base={badNodes:[],hasNonEmptyTextNode:false};var content=virtualNode.children.reduce(function(vNodes,child){var actualNode=child.actualNode;if(actualNode.nodeName.toUpperCase()==='DIV'&&get_role_default(actualNode)===null){return vNodes.concat(child.children);}return vNodes.concat(child);},[]);var result=content.reduce(function(out,childNode){var actualNode=childNode.actualNode;var tagName=actualNode.nodeName.toUpperCase();if(actualNode.nodeType===1&&_isVisibleToScreenReaders(actualNode)){var explicitRole2=get_explicit_role_default(actualNode);if(tagName!=='DT'&&tagName!=='DD'||explicitRole2){if(!ALLOWED_ROLES.includes(explicitRole2)){out.badNodes.push(actualNode);}}}else if(actualNode.nodeType===3&&actualNode.nodeValue.trim()!==''){out.hasNonEmptyTextNode=true;}return out;},base);if(result.badNodes.length){this.relatedNodes(result.badNodes);}return!!result.badNodes.length||result.hasNonEmptyTextNode;}function onlyListitemsEvaluate(node,options,virtualNode){var hasNonEmptyTextNode=false;var atLeastOneListitem=false;var isEmpty=true;var badNodes=[];var badRoleNodes=[];var badRoles=[];virtualNode.children.forEach(function(vNode){var actualNode=vNode.actualNode;if(actualNode.nodeType===3&&actualNode.nodeValue.trim()!==''){hasNonEmptyTextNode=true;return;}if(actualNode.nodeType!==1||!_isVisibleToScreenReaders(actualNode)){return;}isEmpty=false;var isLi=actualNode.nodeName.toUpperCase()==='LI';var role=get_role_default(vNode);var isListItemRole=role==='listitem';if(!isLi&&!isListItemRole){badNodes.push(actualNode);}if(isLi&&!isListItemRole){badRoleNodes.push(actualNode);if(!badRoles.includes(role)){badRoles.push(role);}}if(isListItemRole){atLeastOneListitem=true;}});if(hasNonEmptyTextNode||badNodes.length){this.relatedNodes(badNodes);return true;}if(isEmpty||atLeastOneListitem){return false;}this.relatedNodes(badRoleNodes);this.data({messageKey:'roleNotValid',roles:badRoles.join(', ')});return true;}var only_listitems_evaluate_default=onlyListitemsEvaluate;function structuredDlitemsEvaluate(node,options,virtualNode){var children=virtualNode.children;if(!children||!children.length){return false;}var hasDt=false,hasDd=false,nodeName2;for(var i=0;i<children.length;i++){nodeName2=children[i].props.nodeName.toUpperCase();if(nodeName2==='DT'){hasDt=true;}if(hasDt&&nodeName2==='DD'){return false;}if(nodeName2==='DD'){hasDd=true;}}return hasDt||hasDd;}var structured_dlitems_evaluate_default=structuredDlitemsEvaluate;function captionEvaluate(node,options,virtualNode){var tracks=query_selector_all_default(virtualNode,'track');var hasCaptions=tracks.some(function(vNode){return(vNode.attr('kind')||'').toLowerCase()==='captions';});return hasCaptions?false:void 0;}var caption_evaluate_default=captionEvaluate;var joinStr=' > ';function frameTestedAfter(results){var iframes={};return results.filter(function(result){var frameResult=result.node.ancestry[result.node.ancestry.length-1]!=='html';if(frameResult){var ancestry2=result.node.ancestry.flat(Infinity).join(joinStr);iframes[ancestry2]=result;return true;}var ancestry=result.node.ancestry.slice(0,result.node.ancestry.length-1).flat(Infinity).join(joinStr);if(iframes[ancestry]){iframes[ancestry].result=true;}return false;});}var frame_tested_after_default=frameTestedAfter;function frameTestedEvaluate(node,options){return options.isViolation?false:void 0;}var frame_tested_evaluate_default=frameTestedEvaluate;function noAutoplayAudioEvaluate(node,options){if(!node.duration){console.warn('axe.utils.preloadMedia did not load metadata');return void 0;}var _options$allowedDurat=options.allowedDuration,allowedDuration=_options$allowedDurat===void 0?3:_options$allowedDurat;var playableDuration=getPlayableDuration(node);if(playableDuration<=allowedDuration&&!node.hasAttribute('loop')){return true;}if(!node.hasAttribute('controls')){return false;}return true;function getPlayableDuration(elm){if(!elm.currentSrc){return 0;}var playbackRange=getPlaybackRange(elm.currentSrc);if(!playbackRange){return Math.abs(elm.duration-(elm.currentTime||0));}if(playbackRange.length===1){return Math.abs(elm.duration-playbackRange[0]);}return Math.abs(playbackRange[1]-playbackRange[0]);}function getPlaybackRange(src){var match=src.match(/#t=(.*)/);if(!match){return;}var _match=_slicedToArray(match,2),value=_match[1];var ranges=value.split(',');return ranges.map(function(range2){if(/:/.test(range2)){return convertHourMinSecToSeconds(range2);}return parseFloat(range2);});}function convertHourMinSecToSeconds(hhMmSs){var parts=hhMmSs.split(':');var secs=0;var mins=1;while(parts.length>0){secs+=mins*parseInt(parts.pop(),10);mins*=60;}return parseFloat(secs);}}var no_autoplay_audio_evaluate_default=noAutoplayAudioEvaluate;function cssOrientationLockEvaluate(node,options,virtualNode,context){var _ref118=context||{},_ref118$cssom=_ref118.cssom,cssom=_ref118$cssom===void 0?void 0:_ref118$cssom;var _ref119=options||{},_ref119$degreeThresho=_ref119.degreeThreshold,degreeThreshold=_ref119$degreeThresho===void 0?0:_ref119$degreeThresho;if(!cssom||!cssom.length){return void 0;}var isLocked=false;var relatedElements=[];var rulesGroupByDocumentFragment=groupCssomByDocument(cssom);var _loop8=function _loop8(){var key=_Object$keys3[_i34];var _rulesGroupByDocument=rulesGroupByDocumentFragment[key],root=_rulesGroupByDocument.root,rules=_rulesGroupByDocument.rules;var orientationRules=rules.filter(isMediaRuleWithOrientation);if(!orientationRules.length){return'continue';}orientationRules.forEach(function(_ref120){var cssRules=_ref120.cssRules;Array.from(cssRules).forEach(function(cssRule){var locked=getIsOrientationLocked(cssRule);if(locked&&cssRule.selectorText.toUpperCase()!=='HTML'){var elms=Array.from(root.querySelectorAll(cssRule.selectorText))||[];relatedElements=relatedElements.concat(elms);}isLocked=isLocked||locked;});});};for(var _i34=0,_Object$keys3=Object.keys(rulesGroupByDocumentFragment);_i34<_Object$keys3.length;_i34++){var _ret6=_loop8();if(_ret6==='continue'){continue;}}if(!isLocked){return true;}if(relatedElements.length){this.relatedNodes(relatedElements);}return false;function groupCssomByDocument(cssObjectModel){return cssObjectModel.reduce(function(out,_ref121){var sheet=_ref121.sheet,root=_ref121.root,shadowId=_ref121.shadowId;var key=shadowId?shadowId:'topDocument';if(!out[key]){out[key]={root:root,rules:[]};}if(!sheet||!sheet.cssRules){return out;}var rules=Array.from(sheet.cssRules);out[key].rules=out[key].rules.concat(rules);return out;},{});}function isMediaRuleWithOrientation(_ref122){var type2=_ref122.type,cssText=_ref122.cssText;if(type2!==4){return false;}return /orientation:\\s*landscape/i.test(cssText)||/orientation:\\s*portrait/i.test(cssText);}function getIsOrientationLocked(_ref123){var selectorText=_ref123.selectorText,style=_ref123.style;if(!selectorText||style.length<=0){return false;}var transformStyle=style.transform||style.webkitTransform||style.msTransform||false;if(!transformStyle&&!style.rotate){return false;}var transformDegrees=getTransformDegrees(transformStyle);var rotateDegrees=getRotationInDegrees('rotate',style.rotate);var degrees=transformDegrees+rotateDegrees;if(!degrees){return false;}degrees=Math.abs(degrees);if(Math.abs(degrees-180)%180<=degreeThreshold){return false;}return Math.abs(degrees-90)%90<=degreeThreshold;}function getTransformDegrees(transformStyle){if(!transformStyle){return 0;}var matches4=transformStyle.match(/(rotate|rotateZ|rotate3d|matrix|matrix3d)\\(([^)]+)\\)(?!.*(rotate|rotateZ|rotate3d|matrix|matrix3d))/);if(!matches4){return 0;}var _matches2=_slicedToArray(matches4,3),transformFn=_matches2[1],transformFnValue=_matches2[2];return getRotationInDegrees(transformFn,transformFnValue);}function getRotationInDegrees(transformFunction,transformFnValue){switch(transformFunction){case'rotate':case'rotateZ':return getAngleInDegrees(transformFnValue);case'rotate3d':var _transformFnValue$spl=transformFnValue.split(',').map(function(value){return value.trim();}),_transformFnValue$spl2=_slicedToArray(_transformFnValue$spl,4),z=_transformFnValue$spl2[2],angleWithUnit=_transformFnValue$spl2[3];if(parseInt(z)===0){return;}return getAngleInDegrees(angleWithUnit);case'matrix':case'matrix3d':return getAngleInDegreesFromMatrixTransform(transformFnValue);default:return 0;}}function getAngleInDegrees(angleWithUnit){var _ref124=angleWithUnit.match(/(deg|grad|rad|turn)/)||[],_ref125=_slicedToArray(_ref124,1),unit=_ref125[0];if(!unit){return 0;}var angle=parseFloat(angleWithUnit.replace(unit,''));switch(unit){case'rad':return convertRadToDeg(angle);case'grad':return convertGradToDeg(angle);case'turn':return convertTurnToDeg(angle);case'deg':default:return parseInt(angle);}}function getAngleInDegreesFromMatrixTransform(transformFnValue){var values=transformFnValue.split(',');if(values.length<=6){var _values=_slicedToArray(values,2),a2=_values[0],b3=_values[1];var radians=Math.atan2(parseFloat(b3),parseFloat(a2));return convertRadToDeg(radians);}var sinB=parseFloat(values[8]);var b2=Math.asin(sinB);var cosB=Math.cos(b2);var rotateZRadians=Math.acos(parseFloat(values[0])/cosB);return convertRadToDeg(rotateZRadians);}function convertRadToDeg(radians){return Math.round(radians*(180/Math.PI));}function convertGradToDeg(grad){grad=grad%400;if(grad<0){grad+=400;}return Math.round(grad/400*360);}function convertTurnToDeg(turn){return Math.round(360/(1/turn));}}var css_orientation_lock_evaluate_default=cssOrientationLockEvaluate;function metaViewportScaleEvaluate(node,options,virtualNode){var _ref126=options||{},_ref126$scaleMinimum=_ref126.scaleMinimum,scaleMinimum=_ref126$scaleMinimum===void 0?2:_ref126$scaleMinimum,_ref126$lowerBound=_ref126.lowerBound,lowerBound=_ref126$lowerBound===void 0?false:_ref126$lowerBound;var content=virtualNode.attr('content')||'';if(!content){return true;}var result=content.split(/[;,]/).reduce(function(out,item){var contentValue=item.trim();if(!contentValue){return out;}var _contentValue$split=contentValue.split('='),_contentValue$split2=_slicedToArray(_contentValue$split,2),key=_contentValue$split2[0],value=_contentValue$split2[1];if(!key||!value){return out;}var curatedKey=key.toLowerCase().trim();var curatedValue=value.toLowerCase().trim();if(curatedKey==='maximum-scale'&&curatedValue==='yes'){curatedValue=1;}if(curatedKey==='maximum-scale'&&parseFloat(curatedValue)<0){return out;}out[curatedKey]=curatedValue;return out;},{});if(lowerBound&&result['maximum-scale']&&parseFloat(result['maximum-scale'])<lowerBound){return true;}if(!lowerBound&&result['user-scalable']==='no'){this.data('user-scalable=no');return false;}var userScalableAsFloat=parseFloat(result['user-scalable']);if(!lowerBound&&result['user-scalable']&&(userScalableAsFloat||userScalableAsFloat===0)&&userScalableAsFloat>-1&&userScalableAsFloat<1){this.data('user-scalable');return false;}if(result['maximum-scale']&&parseFloat(result['maximum-scale'])<scaleMinimum){this.data('maximum-scale');return false;}return true;}var meta_viewport_scale_evaluate_default=metaViewportScaleEvaluate;var roundingMargin2=.05;function targetOffsetEvaluate(node,options,vNode){var minOffset=(options===null||options===void 0?void 0:options.minOffset)||24;var closeNeighbors=[];var closestOffset=minOffset;var _iterator19=_createForOfIteratorHelper(_findNearbyElms(vNode,minOffset)),_step19;try{for(_iterator19.s();!(_step19=_iterator19.n()).done;){var vNeighbor=_step19.value;if(get_role_type_default(vNeighbor)!=='widget'||!_isFocusable(vNeighbor)){continue;}var offset=roundToSingleDecimal(_getOffset(vNode,vNeighbor,minOffset/2))*2;if(offset+roundingMargin2>=minOffset){continue;}closestOffset=Math.min(closestOffset,offset);closeNeighbors.push(vNeighbor);}}catch(err){_iterator19.e(err);}finally{_iterator19.f();}if(closeNeighbors.length===0){this.data({closestOffset:closestOffset,minOffset:minOffset});return true;}this.relatedNodes(closeNeighbors.map(function(_ref127){var actualNode=_ref127.actualNode;return actualNode;}));if(!closeNeighbors.some(_isInTabOrder)){this.data({messageKey:'nonTabbableNeighbor',closestOffset:closestOffset,minOffset:minOffset});return void 0;}this.data({closestOffset:closestOffset,minOffset:minOffset});return _isInTabOrder(vNode)?false:void 0;}function roundToSingleDecimal(num){return Math.round(num*10)/10;}function targetSize(node,options,vNode){var minSize=(options===null||options===void 0?void 0:options.minSize)||24;var nodeRect=vNode.boundingClientRect;var hasMinimumSize=_rectHasMinimumSize.bind(null,minSize);var nearbyElms=_findNearbyElms(vNode);var overflowingContent=filterOverflowingContent(vNode,nearbyElms);var _filterByElmsOverlap=filterByElmsOverlap(vNode,nearbyElms),fullyObscuringElms=_filterByElmsOverlap.fullyObscuringElms,partialObscuringElms=_filterByElmsOverlap.partialObscuringElms;if(fullyObscuringElms.length&&!overflowingContent.length){this.relatedNodes(mapActualNodes(fullyObscuringElms));this.data({messageKey:'obscured'});return true;}var negativeOutcome=_isInTabOrder(vNode)?false:void 0;if(!hasMinimumSize(nodeRect)&&!overflowingContent.length){this.data(_extends({minSize:minSize},toDecimalSize(nodeRect)));return negativeOutcome;}var obscuredWidgets=filterFocusableWidgets(partialObscuringElms);var largestInnerRect=getLargestUnobscuredArea(vNode,obscuredWidgets);if(overflowingContent.length){if(fullyObscuringElms.length||!hasMinimumSize(largestInnerRect||nodeRect)){this.data({minSize:minSize,messageKey:'contentOverflow'});this.relatedNodes(mapActualNodes(overflowingContent));return void 0;}}if(obscuredWidgets.length!==0&&!hasMinimumSize(largestInnerRect)){var allTabbable=obscuredWidgets.every(_isInTabOrder);var messageKey='partiallyObscured'.concat(allTabbable?'':'NonTabbable');this.data(_extends({messageKey:messageKey,minSize:minSize},toDecimalSize(largestInnerRect)));this.relatedNodes(mapActualNodes(obscuredWidgets));return allTabbable?negativeOutcome:void 0;}this.data(_extends({minSize:minSize},toDecimalSize(largestInnerRect||nodeRect)));this.relatedNodes(mapActualNodes(obscuredWidgets));return true;}function filterOverflowingContent(vNode,nearbyElms){return nearbyElms.filter(function(nearbyElm){return!isEnclosedRect2(nearbyElm,vNode)&&isDescendantNotInTabOrder2(vNode,nearbyElm);});}function filterByElmsOverlap(vNode,nearbyElms){var fullyObscuringElms=[];var partialObscuringElms=[];var _iterator20=_createForOfIteratorHelper(nearbyElms),_step20;try{for(_iterator20.s();!(_step20=_iterator20.n()).done;){var vNeighbor=_step20.value;if(!isDescendantNotInTabOrder2(vNode,vNeighbor)&&_hasVisualOverlap(vNode,vNeighbor)&&getCssPointerEvents(vNeighbor)!=='none'){if(isEnclosedRect2(vNode,vNeighbor)){fullyObscuringElms.push(vNeighbor);}else{partialObscuringElms.push(vNeighbor);}}}}catch(err){_iterator20.e(err);}finally{_iterator20.f();}return{fullyObscuringElms:fullyObscuringElms,partialObscuringElms:partialObscuringElms};}function getLargestUnobscuredArea(vNode,obscuredNodes){var nodeRect=vNode.boundingClientRect;if(obscuredNodes.length===0){return null;}var obscuringRects=obscuredNodes.map(function(_ref128){var rect=_ref128.boundingClientRect;return rect;});var unobscuredRects=_splitRects(nodeRect,obscuringRects);return getLargestRect2(unobscuredRects);}function getLargestRect2(rects,minSize){return rects.reduce(function(rectA,rectB){var rectAisMinimum=_rectHasMinimumSize(minSize,rectA);var rectBisMinimum=_rectHasMinimumSize(minSize,rectB);if(rectAisMinimum!==rectBisMinimum){return rectAisMinimum?rectA:rectB;}var areaA=rectA.width*rectA.height;var areaB=rectB.width*rectB.height;return areaA>areaB?rectA:rectB;});}function filterFocusableWidgets(vNodes){return vNodes.filter(function(vNode){return get_role_type_default(vNode)==='widget'&&_isFocusable(vNode);});}function isEnclosedRect2(vNodeA,vNodeB){var rectA=vNodeA.boundingClientRect;var rectB=vNodeB.boundingClientRect;return rectA.top>=rectB.top&&rectA.left>=rectB.left&&rectA.bottom<=rectB.bottom&&rectA.right<=rectB.right;}function getCssPointerEvents(vNode){return vNode.getComputedStylePropertyValue('pointer-events');}function toDecimalSize(rect){return{width:Math.round(rect.width*10)/10,height:Math.round(rect.height*10)/10};}function isDescendantNotInTabOrder2(vAncestor,vNode){return vAncestor.actualNode.contains(vNode.actualNode)&&!_isInTabOrder(vNode);}function mapActualNodes(vNodes){return vNodes.map(function(_ref129){var actualNode=_ref129.actualNode;return actualNode;});}function headingOrderAfter(results){var headingOrder=getHeadingOrder(results);results.forEach(function(result){result.result=getHeadingOrderOutcome(result,headingOrder);});return results;}function getHeadingOrderOutcome(result,headingOrder){var _headingOrder$index$l,_headingOrder$index,_headingOrder$level,_headingOrder;var index=findHeadingOrderIndex(headingOrder,result.node.ancestry);var currLevel=(_headingOrder$index$l=(_headingOrder$index=headingOrder[index])===null||_headingOrder$index===void 0?void 0:_headingOrder$index.level)!==null&&_headingOrder$index$l!==void 0?_headingOrder$index$l:-1;var prevLevel=(_headingOrder$level=(_headingOrder=headingOrder[index-1])===null||_headingOrder===void 0?void 0:_headingOrder.level)!==null&&_headingOrder$level!==void 0?_headingOrder$level:-1;if(index===0){return true;}if(currLevel===-1){return void 0;}return currLevel-prevLevel<=1;}function getHeadingOrder(results){results=_toConsumableArray(results);results.sort(function(_ref130,_ref131){var nodeA=_ref130.node;var nodeB=_ref131.node;return nodeA.ancestry.length-nodeB.ancestry.length;});var headingOrder=results.reduce(mergeHeadingOrder,[]);return headingOrder.filter(function(_ref132){var level=_ref132.level;return level!==-1;});}function mergeHeadingOrder(mergedHeadingOrder,result){var _result$data;var frameHeadingOrder=(_result$data=result.data)===null||_result$data===void 0?void 0:_result$data.headingOrder;var frameAncestry=shortenArray(result.node.ancestry,1);if(!frameHeadingOrder){return mergedHeadingOrder;}var normalizedHeadingOrder=frameHeadingOrder.map(function(heading){return addFrameToHeadingAncestry(heading,frameAncestry);});var index=getFrameIndex(mergedHeadingOrder,frameAncestry);if(index===-1){mergedHeadingOrder.push.apply(mergedHeadingOrder,_toConsumableArray(normalizedHeadingOrder));}else{mergedHeadingOrder.splice.apply(mergedHeadingOrder,[index,0].concat(_toConsumableArray(normalizedHeadingOrder)));}return mergedHeadingOrder;}function getFrameIndex(headingOrder,frameAncestry){while(frameAncestry.length){var index=findHeadingOrderIndex(headingOrder,frameAncestry);if(index!==-1){return index;}frameAncestry=shortenArray(frameAncestry,1);}return-1;}function findHeadingOrderIndex(headingOrder,ancestry){return headingOrder.findIndex(function(heading){return _matchAncestry(heading.ancestry,ancestry);});}function addFrameToHeadingAncestry(heading,frameAncestry){var ancestry=frameAncestry.concat(heading.ancestry);return _extends({},heading,{ancestry:ancestry});}function shortenArray(arr,spliceLength){return arr.slice(0,arr.length-spliceLength);}function getLevel(vNode){var role=get_role_default(vNode);var headingRole=role&&role.includes('heading');var ariaHeadingLevel=vNode.attr('aria-level');var ariaLevel=parseInt(ariaHeadingLevel,10);var _ref133=vNode.props.nodeName.match(/h(\\d)/)||[],_ref134=_slicedToArray(_ref133,2),headingLevel=_ref134[1];if(!headingRole){return-1;}if(headingLevel&&!ariaHeadingLevel){return parseInt(headingLevel,10);}if(isNaN(ariaLevel)||ariaLevel<1){if(headingLevel){return parseInt(headingLevel,10);}return 2;}if(ariaLevel){return ariaLevel;}return-1;}function headingOrderEvaluate(){var headingOrder=cache_default.get('headingOrder');if(headingOrder){return true;}var selector='h1, h2, h3, h4, h5, h6, [role=heading], iframe, frame';var vNodes=query_selector_all_filter_default(axe._tree[0],selector,_isVisibleToScreenReaders);headingOrder=vNodes.map(function(vNode){return{ancestry:[_getAncestry(vNode.actualNode)],level:getLevel(vNode)};});this.data({headingOrder:headingOrder});cache_default.set('headingOrder',vNodes);return true;}var heading_order_evaluate_default=headingOrderEvaluate;function isIdenticalObject(a2,b2){if(!a2||!b2){return false;}var aProps=Object.getOwnPropertyNames(a2);var bProps=Object.getOwnPropertyNames(b2);if(aProps.length!==bProps.length){return false;}var result=aProps.every(function(propName){var aValue=a2[propName];var bValue=b2[propName];if(_typeof(aValue)!==_typeof(bValue)){return false;}if(_typeof(aValue)==='object'||_typeof(bValue)==='object'){return isIdenticalObject(aValue,bValue);}return aValue===bValue;});return result;}function identicalLinksSamePurposeAfter(results){if(results.length<2){return results;}var incompleteResults=results.filter(function(_ref135){var result=_ref135.result;return result!==void 0;});var uniqueResults=[];var nameMap={};var _loop9=function _loop9(index){var _currentResult$relate;var currentResult=incompleteResults[index];var _currentResult$data=currentResult.data,name=_currentResult$data.name,urlProps=_currentResult$data.urlProps;if(nameMap[name]){return'continue';}var sameNameResults=incompleteResults.filter(function(_ref136,resultNum){var data=_ref136.data;return data.name===name&&resultNum!==index;});var isSameUrl=sameNameResults.every(function(_ref137){var data=_ref137.data;return isIdenticalObject(data.urlProps,urlProps);});if(sameNameResults.length&&!isSameUrl){currentResult.result=void 0;}currentResult.relatedNodes=[];(_currentResult$relate=currentResult.relatedNodes).push.apply(_currentResult$relate,_toConsumableArray(sameNameResults.map(function(node){return node.relatedNodes[0];})));nameMap[name]=sameNameResults;uniqueResults.push(currentResult);};for(var index=0;index<incompleteResults.length;index++){var _ret7=_loop9(index);if(_ret7==='continue'){continue;}}return uniqueResults;}var identical_links_same_purpose_after_default=identicalLinksSamePurposeAfter;var commons_exports={};__export(commons_exports,{aria:function aria(){return aria_exports;},color:function color(){return color_exports;},dom:function dom(){return dom_exports;},forms:function forms(){return forms_exports;},matches:function matches(){return matches_default2;},math:function math(){return math_exports;},standards:function standards(){return standards_exports;},table:function table(){return table_exports;},text:function text(){return text_exports;},utils:function utils(){return utils_exports;}});var forms_exports={};__export(forms_exports,{isAriaCombobox:function isAriaCombobox(){return is_aria_combobox_default;},isAriaListbox:function isAriaListbox(){return is_aria_listbox_default;},isAriaRange:function isAriaRange(){return is_aria_range_default;},isAriaTextbox:function isAriaTextbox(){return is_aria_textbox_default;},isDisabled:function isDisabled(){return is_disabled_default;},isNativeSelect:function isNativeSelect(){return is_native_select_default;},isNativeTextbox:function isNativeTextbox(){return is_native_textbox_default;}});var disabledNodeNames=['fieldset','button','select','input','textarea'];function isDisabled(virtualNode){var disabledState=virtualNode._isDisabled;if(typeof disabledState==='boolean'){return disabledState;}var nodeName2=virtualNode.props.nodeName;var ariaDisabled=virtualNode.attr('aria-disabled');if(disabledNodeNames.includes(nodeName2)&&virtualNode.hasAttr('disabled')){disabledState=true;}else if(ariaDisabled){disabledState=ariaDisabled.toLowerCase()==='true';}else if(virtualNode.parent){disabledState=isDisabled(virtualNode.parent);}else{disabledState=false;}virtualNode._isDisabled=disabledState;return disabledState;}var is_disabled_default=isDisabled;var table_exports={};__export(table_exports,{getAllCells:function getAllCells(){return get_all_cells_default;},getCellPosition:function getCellPosition(){return get_cell_position_default;},getHeaders:function getHeaders(){return get_headers_default;},getScope:function getScope(){return _getScope;},isColumnHeader:function isColumnHeader(){return is_column_header_default;},isDataCell:function isDataCell(){return is_data_cell_default;},isDataTable:function isDataTable(){return is_data_table_default;},isHeader:function isHeader(){return is_header_default;},isRowHeader:function isRowHeader(){return is_row_header_default;},toArray:function toArray(){return to_grid_default;},toGrid:function toGrid(){return to_grid_default;},traverse:function traverse(){return traverse_default;}});function getAllCells(tableElm){var rowIndex,cellIndex,rowLength,cellLength;var cells=[];for(rowIndex=0,rowLength=tableElm.rows.length;rowIndex<rowLength;rowIndex++){for(cellIndex=0,cellLength=tableElm.rows[rowIndex].cells.length;cellIndex<cellLength;cellIndex++){cells.push(tableElm.rows[rowIndex].cells[cellIndex]);}}return cells;}var get_all_cells_default=getAllCells;function traverseForHeaders(headerType,position,tableGrid){var property=headerType==='row'?'_rowHeaders':'_colHeaders';var predicate=headerType==='row'?is_row_header_default:is_column_header_default;var startCell=tableGrid[position.y][position.x];var colspan=startCell.colSpan-1;var rowspanAttr=startCell.getAttribute('rowspan');var rowspanValue=parseInt(rowspanAttr)===0||startCell.rowspan===0?tableGrid.length:startCell.rowSpan;var rowspan=rowspanValue-1;var rowStart=position.y+rowspan;var colStart=position.x+colspan;var rowEnd=headerType==='row'?position.y:0;var colEnd=headerType==='row'?0:position.x;var headers;var cells=[];for(var row=rowStart;row>=rowEnd&&!headers;row--){for(var col=colStart;col>=colEnd;col--){var cell=tableGrid[row]?tableGrid[row][col]:void 0;if(!cell){continue;}var vNode=axe.utils.getNodeFromTree(cell);if(vNode[property]){headers=vNode[property];break;}cells.push(cell);}}headers=(headers||[]).concat(cells.filter(predicate));cells.forEach(function(tableCell){var vNode=axe.utils.getNodeFromTree(tableCell);vNode[property]=headers;});return headers;}function getHeaders(cell,tableGrid){if(cell.getAttribute('headers')){var headers=idrefs_default(cell,'headers');if(headers.filter(function(header){return header;}).length){return headers;}}if(!tableGrid){tableGrid=to_grid_default(find_up_default(cell,'table'));}var position=get_cell_position_default(cell,tableGrid);var rowHeaders=traverseForHeaders('row',position,tableGrid);var colHeaders=traverseForHeaders('col',position,tableGrid);return[].concat(rowHeaders,colHeaders).reverse();}var get_headers_default=getHeaders;function isDataCell(cell){if(!cell.children.length&&!cell.textContent.trim()){return false;}var role=cell.getAttribute('role');if(is_valid_role_default(role)){return['cell','gridcell'].includes(role);}else{return cell.nodeName.toUpperCase()==='TD';}}var is_data_cell_default=isDataCell;function isDataTable(node){var role=(node.getAttribute('role')||'').toLowerCase();if((role==='presentation'||role==='none')&&!_isFocusable(node)){return false;}if(node.getAttribute('contenteditable')==='true'||find_up_default(node,'[contenteditable=\"true\"]')){return true;}if(role==='grid'||role==='treegrid'||role==='table'){return true;}if(get_role_type_default(role)==='landmark'){return true;}if(node.getAttribute('datatable')==='0'){return false;}if(node.getAttribute('summary')){return true;}if(node.tHead||node.tFoot||node.caption){return true;}for(var childIndex=0,childLength=node.children.length;childIndex<childLength;childIndex++){if(node.children[childIndex].nodeName.toUpperCase()==='COLGROUP'){return true;}}var cells=0;var rowLength=node.rows.length;var row,cell;var hasBorder=false;for(var rowIndex=0;rowIndex<rowLength;rowIndex++){row=node.rows[rowIndex];for(var cellIndex=0,cellLength=row.cells.length;cellIndex<cellLength;cellIndex++){cell=row.cells[cellIndex];if(cell.nodeName.toUpperCase()==='TH'){return true;}if(!hasBorder&&(cell.offsetWidth!==cell.clientWidth||cell.offsetHeight!==cell.clientHeight)){hasBorder=true;}if(cell.getAttribute('scope')||cell.getAttribute('headers')||cell.getAttribute('abbr')){return true;}if(['columnheader','rowheader'].includes((cell.getAttribute('role')||'').toLowerCase())){return true;}if(cell.children.length===1&&cell.children[0].nodeName.toUpperCase()==='ABBR'){return true;}cells++;}}if(node.getElementsByTagName('table').length){return false;}if(rowLength<2){return false;}var sampleRow=node.rows[Math.ceil(rowLength/2)];if(sampleRow.cells.length===1&&sampleRow.cells[0].colSpan===1){return false;}if(sampleRow.cells.length>=5){return true;}if(hasBorder){return true;}var bgColor,bgImage;for(rowIndex=0;rowIndex<rowLength;rowIndex++){row=node.rows[rowIndex];if(bgColor&&bgColor!==window.getComputedStyle(row).getPropertyValue('background-color')){return true;}else{bgColor=window.getComputedStyle(row).getPropertyValue('background-color');}if(bgImage&&bgImage!==window.getComputedStyle(row).getPropertyValue('background-image')){return true;}else{bgImage=window.getComputedStyle(row).getPropertyValue('background-image');}}if(rowLength>=20){return true;}if(get_element_coordinates_default(node).width>get_viewport_size_default(window).width*.95){return false;}if(cells<10){return false;}if(node.querySelector('object, embed, iframe, applet')){return false;}return true;}var is_data_table_default=isDataTable;function isHeader(cell){if(is_column_header_default(cell)||is_row_header_default(cell)){return true;}if(cell.getAttribute('id')){var _id5=escape_selector_default(cell.getAttribute('id'));return!!document.querySelector('[headers~=\"'.concat(_id5,'\"]'));}return false;}var is_header_default=isHeader;function traverseTable(dir,position,tableGrid,callback){var result;var cell=tableGrid[position.y]?tableGrid[position.y][position.x]:void 0;if(!cell){return[];}if(typeof callback==='function'){result=callback(cell,position,tableGrid);if(result===true){return[cell];}}result=traverseTable(dir,{x:position.x+dir.x,y:position.y+dir.y},tableGrid,callback);result.unshift(cell);return result;}function traverse(dir,startPos,tableGrid,callback){if(Array.isArray(startPos)){callback=tableGrid;tableGrid=startPos;startPos={x:0,y:0};}if(typeof dir==='string'){switch(dir){case'left':dir={x:-1,y:0};break;case'up':dir={x:0,y:-1};break;case'right':dir={x:1,y:0};break;case'down':dir={x:0,y:1};break;}}return traverseTable(dir,{x:startPos.x+dir.x,y:startPos.y+dir.y},tableGrid,callback);}var traverse_default=traverse;function identicalLinksSamePurposeEvaluate(node,options,virtualNode){var accText=text_exports.accessibleTextVirtual(virtualNode);var name=text_exports.sanitize(text_exports.removeUnicode(accText,{emoji:true,nonBmp:true,punctuations:true})).toLowerCase();if(!name){return void 0;}var afterData={name:name,urlProps:dom_exports.urlPropsFromAttribute(node,'href')};this.data(afterData);this.relatedNodes([node]);return true;}var identical_links_same_purpose_evaluate_default=identicalLinksSamePurposeEvaluate;function internalLinkPresentEvaluate(node,options,virtualNode){var links=query_selector_all_default(virtualNode,'a[href]');return links.some(function(vLink){return /^#[^/!]/.test(vLink.attr('href'));});}var internal_link_present_evaluate_default=internalLinkPresentEvaluate;var separatorRegex=/[;,\\s]/;var validRedirectNumRegex=/^[0-9.]+$/;function metaRefreshEvaluate(node,options,virtualNode){var _ref138=options||{},minDelay=_ref138.minDelay,maxDelay=_ref138.maxDelay;var content=(virtualNode.attr('content')||'').trim();var _content$split=content.split(separatorRegex),_content$split2=_slicedToArray(_content$split,1),redirectStr=_content$split2[0];if(!redirectStr.match(validRedirectNumRegex)){return true;}var redirectDelay=parseFloat(redirectStr);this.data({redirectDelay:redirectDelay});if(typeof minDelay==='number'&&redirectDelay<=options.minDelay){return true;}if(typeof maxDelay==='number'&&redirectDelay>options.maxDelay){return true;}return false;}function normalizeFontWeight(weight){switch(weight){case'lighter':return 100;case'normal':return 400;case'bold':return 700;case'bolder':return 900;}weight=parseInt(weight);return!isNaN(weight)?weight:400;}function getTextContainer(elm){var nextNode=elm;var outerText=elm.textContent.trim();var innerText=outerText;while(innerText===outerText&&nextNode!==void 0){var _i35=-1;elm=nextNode;if(elm.children.length===0){return elm;}do{_i35++;innerText=elm.children[_i35].textContent.trim();}while(innerText===''&&_i35+1<elm.children.length);nextNode=elm.children[_i35];}return elm;}function getStyleValues(node){var style=window.getComputedStyle(getTextContainer(node));return{fontWeight:normalizeFontWeight(style.getPropertyValue('font-weight')),fontSize:parseInt(style.getPropertyValue('font-size')),isItalic:style.getPropertyValue('font-style')==='italic'};}function isHeaderStyle(styleA,styleB,margins){return margins.reduce(function(out,margin){return out||(!margin.size||styleA.fontSize/margin.size>styleB.fontSize)&&(!margin.weight||styleA.fontWeight-margin.weight>styleB.fontWeight)&&(!margin.italic||styleA.isItalic&&!styleB.isItalic);},false);}function pAsHeadingEvaluate(node,options,virtualNode){var siblings=Array.from(node.parentNode.children);var currentIndex=siblings.indexOf(node);options=options||{};var margins=options.margins||[];var nextSibling=siblings.slice(currentIndex+1).find(function(elm){return elm.nodeName.toUpperCase()==='P';});var prevSibling=siblings.slice(0,currentIndex).reverse().find(function(elm){return elm.nodeName.toUpperCase()==='P';});var currStyle=getStyleValues(node);var nextStyle=nextSibling?getStyleValues(nextSibling):null;var prevStyle=prevSibling?getStyleValues(prevSibling):null;var optionsPassLength=options.passLength;var optionsFailLength=options.failLength;var headingLength=node.textContent.trim().length;var paragraphLength=nextSibling===null||nextSibling===void 0?void 0:nextSibling.textContent.trim().length;if(headingLength>paragraphLength*optionsPassLength){return true;}if(!nextStyle||!isHeaderStyle(currStyle,nextStyle,margins)){return true;}var blockquote=find_up_virtual_default(virtualNode,'blockquote');if(blockquote&&blockquote.nodeName.toUpperCase()==='BLOCKQUOTE'){return void 0;}if(prevStyle&&!isHeaderStyle(currStyle,prevStyle,margins)){return void 0;}if(headingLength>paragraphLength*optionsFailLength){return void 0;}return false;}var p_as_heading_evaluate_default=pAsHeadingEvaluate;function regionAfter(results){var iframeResults=results.filter(function(r){return r.data.isIframe;});results.forEach(function(r){if(r.result||r.node.ancestry.length===1){return;}var frameAncestry=r.node.ancestry.slice(0,-1);var _iterator21=_createForOfIteratorHelper(iframeResults),_step21;try{for(_iterator21.s();!(_step21=_iterator21.n()).done;){var iframeResult=_step21.value;if(_matchAncestry(frameAncestry,iframeResult.node.ancestry)){r.result=iframeResult.result;break;}}}catch(err){_iterator21.e(err);}finally{_iterator21.f();}});iframeResults.forEach(function(r){if(!r.result){r.result=true;}});return results;}var region_after_default=regionAfter;var implicitAriaLiveRoles=['alert','log','status'];function regionEvaluate(node,options,virtualNode){this.data({isIframe:['iframe','frame'].includes(virtualNode.props.nodeName)});var regionlessNodes=cache_default.get('regionlessNodes',function(){return getRegionlessNodes(options);});return!regionlessNodes.includes(virtualNode);}function getRegionlessNodes(options){var regionlessNodes=findRegionlessElms(axe._tree[0],options).map(function(vNode){while(vNode.parent&&!vNode.parent._hasRegionDescendant&&vNode.parent.actualNode!==document.body){vNode=vNode.parent;}return vNode;}).filter(function(vNode,index,array){return array.indexOf(vNode)===index;});return regionlessNodes;}function findRegionlessElms(virtualNode,options){var node=virtualNode.actualNode;if(get_role_default(virtualNode)==='button'||isRegion(virtualNode,options)||['iframe','frame'].includes(virtualNode.props.nodeName)||_isSkipLink(virtualNode.actualNode)&&get_element_by_reference_default(virtualNode.actualNode,'href')||!_isVisibleToScreenReaders(node)){var vNode=virtualNode;while(vNode){vNode._hasRegionDescendant=true;vNode=vNode.parent;}if(['iframe','frame'].includes(virtualNode.props.nodeName)){return[virtualNode];}return[];}else if(node!==document.body&&has_content_default(node,true)){return[virtualNode];}else{return virtualNode.children.filter(function(_ref139){var actualNode=_ref139.actualNode;return actualNode.nodeType===1;}).map(function(vNode){return findRegionlessElms(vNode,options);}).reduce(function(a2,b2){return a2.concat(b2);},[]);}}function isRegion(virtualNode,options){var node=virtualNode.actualNode;var role=get_role_default(virtualNode);var ariaLive=(node.getAttribute('aria-live')||'').toLowerCase().trim();var landmarkRoles2=get_aria_roles_by_type_default('landmark');if(['assertive','polite'].includes(ariaLive)||implicitAriaLiveRoles.includes(role)){return true;}if(landmarkRoles2.includes(role)){return true;}if(options.regionMatcher&&matches_default2(virtualNode,options.regionMatcher)){return true;}return false;}function skipLinkEvaluate(node){var target=get_element_by_reference_default(node,'href');if(target){return _isVisibleToScreenReaders(target)||void 0;}return false;}var skip_link_evaluate_default=skipLinkEvaluate;function uniqueFrameTitleAfter(results){var titles={};results.forEach(function(r){titles[r.data]=titles[r.data]!==void 0?++titles[r.data]:0;});results.forEach(function(r){r.result=!!titles[r.data];});return results;}var unique_frame_title_after_default=uniqueFrameTitleAfter;function uniqueFrameTitleEvaluate(node,options,vNode){var title=sanitize_default(vNode.attr('title')).toLowerCase();this.data(title);return true;}var unique_frame_title_evaluate_default=uniqueFrameTitleEvaluate;function duplicateIdAfter(results){var uniqueIds=[];return results.filter(function(r){if(uniqueIds.indexOf(r.data)===-1){uniqueIds.push(r.data);return true;}return false;});}var duplicate_id_after_default=duplicateIdAfter;function duplicateIdEvaluate(node){var id=node.getAttribute('id').trim();if(!id){return true;}var root=get_root_node_default2(node);var matchingNodes=Array.from(root.querySelectorAll('[id=\"'.concat(escape_selector_default(id),'\"]'))).filter(function(foundNode){return foundNode!==node;});if(matchingNodes.length){this.relatedNodes(matchingNodes);}this.data(id);return matchingNodes.length===0;}var duplicate_id_evaluate_default=duplicateIdEvaluate;function ariaLabelEvaluate(node,options,virtualNode){return!!sanitize_default(_arialabelText(virtualNode));}var aria_label_evaluate_default=ariaLabelEvaluate;function ariaLabelledbyEvaluate(node,options,virtualNode){try{return!!sanitize_default(arialabelledby_text_default(virtualNode));}catch(e){return void 0;}}var aria_labelledby_evaluate_default=ariaLabelledbyEvaluate;function avoidInlineSpacingEvaluate(node,options){var overriddenProperties=options.cssProperties.filter(function(property){if(node.style.getPropertyPriority(property)==='important'){return property;}});if(overriddenProperties.length>0){this.data(overriddenProperties);return false;}return true;}var avoid_inline_spacing_evaluate_default=avoidInlineSpacingEvaluate;function docHasTitleEvaluate(){var title=document.title;return!!sanitize_default(title);}var doc_has_title_evaluate_default=docHasTitleEvaluate;function existsEvaluate(){return void 0;}var exists_evaluate_default=existsEvaluate;function hasAltEvaluate(node,options,virtualNode){var nodeName2=virtualNode.props.nodeName;if(!['img','input','area'].includes(nodeName2)){return false;}return virtualNode.hasAttr('alt');}var has_alt_evaluate_default=hasAltEvaluate;function inlineStyleProperty(node,options){var cssProperty=options.cssProperty,absoluteValues=options.absoluteValues,minValue=options.minValue,maxValue=options.maxValue,_options$normalValue=options.normalValue,normalValue=_options$normalValue===void 0?0:_options$normalValue,noImportant=options.noImportant,multiLineOnly=options.multiLineOnly;if(!noImportant&&node.style.getPropertyPriority(cssProperty)!=='important'||multiLineOnly&&!_isMultiline(node)){return true;}var data={};if(typeof minValue==='number'){data.minValue=minValue;}if(typeof maxValue==='number'){data.maxValue=maxValue;}var declaredPropValue=node.style.getPropertyValue(cssProperty);if(['inherit','unset','revert','revert-layer'].includes(declaredPropValue)){this.data(_extends({value:declaredPropValue},data));return true;}var value=getNumberValue(node,{absoluteValues:absoluteValues,cssProperty:cssProperty,normalValue:normalValue});this.data(_extends({value:value},data));if(typeof value!=='number'){return void 0;}if((typeof minValue!=='number'||value>=minValue)&&(typeof maxValue!=='number'||value<=maxValue)){return true;}return false;}function getNumberValue(domNode,_ref140){var cssProperty=_ref140.cssProperty,absoluteValues=_ref140.absoluteValues,normalValue=_ref140.normalValue;var computedStyle=window.getComputedStyle(domNode);var cssPropValue=computedStyle.getPropertyValue(cssProperty);if(cssPropValue==='normal'){return normalValue;}var parsedValue=parseFloat(cssPropValue);if(absoluteValues){return parsedValue;}var fontSize=parseFloat(computedStyle.getPropertyValue('font-size'));var value=Math.round(parsedValue/fontSize*100)/100;if(isNaN(value)){return cssPropValue;}return value;}function isOnScreenEvaluate(node){return _isVisibleOnScreen(node);}var is_on_screen_evaluate_default=isOnScreenEvaluate;function nonEmptyIfPresentEvaluate(node,options,virtualNode){var nodeName2=virtualNode.props.nodeName;var type2=(virtualNode.attr('type')||'').toLowerCase();var label3=virtualNode.attr('value');if(label3){this.data({messageKey:'has-label'});}if(nodeName2==='input'&&['submit','reset'].includes(type2)){return label3===null;}return false;}var non_empty_if_present_evaluate_default=nonEmptyIfPresentEvaluate;function presentationalRoleEvaluate(node,options,virtualNode){var explicitRole2=get_explicit_role_default(virtualNode);if(['presentation','none'].includes(explicitRole2)&&['iframe','frame'].includes(virtualNode.props.nodeName)&&virtualNode.hasAttr('title')){this.data({messageKey:'iframe',nodeName:virtualNode.props.nodeName});return false;}var role=get_role_default(virtualNode);if(['presentation','none'].includes(role)){this.data({role:role});return true;}if(!['presentation','none'].includes(explicitRole2)){return false;}var hasGlobalAria=get_global_aria_attrs_default().some(function(attr){return virtualNode.hasAttr(attr);});var focusable=_isFocusable(virtualNode);var messageKey;if(hasGlobalAria&&!focusable){messageKey='globalAria';}else if(!hasGlobalAria&&focusable){messageKey='focusable';}else{messageKey='both';}this.data({messageKey:messageKey,role:role});return false;}function svgNonEmptyTitleEvaluate(node,options,virtualNode){if(!virtualNode.children){return void 0;}var titleNode=virtualNode.children.find(function(_ref141){var props=_ref141.props;return props.nodeName==='title';});if(!titleNode){this.data({messageKey:'noTitle'});return false;}try{var titleText2=subtree_text_default(titleNode,{includeHidden:true}).trim();if(titleText2===''){this.data({messageKey:'emptyTitle'});return false;}}catch(e){return void 0;}return true;}var svg_non_empty_title_evaluate_default=svgNonEmptyTitleEvaluate;function captionFakedEvaluate(node){var table=to_grid_default(node);var firstRow=table[0];if(table.length<=1||firstRow.length<=1||node.rows.length<=1){return true;}return firstRow.reduce(function(out,curr,i){return out||curr!==firstRow[i+1]&&firstRow[i+1]!==void 0;},false);}var caption_faked_evaluate_default=captionFakedEvaluate;function html5ScopeEvaluate(node){if(!is_html5_default(document)){return true;}return node.nodeName.toUpperCase()==='TH';}var html5_scope_evaluate_default=html5ScopeEvaluate;var same_caption_summary_evaluate_default=sameCaptionSummaryEvaluate;function sameCaptionSummaryEvaluate(node,options,virtualNode){if(virtualNode.children===void 0){return void 0;}var summary=virtualNode.attr('summary');var captionNode=virtualNode.children.find(isCaptionNode);var caption=captionNode?sanitize_default(subtree_text_default(captionNode)):false;if(!caption||!summary){return false;}return sanitize_default(summary).toLowerCase()===sanitize_default(caption).toLowerCase();}function isCaptionNode(virtualNode){return virtualNode.props.nodeName==='caption';}function scopeValueEvaluate(node,options){var value=node.getAttribute('scope').toLowerCase();return options.values.indexOf(value)!==-1;}var scope_value_evaluate_default=scopeValueEvaluate;function tdHasHeaderEvaluate(node){var badCells=[];var cells=get_all_cells_default(node);var tableGrid=to_grid_default(node);cells.forEach(function(cell){if(has_content_default(cell)&&is_data_cell_default(cell)&&!label_default2(cell)){var hasHeaders=get_headers_default(cell,tableGrid).some(function(header){return header!==null&&!!has_content_default(header);});if(!hasHeaders){badCells.push(cell);}}});if(badCells.length){this.relatedNodes(badCells);return false;}return true;}var td_has_header_evaluate_default=tdHasHeaderEvaluate;function tdHeadersAttrEvaluate(node){var cells=[];var reviewCells=[];var badCells=[];for(var rowIndex=0;rowIndex<node.rows.length;rowIndex++){var row=node.rows[rowIndex];for(var cellIndex=0;cellIndex<row.cells.length;cellIndex++){cells.push(row.cells[cellIndex]);}}var ids=cells.filter(function(cell){return cell.getAttribute('id');}).map(function(cell){return cell.getAttribute('id');});cells.forEach(function(cell){var isSelf=false;var notOfTable=false;if(!cell.hasAttribute('headers')||!_isVisibleToScreenReaders(cell)){return;}var headersAttr=cell.getAttribute('headers').trim();if(!headersAttr){return reviewCells.push(cell);}var headers=token_list_default(headersAttr);if(headers.length!==0){if(cell.getAttribute('id')){isSelf=headers.indexOf(cell.getAttribute('id').trim())!==-1;}notOfTable=headers.some(function(header){return!ids.includes(header);});if(isSelf||notOfTable){badCells.push(cell);}}});if(badCells.length>0){this.relatedNodes(badCells);return false;}if(reviewCells.length){this.relatedNodes(reviewCells);return void 0;}return true;}function thHasDataCellsEvaluate(node){var cells=get_all_cells_default(node);var checkResult=this;var reffedHeaders=[];cells.forEach(function(cell){var headers2=cell.getAttribute('headers');if(headers2){reffedHeaders=reffedHeaders.concat(headers2.split(/\\s+/));}var ariaLabel=cell.getAttribute('aria-labelledby');if(ariaLabel){reffedHeaders=reffedHeaders.concat(ariaLabel.split(/\\s+/));}});var headers=cells.filter(function(cell){if(sanitize_default(cell.textContent)===''){return false;}return cell.nodeName.toUpperCase()==='TH'||['rowheader','columnheader'].indexOf(cell.getAttribute('role'))!==-1;});var tableGrid=to_grid_default(node);var out=true;headers.forEach(function(header){if(header.getAttribute('id')&&reffedHeaders.includes(header.getAttribute('id'))){return;}var pos=get_cell_position_default(header,tableGrid);var hasCell=false;if(is_column_header_default(header)){hasCell=traverse_default('down',pos,tableGrid).find(function(cell){return!is_column_header_default(cell)&&get_headers_default(cell,tableGrid).includes(header);});}if(!hasCell&&is_row_header_default(header)){hasCell=traverse_default('right',pos,tableGrid).find(function(cell){return!is_row_header_default(cell)&&get_headers_default(cell,tableGrid).includes(header);});}if(!hasCell){checkResult.relatedNodes(header);}out=out&&hasCell;});return out?true:void 0;}var th_has_data_cells_evaluate_default=thHasDataCellsEvaluate;function hiddenContentEvaluate(node,options,virtualNode){var allowlist=['SCRIPT','HEAD','TITLE','NOSCRIPT','STYLE','TEMPLATE'];if(!allowlist.includes(node.nodeName.toUpperCase())&&has_content_virtual_default(virtualNode)){var styles=window.getComputedStyle(node);if(styles.getPropertyValue('display')==='none'){return void 0;}else if(styles.getPropertyValue('visibility')==='hidden'){var parent=get_composed_parent_default(node);var parentStyle=parent&&window.getComputedStyle(parent);if(!parentStyle||parentStyle.getPropertyValue('visibility')!=='hidden'){return void 0;}}}return true;}var hidden_content_evaluate_default=hiddenContentEvaluate;function ariaAllowedAttrMatches(node,virtualNode){var aria=/^aria-/;var attrs=virtualNode.attrNames;if(attrs.length){for(var _i36=0,l=attrs.length;_i36<l;_i36++){if(aria.test(attrs[_i36])){return true;}}}return false;}var aria_allowed_attr_matches_default=ariaAllowedAttrMatches;function ariaAllowedRoleMatches(node,virtualNode){return get_explicit_role_default(virtualNode,{dpub:true,fallback:true})!==null;}var aria_allowed_role_matches_default=ariaAllowedRoleMatches;function ariaHasAttrMatches(node,virtualNode){var aria=/^aria-/;return virtualNode.attrNames.some(function(attr){return aria.test(attr);});}var aria_has_attr_matches_default=ariaHasAttrMatches;function shouldMatchElement(el){if(!el){return true;}if(el.getAttribute('aria-hidden')==='true'){return false;}return shouldMatchElement(get_composed_parent_default(el));}function ariaHiddenFocusMatches(node){return shouldMatchElement(get_composed_parent_default(node));}var aria_hidden_focus_matches_default=ariaHiddenFocusMatches;function ariaRequiredChildrenMatches(node,virtualNode){var role=get_explicit_role_default(virtualNode,{dpub:true});return!!required_owned_default(role);}var aria_required_children_matches_default=ariaRequiredChildrenMatches;function ariaRequiredParentMatches(node,virtualNode){var role=get_explicit_role_default(virtualNode);return!!required_context_default(role);}var aria_required_parent_matches_default=ariaRequiredParentMatches;function autocompleteMatches(node,virtualNode){var autocomplete2=virtualNode.attr('autocomplete');if(!autocomplete2||sanitize_default(autocomplete2)===''){return false;}var nodeName2=virtualNode.props.nodeName;if(['textarea','input','select'].includes(nodeName2)===false){return false;}var excludedInputTypes=['submit','reset','button','hidden'];if(nodeName2==='input'&&excludedInputTypes.includes(virtualNode.props.type)){return false;}var ariaDisabled=virtualNode.attr('aria-disabled')||'false';if(virtualNode.hasAttr('disabled')||ariaDisabled.toLowerCase()==='true'){return false;}var role=virtualNode.attr('role');var tabIndex=virtualNode.attr('tabindex');if(tabIndex==='-1'&&role){var roleDef=standards_default.ariaRoles[role];if(roleDef===void 0||roleDef.type!=='widget'){return false;}}if(tabIndex==='-1'&&virtualNode.actualNode&&!_isVisibleOnScreen(virtualNode)&&!_isVisibleToScreenReaders(virtualNode)){return false;}return true;}var autocomplete_matches_default=autocompleteMatches;function isInitiatorMatches(node,virtualNode,context){return context.initiator;}var is_initiator_matches_default=isInitiatorMatches;function bypassMatches(node,virtualNode,context){if(is_initiator_matches_default(node,virtualNode,context)){return!!node.querySelector('a[href]');}return true;}var bypass_matches_default=bypassMatches;function colorContrastMatches(node,virtualNode){var _virtualNode$props2=virtualNode.props,nodeName2=_virtualNode$props2.nodeName,inputType=_virtualNode$props2.type;if(nodeName2==='option'){return false;}if(nodeName2==='select'&&!node.options.length){return false;}var nonTextInput=['hidden','range','color','checkbox','radio','image'];if(nodeName2==='input'&&nonTextInput.includes(inputType)){return false;}if(is_disabled_default(virtualNode)||_isInert(virtualNode)){return false;}var formElements=['input','select','textarea'];if(formElements.includes(nodeName2)){var style=window.getComputedStyle(node);var textIndent=parseInt(style.getPropertyValue('text-indent'),10);if(textIndent){var rect=node.getBoundingClientRect();rect={top:rect.top,bottom:rect.bottom,left:rect.left+textIndent,right:rect.right+textIndent};if(!visually_overlaps_default(rect,node)){return false;}}return true;}var nodeParentLabel=find_up_virtual_default(virtualNode,'label');if(nodeName2==='label'||nodeParentLabel){var labelNode=nodeParentLabel||node;var labelVirtual3=nodeParentLabel?get_node_from_tree_default(nodeParentLabel):virtualNode;if(labelNode.htmlFor){var doc=get_root_node_default2(labelNode);var explicitControl=doc.getElementById(labelNode.htmlFor);var explicitControlVirtual=explicitControl&&get_node_from_tree_default(explicitControl);if(explicitControlVirtual&&is_disabled_default(explicitControlVirtual)){return false;}}var query='input:not([type=\"hidden\"],[type=\"image\"],[type=\"button\"],[type=\"submit\"],[type=\"reset\"]), select, textarea';var implicitControl=query_selector_all_default(labelVirtual3,query)[0];if(implicitControl&&is_disabled_default(implicitControl)){return false;}}var ariaLabelledbyControls=[];var ancestorNode=virtualNode;while(ancestorNode){if(ancestorNode.props.id){var virtualControls=get_accessible_refs_default(ancestorNode).filter(function(control){return token_list_default(control.getAttribute('aria-labelledby')||'').includes(ancestorNode.props.id);}).map(function(control){return get_node_from_tree_default(control);});ariaLabelledbyControls.push.apply(ariaLabelledbyControls,_toConsumableArray(virtualControls));}ancestorNode=ancestorNode.parent;}if(ariaLabelledbyControls.length>0&&ariaLabelledbyControls.every(is_disabled_default)){return false;}if(!hasRealTextChildren(virtualNode)){return false;}var range2=document.createRange();var childNodes=virtualNode.children;for(var index=0;index<childNodes.length;index++){var child=childNodes[index];if(child.actualNode.nodeType===3&&sanitize_default(child.actualNode.nodeValue)!==''){range2.selectNodeContents(child.actualNode);}}var rects=range2.getClientRects();for(var _index2=0;_index2<rects.length;_index2++){if(visually_overlaps_default(rects[_index2],node)){return true;}}return false;}var color_contrast_matches_default=colorContrastMatches;var removeUnicodeOptions={emoji:true,nonBmp:false,punctuations:true};function hasRealTextChildren(virtualNode){var visibleText=visible_virtual_default(virtualNode,false,true);if(visibleText===''||remove_unicode_default(visibleText,removeUnicodeOptions)===''){return false;}return virtualNode.children.some(function(vChild){return vChild.props.nodeName==='#text'&&!_isIconLigature(vChild);});}function dataTableLargeMatches(node){if(is_data_table_default(node)){var tableArray=to_grid_default(node);return tableArray.length>=3&&tableArray[0].length>=3&&tableArray[1].length>=3&&tableArray[2].length>=3;}return false;}var data_table_large_matches_default=dataTableLargeMatches;function dataTableMatches(node){return is_data_table_default(node);}var data_table_matches_default=dataTableMatches;function duplicateIdActiveMatches(node){var id=node.getAttribute('id').trim();var idSelector='*[id=\"'.concat(escape_selector_default(id),'\"]');var idMatchingElms=Array.from(get_root_node_default2(node).querySelectorAll(idSelector));return!is_accessible_ref_default(node)&&idMatchingElms.some(_isFocusable);}var duplicate_id_active_matches_default=duplicateIdActiveMatches;function duplicateIdAriaMatches(node){return is_accessible_ref_default(node);}var duplicate_id_aria_matches_default=duplicateIdAriaMatches;function duplicateIdMiscMatches(node){var id=node.getAttribute('id').trim();var idSelector='*[id=\"'.concat(escape_selector_default(id),'\"]');var idMatchingElms=Array.from(get_root_node_default2(node).querySelectorAll(idSelector));return!is_accessible_ref_default(node)&&idMatchingElms.every(function(elm){return!_isFocusable(elm);});}var duplicate_id_misc_matches_default=duplicateIdMiscMatches;function frameFocusableContentMatches(node,virtualNode,context){var _context$size,_context$size2;return!context.initiator&&!context.focusable&&((_context$size=context.size)===null||_context$size===void 0?void 0:_context$size.width)*((_context$size2=context.size)===null||_context$size2===void 0?void 0:_context$size2.height)>1;}var frame_focusable_content_matches_default=frameFocusableContentMatches;function frameTitleHasTextMatches(node){var title=node.getAttribute('title');return!!sanitize_default(title);}var frame_title_has_text_matches_default=frameTitleHasTextMatches;function hasImplicitChromiumRoleMatches(node,virtualNode){return implicit_role_default(virtualNode,{chromium:true})!==null;}var has_implicit_chromium_role_matches_default=hasImplicitChromiumRoleMatches;function headingMatches(node,virtualNode){return get_role_default(virtualNode)==='heading';}function svgNamespaceMatches(node,virtualNode){try{var nodeName2=virtualNode.props.nodeName;if(nodeName2==='svg'){return true;}return!!closest_default(virtualNode,'svg');}catch(e){return false;}}var svg_namespace_matches_default=svgNamespaceMatches;function htmlNamespaceMatches(node,virtualNode){return!svg_namespace_matches_default(node,virtualNode);}var html_namespace_matches_default=htmlNamespaceMatches;function identicalLinksSamePurposeMatches(node,virtualNode){var hasAccName=!!_accessibleTextVirtual(virtualNode);if(!hasAccName){return false;}var role=get_role_default(node);if(role&&role!=='link'){return false;}return true;}var identical_links_same_purpose_matches_default=identicalLinksSamePurposeMatches;function insertedIntoFocusOrderMatches(node){return inserted_into_focus_order_default(node);}var inserted_into_focus_order_matches_default=insertedIntoFocusOrderMatches;function hasVisibleTextMatches(node){return _isVisibleOnScreen(node);}function isVisibleOnScreenMatches(node,virtualNode){return _isVisibleOnScreen(virtualNode);}function labelContentNameMismatchMatches(node,virtualNode){var role=get_role_default(node);if(!role){return false;}var widgetRoles=get_aria_roles_by_type_default('widget');var isWidgetType2=widgetRoles.includes(role);if(!isWidgetType2){return false;}var rolesWithNameFromContents=get_aria_roles_supporting_name_from_content_default();if(!rolesWithNameFromContents.includes(role)){return false;}if(!sanitize_default(_arialabelText(virtualNode))&&!sanitize_default(arialabelledby_text_default(node))){return false;}if(!sanitize_default(visible_virtual_default(virtualNode))){return false;}return true;}var label_content_name_mismatch_matches_default=labelContentNameMismatchMatches;function labelMatches(node,virtualNode){if(virtualNode.props.nodeName!=='input'||virtualNode.hasAttr('type')===false){return true;}var type2=virtualNode.attr('type').toLowerCase();return['hidden','image','button','submit','reset'].includes(type2)===false;}var label_matches_default=labelMatches;function landmarkHasBodyContextMatches(node,virtualNode){var nativeScopeFilter='article, aside, main, nav, section';return node.hasAttribute('role')||!find_up_virtual_default(virtualNode,nativeScopeFilter);}var landmark_has_body_context_matches_default=landmarkHasBodyContextMatches;var excludedParentsForHeaderFooterLandmarks=['article','aside','main','nav','section'].join(',');function landmarkUniqueMatches(node,virtualNode){return isLandmarkVirtual(virtualNode)&&_isVisibleToScreenReaders(virtualNode);}function isLandmarkVirtual(vNode){var landmarkRoles2=get_aria_roles_by_type_default('landmark');var role=get_role_default(vNode);if(!role){return false;}var nodeName2=vNode.props.nodeName;if(nodeName2==='header'||nodeName2==='footer'){return isHeaderFooterLandmark(vNode);}if(nodeName2==='section'||nodeName2==='form'){var accessibleText2=_accessibleTextVirtual(vNode);return!!accessibleText2;}return landmarkRoles2.indexOf(role)>=0||role==='region';}function isHeaderFooterLandmark(headerFooterElement){return!closest_default(headerFooterElement,excludedParentsForHeaderFooterLandmarks);}function dataTableMatches2(node){return!is_data_table_default(node)&&!_isFocusable(node);}var layout_table_matches_default=dataTableMatches2;function linkInTextBlockMatches(node){var text=sanitize_default(node.innerText);var role=node.getAttribute('role');if(role&&role!=='link'){return false;}if(!text){return false;}if(!_isVisibleOnScreen(node)){return false;}return is_in_text_block_default(node);}var link_in_text_block_matches_default=linkInTextBlockMatches;function nestedInteractiveMatches(node,virtualNode){var role=get_role_default(virtualNode);if(!role){return false;}return!!standards_default.ariaRoles[role].childrenPresentational;}var nested_interactive_matches_default=nestedInteractiveMatches;function noAutoplayAudioMatches(node){if(!node.currentSrc){return false;}if(node.hasAttribute('paused')||node.hasAttribute('muted')){return false;}return true;}var no_autoplay_audio_matches_default=noAutoplayAudioMatches;function noEmptyRoleMatches(node,virtualNode){if(!virtualNode.hasAttr('role')){return false;}if(!virtualNode.attr('role').trim()){return false;}return true;}var no_empty_role_matches_default=noEmptyRoleMatches;function noExplicitNameRequired(node,virtualNode){var role=get_explicit_role_default(virtualNode);if(!role||['none','presentation'].includes(role)){return true;}var _ref142=aria_roles_default[role]||{},accessibleNameRequired=_ref142.accessibleNameRequired;if(accessibleNameRequired||_isFocusable(virtualNode)){return true;}return false;}var no_explicit_name_required_matches_default=noExplicitNameRequired;function noNamingMethodMatches(node,virtualNode){var _get_element_spec_def3=get_element_spec_default(virtualNode),namingMethods=_get_element_spec_def3.namingMethods;if(namingMethods&&namingMethods.length!==0){return false;}if(get_explicit_role_default(virtualNode)==='combobox'&&query_selector_all_default(virtualNode,'input:not([type=\"hidden\"])').length){return false;}if(_isComboboxPopup(virtualNode,{popupRoles:['listbox']})){return false;}return true;}var no_naming_method_matches_default=noNamingMethodMatches;function noNegativeTabindexMatches(node,virtualNode){var tabindex=parseInt(virtualNode.attr('tabindex'),10);return isNaN(tabindex)||tabindex>=0;}var no_negative_tabindex_matches_default=noNegativeTabindexMatches;function noRoleMatches(node,vNode){return!vNode.attr('role');}var no_role_matches_default=noRoleMatches;function notHtmlMatches(node,virtualNode){return virtualNode.props.nodeName!=='html';}var not_html_matches_default=notHtmlMatches;var object_is_loaded_matches_default=function object_is_loaded_matches_default(node,vNode){return[no_explicit_name_required_matches_default,objectHasLoaded].every(function(fn){return fn(node,vNode);});};function objectHasLoaded(node){var _node$ownerDocument;if(!(node!==null&&node!==void 0&&(_node$ownerDocument=node.ownerDocument)!==null&&_node$ownerDocument!==void 0&&_node$ownerDocument.createRange)){return true;}var range2=node.ownerDocument.createRange();range2.setStart(node,0);range2.setEnd(node,node.childNodes.length);return range2.getClientRects().length===0;}function pAsHeadingMatches(node){var children=Array.from(node.parentNode.childNodes);var nodeText=node.textContent.trim();var isSentence=/[.!?:;](?![.!?:;])/g;if(nodeText.length===0||(nodeText.match(isSentence)||[]).length>=2){return false;}var siblingsAfter=children.slice(children.indexOf(node)+1).filter(function(elm){return elm.nodeName.toUpperCase()==='P'&&elm.textContent.trim()!=='';});return siblingsAfter.length!==0;}var p_as_heading_matches_default=pAsHeadingMatches;function presentationRoleConflictMatches(node,virtualNode){return implicit_role_default(virtualNode,{chromiumRoles:true})!==null;}var presentation_role_conflict_matches_default=presentationRoleConflictMatches;function scrollableRegionFocusableMatches(node,virtualNode){return get_scroll_default(node,13)!==void 0&&_isComboboxPopup(virtualNode)===false&&isNoneEmptyElement(virtualNode);}function isNoneEmptyElement(vNode){return query_selector_all_default(vNode,'*').some(function(elm){return has_content_virtual_default(elm,true,true);});}function skipLinkMatches(node){return _isSkipLink(node)&&is_offscreen_default(node);}var skip_link_matches_default=skipLinkMatches;function tableOrGridRoleMatches(_,vNode){var role=get_role_default(vNode);return['treegrid','grid','table'].includes(role);}function widgetNotInline(node,vNode){return matchesFns.every(function(fn){return fn(node,vNode);});}var matchesFns=[function(node,vNode){return isWidgetType(vNode);},function(node,vNode){return isNotAreaElement(vNode);},function(node,vNode){return!svg_namespace_matches_default(node,vNode);},function(node,vNode){return _isFocusable(vNode);},function(node,vNode){return _isInTabOrder(vNode)||!hasWidgetAncestorInTabOrder(vNode);},function(node){return!is_in_text_block_default(node,{noLengthCompare:true});}];function isWidgetType(vNode){return get_role_type_default(vNode)==='widget';}function isNotAreaElement(vNode){return vNode.props.nodeName!=='area';}var hasWidgetAncestorInTabOrder=memoize_default(function hasWidgetAncestorInTabOrderMemoized(vNode){if(!(vNode!==null&&vNode!==void 0&&vNode.parent)){return false;}if(isWidgetType(vNode.parent)&&_isInTabOrder(vNode.parent)){return true;}return hasWidgetAncestorInTabOrderMemoized(vNode.parent);});function windowIsTopMatches(node){return node.ownerDocument.defaultView.self===node.ownerDocument.defaultView.top;}var window_is_top_matches_default=windowIsTopMatches;function xmlLangMismatchMatches(node){var primaryLangValue=get_base_lang_default(node.getAttribute('lang'));var primaryXmlLangValue=get_base_lang_default(node.getAttribute('xml:lang'));return valid_langs_default(primaryLangValue)&&valid_langs_default(primaryXmlLangValue);}var xml_lang_mismatch_matches_default=xmlLangMismatchMatches;var metadataFunctionMap={'abstractrole-evaluate':abstractrole_evaluate_default,'accesskeys-after':accesskeys_after_default,'accesskeys-evaluate':accesskeys_evaluate_default,'alt-space-value-evaluate':alt_space_value_evaluate_default,'aria-allowed-attr-evaluate':ariaAllowedAttrEvaluate,'aria-allowed-attr-matches':aria_allowed_attr_matches_default,'aria-allowed-role-evaluate':aria_allowed_role_evaluate_default,'aria-allowed-role-matches':aria_allowed_role_matches_default,'aria-busy-evaluate':ariaBusyEvaluate,'aria-conditional-attr-evaluate':ariaConditionalAttrEvaluate,'aria-conditional-checkbox-attr-evaluate':ariaConditionalCheckboxAttr,'aria-conditional-row-attr-evaluate':ariaConditionalRowAttr,'aria-errormessage-evaluate':ariaErrormessageEvaluate,'aria-has-attr-matches':aria_has_attr_matches_default,'aria-hidden-body-evaluate':aria_hidden_body_evaluate_default,'aria-hidden-focus-matches':aria_hidden_focus_matches_default,'aria-label-evaluate':aria_label_evaluate_default,'aria-labelledby-evaluate':aria_labelledby_evaluate_default,'aria-level-evaluate':aria_level_evaluate_default,'aria-prohibited-attr-evaluate':ariaProhibitedAttrEvaluate,'aria-required-attr-evaluate':ariaRequiredAttrEvaluate,'aria-required-children-evaluate':ariaRequiredChildrenEvaluate,'aria-required-children-matches':aria_required_children_matches_default,'aria-required-parent-evaluate':aria_required_parent_evaluate_default,'aria-required-parent-matches':aria_required_parent_matches_default,'aria-roledescription-evaluate':aria_roledescription_evaluate_default,'aria-unsupported-attr-evaluate':aria_unsupported_attr_evaluate_default,'aria-valid-attr-evaluate':aria_valid_attr_evaluate_default,'aria-valid-attr-value-evaluate':ariaValidAttrValueEvaluate,'attr-non-space-content-evaluate':attr_non_space_content_evaluate_default,'autocomplete-appropriate-evaluate':autocomplete_appropriate_evaluate_default,'autocomplete-matches':autocomplete_matches_default,'autocomplete-valid-evaluate':autocomplete_valid_evaluate_default,'avoid-inline-spacing-evaluate':avoid_inline_spacing_evaluate_default,'braille-label-equivalent-evaluate':brailleLabelEquivalentEvaluate,'braille-roledescription-equivalent-evaluate':brailleRoleDescriptionEquivalentEvaluate,'bypass-matches':bypass_matches_default,'caption-evaluate':caption_evaluate_default,'caption-faked-evaluate':caption_faked_evaluate_default,'color-contrast-evaluate':colorContrastEvaluate,'color-contrast-matches':color_contrast_matches_default,'css-orientation-lock-evaluate':css_orientation_lock_evaluate_default,'data-table-large-matches':data_table_large_matches_default,'data-table-matches':data_table_matches_default,'deprecatedrole-evaluate':deprecatedroleEvaluate,'dlitem-evaluate':dlitem_evaluate_default,'doc-has-title-evaluate':doc_has_title_evaluate_default,'duplicate-id-active-matches':duplicate_id_active_matches_default,'duplicate-id-after':duplicate_id_after_default,'duplicate-id-aria-matches':duplicate_id_aria_matches_default,'duplicate-id-evaluate':duplicate_id_evaluate_default,'duplicate-id-misc-matches':duplicate_id_misc_matches_default,'duplicate-img-label-evaluate':duplicate_img_label_evaluate_default,'exists-evaluate':exists_evaluate_default,'explicit-evaluate':explicit_evaluate_default,'fallbackrole-evaluate':fallbackrole_evaluate_default,'focusable-content-evaluate':focusable_content_evaluate_default,'focusable-disabled-evaluate':focusable_disabled_evaluate_default,'focusable-element-evaluate':focusable_element_evaluate_default,'focusable-modal-open-evaluate':focusable_modal_open_evaluate_default,'focusable-no-name-evaluate':focusable_no_name_evaluate_default,'focusable-not-tabbable-evaluate':focusable_not_tabbable_evaluate_default,'frame-focusable-content-evaluate':frameFocusableContentEvaluate,'frame-focusable-content-matches':frame_focusable_content_matches_default,'frame-tested-after':frame_tested_after_default,'frame-tested-evaluate':frame_tested_evaluate_default,'frame-title-has-text-matches':frame_title_has_text_matches_default,'has-alt-evaluate':has_alt_evaluate_default,'has-descendant-after':has_descendant_after_default,'has-descendant-evaluate':has_descendant_evaluate_default,'has-global-aria-attribute-evaluate':has_global_aria_attribute_evaluate_default,'has-implicit-chromium-role-matches':has_implicit_chromium_role_matches_default,'has-lang-evaluate':has_lang_evaluate_default,'has-text-content-evaluate':hasTextContentEvaluate,'has-widget-role-evaluate':has_widget_role_evaluate_default,'heading-matches':headingMatches,'heading-order-after':headingOrderAfter,'heading-order-evaluate':heading_order_evaluate_default,'help-same-as-label-evaluate':help_same_as_label_evaluate_default,'hidden-content-evaluate':hidden_content_evaluate_default,'hidden-explicit-label-evaluate':hidden_explicit_label_evaluate_default,'html-namespace-matches':html_namespace_matches_default,'html5-scope-evaluate':html5_scope_evaluate_default,'identical-links-same-purpose-after':identical_links_same_purpose_after_default,'identical-links-same-purpose-evaluate':identical_links_same_purpose_evaluate_default,'identical-links-same-purpose-matches':identical_links_same_purpose_matches_default,'implicit-evaluate':implicit_evaluate_default,'inline-style-property-evaluate':inlineStyleProperty,'inserted-into-focus-order-matches':inserted_into_focus_order_matches_default,'internal-link-present-evaluate':internal_link_present_evaluate_default,'invalid-children-evaluate':invalidChildrenEvaluate,'invalidrole-evaluate':invalidrole_evaluate_default,'is-element-focusable-evaluate':is_element_focusable_evaluate_default,'is-initiator-matches':is_initiator_matches_default,'is-on-screen-evaluate':is_on_screen_evaluate_default,'is-visible-matches':hasVisibleTextMatches,'is-visible-on-screen-matches':isVisibleOnScreenMatches,'label-content-name-mismatch-evaluate':label_content_name_mismatch_evaluate_default,'label-content-name-mismatch-matches':label_content_name_mismatch_matches_default,'label-matches':label_matches_default,'landmark-has-body-context-matches':landmark_has_body_context_matches_default,'landmark-is-top-level-evaluate':landmark_is_top_level_evaluate_default,'landmark-is-unique-after':landmark_is_unique_after_default,'landmark-is-unique-evaluate':landmark_is_unique_evaluate_default,'landmark-unique-matches':landmarkUniqueMatches,'layout-table-matches':layout_table_matches_default,'link-in-text-block-evaluate':link_in_text_block_evaluate_default,'link-in-text-block-matches':link_in_text_block_matches_default,'link-in-text-block-style-evaluate':linkInTextBlockStyleEvaluate,'listitem-evaluate':listitemEvaluate,'matches-definition-evaluate':matches_definition_evaluate_default,'meta-refresh-evaluate':metaRefreshEvaluate,'meta-viewport-scale-evaluate':meta_viewport_scale_evaluate_default,'multiple-label-evaluate':multiple_label_evaluate_default,'nested-interactive-matches':nested_interactive_matches_default,'no-autoplay-audio-evaluate':no_autoplay_audio_evaluate_default,'no-autoplay-audio-matches':no_autoplay_audio_matches_default,'no-empty-role-matches':no_empty_role_matches_default,'no-explicit-name-required-matches':no_explicit_name_required_matches_default,'no-focusable-content-evaluate':noFocusableContentEvaluate,'no-implicit-explicit-label-evaluate':no_implicit_explicit_label_evaluate_default,'no-naming-method-matches':no_naming_method_matches_default,'no-negative-tabindex-matches':no_negative_tabindex_matches_default,'no-role-matches':no_role_matches_default,'non-empty-if-present-evaluate':non_empty_if_present_evaluate_default,'not-html-matches':not_html_matches_default,'object-is-loaded-matches':object_is_loaded_matches_default,'only-dlitems-evaluate':onlyDlitemsEvaluate,'only-listitems-evaluate':only_listitems_evaluate_default,'p-as-heading-evaluate':p_as_heading_evaluate_default,'p-as-heading-matches':p_as_heading_matches_default,'page-no-duplicate-after':page_no_duplicate_after_default,'page-no-duplicate-evaluate':page_no_duplicate_evaluate_default,'presentation-role-conflict-matches':presentation_role_conflict_matches_default,'presentational-role-evaluate':presentationalRoleEvaluate,'region-after':region_after_default,'region-evaluate':regionEvaluate,'same-caption-summary-evaluate':same_caption_summary_evaluate_default,'scope-value-evaluate':scope_value_evaluate_default,'scrollable-region-focusable-matches':scrollableRegionFocusableMatches,'skip-link-evaluate':skip_link_evaluate_default,'skip-link-matches':skip_link_matches_default,'structured-dlitems-evaluate':structured_dlitems_evaluate_default,'svg-namespace-matches':svg_namespace_matches_default,'svg-non-empty-title-evaluate':svg_non_empty_title_evaluate_default,'tabindex-evaluate':tabindex_evaluate_default,'table-or-grid-role-matches':tableOrGridRoleMatches,'target-offset-evaluate':targetOffsetEvaluate,'target-size-evaluate':targetSize,'td-has-header-evaluate':td_has_header_evaluate_default,'td-headers-attr-evaluate':tdHeadersAttrEvaluate,'th-has-data-cells-evaluate':th_has_data_cells_evaluate_default,'title-only-evaluate':title_only_evaluate_default,'unique-frame-title-after':unique_frame_title_after_default,'unique-frame-title-evaluate':unique_frame_title_evaluate_default,'unsupportedrole-evaluate':unsupportedrole_evaluate_default,'valid-lang-evaluate':valid_lang_evaluate_default,'valid-scrollable-semantics-evaluate':valid_scrollable_semantics_evaluate_default,'widget-not-inline-matches':widgetNotInline,'window-is-top-matches':window_is_top_matches_default,'xml-lang-mismatch-evaluate':xml_lang_mismatch_evaluate_default,'xml-lang-mismatch-matches':xml_lang_mismatch_matches_default};var metadata_function_map_default=metadataFunctionMap;function CheckResult(check){this.id=check.id;this.data=null;this.relatedNodes=[];this.result=null;}var check_result_default=CheckResult;function createExecutionContext(spec){if(typeof spec==='string'){if(metadata_function_map_default[spec]){return metadata_function_map_default[spec];}if(/^\\s*function[\\s\\w]*\\(/.test(spec)){return new Function('return '+spec+';')();}throw new ReferenceError('Function ID does not exist in the metadata-function-map: '.concat(spec));}return spec;}function normalizeOptions(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(Array.isArray(options)||_typeof(options)!=='object'){options={value:options};}return options;}function Check(spec){if(spec){this.id=spec.id;this.configure(spec);}}Check.prototype.enabled=true;Check.prototype.run=function run(node,options,context,resolve,reject){options=options||{};var enabled=options.hasOwnProperty('enabled')?options.enabled:this.enabled;var checkOptions=this.getOptions(options.options);if(enabled){var checkResult=new check_result_default(this);var helper=check_helper_default(checkResult,options,resolve,reject);var result;try{result=this.evaluate.call(helper,node.actualNode,checkOptions,node,context);}catch(e){if(node&&node.actualNode){e.errorNode=node_serializer_default.toSpec(node);}reject(e);return;}if(!helper.isAsync){checkResult.result=result;resolve(checkResult);}}else{resolve(null);}};Check.prototype.runSync=function runSync(node,options,context){options=options||{};var _options2=options,_options2$enabled=_options2.enabled,enabled=_options2$enabled===void 0?this.enabled:_options2$enabled;if(!enabled){return null;}var checkOptions=this.getOptions(options.options);var checkResult=new check_result_default(this);var helper=check_helper_default(checkResult,options);helper.async=function async(){throw new Error('Cannot run async check while in a synchronous run');};var result;try{result=this.evaluate.call(helper,node.actualNode,checkOptions,node,context);}catch(e){if(node&&node.actualNode){e.errorNode=node_serializer_default.toSpec(node);}throw e;}checkResult.result=result;return checkResult;};Check.prototype.configure=function configure2(spec){var _this8=this;if(!spec.evaluate||metadata_function_map_default[spec.evaluate]){this._internalCheck=true;}if(spec.hasOwnProperty('enabled')){this.enabled=spec.enabled;}if(spec.hasOwnProperty('options')){if(this._internalCheck){this.options=normalizeOptions(spec.options);}else{this.options=spec.options;}}['evaluate','after'].filter(function(prop){return spec.hasOwnProperty(prop);}).forEach(function(prop){return _this8[prop]=createExecutionContext(spec[prop]);});};Check.prototype.getOptions=function getOptions(options){if(this._internalCheck){return deep_merge_default(this.options,normalizeOptions(options||{}));}else{return options||this.options;}};var check_default=Check;function RuleResult(rule){this.id=rule.id;this.result=constants_default.NA;this.pageLevel=rule.pageLevel;this.impact=null;this.nodes=[];}var rule_result_default=RuleResult;function Rule(spec,parentAudit){this._audit=parentAudit;this.id=spec.id;this.selector=spec.selector||'*';if(spec.impact){assert_default(constants_default.impact.includes(spec.impact),'Impact '.concat(spec.impact,' is not a valid impact'));this.impact=spec.impact;}this.excludeHidden=typeof spec.excludeHidden==='boolean'?spec.excludeHidden:true;this.enabled=typeof spec.enabled==='boolean'?spec.enabled:true;this.pageLevel=typeof spec.pageLevel==='boolean'?spec.pageLevel:false;this.reviewOnFail=typeof spec.reviewOnFail==='boolean'?spec.reviewOnFail:false;this.any=spec.any||[];this.all=spec.all||[];this.none=spec.none||[];this.tags=spec.tags||[];this.preload=spec.preload?true:false;this.actIds=spec.actIds;if(spec.matches){this.matches=createExecutionContext(spec.matches);}}Rule.prototype.matches=function matches3(){return true;};Rule.prototype.gather=function gather(context){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var markStart='mark_gather_start_'+this.id;var markEnd='mark_gather_end_'+this.id;var markHiddenStart='mark_isVisibleToScreenReaders_start_'+this.id;var markHiddenEnd='mark_isVisibleToScreenReaders_end_'+this.id;if(options.performanceTimer){performance_timer_default.mark(markStart);}var elements=_select(this.selector,context);if(this.excludeHidden){if(options.performanceTimer){performance_timer_default.mark(markHiddenStart);}elements=elements.filter(function(element){return _isVisibleToScreenReaders(element);});if(options.performanceTimer){performance_timer_default.mark(markHiddenEnd);performance_timer_default.measure('rule_'+this.id+'#gather_axe.utils.isVisibleToScreenReaders',markHiddenStart,markHiddenEnd);}}if(options.performanceTimer){performance_timer_default.mark(markEnd);performance_timer_default.measure('rule_'+this.id+'#gather',markStart,markEnd);}return elements;};Rule.prototype.runChecks=function runChecks(type2,node,options,context,resolve,reject){var self2=this;var checkQueue=queue_default();this[type2].forEach(function(c4){var check=self2._audit.checks[c4.id||c4];var option=get_check_option_default(check,self2.id,options);checkQueue.defer(function(res,rej){check.run(node,option,context,res,rej);});});checkQueue.then(function(results){results=results.filter(function(check){return check;});resolve({type:type2,results:results});})['catch'](reject);};Rule.prototype.runChecksSync=function runChecksSync(type2,node,options,context){var self2=this;var results=[];this[type2].forEach(function(c4){var check=self2._audit.checks[c4.id||c4];var option=get_check_option_default(check,self2.id,options);results.push(check.runSync(node,option,context));});results=results.filter(function(check){return check;});return{type:type2,results:results};};Rule.prototype.run=function run2(context){var _this9=this;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var resolve=arguments.length>2?arguments[2]:undefined;var reject=arguments.length>3?arguments[3]:undefined;if(options.performanceTimer){this._trackPerformance();}var q=queue_default();var ruleResult=new rule_result_default(this);var nodes;try{nodes=this.gatherAndMatchNodes(context,options);}catch(error){reject(new SupportError({cause:error,ruleId:this.id}));return;}if(options.performanceTimer){this._logGatherPerformance(nodes);}nodes.forEach(function(node){q.defer(function(resolveNode,rejectNode){var checkQueue=queue_default();['any','all','none'].forEach(function(type2){checkQueue.defer(function(res,rej){_this9.runChecks(type2,node,options,context,res,rej);});});checkQueue.then(function(results){var result=getResult(results);if(result){result.node=new dq_element_default(node);ruleResult.nodes.push(result);if(_this9.reviewOnFail){['any','all'].forEach(function(type2){result[type2].forEach(function(checkResult){if(checkResult.result===false){checkResult.result=void 0;}});});result.none.forEach(function(checkResult){if(checkResult.result===true){checkResult.result=void 0;}});}}resolveNode();})['catch'](function(err2){return rejectNode(err2);});});});q.defer(function(res){return setTimeout(res,0);});if(options.performanceTimer){this._logRulePerformance();}q.then(function(){return resolve(ruleResult);})['catch'](function(error){return reject(error);});};Rule.prototype.runSync=function runSync2(context){var _this10=this;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(options.performanceTimer){this._trackPerformance();}var ruleResult=new rule_result_default(this);var nodes;try{nodes=this.gatherAndMatchNodes(context,options);}catch(error){throw new SupportError({cause:error,ruleId:this.id});}if(options.performanceTimer){this._logGatherPerformance(nodes);}nodes.forEach(function(node){var results=[];['any','all','none'].forEach(function(type2){results.push(_this10.runChecksSync(type2,node,options,context));});var result=getResult(results);if(result){result.node=node.actualNode?new dq_element_default(node):null;ruleResult.nodes.push(result);if(_this10.reviewOnFail){['any','all'].forEach(function(type2){result[type2].forEach(function(checkResult){if(checkResult.result===false){checkResult.result=void 0;}});});result.none.forEach(function(checkResult){if(checkResult.result===true){checkResult.result=void 0;}});}}});if(options.performanceTimer){this._logRulePerformance();}return ruleResult;};Rule.prototype._trackPerformance=function _trackPerformance(){this._markStart='mark_rule_start_'+this.id;this._markEnd='mark_rule_end_'+this.id;this._markChecksStart='mark_runchecks_start_'+this.id;this._markChecksEnd='mark_runchecks_end_'+this.id;};Rule.prototype._logGatherPerformance=function _logGatherPerformance(nodes){log_default('gather (',nodes.length,'):',performance_timer_default.timeElapsed()+'ms');performance_timer_default.mark(this._markChecksStart);};Rule.prototype._logRulePerformance=function _logRulePerformance(){performance_timer_default.mark(this._markChecksEnd);performance_timer_default.mark(this._markEnd);performance_timer_default.measure('runchecks_'+this.id,this._markChecksStart,this._markChecksEnd);performance_timer_default.measure('rule_'+this.id,this._markStart,this._markEnd);};function getResult(results){if(results.length){var hasResults=false;var result={};results.forEach(function(r){var res=r.results.filter(function(_result){return _result;});result[r.type]=res;if(res.length){hasResults=true;}});if(hasResults){return result;}return null;}}Rule.prototype.gatherAndMatchNodes=function gatherAndMatchNodes(context,options){var _this11=this;var markMatchesStart='mark_matches_start_'+this.id;var markMatchesEnd='mark_matches_end_'+this.id;var nodes=this.gather(context,options);if(options.performanceTimer){performance_timer_default.mark(markMatchesStart);}nodes=nodes.filter(function(node){return _this11.matches(node.actualNode,node,context);});if(options.performanceTimer){performance_timer_default.mark(markMatchesEnd);performance_timer_default.measure('rule_'+this.id+'#matches',markMatchesStart,markMatchesEnd);}return nodes;};function findAfterChecks(rule){return get_all_checks_default(rule).map(function(c4){var check=rule._audit.checks[c4.id||c4];return check&&typeof check.after==='function'?check:null;}).filter(Boolean);}function findCheckResults(nodes,checkID){var checkResults=[];nodes.forEach(function(nodeResult){var checks=get_all_checks_default(nodeResult);checks.forEach(function(checkResult){if(checkResult.id===checkID){checkResult.node=nodeResult.node;checkResults.push(checkResult);}});});return checkResults;}function filterChecks(checks){return checks.filter(function(check){return check.filtered!==true;});}function sanitizeNodes(result){var checkTypes2=['any','all','none'];var nodes=result.nodes.filter(function(detail){var length=0;checkTypes2.forEach(function(type2){detail[type2]=filterChecks(detail[type2]);length+=detail[type2].length;});return length>0;});if(result.pageLevel&&nodes.length){nodes=[nodes.reduce(function(a2,b2){if(a2){checkTypes2.forEach(function(type2){a2[type2].push.apply(a2[type2],b2[type2]);});return a2;}})];}return nodes;}Rule.prototype.after=function after(result,options){var _this12=this;var afterChecks=findAfterChecks(this);var ruleID=this.id;afterChecks.forEach(function(check){var beforeResults=findCheckResults(result.nodes,check.id);var checkOption=get_check_option_default(check,ruleID,options);var afterResults=check.after(beforeResults,checkOption.options);if(_this12.reviewOnFail){afterResults.forEach(function(checkResult){var changeAnyAllResults=(_this12.any.includes(checkResult.id)||_this12.all.includes(checkResult.id))&&checkResult.result===false;var changeNoneResult=_this12.none.includes(checkResult.id)&&checkResult.result===true;if(changeAnyAllResults||changeNoneResult){checkResult.result=void 0;}});}beforeResults.forEach(function(item){delete item.node;if(afterResults.indexOf(item)===-1){item.filtered=true;}});});result.nodes=sanitizeNodes(result);return result;};Rule.prototype.configure=function configure3(spec){if(spec.hasOwnProperty('selector')){this.selector=spec.selector;}if(spec.hasOwnProperty('excludeHidden')){this.excludeHidden=typeof spec.excludeHidden==='boolean'?spec.excludeHidden:true;}if(spec.hasOwnProperty('enabled')){this.enabled=typeof spec.enabled==='boolean'?spec.enabled:true;}if(spec.hasOwnProperty('pageLevel')){this.pageLevel=typeof spec.pageLevel==='boolean'?spec.pageLevel:false;}if(spec.hasOwnProperty('reviewOnFail')){this.reviewOnFail=typeof spec.reviewOnFail==='boolean'?spec.reviewOnFail:false;}if(spec.hasOwnProperty('any')){this.any=spec.any;}if(spec.hasOwnProperty('all')){this.all=spec.all;}if(spec.hasOwnProperty('none')){this.none=spec.none;}if(spec.hasOwnProperty('tags')){this.tags=spec.tags;}if(spec.hasOwnProperty('actIds')){this.actIds=spec.actIds;}if(spec.hasOwnProperty('matches')){this.matches=createExecutionContext(spec.matches);}if(spec.impact){assert_default(constants_default.impact.includes(spec.impact),'Impact '.concat(spec.impact,' is not a valid impact'));this.impact=spec.impact;}};var import_dot2=__toModule(require_doT());var dotRegex=/\\{\\{.+?\\}\\}/g;var Audit=function(){function Audit(audit){_classCallCheck(this,Audit);this.lang='en';this.defaultConfig=audit;this.standards=standards_default;this._init();this._defaultLocale=null;}_createClass(Audit,[{key:'_setDefaultLocale',value:function _setDefaultLocale(){if(this._defaultLocale){return;}var locale={checks:{},rules:{},failureSummaries:{},incompleteFallbackMessage:'',lang:this.lang};var checkIDs=Object.keys(this.data.checks);for(var _i37=0;_i37<checkIDs.length;_i37++){var _id6=checkIDs[_i37];var check=this.data.checks[_id6];var _check$messages=check.messages,pass=_check$messages.pass,fail=_check$messages.fail,incomplete=_check$messages.incomplete;locale.checks[_id6]={pass:pass,fail:fail,incomplete:incomplete};}var ruleIDs=Object.keys(this.data.rules);for(var _i38=0;_i38<ruleIDs.length;_i38++){var _id7=ruleIDs[_i38];var rule=this.data.rules[_id7];var description=rule.description,help=rule.help;locale.rules[_id7]={description:description,help:help};}var failureSummaries=Object.keys(this.data.failureSummaries);for(var _i39=0;_i39<failureSummaries.length;_i39++){var type2=failureSummaries[_i39];var failureSummary2=this.data.failureSummaries[type2];var failureMessage=failureSummary2.failureMessage;locale.failureSummaries[type2]={failureMessage:failureMessage};}locale.incompleteFallbackMessage=this.data.incompleteFallbackMessage;this._defaultLocale=locale;}},{key:'_resetLocale',value:function _resetLocale(){var defaultLocale=this._defaultLocale;if(!defaultLocale){return;}this.applyLocale(defaultLocale);}},{key:'_applyCheckLocale',value:function _applyCheckLocale(checks){var keys=Object.keys(checks);for(var _i40=0;_i40<keys.length;_i40++){var _id8=keys[_i40];if(!this.data.checks[_id8]){throw new Error('Locale provided for unknown check: \"'.concat(_id8,'\"'));}this.data.checks[_id8]=mergeCheckLocale(this.data.checks[_id8],checks[_id8]);}}},{key:'_applyRuleLocale',value:function _applyRuleLocale(rules){var keys=Object.keys(rules);for(var _i41=0;_i41<keys.length;_i41++){var _id9=keys[_i41];if(!this.data.rules[_id9]){throw new Error('Locale provided for unknown rule: \"'.concat(_id9,'\"'));}this.data.rules[_id9]=mergeRuleLocale(this.data.rules[_id9],rules[_id9]);}}},{key:'_applyFailureSummaries',value:function _applyFailureSummaries(messages){var keys=Object.keys(messages);for(var _i42=0;_i42<keys.length;_i42++){var _key8=keys[_i42];if(!this.data.failureSummaries[_key8]){throw new Error('Locale provided for unknown failureMessage: \"'.concat(_key8,'\"'));}this.data.failureSummaries[_key8]=mergeFailureMessage(this.data.failureSummaries[_key8],messages[_key8]);}}},{key:'applyLocale',value:function applyLocale(locale){this._setDefaultLocale();if(locale.checks){this._applyCheckLocale(locale.checks);}if(locale.rules){this._applyRuleLocale(locale.rules);}if(locale.failureSummaries){this._applyFailureSummaries(locale.failureSummaries,'failureSummaries');}if(locale.incompleteFallbackMessage){this.data.incompleteFallbackMessage=mergeFallbackMessage(this.data.incompleteFallbackMessage,locale.incompleteFallbackMessage);}if(locale.lang){this.lang=locale.lang;}}},{key:'setAllowedOrigins',value:function setAllowedOrigins(allowedOrigins){var defaultOrigin=getDefaultOrigin();this.allowedOrigins=[];var _iterator22=_createForOfIteratorHelper(allowedOrigins),_step22;try{for(_iterator22.s();!(_step22=_iterator22.n()).done;){var origin=_step22.value;if(origin===constants_default.allOrigins){this.allowedOrigins=['*'];return;}else if(origin!==constants_default.sameOrigin){this.allowedOrigins.push(origin);}else if(defaultOrigin){this.allowedOrigins.push(defaultOrigin);}}}catch(err){_iterator22.e(err);}finally{_iterator22.f();}}},{key:'_init',value:function _init(){var audit=getDefaultConfiguration(this.defaultConfig);this.lang=audit.lang||'en';this.reporter=audit.reporter;this.commands={};this.rules=[];this.checks={};this.brand='axe';this.application='axeAPI';this.tagExclude=['experimental'];this.noHtml=audit.noHtml;this.allowedOrigins=audit.allowedOrigins;unpackToObject(audit.rules,this,'addRule');unpackToObject(audit.checks,this,'addCheck');this.data={};this.data.checks=audit.data&&audit.data.checks||{};this.data.rules=audit.data&&audit.data.rules||{};this.data.failureSummaries=audit.data&&audit.data.failureSummaries||{};this.data.incompleteFallbackMessage=audit.data&&audit.data.incompleteFallbackMessage||'';this._constructHelpUrls();}},{key:'registerCommand',value:function registerCommand(command){this.commands[command.id]=command.callback;}},{key:'addRule',value:function addRule(spec){if(spec.metadata){this.data.rules[spec.id]=spec.metadata;}var rule=this.getRule(spec.id);if(rule){rule.configure(spec);}else{this.rules.push(new Rule(spec,this));}}},{key:'addCheck',value:function addCheck(spec){var metadata=spec.metadata;if(_typeof(metadata)==='object'){this.data.checks[spec.id]=metadata;if(_typeof(metadata.messages)==='object'){Object.keys(metadata.messages).filter(function(prop){return metadata.messages.hasOwnProperty(prop)&&typeof metadata.messages[prop]==='string';}).forEach(function(prop){if(metadata.messages[prop].indexOf('function')===0){metadata.messages[prop]=new Function('return '+metadata.messages[prop]+';')();}});}}if(this.checks[spec.id]){this.checks[spec.id].configure(spec);}else{this.checks[spec.id]=new check_default(spec);}}},{key:'run',value:function run(context,options,resolve,reject){this.normalizeOptions(options);dq_element_default.setRunOptions(options);axe._selectCache=[];var allRulesToRun=getRulesToRun(this.rules,context,options);var runNowRules=allRulesToRun.now;var runLaterRules=allRulesToRun.later;var nowRulesQueue=queue_default();runNowRules.forEach(function(rule){nowRulesQueue.defer(getDefferedRule(rule,context,options));});var preloaderQueue=queue_default();if(runLaterRules.length){preloaderQueue.defer(function(res){_preload(options).then(function(assets){return res(assets);})['catch'](function(err2){console.warn('Couldn\\'t load preload assets: ',err2);res(void 0);});});}var queueForNowRulesAndPreloader=queue_default();queueForNowRulesAndPreloader.defer(nowRulesQueue);queueForNowRulesAndPreloader.defer(preloaderQueue);queueForNowRulesAndPreloader.then(function(nowRulesAndPreloaderResults){var assetsFromQueue=nowRulesAndPreloaderResults.pop();if(assetsFromQueue&&assetsFromQueue.length){var assets=assetsFromQueue[0];if(assets){context=_extends({},context,assets);}}var nowRulesResults=nowRulesAndPreloaderResults[0];if(!runLaterRules.length){axe._selectCache=void 0;resolve(nowRulesResults.filter(function(result){return!!result;}));return;}var laterRulesQueue=queue_default();runLaterRules.forEach(function(rule){var deferredRule=getDefferedRule(rule,context,options);laterRulesQueue.defer(deferredRule);});laterRulesQueue.then(function(laterRuleResults){axe._selectCache=void 0;resolve(nowRulesResults.concat(laterRuleResults).filter(function(result){return!!result;}));})['catch'](reject);})['catch'](reject);}},{key:'after',value:function after(results,options){var rules=this.rules;return results.map(function(ruleResult){var rule=find_by_default(rules,'id',ruleResult.id);if(!rule){throw new Error('Result for unknown rule. You may be running mismatch axe-core versions');}return rule.after(ruleResult,options);});}},{key:'getRule',value:function getRule(ruleId){return this.rules.find(function(rule){return rule.id===ruleId;});}},{key:'normalizeOptions',value:function normalizeOptions(options){var audit=this;var tags=[];var ruleIds=[];audit.rules.forEach(function(rule){ruleIds.push(rule.id);rule.tags.forEach(function(tag){if(!tags.includes(tag)){tags.push(tag);}});});if(['object','string'].includes(_typeof(options.runOnly))){if(typeof options.runOnly==='string'){options.runOnly=[options.runOnly];}if(Array.isArray(options.runOnly)){var hasTag=options.runOnly.find(function(value){return tags.includes(value);});var hasRule=options.runOnly.find(function(value){return ruleIds.includes(value);});if(hasTag&&hasRule){throw new Error('runOnly cannot be both rules and tags');}if(hasRule){options.runOnly={type:'rule',values:options.runOnly};}else{options.runOnly={type:'tag',values:options.runOnly};}}var only=options.runOnly;if(only.value&&!only.values){only.values=only.value;delete only.value;}if(!Array.isArray(only.values)||only.values.length===0){throw new Error('runOnly.values must be a non-empty array');}if(['rule','rules'].includes(only.type)){only.type='rule';only.values.forEach(function(ruleId){if(!ruleIds.includes(ruleId)){throw new Error('unknown rule `'+ruleId+'` in options.runOnly');}});}else if(['tag','tags',void 0].includes(only.type)){only.type='tag';var unmatchedTags=only.values.filter(function(tag){return!tags.includes(tag)&&!/wcag2[1-3]a{1,3}/.test(tag);});if(unmatchedTags.length!==0){axe.log('Could not find tags `'+unmatchedTags.join('`, `')+'`');}}else{throw new Error('Unknown runOnly type \\''.concat(only.type,'\\''));}}if(_typeof(options.rules)==='object'){Object.keys(options.rules).forEach(function(ruleId){if(!ruleIds.includes(ruleId)){throw new Error('unknown rule `'+ruleId+'` in options.rules');}});}return options;}},{key:'setBranding',value:function setBranding(branding){var previous={brand:this.brand,application:this.application};if(typeof branding==='string'){this.application=branding;}if(branding&&branding.hasOwnProperty('brand')&&branding.brand&&typeof branding.brand==='string'){this.brand=branding.brand;}if(branding&&branding.hasOwnProperty('application')&&branding.application&&typeof branding.application==='string'){this.application=branding.application;}this._constructHelpUrls(previous);}},{key:'_constructHelpUrls',value:function _constructHelpUrls(){var _this13=this;var previous=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var version=(axe.version.match(/^[1-9][0-9]*\\.[0-9]+/)||['x.y'])[0];this.rules.forEach(function(rule){if(!_this13.data.rules[rule.id]){_this13.data.rules[rule.id]={};}var metaData=_this13.data.rules[rule.id];if(typeof metaData.helpUrl!=='string'||previous&&metaData.helpUrl===getHelpUrl(previous,rule.id,version)){metaData.helpUrl=getHelpUrl(_this13,rule.id,version);}});}},{key:'resetRulesAndChecks',value:function resetRulesAndChecks(){this._init();this._resetLocale();}}]);return Audit;}();var audit_default=Audit;function getDefaultOrigin(){if(window.origin&&window.origin!=='null'){return window.origin;}if(window.location&&window.location.origin&&window.location.origin!=='null'){return window.location.origin;}}function getDefaultConfiguration(audit){var config;if(audit){config=_clone(audit);config.commons=audit.commons;}else{config={};}config.reporter=config.reporter||null;config.noHtml=config.noHtml||false;if(!config.allowedOrigins){var defaultOrigin=getDefaultOrigin();config.allowedOrigins=defaultOrigin?[defaultOrigin]:[];}config.rules=config.rules||[];config.checks=config.checks||[];config.data=_extends({checks:{},rules:{}},config.data);return config;}function unpackToObject(collection,audit,method){var i,l;for(i=0,l=collection.length;i<l;i++){audit[method](collection[i]);}}var mergeCheckLocale=function mergeCheckLocale(a2,b2){var pass=b2.pass,fail=b2.fail;if(typeof pass==='string'&&dotRegex.test(pass)){pass=import_dot2['default'].compile(pass);}if(typeof fail==='string'&&dotRegex.test(fail)){fail=import_dot2['default'].compile(fail);}return _extends({},a2,{messages:{pass:pass||a2.messages.pass,fail:fail||a2.messages.fail,incomplete:_typeof(a2.messages.incomplete)==='object'?_extends({},a2.messages.incomplete,b2.incomplete):b2.incomplete}});};var mergeRuleLocale=function mergeRuleLocale(a2,b2){var help=b2.help,description=b2.description;if(typeof help==='string'&&dotRegex.test(help)){help=import_dot2['default'].compile(help);}if(typeof description==='string'&&dotRegex.test(description)){description=import_dot2['default'].compile(description);}return _extends({},a2,{help:help||a2.help,description:description||a2.description});};var mergeFailureMessage=function mergeFailureMessage(a2,b2){var failureMessage=b2.failureMessage;if(typeof failureMessage==='string'&&dotRegex.test(failureMessage)){failureMessage=import_dot2['default'].compile(failureMessage);}return _extends({},a2,{failureMessage:failureMessage||a2.failureMessage});};var mergeFallbackMessage=function mergeFallbackMessage(a2,b2){if(typeof b2==='string'&&dotRegex.test(b2)){b2=import_dot2['default'].compile(b2);}return b2||a2;};function getRulesToRun(rules,context,options){var base={now:[],later:[]};var splitRules=rules.reduce(function(out,rule){if(!rule_should_run_default(rule,context,options)){return out;}if(rule.preload){out.later.push(rule);return out;}out.now.push(rule);return out;},base);return splitRules;}function getDefferedRule(rule,context,options){if(options.performanceTimer){performance_timer_default.mark('mark_rule_start_'+rule.id);}return function(resolve,reject){rule.run(context,options,function(ruleResult){resolve(ruleResult);},function(err2){if(!options.debug){var errResult=Object.assign(new rule_result_default(rule),{result:constants_default.CANTTELL,description:'An error occured while running this rule',message:err2.message,stack:err2.stack,error:err2,errorNode:err2.errorNode});resolve(errResult);}else{reject(err2);}});};}function getHelpUrl(_ref143,ruleId,version){var brand=_ref143.brand,application=_ref143.application,lang=_ref143.lang;return constants_default.helpUrlBase+brand+'/'+(version||axe.version.substring(0,axe.version.lastIndexOf('.')))+'/'+ruleId+'?application='+encodeURIComponent(application)+(lang&&lang!=='en'?'&lang='+encodeURIComponent(lang):'');}function setupGlobals(context){var hasWindow=window&&'Node'in window&&'NodeList'in window;var hasDoc=!!document;if(hasWindow&&hasDoc){return;}if(!context||!context.ownerDocument){throw new Error('Required \"window\" or \"document\" globals not defined and cannot be deduced from the context. Either set the globals before running or pass in a valid Element.');}if(!hasDoc){cache_default.set('globalDocumentSet',true);document=context.ownerDocument;}if(!hasWindow){cache_default.set('globalWindowSet',true);window=document.defaultView;}}function resetGlobals(){if(cache_default.get('globalDocumentSet')){cache_default.set('globalDocumentSet',false);document=null;}if(cache_default.get('globalWindowSet')){cache_default.set('globalWindowSet',false);window=null;}}function teardown(){resetGlobals();axe._memoizedFns.forEach(function(fn){return fn.clear();});cache_default.clear();axe._tree=void 0;axe._selectorData=void 0;axe._selectCache=void 0;}var teardown_default=teardown;function runRules(context,options,resolve,reject){try{context=new Context(context);axe._tree=context.flatTree;axe._selectorData=_getSelectorData(context.flatTree);}catch(e){teardown_default();return reject(e);}var q=queue_default();var audit=axe._audit;if(options.performanceTimer){performance_timer_default.auditStart();}if(context.frames.length&&options.iframes!==false){q.defer(function(res,rej){_collectResultsFromFrames(context,options,'rules',null,res,rej);});}q.defer(function(res,rej){audit.run(context,options,res,rej);});q.then(function(data){try{if(options.performanceTimer){performance_timer_default.auditEnd();}var results=merge_results_default(data.map(function(res){return{results:res};}));if(context.initiator){results=audit.after(results,options);results.forEach(_publishMetaData);results=results.map(_finalizeRuleResult);}try{resolve(results,teardown_default);}catch(e){teardown_default();log_default(e);}}catch(e){teardown_default();reject(e);}})['catch'](function(e){teardown_default();reject(e);});}function load(audit){axe._audit=new audit_default(audit);}function runCommand(data,keepalive,callback){var resolve=callback;var reject=function reject2(err2){if(err2 instanceof Error===false){err2=new Error(err2);}callback(err2);};var context=data&&data.context||{};if(context.hasOwnProperty('include')&&!context.include.length){context.include=[document];}var options=data&&data.options||{};switch(data.command){case'rules':return runRules(context,options,function(results,cleanupFn){results=node_serializer_default.mapRawResults(results);resolve(results);cleanupFn();},reject);case'cleanup-plugin':return cleanup_default(resolve,reject);default:if(axe._audit&&axe._audit.commands&&axe._audit.commands[data.command]){return axe._audit.commands[data.command](data,callback);}}}if(window.top!==window){_respondable.subscribe('axe.start',runCommand);_respondable.subscribe('axe.ping',function(data,keepalive,respond){respond({axe:true});});}function Plugin(spec){this._run=spec.run;this._collect=spec.collect;this._registry={};spec.commands.forEach(function(command){axe._audit.registerCommand(command);});}Plugin.prototype.run=function run3(){return this._run.apply(this,arguments);};Plugin.prototype.collect=function collect(){return this._collect.apply(this,arguments);};Plugin.prototype.cleanup=function cleanup2(done){var q=axe.utils.queue();var that=this;Object.keys(this._registry).forEach(function(key){q.defer(function(_done){that._registry[key].cleanup(_done);});});q.then(done);};Plugin.prototype.add=function add(impl){this._registry[impl.id]=impl;};function registerPlugin(plugin){axe.plugins[plugin.id]=new Plugin(plugin);}var plugins_default=registerPlugin;function reset(){var audit=axe._audit;if(!audit){throw new Error('No audit configured');}audit.resetRulesAndChecks();resetStandards();}var reset_default=reset;function runVirtualRule(ruleId,vNode){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};options.reporter=options.reporter||axe._audit.reporter||'v1';axe._selectorData={};if(!(vNode instanceof abstract_virtual_node_default)){vNode=new serial_virtual_node_default(vNode);}var rule=_getRule(ruleId);if(!rule){throw new Error('unknown rule `'+ruleId+'`');}rule=Object.create(rule,{excludeHidden:{value:false}});var context={initiator:true,include:[vNode],exclude:[],frames:[],page:false,focusable:true,size:{},flatTree:[]};var rawResults=rule.runSync(context,options);_publishMetaData(rawResults);_finalizeRuleResult(rawResults);var results=aggregate_result_default([rawResults]);results.violations.forEach(function(result){return result.nodes.forEach(function(nodeResult){nodeResult.failureSummary=failure_summary_default(nodeResult);});});return _extends({},_getEnvironmentData(),results,{toolOptions:options});}function normalizeRunParams(_ref144){var _ref146,_options$reporter,_axe$_audit;var _ref145=_slicedToArray(_ref144,3),context=_ref145[0],options=_ref145[1],callback=_ref145[2];var typeErr=new TypeError('axe.run arguments are invalid');if(!isContextSpec(context)){if(callback!==void 0){throw typeErr;}callback=options;options=context;context=document;}if(_typeof(options)!=='object'){if(callback!==void 0){throw typeErr;}callback=options;options={};}if(typeof callback!=='function'&&callback!==void 0){throw typeErr;}options=_clone(options);options.reporter=(_ref146=(_options$reporter=options.reporter)!==null&&_options$reporter!==void 0?_options$reporter:(_axe$_audit=axe._audit)===null||_axe$_audit===void 0?void 0:_axe$_audit.reporter)!==null&&_ref146!==void 0?_ref146:'v1';return{context:context,options:options,callback:callback};}var noop2=function noop2(){};function run4(){for(var _len7=arguments.length,args=new Array(_len7),_key9=0;_key9<_len7;_key9++){args[_key9]=arguments[_key9];}setupGlobals(args[0]);var _normalizeRunParams=normalizeRunParams(args),context=_normalizeRunParams.context,options=_normalizeRunParams.options,_normalizeRunParams$c=_normalizeRunParams.callback,callback=_normalizeRunParams$c===void 0?noop2:_normalizeRunParams$c;var _getPromiseHandlers=getPromiseHandlers(callback),thenable=_getPromiseHandlers.thenable,resolve=_getPromiseHandlers.resolve,reject=_getPromiseHandlers.reject;try{assert_default(axe._audit,'No audit configured');assert_default(!axe._running,'Axe is already running. Use `await axe.run()` to wait for the previous run to finish before starting a new run.');}catch(e){return handleError(e,callback);}axe._running=true;if(options.performanceTimer){axe.utils.performanceTimer.start();}function handleRunRules(rawResults,teardown2){var respond=function respond(results){axe._running=false;teardown2();try{resolve(results);}catch(e){axe.log(e);}};var wrappedReject=function wrappedReject(err2){axe._running=false;teardown2();try{reject(err2);}catch(e){axe.log(e);}};if(options.performanceTimer){axe.utils.performanceTimer.end();}try{createReport(rawResults,options,respond,wrappedReject);}catch(err2){wrappedReject(err2);}}function errorRunRules(err2){if(options.performanceTimer){axe.utils.performanceTimer.end();}axe._running=false;callback(err2);reject(err2);}axe._runRules(context,options,handleRunRules,errorRunRules);return thenable;}function getPromiseHandlers(callback){var thenable,reject,resolve;if(typeof Promise==='function'&&callback===noop2){thenable=new Promise(function(_resolve,_reject){reject=_reject;resolve=_resolve;});}else{resolve=function resolve(result){return callback(null,result);};reject=function reject(err2){return callback(err2);};}return{thenable:thenable,reject:reject,resolve:resolve};}function createReport(rawResults,options,respond,reject){var reporter=getReporter(options.reporter);var results=reporter(rawResults,options,respond,reject);if(results!==void 0){respond(results);}}function handleError(err2,callback){if(typeof callback==='function'&&callback!==noop2){callback(err2.message);return;}throw err2;}function runPartial(){for(var _len8=arguments.length,args=new Array(_len8),_key10=0;_key10<_len8;_key10++){args[_key10]=arguments[_key10];}var _normalizeRunParams2=normalizeRunParams(args),options=_normalizeRunParams2.options,context=_normalizeRunParams2.context;assert_default(axe._audit,'Axe is not configured. Audit is missing.');assert_default(!axe._running,'Axe is already running. Use `await axe.run()` to wait for the previous run to finish before starting a new run.');var contextObj=new Context(context,axe._tree);axe._tree=contextObj.flatTree;axe._selectorData=_getSelectorData(contextObj.flatTree);axe._running=true;options.elementRef=false;return new Promise(function(res,rej){axe._audit.run(contextObj,options,res,rej);}).then(function(results){results=node_serializer_default.mapRawResults(results);var frames=contextObj.frames.map(function(_ref147){var node=_ref147.node;return node_serializer_default.toSpec(node);});var environmentData;if(contextObj.initiator){environmentData=_getEnvironmentData();}axe._running=false;teardown_default();return{results:results,frames:frames,environmentData:environmentData};})['catch'](function(err2){axe._running=false;teardown_default();return Promise.reject(err2);});}function finishRun(partialResults){var _ref149,_options$reporter2,_axe$_audit2;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};options=_clone(options);var _ref148=partialResults.find(function(r){return r.environmentData;})||{},environmentData=_ref148.environmentData;axe._audit.normalizeOptions(options);options.reporter=(_ref149=(_options$reporter2=options.reporter)!==null&&_options$reporter2!==void 0?_options$reporter2:(_axe$_audit2=axe._audit)===null||_axe$_audit2===void 0?void 0:_axe$_audit2.reporter)!==null&&_ref149!==void 0?_ref149:'v1';setFrameSpec(partialResults);var results=merge_results_default(partialResults);results=axe._audit.after(results,options);results.forEach(_publishMetaData);results=results.map(_finalizeRuleResult);return createReport2(results,_extends({environmentData:environmentData},options));}function setFrameSpec(partialResults){var frameStack=[];var _iterator23=_createForOfIteratorHelper(partialResults),_step23;try{for(_iterator23.s();!(_step23=_iterator23.n()).done;){var partialResult=_step23.value;var frameSpec=frameStack.shift();if(!partialResult){continue;}partialResult.frameSpec=frameSpec!==null&&frameSpec!==void 0?frameSpec:null;var frameSpecs=getMergedFrameSpecs(partialResult);frameStack.unshift.apply(frameStack,_toConsumableArray(frameSpecs));}}catch(err){_iterator23.e(err);}finally{_iterator23.f();}}function getMergedFrameSpecs(_ref150){var childFrameSpecs=_ref150.frames,parentFrameSpec=_ref150.frameSpec;if(!parentFrameSpec){return childFrameSpecs;}return childFrameSpecs.map(function(childFrameSpec){return node_serializer_default.mergeSpecs(childFrameSpec,parentFrameSpec);});}function createReport2(results,options){return new Promise(function(resolve,reject){var reporter=getReporter(options.reporter);reporter(results,options,resolve,reject);});}function setup(node){if(axe._tree){throw new Error('Axe is already setup. Call `axe.teardown()` before calling `axe.setup` again.');}if(node&&_typeof(node.documentElement)==='object'&&_typeof(node.defaultView)==='object'){node=node.documentElement;}setupGlobals(node);axe._tree=_getFlattenedTree(node);axe._selectorData=_getSelectorData(axe._tree);return axe._tree[0];}var setup_default=setup;var naReporter=function naReporter(results,options,callback){console.warn('\"na\" reporter will be deprecated in axe v4.0. Use the \"v2\" reporter instead.');if(typeof options==='function'){callback=options;options={};}var _options3=options,environmentData=_options3.environmentData,toolOptions=_objectWithoutProperties(_options3,_excluded15);callback(_extends({},_getEnvironmentData(environmentData),{toolOptions:toolOptions},processAggregate(results,options)));};var na_default=naReporter;var noPassesReporter=function noPassesReporter(results,options,callback){if(typeof options==='function'){callback=options;options={};}var _options4=options,environmentData=_options4.environmentData,toolOptions=_objectWithoutProperties(_options4,_excluded16);options.resultTypes=['violations'];var _processAggregate=processAggregate(results,options),violations=_processAggregate.violations;callback(_extends({},_getEnvironmentData(environmentData),{toolOptions:toolOptions,violations:violations}));};var no_passes_default=noPassesReporter;var rawReporter=function rawReporter(results,options,callback){if(typeof options==='function'){callback=options;options={};}if(!results||!Array.isArray(results)){return callback(results);}var transformedResults=results.map(function(result){var transformedResult=_extends({},result);var types=['passes','violations','incomplete','inapplicable'];for(var _i43=0,_types=types;_i43<_types.length;_i43++){var type2=_types[_i43];transformedResult[type2]=node_serializer_default.mapRawNodeResults(transformedResult[type2]);}return transformedResult;});callback(transformedResults);};var raw_default=rawReporter;var rawEnvReporter=function rawEnvReporter(results,options,callback){if(typeof options==='function'){callback=options;options={};}var _options5=options,environmentData=_options5.environmentData,toolOptions=_objectWithoutProperties(_options5,_excluded17);raw_default(results,toolOptions,function(raw){var env=_getEnvironmentData(environmentData);callback({raw:raw,env:env});});};var raw_env_default=rawEnvReporter;var v1Reporter=function v1Reporter(results,options,callback){if(typeof options==='function'){callback=options;options={};}var _options6=options,environmentData=_options6.environmentData,toolOptions=_objectWithoutProperties(_options6,_excluded18);var out=processAggregate(results,options);var addFailureSummaries=function addFailureSummaries(result){result.nodes.forEach(function(nodeResult){nodeResult.failureSummary=failure_summary_default(nodeResult);});};out.incomplete.forEach(addFailureSummaries);out.violations.forEach(addFailureSummaries);callback(_extends({},_getEnvironmentData(environmentData),{toolOptions:toolOptions},out));};var v1_default=v1Reporter;var v2Reporter=function v2Reporter(results,options,callback){if(typeof options==='function'){callback=options;options={};}var _options7=options,environmentData=_options7.environmentData,toolOptions=_objectWithoutProperties(_options7,_excluded19);var out=processAggregate(results,options);callback(_extends({},_getEnvironmentData(environmentData),{toolOptions:toolOptions},out));};var v2_default=v2Reporter;var _thisWillBeDeletedDoNotUse={base:{Audit:audit_default,CheckResult:check_result_default,Check:check_default,Context:Context,RuleResult:rule_result_default,Rule:Rule,metadataFunctionMap:metadata_function_map_default},public:{reporters:reporters},helpers:{failureSummary:failure_summary_default,incompleteFallbackMessage:incompleteFallbackMessage,processAggregate:processAggregate},utils:{setDefaultFrameMessenger:setDefaultFrameMessenger,cacheNodeSelectors:cacheNodeSelectors,getNodesMatchingExpression:getNodesMatchingExpression,convertSelector:_convertSelector},commons:{dom:{nativelyHidden:nativelyHidden,displayHidden:displayHidden,visibilityHidden:visibilityHidden,contentVisibiltyHidden:contentVisibiltyHidden,ariaHidden:ariaHidden,opacityHidden:opacityHidden,scrollHidden:scrollHidden,overflowHidden:overflowHidden,clipHidden:clipHidden,areaHidden:areaHidden,detailsHidden:detailsHidden}}};var exposed_for_testing_default=_thisWillBeDeletedDoNotUse;axe._thisWillBeDeletedDoNotUse=exposed_for_testing_default;axe.constants=constants_default;axe.log=log_default;axe.AbstractVirtualNode=abstract_virtual_node_default;axe.SerialVirtualNode=serial_virtual_node_default;axe.VirtualNode=virtual_node_default;axe._cache=cache_default;axe.imports=imports_exports;axe.cleanup=cleanup_default;axe.configure=configure_default;axe.frameMessenger=frameMessenger2;axe.getRules=get_rules_default;axe._load=load;axe.plugins={};axe.registerPlugin=plugins_default;axe.hasReporter=hasReporter;axe.getReporter=getReporter;axe.addReporter=addReporter;axe.reset=reset_default;axe._runRules=runRules;axe.runVirtualRule=runVirtualRule;axe.run=run4;axe.setup=setup_default;axe.teardown=teardown_default;axe.runPartial=runPartial;axe.finishRun=finishRun;axe.commons=commons_exports;axe.utils=utils_exports;axe.addReporter('na',na_default);axe.addReporter('no-passes',no_passes_default);axe.addReporter('rawEnv',raw_env_default);axe.addReporter('raw',raw_default);axe.addReporter('v1',v1_default);axe.addReporter('v2',v2_default,true);})();'use strict';axe._load({lang:'en',data:{rules:{accesskeys:{description:'Ensures every accesskey attribute value is unique',help:'accesskey attribute value should be unique'},'area-alt':{description:'Ensures <area> elements of image maps have alternate text',help:'Active <area> elements must have alternate text'},'aria-allowed-attr':{description:'Ensures an element\\'s role supports its ARIA attributes',help:'Elements must only use supported ARIA attributes'},'aria-allowed-role':{description:'Ensures role attribute has an appropriate value for the element',help:'ARIA role should be appropriate for the element'},'aria-braille-equivalent':{description:'Ensure aria-braillelabel and aria-brailleroledescription have a non-braille equivalent',help:'aria-braille attributes must have a non-braille equivalent'},'aria-command-name':{description:'Ensures every ARIA button, link and menuitem has an accessible name',help:'ARIA commands must have an accessible name'},'aria-conditional-attr':{description:'Ensures ARIA attributes are used as described in the specification of the element\\'s role',help:'ARIA attributes must be used as specified for the element\\'s role'},'aria-deprecated-role':{description:'Ensures elements do not use deprecated roles',help:'Deprecated ARIA roles must not be used'},'aria-dialog-name':{description:'Ensures every ARIA dialog and alertdialog node has an accessible name',help:'ARIA dialog and alertdialog nodes should have an accessible name'},'aria-hidden-body':{description:'Ensures aria-hidden=\"true\" is not present on the document body.',help:'aria-hidden=\"true\" must not be present on the document body'},'aria-hidden-focus':{description:'Ensures aria-hidden elements are not focusable nor contain focusable elements',help:'ARIA hidden element must not be focusable or contain focusable elements'},'aria-input-field-name':{description:'Ensures every ARIA input field has an accessible name',help:'ARIA input fields must have an accessible name'},'aria-meter-name':{description:'Ensures every ARIA meter node has an accessible name',help:'ARIA meter nodes must have an accessible name'},'aria-progressbar-name':{description:'Ensures every ARIA progressbar node has an accessible name',help:'ARIA progressbar nodes must have an accessible name'},'aria-prohibited-attr':{description:'Ensures ARIA attributes are not prohibited for an element\\'s role',help:'Elements must only use permitted ARIA attributes'},'aria-required-attr':{description:'Ensures elements with ARIA roles have all required ARIA attributes',help:'Required ARIA attributes must be provided'},'aria-required-children':{description:'Ensures elements with an ARIA role that require child roles contain them',help:'Certain ARIA roles must contain particular children'},'aria-required-parent':{description:'Ensures elements with an ARIA role that require parent roles are contained by them',help:'Certain ARIA roles must be contained by particular parents'},'aria-roledescription':{description:'Ensure aria-roledescription is only used on elements with an implicit or explicit role',help:'aria-roledescription must be on elements with a semantic role'},'aria-roles':{description:'Ensures all elements with a role attribute use a valid value',help:'ARIA roles used must conform to valid values'},'aria-text':{description:'Ensures role=\"text\" is used on elements with no focusable descendants',help:'\"role=text\" should have no focusable descendants'},'aria-toggle-field-name':{description:'Ensures every ARIA toggle field has an accessible name',help:'ARIA toggle fields must have an accessible name'},'aria-tooltip-name':{description:'Ensures every ARIA tooltip node has an accessible name',help:'ARIA tooltip nodes must have an accessible name'},'aria-treeitem-name':{description:'Ensures every ARIA treeitem node has an accessible name',help:'ARIA treeitem nodes should have an accessible name'},'aria-valid-attr-value':{description:'Ensures all ARIA attributes have valid values',help:'ARIA attributes must conform to valid values'},'aria-valid-attr':{description:'Ensures attributes that begin with aria- are valid ARIA attributes',help:'ARIA attributes must conform to valid names'},'audio-caption':{description:'Ensures <audio> elements have captions',help:'<audio> elements must have a captions track'},'autocomplete-valid':{description:'Ensure the autocomplete attribute is correct and suitable for the form field',help:'autocomplete attribute must be used correctly'},'avoid-inline-spacing':{description:'Ensure that text spacing set through style attributes can be adjusted with custom stylesheets',help:'Inline text spacing must be adjustable with custom stylesheets'},blink:{description:'Ensures <blink> elements are not used',help:'<blink> elements are deprecated and must not be used'},'button-name':{description:'Ensures buttons have discernible text',help:'Buttons must have discernible text'},bypass:{description:'Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content',help:'Page must have means to bypass repeated blocks'},'color-contrast-enhanced':{description:'Ensures the contrast between foreground and background colors meets WCAG 2 AAA enhanced contrast ratio thresholds',help:'Elements must meet enhanced color contrast ratio thresholds'},'color-contrast':{description:'Ensures the contrast between foreground and background colors meets WCAG 2 AA minimum contrast ratio thresholds',help:'Elements must meet minimum color contrast ratio thresholds'},'css-orientation-lock':{description:'Ensures content is not locked to any specific display orientation, and the content is operable in all display orientations',help:'CSS Media queries must not lock display orientation'},'definition-list':{description:'Ensures <dl> elements are structured correctly',help:'<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script>, <template> or <div> elements'},dlitem:{description:'Ensures <dt> and <dd> elements are contained by a <dl>',help:'<dt> and <dd> elements must be contained by a <dl>'},'document-title':{description:'Ensures each HTML document contains a non-empty <title> element',help:'Documents must have <title> element to aid in navigation'},'duplicate-id-active':{description:'Ensures every id attribute value of active elements is unique',help:'IDs of active elements must be unique'},'duplicate-id-aria':{description:'Ensures every id attribute value used in ARIA and in labels is unique',help:'IDs used in ARIA and labels must be unique'},'duplicate-id':{description:'Ensures every id attribute value is unique',help:'id attribute value must be unique'},'empty-heading':{description:'Ensures headings have discernible text',help:'Headings should not be empty'},'empty-table-header':{description:'Ensures table headers have discernible text',help:'Table header text should not be empty'},'focus-order-semantics':{description:'Ensures elements in the focus order have a role appropriate for interactive content',help:'Elements in the focus order should have an appropriate role'},'form-field-multiple-labels':{description:'Ensures form field does not have multiple label elements',help:'Form field must not have multiple label elements'},'frame-focusable-content':{description:'Ensures <frame> and <iframe> elements with focusable content do not have tabindex=-1',help:'Frames with focusable content must not have tabindex=-1'},'frame-tested':{description:'Ensures <iframe> and <frame> elements contain the axe-core script',help:'Frames should be tested with axe-core'},'frame-title-unique':{description:'Ensures <iframe> and <frame> elements contain a unique title attribute',help:'Frames must have a unique title attribute'},'frame-title':{description:'Ensures <iframe> and <frame> elements have an accessible name',help:'Frames must have an accessible name'},'heading-order':{description:'Ensures the order of headings is semantically correct',help:'Heading levels should only increase by one'},'hidden-content':{description:'Informs users about hidden content.',help:'Hidden content on the page should be analyzed'},'html-has-lang':{description:'Ensures every HTML document has a lang attribute',help:'<html> element must have a lang attribute'},'html-lang-valid':{description:'Ensures the lang attribute of the <html> element has a valid value',help:'<html> element must have a valid value for the lang attribute'},'html-xml-lang-mismatch':{description:'Ensure that HTML elements with both valid lang and xml:lang attributes agree on the base language of the page',help:'HTML elements with lang and xml:lang must have the same base language'},'identical-links-same-purpose':{description:'Ensure that links with the same accessible name serve a similar purpose',help:'Links with the same name must have a similar purpose'},'image-alt':{description:'Ensures <img> elements have alternate text or a role of none or presentation',help:'Images must have alternate text'},'image-redundant-alt':{description:'Ensure image alternative is not repeated as text',help:'Alternative text of images should not be repeated as text'},'input-button-name':{description:'Ensures input buttons have discernible text',help:'Input buttons must have discernible text'},'input-image-alt':{description:'Ensures <input type=\"image\"> elements have alternate text',help:'Image buttons must have alternate text'},'label-content-name-mismatch':{description:'Ensures that elements labelled through their content must have their visible text as part of their accessible name',help:'Elements must have their visible text as part of their accessible name'},'label-title-only':{description:'Ensures that every form element has a visible label and is not solely labeled using hidden labels, or the title or aria-describedby attributes',help:'Form elements should have a visible label'},label:{description:'Ensures every form element has a label',help:'Form elements must have labels'},'landmark-banner-is-top-level':{description:'Ensures the banner landmark is at top level',help:'Banner landmark should not be contained in another landmark'},'landmark-complementary-is-top-level':{description:'Ensures the complementary landmark or aside is at top level',help:'Aside should not be contained in another landmark'},'landmark-contentinfo-is-top-level':{description:'Ensures the contentinfo landmark is at top level',help:'Contentinfo landmark should not be contained in another landmark'},'landmark-main-is-top-level':{description:'Ensures the main landmark is at top level',help:'Main landmark should not be contained in another landmark'},'landmark-no-duplicate-banner':{description:'Ensures the document has at most one banner landmark',help:'Document should not have more than one banner landmark'},'landmark-no-duplicate-contentinfo':{description:'Ensures the document has at most one contentinfo landmark',help:'Document should not have more than one contentinfo landmark'},'landmark-no-duplicate-main':{description:'Ensures the document has at most one main landmark',help:'Document should not have more than one main landmark'},'landmark-one-main':{description:'Ensures the document has a main landmark',help:'Document should have one main landmark'},'landmark-unique':{help:'Ensures landmarks are unique',description:'Landmarks should have a unique role or role/label/title (i.e. accessible name) combination'},'link-in-text-block':{description:'Ensure links are distinguished from surrounding text in a way that does not rely on color',help:'Links must be distinguishable without relying on color'},'link-name':{description:'Ensures links have discernible text',help:'Links must have discernible text'},list:{description:'Ensures that lists are structured correctly',help:'<ul> and <ol> must only directly contain <li>, <script> or <template> elements'},listitem:{description:'Ensures <li> elements are used semantically',help:'<li> elements must be contained in a <ul> or <ol>'},marquee:{description:'Ensures <marquee> elements are not used',help:'<marquee> elements are deprecated and must not be used'},'meta-refresh-no-exceptions':{description:'Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh',help:'Delayed refresh must not be used'},'meta-refresh':{description:'Ensures <meta http-equiv=\"refresh\"> is not used for delayed refresh',help:'Delayed refresh under 20 hours must not be used'},'meta-viewport-large':{description:'Ensures <meta name=\"viewport\"> can scale a significant amount',help:'Users should be able to zoom and scale the text up to 500%'},'meta-viewport':{description:'Ensures <meta name=\"viewport\"> does not disable text scaling and zooming',help:'Zooming and scaling must not be disabled'},'nested-interactive':{description:'Ensures interactive controls are not nested as they are not always announced by screen readers or can cause focus problems for assistive technologies',help:'Interactive controls must not be nested'},'no-autoplay-audio':{description:'Ensures <video> or <audio> elements do not autoplay audio for more than 3 seconds without a control mechanism to stop or mute the audio',help:'<video> or <audio> elements must not play automatically'},'object-alt':{description:'Ensures <object> elements have alternate text',help:'<object> elements must have alternate text'},'p-as-heading':{description:'Ensure bold, italic text and font-size is not used to style <p> elements as a heading',help:'Styled <p> elements must not be used as headings'},'page-has-heading-one':{description:'Ensure that the page, or at least one of its frames contains a level-one heading',help:'Page should contain a level-one heading'},'presentation-role-conflict':{description:'Elements marked as presentational should not have global ARIA or tabindex to ensure all screen readers ignore them',help:'Ensure elements marked as presentational are consistently ignored'},region:{description:'Ensures all page content is contained by landmarks',help:'All page content should be contained by landmarks'},'role-img-alt':{description:'Ensures [role=\"img\"] elements have alternate text',help:'[role=\"img\"] elements must have an alternative text'},'scope-attr-valid':{description:'Ensures the scope attribute is used correctly on tables',help:'scope attribute should be used correctly'},'scrollable-region-focusable':{description:'Ensure elements that have scrollable content are accessible by keyboard',help:'Scrollable region must have keyboard access'},'select-name':{description:'Ensures select element has an accessible name',help:'Select element must have an accessible name'},'server-side-image-map':{description:'Ensures that server-side image maps are not used',help:'Server-side image maps must not be used'},'skip-link':{description:'Ensure all skip links have a focusable target',help:'The skip-link target should exist and be focusable'},'svg-img-alt':{description:'Ensures <svg> elements with an img, graphics-document or graphics-symbol role have an accessible text',help:'<svg> elements with an img role must have an alternative text'},tabindex:{description:'Ensures tabindex attribute values are not greater than 0',help:'Elements should not have tabindex greater than zero'},'table-duplicate-name':{description:'Ensure the <caption> element does not contain the same text as the summary attribute',help:'tables should not have the same summary and caption'},'table-fake-caption':{description:'Ensure that tables with a caption use the <caption> element.',help:'Data or header cells must not be used to give caption to a data table.'},'target-size':{description:'Ensure touch target have sufficient size and space',help:'All touch targets must be 24px large, or leave sufficient space'},'td-has-header':{description:'Ensure that each non-empty data cell in a <table> larger than 3 by 3  has one or more table headers',help:'Non-empty <td> elements in larger <table> must have an associated table header'},'td-headers-attr':{description:'Ensure that each cell in a table that uses the headers attribute refers only to other cells in that table',help:'Table cells that use the headers attribute must only refer to cells in the same table'},'th-has-data-cells':{description:'Ensure that <th> elements and elements with role=columnheader/rowheader have data cells they describe',help:'Table headers in a data table must refer to data cells'},'valid-lang':{description:'Ensures lang attributes have valid values',help:'lang attribute must have a valid value'},'video-caption':{description:'Ensures <video> elements have captions',help:'<video> elements must have captions'}},checks:{abstractrole:{impact:'serious',messages:{pass:'Abstract roles are not used',fail:{singular:'Abstract role cannot be directly used: ${data.values}',plural:'Abstract roles cannot be directly used: ${data.values}'}}},'aria-allowed-attr':{impact:'critical',messages:{pass:'ARIA attributes are used correctly for the defined role',fail:{singular:'ARIA attribute is not allowed: ${data.values}',plural:'ARIA attributes are not allowed: ${data.values}'},incomplete:'Check that there is no problem if the ARIA attribute is ignored on this element: ${data.values}'}},'aria-allowed-role':{impact:'minor',messages:{pass:'ARIA role is allowed for given element',fail:{singular:'ARIA role ${data.values} is not allowed for given element',plural:'ARIA roles ${data.values} are not allowed for given element'},incomplete:{singular:'ARIA role ${data.values} must be removed when the element is made visible, as it is not allowed for the element',plural:'ARIA roles ${data.values} must be removed when the element is made visible, as they are not allowed for the element'}}},'aria-busy':{impact:'serious',messages:{pass:'Element has an aria-busy attribute',fail:'Element uses aria-busy=\"true\" while showing a loader'}},'aria-conditional-attr':{impact:'serious',messages:{pass:'ARIA attribute is allowed',fail:{checkbox:'Remove aria-checked, or set it to \"${data.checkState}\" to match the real checkbox state',rowSingular:'This attribute is supported with treegrid rows, but not ${data.ownerRole}: ${data.invalidAttrs}',rowPlural:'These attributes are supported with treegrid rows, but not ${data.ownerRole}: ${data.invalidAttrs}'}}},'aria-errormessage':{impact:'critical',messages:{pass:'aria-errormessage exists and references elements visible to screen readers that use a supported aria-errormessage technique',fail:{singular:'aria-errormessage value `${data.values}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)',plural:'aria-errormessage values `${data.values}` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)',hidden:'aria-errormessage value `${data.values}` cannot reference a hidden element'},incomplete:{singular:'ensure aria-errormessage value `${data.values}` references an existing element',plural:'ensure aria-errormessage values `${data.values}` reference existing elements',idrefs:'unable to determine if aria-errormessage element exists on the page: ${data.values}'}}},'aria-hidden-body':{impact:'critical',messages:{pass:'No aria-hidden attribute is present on document body',fail:'aria-hidden=true should not be present on the document body'}},'aria-level':{impact:'serious',messages:{pass:'aria-level values are valid',incomplete:'aria-level values greater than 6 are not supported in all screenreader and browser combinations'}},'aria-prohibited-attr':{impact:'serious',messages:{pass:'ARIA attribute is allowed',fail:{hasRolePlural:'${data.prohibited} attributes cannot be used with role \"${data.role}\".',hasRoleSingular:'${data.prohibited} attribute cannot be used with role \"${data.role}\".',noRolePlural:'${data.prohibited} attributes cannot be used on a ${data.nodeName} with no valid role attribute.',noRoleSingular:'${data.prohibited} attribute cannot be used on a ${data.nodeName} with no valid role attribute.'},incomplete:{hasRoleSingular:'${data.prohibited} attribute is not well supported with role \"${data.role}\".',hasRolePlural:'${data.prohibited} attributes are not well supported with role \"${data.role}\".',noRoleSingular:'${data.prohibited} attribute is not well supported on a ${data.nodeName} with no valid role attribute.',noRolePlural:'${data.prohibited} attributes are not well supported on a ${data.nodeName} with no valid role attribute.'}}},'aria-required-attr':{impact:'critical',messages:{pass:'All required ARIA attributes are present',fail:{singular:'Required ARIA attribute not present: ${data.values}',plural:'Required ARIA attributes not present: ${data.values}'}}},'aria-required-children':{impact:'critical',messages:{pass:'Required ARIA children are present',fail:{singular:'Required ARIA child role not present: ${data.values}',plural:'Required ARIA children role not present: ${data.values}',unallowed:'Element has children which are not allowed: ${data.values}'},incomplete:{singular:'Expecting ARIA child role to be added: ${data.values}',plural:'Expecting ARIA children role to be added: ${data.values}'}}},'aria-required-parent':{impact:'critical',messages:{pass:'Required ARIA parent role present',fail:{singular:'Required ARIA parent role not present: ${data.values}',plural:'Required ARIA parents role not present: ${data.values}'}}},'aria-roledescription':{impact:'serious',messages:{pass:'aria-roledescription used on a supported semantic role',incomplete:'Check that the aria-roledescription is announced by supported screen readers',fail:'Give the element a role that supports aria-roledescription'}},'aria-unsupported-attr':{impact:'critical',messages:{pass:'ARIA attribute is supported',fail:'ARIA attribute is not widely supported in screen readers and assistive technologies: ${data.values}'}},'aria-valid-attr-value':{impact:'critical',messages:{pass:'ARIA attribute values are valid',fail:{singular:'Invalid ARIA attribute value: ${data.values}',plural:'Invalid ARIA attribute values: ${data.values}'},incomplete:{noId:'ARIA attribute element ID does not exist on the page: ${data.needsReview}',noIdShadow:'ARIA attribute element ID does not exist on the page or is a descendant of a different shadow DOM tree: ${data.needsReview}',ariaCurrent:'ARIA attribute value is invalid and will be treated as \"aria-current=true\": ${data.needsReview}',idrefs:'Unable to determine if ARIA attribute element ID exists on the page: ${data.needsReview}',empty:'ARIA attribute value is ignored while empty: ${data.needsReview}'}}},'aria-valid-attr':{impact:'critical',messages:{pass:'ARIA attribute name is valid',fail:{singular:'Invalid ARIA attribute name: ${data.values}',plural:'Invalid ARIA attribute names: ${data.values}'}}},'braille-label-equivalent':{impact:'serious',messages:{pass:'aria-braillelabel is used on an element with accessible text',fail:'aria-braillelabel is used on an element with no accessible text',incomplete:'Unable to compute accessible text'}},'braille-roledescription-equivalent':{impact:'serious',messages:{pass:'aria-brailleroledescription is used on an element with aria-roledescription',fail:{noRoleDescription:'aria-brailleroledescription is used on an element with no aria-roledescription',emptyRoleDescription:'aria-brailleroledescription is used on an element with an empty aria-roledescription'}}},deprecatedrole:{impact:'minor',messages:{pass:'ARIA role is not deprecated',fail:'The role used is deprecated: ${data}'}},fallbackrole:{impact:'serious',messages:{pass:'Only one role value used',fail:'Use only one role value, since fallback roles are not supported in older browsers',incomplete:'Use only role \\'presentation\\' or \\'none\\' since they are synonymous.'}},'has-global-aria-attribute':{impact:'minor',messages:{pass:{singular:'Element has global ARIA attribute: ${data.values}',plural:'Element has global ARIA attributes: ${data.values}'},fail:'Element does not have global ARIA attribute'}},'has-widget-role':{impact:'minor',messages:{pass:'Element has a widget role.',fail:'Element does not have a widget role.'}},invalidrole:{impact:'critical',messages:{pass:'ARIA role is valid',fail:{singular:'Role must be one of the valid ARIA roles: ${data.values}',plural:'Roles must be one of the valid ARIA roles: ${data.values}'}}},'is-element-focusable':{impact:'minor',messages:{pass:'Element is focusable.',fail:'Element is not focusable.'}},'no-implicit-explicit-label':{impact:'serious',messages:{pass:'There is no mismatch between a <label> and accessible name',incomplete:'Check that the <label> does not need be part of the ARIA ${data} field\\'s name'}},unsupportedrole:{impact:'critical',messages:{pass:'ARIA role is supported',fail:'The role used is not widely supported in screen readers and assistive technologies: ${data}'}},'valid-scrollable-semantics':{impact:'minor',messages:{pass:'Element has valid semantics for an element in the focus order.',fail:'Element has invalid semantics for an element in the focus order.'}},'color-contrast-enhanced':{impact:'serious',messages:{pass:'Element has sufficient color contrast of ${data.contrastRatio}',fail:{default:'Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}',fgOnShadowColor:'Element has insufficient color contrast of ${data.contrastRatio} between the foreground and shadow color (foreground color: ${data.fgColor}, text-shadow color: ${data.shadowColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}',shadowOnBgColor:'Element has insufficient color contrast of ${data.contrastRatio} between the shadow color and background color (text-shadow color: ${data.shadowColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}'},incomplete:{default:'Unable to determine contrast ratio',bgImage:'Element\\'s background color could not be determined due to a background image',bgGradient:'Element\\'s background color could not be determined due to a background gradient',imgNode:'Element\\'s background color could not be determined because element contains an image node',bgOverlap:'Element\\'s background color could not be determined because it is overlapped by another element',fgAlpha:'Element\\'s foreground color could not be determined because of alpha transparency',elmPartiallyObscured:'Element\\'s background color could not be determined because it\\'s partially obscured by another element',elmPartiallyObscuring:'Element\\'s background color could not be determined because it partially overlaps other elements',outsideViewport:'Element\\'s background color could not be determined because it\\'s outside the viewport',equalRatio:'Element has a 1:1 contrast ratio with the background',shortTextContent:'Element content is too short to determine if it is actual text content',nonBmp:'Element content contains only non-text characters',pseudoContent:'Element\\'s background color could not be determined due to a pseudo element'}}},'color-contrast':{impact:'serious',messages:{pass:{default:'Element has sufficient color contrast of ${data.contrastRatio}',hidden:'Element is hidden'},fail:{default:'Element has insufficient color contrast of ${data.contrastRatio} (foreground color: ${data.fgColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}',fgOnShadowColor:'Element has insufficient color contrast of ${data.contrastRatio} between the foreground and shadow color (foreground color: ${data.fgColor}, text-shadow color: ${data.shadowColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}',shadowOnBgColor:'Element has insufficient color contrast of ${data.contrastRatio} between the shadow color and background color (text-shadow color: ${data.shadowColor}, background color: ${data.bgColor}, font size: ${data.fontSize}, font weight: ${data.fontWeight}). Expected contrast ratio of ${data.expectedContrastRatio}'},incomplete:{default:'Unable to determine contrast ratio',bgImage:'Element\\'s background color could not be determined due to a background image',bgGradient:'Element\\'s background color could not be determined due to a background gradient',imgNode:'Element\\'s background color could not be determined because element contains an image node',bgOverlap:'Element\\'s background color could not be determined because it is overlapped by another element',complexTextShadows:'Element\\'s contrast could not be determined because it uses complex text shadows',fgAlpha:'Element\\'s foreground color could not be determined because of alpha transparency',elmPartiallyObscured:'Element\\'s background color could not be determined because it\\'s partially obscured by another element',elmPartiallyObscuring:'Element\\'s background color could not be determined because it partially overlaps other elements',outsideViewport:'Element\\'s background color could not be determined because it\\'s outside the viewport',equalRatio:'Element has a 1:1 contrast ratio with the background',shortTextContent:'Element content is too short to determine if it is actual text content',nonBmp:'Element content contains only non-text characters',pseudoContent:'Element\\'s background color could not be determined due to a pseudo element'}}},'link-in-text-block-style':{impact:'serious',messages:{pass:'Links can be distinguished from surrounding text by visual styling',incomplete:{default:'Check if the link needs styling to distinguish it from nearby text',pseudoContent:'Check if the link\\'s pseudo style is sufficient to distinguish it from the surrounding text'},fail:'The link has no styling (such as underline) to distinguish it from the surrounding text'}},'link-in-text-block':{impact:'serious',messages:{pass:'Links can be distinguished from surrounding text in some way other than by color',fail:{fgContrast:'The link has insufficient color contrast of ${data.contrastRatio}:1 with the surrounding text. (Minimum contrast is ${data.requiredContrastRatio}:1, link text: ${data.nodeColor}, surrounding text: ${data.parentColor})',bgContrast:'The link background has insufficient color contrast of ${data.contrastRatio} (Minimum contrast is ${data.requiredContrastRatio}:1, link background color: ${data.nodeBackgroundColor}, surrounding background color: ${data.parentBackgroundColor})'},incomplete:{default:'Element\\'s foreground contrast ratio could not be determined',bgContrast:'Element\\'s background contrast ratio could not be determined',bgImage:'Element\\'s contrast ratio could not be determined due to a background image',bgGradient:'Element\\'s contrast ratio could not be determined due to a background gradient',imgNode:'Element\\'s contrast ratio could not be determined because element contains an image node',bgOverlap:'Element\\'s contrast ratio could not be determined because of element overlap'}}},'autocomplete-appropriate':{impact:'serious',messages:{pass:'the autocomplete value is on an appropriate element',fail:'the autocomplete value is inappropriate for this type of input'}},'autocomplete-valid':{impact:'serious',messages:{pass:'the autocomplete attribute is correctly formatted',fail:'the autocomplete attribute is incorrectly formatted'}},accesskeys:{impact:'serious',messages:{pass:'Accesskey attribute value is unique',fail:'Document has multiple elements with the same accesskey'}},'focusable-content':{impact:'serious',messages:{pass:'Element contains focusable elements',fail:'Element should have focusable content'}},'focusable-disabled':{impact:'serious',messages:{pass:'No focusable elements contained within element',incomplete:'Check if the focusable elements immediately move the focus indicator',fail:'Focusable content should be disabled or be removed from the DOM'}},'focusable-element':{impact:'serious',messages:{pass:'Element is focusable',fail:'Element should be focusable'}},'focusable-modal-open':{impact:'serious',messages:{pass:'No focusable elements while a modal is open',incomplete:'Check that focusable elements are not tabbable in the current state'}},'focusable-no-name':{impact:'serious',messages:{pass:'Element is not in tab order or has accessible text',fail:'Element is in tab order and does not have accessible text',incomplete:'Unable to determine if element has an accessible name'}},'focusable-not-tabbable':{impact:'serious',messages:{pass:'No focusable elements contained within element',incomplete:'Check if the focusable elements immediately move the focus indicator',fail:'Focusable content should have tabindex=\"-1\" or be removed from the DOM'}},'frame-focusable-content':{impact:'serious',messages:{pass:'Element does not have focusable descendants',fail:'Element has focusable descendants',incomplete:'Could not determine if element has descendants'}},'landmark-is-top-level':{impact:'moderate',messages:{pass:'The ${data.role} landmark is at the top level.',fail:'The ${data.role} landmark is contained in another landmark.'}},'no-focusable-content':{impact:'serious',messages:{pass:'Element does not have focusable descendants',fail:{default:'Element has focusable descendants',notHidden:'Using a negative tabindex on an element inside an interactive control does not prevent assistive technologies from focusing the element (even with aria-hidden=\"true\")'},incomplete:'Could not determine if element has descendants'}},'page-has-heading-one':{impact:'moderate',messages:{pass:'Page has at least one level-one heading',fail:'Page must have a level-one heading'}},'page-has-main':{impact:'moderate',messages:{pass:'Document has at least one main landmark',fail:'Document does not have a main landmark'}},'page-no-duplicate-banner':{impact:'moderate',messages:{pass:'Document does not have more than one banner landmark',fail:'Document has more than one banner landmark'}},'page-no-duplicate-contentinfo':{impact:'moderate',messages:{pass:'Document does not have more than one contentinfo landmark',fail:'Document has more than one contentinfo landmark'}},'page-no-duplicate-main':{impact:'moderate',messages:{pass:'Document does not have more than one main landmark',fail:'Document has more than one main landmark'}},tabindex:{impact:'serious',messages:{pass:'Element does not have a tabindex greater than 0',fail:'Element has a tabindex greater than 0'}},'alt-space-value':{impact:'critical',messages:{pass:'Element has a valid alt attribute value',fail:'Element has an alt attribute containing only a space character, which is not ignored by all screen readers'}},'duplicate-img-label':{impact:'minor',messages:{pass:'Element does not duplicate existing text in <img> alt text',fail:'Element contains <img> element with alt text that duplicates existing text'}},'explicit-label':{impact:'critical',messages:{pass:'Form element has an explicit <label>',fail:'Form element does not have an explicit <label>',incomplete:'Unable to determine if form element has an explicit <label>'}},'help-same-as-label':{impact:'minor',messages:{pass:'Help text (title or aria-describedby) does not duplicate label text',fail:'Help text (title or aria-describedby) text is the same as the label text'}},'hidden-explicit-label':{impact:'critical',messages:{pass:'Form element has a visible explicit <label>',fail:'Form element has explicit <label> that is hidden',incomplete:'Unable to determine if form element has explicit <label> that is hidden'}},'implicit-label':{impact:'critical',messages:{pass:'Form element has an implicit (wrapped) <label>',fail:'Form element does not have an implicit (wrapped) <label>',incomplete:'Unable to determine if form element has an implicit (wrapped} <label>'}},'label-content-name-mismatch':{impact:'serious',messages:{pass:'Element contains visible text as part of it\\'s accessible name',fail:'Text inside the element is not included in the accessible name'}},'multiple-label':{impact:'moderate',messages:{pass:'Form field does not have multiple label elements',incomplete:'Multiple label elements is not widely supported in assistive technologies. Ensure the first label contains all necessary information.'}},'title-only':{impact:'serious',messages:{pass:'Form element does not solely use title attribute for its label',fail:'Only title used to generate label for form element'}},'landmark-is-unique':{impact:'moderate',messages:{pass:'Landmarks must have a unique role or role/label/title (i.e. accessible name) combination',fail:'The landmark must have a unique aria-label, aria-labelledby, or title to make landmarks distinguishable'}},'has-lang':{impact:'serious',messages:{pass:'The <html> element has a lang attribute',fail:{noXHTML:'The xml:lang attribute is not valid on HTML pages, use the lang attribute.',noLang:'The <html> element does not have a lang attribute'}}},'valid-lang':{impact:'serious',messages:{pass:'Value of lang attribute is included in the list of valid languages',fail:'Value of lang attribute not included in the list of valid languages'}},'xml-lang-mismatch':{impact:'moderate',messages:{pass:'Lang and xml:lang attributes have the same base language',fail:'Lang and xml:lang attributes do not have the same base language'}},dlitem:{impact:'serious',messages:{pass:'Description list item has a <dl> parent element',fail:'Description list item does not have a <dl> parent element'}},listitem:{impact:'serious',messages:{pass:'List item has a <ul>, <ol> or role=\"list\" parent element',fail:{default:'List item does not have a <ul>, <ol> parent element',roleNotValid:'List item does not have a <ul>, <ol> parent element without a role, or a role=\"list\"'}}},'only-dlitems':{impact:'serious',messages:{pass:'dl element only has direct children that are allowed inside; <dt>, <dd>, or <div> elements',fail:'dl element has direct children that are not allowed: ${data.values}'}},'only-listitems':{impact:'serious',messages:{pass:'List element only has direct children that are allowed inside <li> elements',fail:'List element has direct children that are not allowed: ${data.values}'}},'structured-dlitems':{impact:'serious',messages:{pass:'When not empty, element has both <dt> and <dd> elements',fail:'When not empty, element does not have at least one <dt> element followed by at least one <dd> element'}},caption:{impact:'critical',messages:{pass:'The multimedia element has a captions track',incomplete:'Check that captions is available for the element'}},'frame-tested':{impact:'critical',messages:{pass:'The iframe was tested with axe-core',fail:'The iframe could not be tested with axe-core',incomplete:'The iframe still has to be tested with axe-core'}},'no-autoplay-audio':{impact:'moderate',messages:{pass:'<video> or <audio> does not output audio for more than allowed duration or has controls mechanism',fail:'<video> or <audio> outputs audio for more than allowed duration and does not have a controls mechanism',incomplete:'Check that the <video> or <audio> does not output audio for more than allowed duration or provides a controls mechanism'}},'css-orientation-lock':{impact:'serious',messages:{pass:'Display is operable, and orientation lock does not exist',fail:'CSS Orientation lock is applied, and makes display inoperable',incomplete:'CSS Orientation lock cannot be determined'}},'meta-viewport-large':{impact:'minor',messages:{pass:'<meta> tag does not prevent significant zooming on mobile devices',fail:'<meta> tag limits zooming on mobile devices'}},'meta-viewport':{impact:'critical',messages:{pass:'<meta> tag does not disable zooming on mobile devices',fail:'${data} on <meta> tag disables zooming on mobile devices'}},'target-offset':{impact:'serious',messages:{pass:'Target has sufficient space from its closest neighbors. Safe clickable space has a diameter of ${data.closestOffset}px which is at least ${data.minOffset}px.',fail:'Target has insufficient space to its closest neighbors. Safe clickable space has a diameter of ${data.closestOffset}px instead of at least ${data.minOffset}px.',incomplete:{default:'Element with negative tabindex has insufficient space to its closest neighbors. Safe clickable space has a diameter of ${data.closestOffset}px instead of at least ${data.minOffset}px. Is this a target?',nonTabbableNeighbor:'Target has insufficient space to its closest neighbors. Safe clickable space has a diameter of ${data.closestOffset}px instead of at least ${data.minOffset}px. Is the neighbor a target?'}}},'target-size':{impact:'serious',messages:{pass:{default:'Control has sufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)',obscured:'Control is ignored because it is fully obscured and thus not clickable'},fail:{default:'Target has insufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)',partiallyObscured:'Target has insufficient size because it is partially obscured (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px)'},incomplete:{default:'Element with negative tabindex has insufficient size (${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is this a target?',contentOverflow:'Element size could not be accurately determined due to overflow content',partiallyObscured:'Element with negative tabindex has insufficient size because it is partially obscured (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is this a target?',partiallyObscuredNonTabbable:'Target has insufficient size because it is partially obscured by a neighbor with negative tabindex (smallest space is ${data.width}px by ${data.height}px, should be at least ${data.minSize}px by ${data.minSize}px). Is the neighbor a target?'}}},'header-present':{impact:'serious',messages:{pass:'Page has a heading',fail:'Page does not have a heading'}},'heading-order':{impact:'moderate',messages:{pass:'Heading order valid',fail:'Heading order invalid',incomplete:'Unable to determine previous heading'}},'identical-links-same-purpose':{impact:'minor',messages:{pass:'There are no other links with the same name, that go to a different URL',incomplete:'Check that links have the same purpose, or are intentionally ambiguous.'}},'internal-link-present':{impact:'serious',messages:{pass:'Valid skip link found',fail:'No valid skip link found'}},landmark:{impact:'serious',messages:{pass:'Page has a landmark region',fail:'Page does not have a landmark region'}},'meta-refresh-no-exceptions':{impact:'minor',messages:{pass:'<meta> tag does not immediately refresh the page',fail:'<meta> tag forces timed refresh of page'}},'meta-refresh':{impact:'critical',messages:{pass:'<meta> tag does not immediately refresh the page',fail:'<meta> tag forces timed refresh of page (less than 20 hours)'}},'p-as-heading':{impact:'serious',messages:{pass:'<p> elements are not styled as headings',fail:'Heading elements should be used instead of styled <p> elements',incomplete:'Unable to determine if <p> elements are styled as headings'}},region:{impact:'moderate',messages:{pass:'All page content is contained by landmarks',fail:'Some page content is not contained by landmarks'}},'skip-link':{impact:'moderate',messages:{pass:'Skip link target exists',incomplete:'Skip link target should become visible on activation',fail:'No skip link target'}},'unique-frame-title':{impact:'serious',messages:{pass:'Element\\'s title attribute is unique',fail:'Element\\'s title attribute is not unique'}},'duplicate-id-active':{impact:'serious',messages:{pass:'Document has no active elements that share the same id attribute',fail:'Document has active elements with the same id attribute: ${data}'}},'duplicate-id-aria':{impact:'critical',messages:{pass:'Document has no elements referenced with ARIA or labels that share the same id attribute',fail:'Document has multiple elements referenced with ARIA with the same id attribute: ${data}'}},'duplicate-id':{impact:'minor',messages:{pass:'Document has no static elements that share the same id attribute',fail:'Document has multiple static elements with the same id attribute: ${data}'}},'aria-label':{impact:'serious',messages:{pass:'aria-label attribute exists and is not empty',fail:'aria-label attribute does not exist or is empty'}},'aria-labelledby':{impact:'serious',messages:{pass:'aria-labelledby attribute exists and references elements that are visible to screen readers',fail:'aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty',incomplete:'ensure aria-labelledby references an existing element'}},'avoid-inline-spacing':{impact:'serious',messages:{pass:'No inline styles with \\'!important\\' that affect text spacing has been specified',fail:{singular:'Remove \\'!important\\' from inline style ${data.values}, as overriding this is not supported by most browsers',plural:'Remove \\'!important\\' from inline styles ${data.values}, as overriding this is not supported by most browsers'}}},'button-has-visible-text':{impact:'critical',messages:{pass:'Element has inner text that is visible to screen readers',fail:'Element does not have inner text that is visible to screen readers',incomplete:'Unable to determine if element has children'}},'doc-has-title':{impact:'serious',messages:{pass:'Document has a non-empty <title> element',fail:'Document does not have a non-empty <title> element'}},exists:{impact:'minor',messages:{pass:'Element does not exist',incomplete:'Element exists'}},'has-alt':{impact:'critical',messages:{pass:'Element has an alt attribute',fail:'Element does not have an alt attribute'}},'has-visible-text':{impact:'minor',messages:{pass:'Element has text that is visible to screen readers',fail:'Element does not have text that is visible to screen readers',incomplete:'Unable to determine if element has children'}},'important-letter-spacing':{impact:'serious',messages:{pass:'Letter-spacing in the style attribute is not set to !important, or meets the minimum',fail:'letter-spacing in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)'}},'important-line-height':{impact:'serious',messages:{pass:'line-height in the style attribute is not set to !important, or meets the minimum',fail:'line-height in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)'}},'important-word-spacing':{impact:'serious',messages:{pass:'word-spacing in the style attribute is not set to !important, or meets the minimum',fail:'word-spacing in the style attribute must not use !important, or be at ${data.minValue}em (current ${data.value}em)'}},'is-on-screen':{impact:'serious',messages:{pass:'Element is not visible',fail:'Element is visible'}},'non-empty-alt':{impact:'critical',messages:{pass:'Element has a non-empty alt attribute',fail:{noAttr:'Element has no alt attribute',emptyAttr:'Element has an empty alt attribute'}}},'non-empty-if-present':{impact:'critical',messages:{pass:{default:'Element does not have a value attribute','has-label':'Element has a non-empty value attribute'},fail:'Element has a value attribute and the value attribute is empty'}},'non-empty-placeholder':{impact:'serious',messages:{pass:'Element has a placeholder attribute',fail:{noAttr:'Element has no placeholder attribute',emptyAttr:'Element has an empty placeholder attribute'}}},'non-empty-title':{impact:'serious',messages:{pass:'Element has a title attribute',fail:{noAttr:'Element has no title attribute',emptyAttr:'Element has an empty title attribute'}}},'non-empty-value':{impact:'critical',messages:{pass:'Element has a non-empty value attribute',fail:{noAttr:'Element has no value attribute',emptyAttr:'Element has an empty value attribute'}}},'presentational-role':{impact:'minor',messages:{pass:'Element\\'s default semantics were overriden with role=\"${data.role}\"',fail:{default:'Element\\'s default semantics were not overridden with role=\"none\" or role=\"presentation\"',globalAria:'Element\\'s role is not presentational because it has a global ARIA attribute',focusable:'Element\\'s role is not presentational because it is focusable',both:'Element\\'s role is not presentational because it has a global ARIA attribute and is focusable',iframe:'Using the \"title\" attribute on an ${data.nodeName} element with a presentational role behaves inconsistently between screen readers'}}},'role-none':{impact:'minor',messages:{pass:'Element\\'s default semantics were overriden with role=\"none\"',fail:'Element\\'s default semantics were not overridden with role=\"none\"'}},'role-presentation':{impact:'minor',messages:{pass:'Element\\'s default semantics were overriden with role=\"presentation\"',fail:'Element\\'s default semantics were not overridden with role=\"presentation\"'}},'svg-non-empty-title':{impact:'serious',messages:{pass:'Element has a child that is a title',fail:{noTitle:'Element has no child that is a title',emptyTitle:'Element child title is empty'},incomplete:'Unable to determine element has a child that is a title'}},'caption-faked':{impact:'serious',messages:{pass:'The first row of a table is not used as a caption',fail:'The first child of the table should be a caption instead of a table cell'}},'html5-scope':{impact:'moderate',messages:{pass:'Scope attribute is only used on table header elements (<th>)',fail:'In HTML 5, scope attributes may only be used on table header elements (<th>)'}},'same-caption-summary':{impact:'minor',messages:{pass:'Content of summary attribute and <caption> are not duplicated',fail:'Content of summary attribute and <caption> element are identical',incomplete:'Unable to determine if <table> element has a caption'}},'scope-value':{impact:'critical',messages:{pass:'Scope attribute is used correctly',fail:'The value of the scope attribute may only be \\'row\\' or \\'col\\''}},'td-has-header':{impact:'critical',messages:{pass:'All non-empty data cells have table headers',fail:'Some non-empty data cells do not have table headers'}},'td-headers-attr':{impact:'serious',messages:{pass:'The headers attribute is exclusively used to refer to other cells in the table',incomplete:'The headers attribute is empty',fail:'The headers attribute is not exclusively used to refer to other cells in the table'}},'th-has-data-cells':{impact:'serious',messages:{pass:'All table header cells refer to data cells',fail:'Not all table header cells refer to data cells',incomplete:'Table data cells are missing or empty'}},'hidden-content':{impact:'minor',messages:{pass:'All content on the page has been analyzed.',fail:'There were problems analyzing the content on this page.',incomplete:'There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it.'}}},failureSummaries:{any:{failureMessage:function anonymous(it){var out='Fix any of the following:';var arr1=it;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+='\\n  '+value.split('\\n').join('\\n  ');}}return out;}},none:{failureMessage:function anonymous(it){var out='Fix all of the following:';var arr1=it;if(arr1){var value,i1=-1,l1=arr1.length-1;while(i1<l1){value=arr1[i1+=1];out+='\\n  '+value.split('\\n').join('\\n  ');}}return out;}}},incompleteFallbackMessage:'axe couldn\\'t tell the reason. Time to break out the element inspector!'},rules:[{id:'accesskeys',impact:'serious',selector:'[accesskey]',excludeHidden:false,tags:['cat.keyboard','best-practice'],all:[],any:[],none:['accesskeys']},{id:'area-alt',impact:'critical',selector:'map area[href]',excludeHidden:false,tags:['cat.text-alternatives','wcag2a','wcag244','wcag412','section508','section508.22.a','TTv5','TT6.a','EN-301-549','EN-9.2.4.4','EN-9.4.1.2','ACT'],actIds:['c487ae'],all:[],any:[{options:{attribute:'alt'},id:'non-empty-alt'},'aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-allowed-attr',impact:'critical',matches:'aria-allowed-attr-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['5c01ea'],all:[{options:{validTreeRowAttrs:['aria-posinset','aria-setsize','aria-expanded','aria-level']},id:'aria-allowed-attr'}],any:[],none:['aria-unsupported-attr']},{id:'aria-allowed-role',impact:'minor',excludeHidden:false,selector:'[role]',matches:'aria-allowed-role-matches',tags:['cat.aria','best-practice'],all:[],any:[{options:{allowImplicit:true,ignoredTags:[]},id:'aria-allowed-role'}],none:[]},{id:'aria-braille-equivalent',reviewOnFail:true,impact:'serious',selector:'[aria-brailleroledescription], [aria-braillelabel]',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],all:['braille-roledescription-equivalent','braille-label-equivalent'],any:[],none:[]},{id:'aria-command-name',impact:'serious',selector:'[role=\"link\"], [role=\"button\"], [role=\"menuitem\"]',matches:'no-naming-method-matches',tags:['cat.aria','wcag2a','wcag412','TTv5','TT6.a','EN-301-549','EN-9.4.1.2','ACT'],actIds:['97a4e1'],all:[],any:['has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-conditional-attr',impact:'serious',matches:'aria-allowed-attr-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['5c01ea'],all:[{options:{invalidTableRowAttrs:['aria-posinset','aria-setsize','aria-expanded','aria-level']},id:'aria-conditional-attr'}],any:[],none:[]},{id:'aria-deprecated-role',impact:'minor',selector:'[role]',matches:'no-empty-role-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['674b10'],all:[],any:[],none:['deprecatedrole']},{id:'aria-dialog-name',impact:'serious',selector:'[role=\"dialog\"], [role=\"alertdialog\"]',matches:'no-naming-method-matches',tags:['cat.aria','best-practice'],all:[],any:['aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-hidden-body',impact:'critical',selector:'body',excludeHidden:false,matches:'is-initiator-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],all:[],any:['aria-hidden-body'],none:[]},{id:'aria-hidden-focus',impact:'serious',selector:'[aria-hidden=\"true\"]',matches:'aria-hidden-focus-matches',excludeHidden:false,tags:['cat.name-role-value','wcag2a','wcag412','TTv5','TT6.a','EN-301-549','EN-9.4.1.2'],actIds:['6cfa84'],all:['focusable-modal-open','focusable-disabled','focusable-not-tabbable'],any:[],none:[]},{id:'aria-input-field-name',impact:'serious',selector:'[role=\"combobox\"], [role=\"listbox\"], [role=\"searchbox\"], [role=\"slider\"], [role=\"spinbutton\"], [role=\"textbox\"]',matches:'no-naming-method-matches',tags:['cat.aria','wcag2a','wcag412','TTv5','TT5.c','EN-301-549','EN-9.4.1.2','ACT'],actIds:['e086e5'],all:[],any:['aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:['no-implicit-explicit-label']},{id:'aria-meter-name',impact:'serious',selector:'[role=\"meter\"]',matches:'no-naming-method-matches',tags:['cat.aria','wcag2a','wcag111','EN-301-549','EN-9.1.1.1'],all:[],any:['aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-progressbar-name',impact:'serious',selector:'[role=\"progressbar\"]',matches:'no-naming-method-matches',tags:['cat.aria','wcag2a','wcag111','EN-301-549','EN-9.1.1.1'],all:[],any:['aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-prohibited-attr',impact:'serious',matches:'aria-allowed-attr-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['5c01ea'],all:[],any:[],none:[{options:{elementsAllowedAriaLabel:['applet','input']},id:'aria-prohibited-attr'}]},{id:'aria-required-attr',impact:'critical',selector:'[role]',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['4e8ab6'],all:[],any:['aria-required-attr'],none:[]},{id:'aria-required-children',impact:'critical',selector:'[role]',matches:'aria-required-children-matches',tags:['cat.aria','wcag2a','wcag131','EN-301-549','EN-9.1.3.1'],actIds:['bc4a75','ff89c9'],all:[],any:[{options:{reviewEmpty:['doc-bibliography','doc-endnotes','grid','list','listbox','menu','menubar','table','tablist','tree','treegrid','rowgroup']},id:'aria-required-children'},'aria-busy'],none:[]},{id:'aria-required-parent',impact:'critical',selector:'[role]',matches:'aria-required-parent-matches',tags:['cat.aria','wcag2a','wcag131','EN-301-549','EN-9.1.3.1'],actIds:['ff89c9'],all:[],any:[{options:{ownGroupRoles:['listitem','treeitem']},id:'aria-required-parent'}],none:[]},{id:'aria-roledescription',impact:'serious',selector:'[aria-roledescription]',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2','deprecated'],enabled:false,all:[],any:[{options:{supportedRoles:['button','img','checkbox','radio','combobox','menuitemcheckbox','menuitemradio']},id:'aria-roledescription'}],none:[]},{id:'aria-roles',impact:'critical',selector:'[role]',matches:'no-empty-role-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['674b10'],all:[],any:[],none:['invalidrole','abstractrole','unsupportedrole']},{id:'aria-text',impact:'serious',selector:'[role=text]',tags:['cat.aria','best-practice'],all:[],any:['no-focusable-content'],none:[]},{id:'aria-toggle-field-name',impact:'serious',selector:'[role=\"checkbox\"], [role=\"menuitemcheckbox\"], [role=\"menuitemradio\"], [role=\"radio\"], [role=\"switch\"], [role=\"option\"]',matches:'no-naming-method-matches',tags:['cat.aria','wcag2a','wcag412','TTv5','TT5.c','EN-301-549','EN-9.4.1.2','ACT'],actIds:['e086e5'],all:[],any:['has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:['no-implicit-explicit-label']},{id:'aria-tooltip-name',impact:'serious',selector:'[role=\"tooltip\"]',matches:'no-naming-method-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],all:[],any:['has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-treeitem-name',impact:'serious',selector:'[role=\"treeitem\"]',matches:'no-naming-method-matches',tags:['cat.aria','best-practice'],all:[],any:['has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'aria-valid-attr-value',impact:'critical',matches:'aria-has-attr-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['6a7281'],all:[{options:[],id:'aria-valid-attr-value'},'aria-errormessage','aria-level'],any:[],none:[]},{id:'aria-valid-attr',impact:'critical',matches:'aria-has-attr-matches',tags:['cat.aria','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],actIds:['5f99a7'],all:[],any:[{options:[],id:'aria-valid-attr'}],none:[]},{id:'audio-caption',impact:'critical',selector:'audio',enabled:false,excludeHidden:false,tags:['cat.time-and-media','wcag2a','wcag121','EN-301-549','EN-9.1.2.1','section508','section508.22.a','deprecated'],actIds:['2eb176','afb423'],all:[],any:[],none:['caption']},{id:'autocomplete-valid',impact:'serious',matches:'autocomplete-matches',tags:['cat.forms','wcag21aa','wcag135','EN-301-549','EN-9.1.3.5','ACT'],actIds:['73f2c2'],all:[{options:{stateTerms:['none','false','true','disabled','enabled','undefined','null']},id:'autocomplete-valid'}],any:[],none:[]},{id:'avoid-inline-spacing',impact:'serious',selector:'[style]',matches:'is-visible-on-screen-matches',tags:['cat.structure','wcag21aa','wcag1412','EN-301-549','EN-9.1.4.12','ACT'],actIds:['24afc2','9e45ec','78fd32'],all:[{options:{cssProperty:'letter-spacing',minValue:.12},id:'important-letter-spacing'},{options:{cssProperty:'word-spacing',minValue:.16},id:'important-word-spacing'},{options:{multiLineOnly:true,cssProperty:'line-height',minValue:1.5,normalValue:1},id:'important-line-height'}],any:[],none:[]},{id:'blink',impact:'serious',selector:'blink',excludeHidden:false,tags:['cat.time-and-media','wcag2a','wcag222','section508','section508.22.j','TTv5','TT2.b','EN-301-549','EN-9.2.2.2'],all:[],any:[],none:['is-on-screen']},{id:'button-name',impact:'critical',selector:'button',matches:'no-explicit-name-required-matches',tags:['cat.name-role-value','wcag2a','wcag412','section508','section508.22.a','TTv5','TT6.a','EN-301-549','EN-9.4.1.2','ACT'],actIds:['97a4e1','m6b1q3'],all:[],any:['button-has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'},'presentational-role'],none:[]},{id:'bypass',impact:'serious',selector:'html',pageLevel:true,matches:'bypass-matches',reviewOnFail:true,tags:['cat.keyboard','wcag2a','wcag241','section508','section508.22.o','TTv5','TT9.a','EN-301-549','EN-9.2.4.1'],actIds:['cf77f2','047fe0','b40fd1','3e12e1','ye5d6e'],all:[],any:['internal-link-present',{options:{selector:':is(h1, h2, h3, h4, h5, h6):not([role]), [role=heading]'},id:'header-present'},{options:{selector:'main, [role=main]'},id:'landmark'}],none:[]},{id:'color-contrast-enhanced',impact:'serious',matches:'color-contrast-matches',excludeHidden:false,enabled:false,tags:['cat.color','wcag2aaa','wcag146','ACT'],actIds:['09o5cg'],all:[],any:[{options:{ignoreUnicode:true,ignoreLength:false,ignorePseudo:false,boldValue:700,boldTextPt:14,largeTextPt:18,contrastRatio:{normal:{expected:7,minThreshold:4.5},large:{expected:4.5,minThreshold:3}},pseudoSizeThreshold:.25,shadowOutlineEmMax:.1,textStrokeEmMin:.03},id:'color-contrast-enhanced'}],none:[]},{id:'color-contrast',impact:'serious',matches:'color-contrast-matches',excludeHidden:false,tags:['cat.color','wcag2aa','wcag143','TTv5','TT13.c','EN-301-549','EN-9.1.4.3','ACT'],actIds:['afw4f7','09o5cg'],all:[],any:[{options:{ignoreUnicode:true,ignoreLength:false,ignorePseudo:false,boldValue:700,boldTextPt:14,largeTextPt:18,contrastRatio:{normal:{expected:4.5},large:{expected:3}},pseudoSizeThreshold:.25,shadowOutlineEmMax:.2,textStrokeEmMin:.03},id:'color-contrast'}],none:[]},{id:'css-orientation-lock',impact:'serious',selector:'html',tags:['cat.structure','wcag134','wcag21aa','EN-301-549','EN-9.1.3.4','experimental'],actIds:['b33eff'],all:[{options:{degreeThreshold:2},id:'css-orientation-lock'}],any:[],none:[],preload:true},{id:'definition-list',impact:'serious',selector:'dl',matches:'no-role-matches',tags:['cat.structure','wcag2a','wcag131','EN-301-549','EN-9.1.3.1'],all:[],any:[],none:['structured-dlitems',{options:{validRoles:['definition','term','listitem'],validNodeNames:['dt','dd'],divGroups:true},id:'only-dlitems'}]},{id:'dlitem',impact:'serious',selector:'dd, dt',matches:'no-role-matches',tags:['cat.structure','wcag2a','wcag131','EN-301-549','EN-9.1.3.1'],all:[],any:['dlitem'],none:[]},{id:'document-title',impact:'serious',selector:'html',matches:'is-initiator-matches',tags:['cat.text-alternatives','wcag2a','wcag242','TTv5','TT12.a','EN-301-549','EN-9.2.4.2','ACT'],actIds:['2779a5'],all:[],any:['doc-has-title'],none:[]},{id:'duplicate-id-active',impact:'serious',selector:'[id]',matches:'duplicate-id-active-matches',excludeHidden:false,tags:['cat.parsing','wcag2a-obsolete','wcag411','deprecated'],enabled:false,actIds:['3ea0c8'],all:[],any:['duplicate-id-active'],none:[]},{id:'duplicate-id-aria',impact:'critical',selector:'[id]',matches:'duplicate-id-aria-matches',excludeHidden:false,tags:['cat.parsing','wcag2a','wcag412','EN-301-549','EN-9.4.1.2'],reviewOnFail:true,actIds:['3ea0c8'],all:[],any:['duplicate-id-aria'],none:[]},{id:'duplicate-id',impact:'minor',selector:'[id]',matches:'duplicate-id-misc-matches',excludeHidden:false,tags:['cat.parsing','wcag2a-obsolete','wcag411','deprecated'],enabled:false,actIds:['3ea0c8'],all:[],any:['duplicate-id'],none:[]},{id:'empty-heading',impact:'minor',selector:'h1, h2, h3, h4, h5, h6, [role=\"heading\"]',matches:'heading-matches',tags:['cat.name-role-value','best-practice'],actIds:['ffd0e9'],all:[],any:['has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'empty-table-header',impact:'minor',selector:'th:not([role]), [role=\"rowheader\"], [role=\"columnheader\"]',tags:['cat.name-role-value','best-practice'],all:[],any:['has-visible-text'],none:[]},{id:'focus-order-semantics',impact:'minor',selector:'div, h1, h2, h3, h4, h5, h6, [role=heading], p, span',matches:'inserted-into-focus-order-matches',tags:['cat.keyboard','best-practice','experimental'],all:[],any:[{options:[],id:'has-widget-role'},{options:{roles:['tooltip']},id:'valid-scrollable-semantics'}],none:[]},{id:'form-field-multiple-labels',impact:'moderate',selector:'input, select, textarea',matches:'label-matches',tags:['cat.forms','wcag2a','wcag332','TTv5','TT5.c','EN-301-549','EN-9.3.3.2'],all:[],any:[],none:['multiple-label']},{id:'frame-focusable-content',impact:'serious',selector:'html',matches:'frame-focusable-content-matches',tags:['cat.keyboard','wcag2a','wcag211','TTv5','TT4.a','EN-301-549','EN-9.2.1.1'],actIds:['akn7bn'],all:[],any:['frame-focusable-content'],none:[]},{id:'frame-tested',impact:'critical',selector:'html, frame, iframe',tags:['cat.structure','best-practice','review-item'],all:[{options:{isViolation:false},id:'frame-tested'}],any:[],none:[]},{id:'frame-title-unique',impact:'serious',selector:'frame[title], iframe[title]',matches:'frame-title-has-text-matches',tags:['cat.text-alternatives','wcag2a','wcag412','TTv5','TT12.d','EN-301-549','EN-9.4.1.2'],actIds:['4b1c6c'],all:[],any:[],none:['unique-frame-title'],reviewOnFail:true},{id:'frame-title',impact:'serious',selector:'frame, iframe',matches:'no-negative-tabindex-matches',tags:['cat.text-alternatives','wcag2a','wcag412','section508','section508.22.i','TTv5','TT12.d','EN-301-549','EN-9.4.1.2'],actIds:['cae760'],all:[],any:[{options:{attribute:'title'},id:'non-empty-title'},'aria-label','aria-labelledby','presentational-role'],none:[]},{id:'heading-order',impact:'moderate',selector:'h1, h2, h3, h4, h5, h6, [role=heading]',matches:'heading-matches',tags:['cat.semantics','best-practice'],all:[],any:['heading-order'],none:[]},{id:'hidden-content',impact:'minor',selector:'*',excludeHidden:false,tags:['cat.structure','best-practice','experimental','review-item'],all:[],any:['hidden-content'],none:[]},{id:'html-has-lang',impact:'serious',selector:'html',matches:'is-initiator-matches',tags:['cat.language','wcag2a','wcag311','TTv5','TT11.a','EN-301-549','EN-9.3.1.1','ACT'],actIds:['b5c3f8'],all:[],any:[{options:{attributes:['lang','xml:lang']},id:'has-lang'}],none:[]},{id:'html-lang-valid',impact:'serious',selector:'html[lang]:not([lang=\"\"]), html[xml\\\\:lang]:not([xml\\\\:lang=\"\"])',tags:['cat.language','wcag2a','wcag311','TTv5','TT11.a','EN-301-549','EN-9.3.1.1','ACT'],actIds:['bf051a'],all:[],any:[],none:[{options:{attributes:['lang','xml:lang']},id:'valid-lang'}]},{id:'html-xml-lang-mismatch',impact:'moderate',selector:'html[lang][xml\\\\:lang]',matches:'xml-lang-mismatch-matches',tags:['cat.language','wcag2a','wcag311','EN-301-549','EN-9.3.1.1','ACT'],actIds:['5b7ae0'],all:['xml-lang-mismatch'],any:[],none:[]},{id:'identical-links-same-purpose',impact:'minor',selector:'a[href], area[href], [role=\"link\"]',excludeHidden:false,enabled:false,matches:'identical-links-same-purpose-matches',tags:['cat.semantics','wcag2aaa','wcag249'],actIds:['b20e66'],all:['identical-links-same-purpose'],any:[],none:[]},{id:'image-alt',impact:'critical',selector:'img',matches:'no-explicit-name-required-matches',tags:['cat.text-alternatives','wcag2a','wcag111','section508','section508.22.a','TTv5','TT7.a','TT7.b','EN-301-549','EN-9.1.1.1','ACT'],actIds:['23a2a8'],all:[],any:['has-alt','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'},'presentational-role'],none:['alt-space-value']},{id:'image-redundant-alt',impact:'minor',selector:'img',tags:['cat.text-alternatives','best-practice'],all:[],any:[],none:[{options:{parentSelector:'button, [role=button], a[href], p, li, td, th'},id:'duplicate-img-label'}]},{id:'input-button-name',impact:'critical',selector:'input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]',matches:'no-explicit-name-required-matches',tags:['cat.name-role-value','wcag2a','wcag412','section508','section508.22.a','TTv5','TT5.c','EN-301-549','EN-9.4.1.2','ACT'],actIds:['97a4e1'],all:[],any:['non-empty-if-present',{options:{attribute:'value'},id:'non-empty-value'},'aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'},'presentational-role'],none:[]},{id:'input-image-alt',impact:'critical',selector:'input[type=\"image\"]',matches:'no-explicit-name-required-matches',tags:['cat.text-alternatives','wcag2a','wcag111','wcag412','section508','section508.22.a','TTv5','TT7.a','EN-301-549','EN-9.1.1.1','EN-9.4.1.2','ACT'],actIds:['59796f'],all:[],any:[{options:{attribute:'alt'},id:'non-empty-alt'},'aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'label-content-name-mismatch',impact:'serious',matches:'label-content-name-mismatch-matches',tags:['cat.semantics','wcag21a','wcag253','EN-301-549','EN-9.2.5.3','experimental'],actIds:['2ee8b8'],all:[],any:[{options:{pixelThreshold:.1,occurrenceThreshold:3},id:'label-content-name-mismatch'}],none:[]},{id:'label-title-only',impact:'serious',selector:'input, select, textarea',matches:'label-matches',tags:['cat.forms','best-practice'],all:[],any:[],none:['title-only']},{id:'label',impact:'critical',selector:'input, textarea',matches:'label-matches',tags:['cat.forms','wcag2a','wcag412','section508','section508.22.n','TTv5','TT5.c','EN-301-549','EN-9.4.1.2','ACT'],actIds:['e086e5'],all:[],any:['implicit-label','explicit-label','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'},{options:{attribute:'placeholder'},id:'non-empty-placeholder'},'presentational-role'],none:['hidden-explicit-label']},{id:'landmark-banner-is-top-level',impact:'moderate',selector:'header:not([role]), [role=banner]',matches:'landmark-has-body-context-matches',tags:['cat.semantics','best-practice'],all:[],any:['landmark-is-top-level'],none:[]},{id:'landmark-complementary-is-top-level',impact:'moderate',selector:'aside:not([role]), [role=complementary]',tags:['cat.semantics','best-practice'],all:[],any:['landmark-is-top-level'],none:[]},{id:'landmark-contentinfo-is-top-level',impact:'moderate',selector:'footer:not([role]), [role=contentinfo]',matches:'landmark-has-body-context-matches',tags:['cat.semantics','best-practice'],all:[],any:['landmark-is-top-level'],none:[]},{id:'landmark-main-is-top-level',impact:'moderate',selector:'main:not([role]), [role=main]',tags:['cat.semantics','best-practice'],all:[],any:['landmark-is-top-level'],none:[]},{id:'landmark-no-duplicate-banner',impact:'moderate',selector:'header:not([role]), [role=banner]',tags:['cat.semantics','best-practice'],all:[],any:[{options:{selector:'header:not([role]), [role=banner]',role:'banner'},id:'page-no-duplicate-banner'}],none:[]},{id:'landmark-no-duplicate-contentinfo',impact:'moderate',selector:'footer:not([role]), [role=contentinfo]',tags:['cat.semantics','best-practice'],all:[],any:[{options:{selector:'footer:not([role]), [role=contentinfo]',role:'contentinfo'},id:'page-no-duplicate-contentinfo'}],none:[]},{id:'landmark-no-duplicate-main',impact:'moderate',selector:'main:not([role]), [role=main]',tags:['cat.semantics','best-practice'],all:[],any:[{options:{selector:'main:not([role]), [role=\\'main\\']'},id:'page-no-duplicate-main'}],none:[]},{id:'landmark-one-main',impact:'moderate',selector:'html',tags:['cat.semantics','best-practice'],all:[{options:{selector:'main:not([role]), [role=\\'main\\']',passForModal:true},id:'page-has-main'}],any:[],none:[]},{id:'landmark-unique',impact:'moderate',selector:'[role=banner], [role=complementary], [role=contentinfo], [role=main], [role=navigation], [role=region], [role=search], [role=form], form, footer, header, aside, main, nav, section',tags:['cat.semantics','best-practice'],matches:'landmark-unique-matches',all:[],any:['landmark-is-unique'],none:[]},{id:'link-in-text-block',impact:'serious',selector:'a[href], [role=link]',matches:'link-in-text-block-matches',excludeHidden:false,tags:['cat.color','wcag2a','wcag141','TTv5','TT13.a','EN-301-549','EN-9.1.4.1'],all:[],any:[{options:{requiredContrastRatio:3,allowSameColor:true},id:'link-in-text-block'},'link-in-text-block-style'],none:[]},{id:'link-name',impact:'serious',selector:'a[href]',tags:['cat.name-role-value','wcag2a','wcag244','wcag412','section508','section508.22.a','TTv5','TT6.a','EN-301-549','EN-9.2.4.4','EN-9.4.1.2','ACT'],actIds:['c487ae'],all:[],any:['has-visible-text','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:['focusable-no-name']},{id:'list',impact:'serious',selector:'ul, ol',matches:'no-role-matches',tags:['cat.structure','wcag2a','wcag131','EN-301-549','EN-9.1.3.1'],all:[],any:[],none:[{options:{validRoles:['listitem'],validNodeNames:['li']},id:'only-listitems'}]},{id:'listitem',impact:'serious',selector:'li',matches:'no-role-matches',tags:['cat.structure','wcag2a','wcag131','EN-301-549','EN-9.1.3.1'],all:[],any:['listitem'],none:[]},{id:'marquee',impact:'serious',selector:'marquee',excludeHidden:false,tags:['cat.parsing','wcag2a','wcag222','TTv5','TT2.b','EN-301-549','EN-9.2.2.2'],all:[],any:[],none:['is-on-screen']},{id:'meta-refresh-no-exceptions',impact:'minor',selector:'meta[http-equiv=\"refresh\"][content]',excludeHidden:false,enabled:false,tags:['cat.time-and-media','wcag2aaa','wcag224','wcag325'],actIds:['bisz58'],all:[],any:[{options:{minDelay:72e3,maxDelay:false},id:'meta-refresh-no-exceptions'}],none:[]},{id:'meta-refresh',impact:'critical',selector:'meta[http-equiv=\"refresh\"][content]',excludeHidden:false,tags:['cat.time-and-media','wcag2a','wcag221','TTv5','TT8.a','EN-301-549','EN-9.2.2.1'],actIds:['bc659a','bisz58'],all:[],any:[{options:{minDelay:0,maxDelay:72e3},id:'meta-refresh'}],none:[]},{id:'meta-viewport-large',impact:'minor',selector:'meta[name=\"viewport\"]',matches:'is-initiator-matches',excludeHidden:false,tags:['cat.sensory-and-visual-cues','best-practice'],all:[],any:[{options:{scaleMinimum:5,lowerBound:2},id:'meta-viewport-large'}],none:[]},{id:'meta-viewport',impact:'critical',selector:'meta[name=\"viewport\"]',matches:'is-initiator-matches',excludeHidden:false,tags:['cat.sensory-and-visual-cues','wcag2aa','wcag144','EN-301-549','EN-9.1.4.4','ACT'],actIds:['b4f0c3'],all:[],any:[{options:{scaleMinimum:2},id:'meta-viewport'}],none:[]},{id:'nested-interactive',impact:'serious',matches:'nested-interactive-matches',tags:['cat.keyboard','wcag2a','wcag412','TTv5','TT6.a','EN-301-549','EN-9.4.1.2'],actIds:['307n5z'],all:[],any:['no-focusable-content'],none:[]},{id:'no-autoplay-audio',impact:'moderate',excludeHidden:false,selector:'audio[autoplay], video[autoplay]',matches:'no-autoplay-audio-matches',reviewOnFail:true,tags:['cat.time-and-media','wcag2a','wcag142','TTv5','TT2.a','EN-301-549','EN-9.1.4.2','ACT'],actIds:['80f0bf'],preload:true,all:[{options:{allowedDuration:3},id:'no-autoplay-audio'}],any:[],none:[]},{id:'object-alt',impact:'serious',selector:'object[data]',matches:'object-is-loaded-matches',tags:['cat.text-alternatives','wcag2a','wcag111','section508','section508.22.a','EN-301-549','EN-9.1.1.1'],actIds:['8fc3b6'],all:[],any:['aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'},'presentational-role'],none:[]},{id:'p-as-heading',impact:'serious',selector:'p',matches:'p-as-heading-matches',tags:['cat.semantics','wcag2a','wcag131','EN-301-549','EN-9.1.3.1','experimental'],all:[{options:{margins:[{weight:150,italic:true},{weight:150,size:1.15},{italic:true,size:1.15},{size:1.4}],passLength:1,failLength:.5},id:'p-as-heading'}],any:[],none:[]},{id:'page-has-heading-one',impact:'moderate',selector:'html',tags:['cat.semantics','best-practice'],all:[{options:{selector:'h1:not([role], [aria-level]), :is(h1, h2, h3, h4, h5, h6):not([role])[aria-level=1], [role=heading][aria-level=1]',passForModal:true},id:'page-has-heading-one'}],any:[],none:[]},{id:'presentation-role-conflict',impact:'minor',selector:'img[alt=\\'\\'], [role=\"none\"], [role=\"presentation\"]',matches:'has-implicit-chromium-role-matches',tags:['cat.aria','best-practice','ACT'],actIds:['46ca7f'],all:[],any:[],none:['is-element-focusable','has-global-aria-attribute']},{id:'region',impact:'moderate',selector:'body *',tags:['cat.keyboard','best-practice'],all:[],any:[{options:{regionMatcher:'dialog, [role=dialog], [role=alertdialog], svg'},id:'region'}],none:[]},{id:'role-img-alt',impact:'serious',selector:'[role=\\'img\\']:not(img, area, input, object)',matches:'html-namespace-matches',tags:['cat.text-alternatives','wcag2a','wcag111','section508','section508.22.a','TTv5','TT7.a','EN-301-549','EN-9.1.1.1','ACT'],actIds:['23a2a8'],all:[],any:['aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'scope-attr-valid',impact:'moderate',selector:'td[scope], th[scope]',tags:['cat.tables','best-practice'],all:['html5-scope',{options:{values:['row','col','rowgroup','colgroup']},id:'scope-value'}],any:[],none:[]},{id:'scrollable-region-focusable',impact:'serious',selector:'*:not(select,textarea)',matches:'scrollable-region-focusable-matches',tags:['cat.keyboard','wcag2a','wcag211','TTv5','TT4.a','EN-301-549','EN-9.2.1.1'],actIds:['0ssw9k'],all:[],any:['focusable-content','focusable-element'],none:[]},{id:'select-name',impact:'critical',selector:'select',tags:['cat.forms','wcag2a','wcag412','section508','section508.22.n','TTv5','TT5.c','EN-301-549','EN-9.4.1.2','ACT'],actIds:['e086e5'],all:[],any:['implicit-label','explicit-label','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'},'presentational-role'],none:['hidden-explicit-label']},{id:'server-side-image-map',impact:'minor',selector:'img[ismap]',tags:['cat.text-alternatives','wcag2a','wcag211','section508','section508.22.f','TTv5','TT4.a','EN-301-549','EN-9.2.1.1'],all:[],any:[],none:['exists']},{id:'skip-link',impact:'moderate',selector:'a[href^=\"#\"], a[href^=\"/#\"]',matches:'skip-link-matches',tags:['cat.keyboard','best-practice'],all:[],any:['skip-link'],none:[]},{id:'svg-img-alt',impact:'serious',selector:'[role=\"img\"], [role=\"graphics-symbol\"], svg[role=\"graphics-document\"]',matches:'svg-namespace-matches',tags:['cat.text-alternatives','wcag2a','wcag111','section508','section508.22.a','TTv5','TT7.a','EN-301-549','EN-9.1.1.1','ACT'],actIds:['7d6734'],all:[],any:['svg-non-empty-title','aria-label','aria-labelledby',{options:{attribute:'title'},id:'non-empty-title'}],none:[]},{id:'tabindex',impact:'serious',selector:'[tabindex]',tags:['cat.keyboard','best-practice'],all:[],any:['tabindex'],none:[]},{id:'table-duplicate-name',impact:'minor',selector:'table',tags:['cat.tables','best-practice'],all:[],any:[],none:['same-caption-summary']},{id:'table-fake-caption',impact:'serious',selector:'table',matches:'data-table-matches',tags:['cat.tables','experimental','wcag2a','wcag131','section508','section508.22.g','EN-301-549','EN-9.1.3.1'],all:['caption-faked'],any:[],none:[]},{id:'target-size',impact:'serious',selector:'*',enabled:false,matches:'widget-not-inline-matches',tags:['cat.sensory-and-visual-cues','wcag22aa','wcag258'],all:[],any:[{options:{minSize:24},id:'target-size'},{options:{minOffset:24},id:'target-offset'}],none:[]},{id:'td-has-header',impact:'critical',selector:'table',matches:'data-table-large-matches',tags:['cat.tables','experimental','wcag2a','wcag131','section508','section508.22.g','TTv5','TT14.b','EN-301-549','EN-9.1.3.1'],all:['td-has-header'],any:[],none:[]},{id:'td-headers-attr',impact:'serious',selector:'table',matches:'table-or-grid-role-matches',tags:['cat.tables','wcag2a','wcag131','section508','section508.22.g','TTv5','TT14.b','EN-301-549','EN-9.1.3.1'],actIds:['a25f45'],all:['td-headers-attr'],any:[],none:[]},{id:'th-has-data-cells',impact:'serious',selector:'table',matches:'data-table-matches',tags:['cat.tables','wcag2a','wcag131','section508','section508.22.g','TTv5','TT14.b','EN-301-549','EN-9.1.3.1'],actIds:['d0f69e'],all:['th-has-data-cells'],any:[],none:[]},{id:'valid-lang',impact:'serious',selector:'[lang]:not(html), [xml\\\\:lang]:not(html)',tags:['cat.language','wcag2aa','wcag312','TTv5','TT11.b','EN-301-549','EN-9.3.1.2','ACT'],actIds:['de46e4'],all:[],any:[],none:[{options:{attributes:['lang','xml:lang']},id:'valid-lang'}]},{id:'video-caption',impact:'critical',selector:'video',tags:['cat.text-alternatives','wcag2a','wcag122','section508','section508.22.a','TTv5','TT17.a','EN-301-549','EN-9.1.2.2'],actIds:['eac66b'],all:[],any:[],none:['caption']}],checks:[{id:'abstractrole',evaluate:'abstractrole-evaluate'},{id:'aria-allowed-attr',evaluate:'aria-allowed-attr-evaluate',options:{validTreeRowAttrs:['aria-posinset','aria-setsize','aria-expanded','aria-level']}},{id:'aria-allowed-role',evaluate:'aria-allowed-role-evaluate',options:{allowImplicit:true,ignoredTags:[]}},{id:'aria-busy',evaluate:'aria-busy-evaluate'},{id:'aria-conditional-attr',evaluate:'aria-conditional-attr-evaluate',options:{invalidTableRowAttrs:['aria-posinset','aria-setsize','aria-expanded','aria-level']}},{id:'aria-errormessage',evaluate:'aria-errormessage-evaluate'},{id:'aria-hidden-body',evaluate:'aria-hidden-body-evaluate'},{id:'aria-level',evaluate:'aria-level-evaluate'},{id:'aria-prohibited-attr',evaluate:'aria-prohibited-attr-evaluate',options:{elementsAllowedAriaLabel:['applet','input']}},{id:'aria-required-attr',evaluate:'aria-required-attr-evaluate'},{id:'aria-required-children',evaluate:'aria-required-children-evaluate',options:{reviewEmpty:['doc-bibliography','doc-endnotes','grid','list','listbox','menu','menubar','table','tablist','tree','treegrid','rowgroup']}},{id:'aria-required-parent',evaluate:'aria-required-parent-evaluate',options:{ownGroupRoles:['listitem','treeitem']}},{id:'aria-roledescription',evaluate:'aria-roledescription-evaluate',options:{supportedRoles:['button','img','checkbox','radio','combobox','menuitemcheckbox','menuitemradio']}},{id:'aria-unsupported-attr',evaluate:'aria-unsupported-attr-evaluate'},{id:'aria-valid-attr-value',evaluate:'aria-valid-attr-value-evaluate',options:[]},{id:'aria-valid-attr',evaluate:'aria-valid-attr-evaluate',options:[]},{id:'braille-label-equivalent',evaluate:'braille-label-equivalent-evaluate'},{id:'braille-roledescription-equivalent',evaluate:'braille-roledescription-equivalent-evaluate'},{id:'deprecatedrole',evaluate:'deprecatedrole-evaluate'},{id:'fallbackrole',evaluate:'fallbackrole-evaluate'},{id:'has-global-aria-attribute',evaluate:'has-global-aria-attribute-evaluate'},{id:'has-widget-role',evaluate:'has-widget-role-evaluate',options:[]},{id:'invalidrole',evaluate:'invalidrole-evaluate'},{id:'is-element-focusable',evaluate:'is-element-focusable-evaluate'},{id:'no-implicit-explicit-label',evaluate:'no-implicit-explicit-label-evaluate'},{id:'unsupportedrole',evaluate:'unsupportedrole-evaluate'},{id:'valid-scrollable-semantics',evaluate:'valid-scrollable-semantics-evaluate',options:{roles:['tooltip']}},{id:'color-contrast-enhanced',evaluate:'color-contrast-evaluate',options:{ignoreUnicode:true,ignoreLength:false,ignorePseudo:false,boldValue:700,boldTextPt:14,largeTextPt:18,contrastRatio:{normal:{expected:7,minThreshold:4.5},large:{expected:4.5,minThreshold:3}},pseudoSizeThreshold:.25,shadowOutlineEmMax:.1,textStrokeEmMin:.03}},{id:'color-contrast',evaluate:'color-contrast-evaluate',options:{ignoreUnicode:true,ignoreLength:false,ignorePseudo:false,boldValue:700,boldTextPt:14,largeTextPt:18,contrastRatio:{normal:{expected:4.5},large:{expected:3}},pseudoSizeThreshold:.25,shadowOutlineEmMax:.2,textStrokeEmMin:.03}},{id:'link-in-text-block-style',evaluate:'link-in-text-block-style-evaluate'},{id:'link-in-text-block',evaluate:'link-in-text-block-evaluate',options:{requiredContrastRatio:3,allowSameColor:true}},{id:'autocomplete-appropriate',evaluate:'autocomplete-appropriate-evaluate',deprecated:true},{id:'autocomplete-valid',evaluate:'autocomplete-valid-evaluate',options:{stateTerms:['none','false','true','disabled','enabled','undefined','null']}},{id:'accesskeys',evaluate:'accesskeys-evaluate',after:'accesskeys-after'},{id:'focusable-content',evaluate:'focusable-content-evaluate'},{id:'focusable-disabled',evaluate:'focusable-disabled-evaluate'},{id:'focusable-element',evaluate:'focusable-element-evaluate'},{id:'focusable-modal-open',evaluate:'focusable-modal-open-evaluate'},{id:'focusable-no-name',evaluate:'focusable-no-name-evaluate'},{id:'focusable-not-tabbable',evaluate:'focusable-not-tabbable-evaluate'},{id:'frame-focusable-content',evaluate:'frame-focusable-content-evaluate'},{id:'landmark-is-top-level',evaluate:'landmark-is-top-level-evaluate'},{id:'no-focusable-content',evaluate:'no-focusable-content-evaluate'},{id:'page-has-heading-one',evaluate:'has-descendant-evaluate',after:'has-descendant-after',options:{selector:'h1:not([role], [aria-level]), :is(h1, h2, h3, h4, h5, h6):not([role])[aria-level=1], [role=heading][aria-level=1]',passForModal:true}},{id:'page-has-main',evaluate:'has-descendant-evaluate',after:'has-descendant-after',options:{selector:'main:not([role]), [role=\\'main\\']',passForModal:true}},{id:'page-no-duplicate-banner',evaluate:'page-no-duplicate-evaluate',after:'page-no-duplicate-after',options:{selector:'header:not([role]), [role=banner]',role:'banner'}},{id:'page-no-duplicate-contentinfo',evaluate:'page-no-duplicate-evaluate',after:'page-no-duplicate-after',options:{selector:'footer:not([role]), [role=contentinfo]',role:'contentinfo'}},{id:'page-no-duplicate-main',evaluate:'page-no-duplicate-evaluate',after:'page-no-duplicate-after',options:{selector:'main:not([role]), [role=\\'main\\']'}},{id:'tabindex',evaluate:'tabindex-evaluate'},{id:'alt-space-value',evaluate:'alt-space-value-evaluate'},{id:'duplicate-img-label',evaluate:'duplicate-img-label-evaluate',options:{parentSelector:'button, [role=button], a[href], p, li, td, th'}},{id:'explicit-label',evaluate:'explicit-evaluate'},{id:'help-same-as-label',evaluate:'help-same-as-label-evaluate'},{id:'hidden-explicit-label',evaluate:'hidden-explicit-label-evaluate'},{id:'implicit-label',evaluate:'implicit-evaluate'},{id:'label-content-name-mismatch',evaluate:'label-content-name-mismatch-evaluate',options:{pixelThreshold:.1,occurrenceThreshold:3}},{id:'multiple-label',evaluate:'multiple-label-evaluate'},{id:'title-only',evaluate:'title-only-evaluate'},{id:'landmark-is-unique',evaluate:'landmark-is-unique-evaluate',after:'landmark-is-unique-after'},{id:'has-lang',evaluate:'has-lang-evaluate',options:{attributes:['lang','xml:lang']}},{id:'valid-lang',evaluate:'valid-lang-evaluate',options:{attributes:['lang','xml:lang']}},{id:'xml-lang-mismatch',evaluate:'xml-lang-mismatch-evaluate'},{id:'dlitem',evaluate:'dlitem-evaluate'},{id:'listitem',evaluate:'listitem-evaluate'},{id:'only-dlitems',evaluate:'invalid-children-evaluate',options:{validRoles:['definition','term','listitem'],validNodeNames:['dt','dd'],divGroups:true}},{id:'only-listitems',evaluate:'invalid-children-evaluate',options:{validRoles:['listitem'],validNodeNames:['li']}},{id:'structured-dlitems',evaluate:'structured-dlitems-evaluate'},{id:'caption',evaluate:'caption-evaluate'},{id:'frame-tested',evaluate:'frame-tested-evaluate',after:'frame-tested-after',options:{isViolation:false}},{id:'no-autoplay-audio',evaluate:'no-autoplay-audio-evaluate',options:{allowedDuration:3}},{id:'css-orientation-lock',evaluate:'css-orientation-lock-evaluate',options:{degreeThreshold:2}},{id:'meta-viewport-large',evaluate:'meta-viewport-scale-evaluate',options:{scaleMinimum:5,lowerBound:2}},{id:'meta-viewport',evaluate:'meta-viewport-scale-evaluate',options:{scaleMinimum:2}},{id:'target-offset',evaluate:'target-offset-evaluate',options:{minOffset:24}},{id:'target-size',evaluate:'target-size-evaluate',options:{minSize:24}},{id:'header-present',evaluate:'has-descendant-evaluate',after:'has-descendant-after',options:{selector:':is(h1, h2, h3, h4, h5, h6):not([role]), [role=heading]'}},{id:'heading-order',evaluate:'heading-order-evaluate',after:'heading-order-after'},{id:'identical-links-same-purpose',evaluate:'identical-links-same-purpose-evaluate',after:'identical-links-same-purpose-after'},{id:'internal-link-present',evaluate:'internal-link-present-evaluate'},{id:'landmark',evaluate:'has-descendant-evaluate',options:{selector:'main, [role=main]'}},{id:'meta-refresh-no-exceptions',evaluate:'meta-refresh-evaluate',options:{minDelay:72e3,maxDelay:false}},{id:'meta-refresh',evaluate:'meta-refresh-evaluate',options:{minDelay:0,maxDelay:72e3}},{id:'p-as-heading',evaluate:'p-as-heading-evaluate',options:{margins:[{weight:150,italic:true},{weight:150,size:1.15},{italic:true,size:1.15},{size:1.4}],passLength:1,failLength:.5}},{id:'region',evaluate:'region-evaluate',after:'region-after',options:{regionMatcher:'dialog, [role=dialog], [role=alertdialog], svg'}},{id:'skip-link',evaluate:'skip-link-evaluate'},{id:'unique-frame-title',evaluate:'unique-frame-title-evaluate',after:'unique-frame-title-after'},{id:'duplicate-id-active',evaluate:'duplicate-id-evaluate',after:'duplicate-id-after'},{id:'duplicate-id-aria',evaluate:'duplicate-id-evaluate',after:'duplicate-id-after'},{id:'duplicate-id',evaluate:'duplicate-id-evaluate',after:'duplicate-id-after'},{id:'aria-label',evaluate:'aria-label-evaluate'},{id:'aria-labelledby',evaluate:'aria-labelledby-evaluate'},{id:'avoid-inline-spacing',evaluate:'avoid-inline-spacing-evaluate',options:{cssProperties:['line-height','letter-spacing','word-spacing']}},{id:'button-has-visible-text',evaluate:'has-text-content-evaluate'},{id:'doc-has-title',evaluate:'doc-has-title-evaluate'},{id:'exists',evaluate:'exists-evaluate'},{id:'has-alt',evaluate:'has-alt-evaluate'},{id:'has-visible-text',evaluate:'has-text-content-evaluate'},{id:'important-letter-spacing',evaluate:'inline-style-property-evaluate',options:{cssProperty:'letter-spacing',minValue:.12}},{id:'important-line-height',evaluate:'inline-style-property-evaluate',options:{multiLineOnly:true,cssProperty:'line-height',minValue:1.5,normalValue:1}},{id:'important-word-spacing',evaluate:'inline-style-property-evaluate',options:{cssProperty:'word-spacing',minValue:.16}},{id:'is-on-screen',evaluate:'is-on-screen-evaluate'},{id:'non-empty-alt',evaluate:'attr-non-space-content-evaluate',options:{attribute:'alt'}},{id:'non-empty-if-present',evaluate:'non-empty-if-present-evaluate'},{id:'non-empty-placeholder',evaluate:'attr-non-space-content-evaluate',options:{attribute:'placeholder'}},{id:'non-empty-title',evaluate:'attr-non-space-content-evaluate',options:{attribute:'title'}},{id:'non-empty-value',evaluate:'attr-non-space-content-evaluate',options:{attribute:'value'}},{id:'presentational-role',evaluate:'presentational-role-evaluate'},{id:'role-none',evaluate:'matches-definition-evaluate',deprecated:true,options:{matcher:{attributes:{role:'none'}}}},{id:'role-presentation',evaluate:'matches-definition-evaluate',deprecated:true,options:{matcher:{attributes:{role:'presentation'}}}},{id:'svg-non-empty-title',evaluate:'svg-non-empty-title-evaluate'},{id:'caption-faked',evaluate:'caption-faked-evaluate'},{id:'html5-scope',evaluate:'html5-scope-evaluate'},{id:'same-caption-summary',evaluate:'same-caption-summary-evaluate'},{id:'scope-value',evaluate:'scope-value-evaluate',options:{values:['row','col','rowgroup','colgroup']}},{id:'td-has-header',evaluate:'td-has-header-evaluate'},{id:'td-headers-attr',evaluate:'td-headers-attr-evaluate'},{id:'th-has-data-cells',evaluate:'th-has-data-cells-evaluate'},{id:'hidden-content',evaluate:'hidden-content-evaluate'}]});})(typeof window==='object'?window:this);\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/axe-core/axe.js?");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports=function(cssWithMappingToString){var list=[];// return the list of modules as css string\nlist.toString=function toString(){return this.map(function(item){var content=cssWithMappingToString(item);if(item[2]){return\"@media \".concat(item[2],\" {\").concat(content,\"}\");}return content;}).join(\"\");};// import a list of modules into the list\n// eslint-disable-next-line func-names\nlist.i=function(modules,mediaQuery,dedupe){if(typeof modules===\"string\"){// eslint-disable-next-line no-param-reassign\nmodules=[[null,modules,\"\"]];}var alreadyImportedModules={};if(dedupe){for(var i=0;i<this.length;i++){// eslint-disable-next-line prefer-destructuring\nvar id=this[i][0];if(id!=null){alreadyImportedModules[id]=true;}}}for(var _i=0;_i<modules.length;_i++){var item=[].concat(modules[_i]);if(dedupe&&alreadyImportedModules[item[0]]){// eslint-disable-next-line no-continue\ncontinue;}if(mediaQuery){if(!item[2]){item[2]=mediaQuery;}else{item[2]=\"\".concat(mediaQuery,\" and \").concat(item[2]);}}list.push(item);}};return list;};\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/ember-qunit/dist/adapter.js":
/*!***************************************************!*\
  !*** ../node_modules/ember-qunit/dist/adapter.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Adapter),\n/* harmony export */   nonTestDoneCallback: () => (/* binding */ nonTestDoneCallback)\n/* harmony export */ });\n/* harmony import */ var _ember_test_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/test/adapter */ \"@ember/test/adapter\");\n/* harmony import */ var _ember_test_adapter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_test_adapter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qunit */ \"../node_modules/qunit/qunit/qunit.js\");\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(qunit__WEBPACK_IMPORTED_MODULE_1__);\nfunction nonTestDoneCallback(){}let Adapter=_ember_test_adapter__WEBPACK_IMPORTED_MODULE_0___default().extend({init(){this.doneCallbacks=[];this.qunit=this.qunit||qunit__WEBPACK_IMPORTED_MODULE_1__;},asyncStart(){let currentTest=this.qunit.config.current;let done=currentTest&&currentTest.assert?currentTest.assert.async():nonTestDoneCallback;this.doneCallbacks.push({test:currentTest,done});},asyncEnd(){let currentTest=this.qunit.config.current;if(this.doneCallbacks.length===0){throw new Error('Adapter asyncEnd called when no async was expected. Please create an issue in ember-qunit.');}let{test,done}=this.doneCallbacks.pop();// In future, we should explore fixing this at a different level, specifically\n// addressing the pairing of asyncStart/asyncEnd behavior in a more consistent way.\nif(test===currentTest){done();}}});\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/adapter.js?");

/***/ }),

/***/ "../node_modules/ember-qunit/dist/index.js":
/*!*************************************************!*\
  !*** ../node_modules/ember-qunit/dist/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QUnitAdapter: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   loadTests: () => (/* reexport safe */ _test_loader_js__WEBPACK_IMPORTED_MODULE_2__.loadTests),\n/* harmony export */   nonTestDoneCallback: () => (/* reexport safe */ _adapter_js__WEBPACK_IMPORTED_MODULE_1__.nonTestDoneCallback),\n/* harmony export */   setupApplicationTest: () => (/* binding */ setupApplicationTest),\n/* harmony export */   setupEmberOnerrorValidation: () => (/* binding */ setupEmberOnerrorValidation),\n/* harmony export */   setupEmberTesting: () => (/* binding */ setupEmberTesting),\n/* harmony export */   setupRenderingTest: () => (/* binding */ setupRenderingTest),\n/* harmony export */   setupResetOnerror: () => (/* binding */ setupResetOnerror),\n/* harmony export */   setupTest: () => (/* binding */ setupTest),\n/* harmony export */   setupTestAdapter: () => (/* binding */ setupTestAdapter),\n/* harmony export */   setupTestContainer: () => (/* binding */ setupTestContainer),\n/* harmony export */   setupTestIsolationValidation: () => (/* binding */ setupTestIsolationValidation),\n/* harmony export */   start: () => (/* binding */ start),\n/* harmony export */   startTests: () => (/* binding */ startTests)\n/* harmony export */ });\n/* harmony import */ var qunit_qunit_qunit_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qunit/qunit/qunit.css */ \"../node_modules/qunit/qunit/qunit.css\");\n/* harmony import */ var _adapter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./adapter.js */ \"../node_modules/ember-qunit/dist/adapter.js\");\n/* harmony import */ var _test_loader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./test-loader.js */ \"../node_modules/ember-qunit/dist/test-loader.js\");\n/* harmony import */ var _qunit_configuration_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./qunit-configuration.js */ \"../node_modules/ember-qunit/dist/qunit-configuration.js\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ember/runloop */ \"@ember/runloop\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_ember_runloop__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ember/test-helpers */ \"@ember/test-helpers\");\n/* harmony import */ var _ember_test_helpers__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ember */ \"ember\");\n/* harmony import */ var ember__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ember__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! qunit */ \"../node_modules/qunit/qunit/qunit.js\");\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(qunit__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _test_isolation_validation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./test-isolation-validation.js */ \"../node_modules/ember-qunit/dist/test-isolation-validation.js\");\n/* harmony import */ var _embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../@embroider/macros/src/addon/runtime */ \"../node_modules/@embroider/macros/src/addon/runtime.js\");\n/* harmony import */ var _embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../@embroider/macros/src/addon/es-compat2 */ \"../node_modules/@embroider/macros/src/addon/es-compat2.js\");\n/* globals Testem */if((0,_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_9__.macroCondition)(!(0,_embroider_macros_src_addon_runtime__WEBPACK_IMPORTED_MODULE_9__.config)(\"/Users/jorytindall/projects/hds/design-system/node_modules/ember-qunit\")?.disableContainerStyles)){(0,_embroider_macros_src_addon_es_compat2__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(__webpack_require__(/*! ./test-container-styles.css */ \"../node_modules/ember-qunit/dist/test-container-styles.css\"));}if(typeof Testem!=='undefined'){Testem.hookIntoTestFramework();}let waitForSettled=true;function setupTest(hooks,_options){let options={waitForSettled,..._options};hooks.beforeEach(function(assert){let testMetadata=(0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.getTestMetadata)(this);testMetadata.framework='qunit';return (0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.setupContext)(this,options).then(()=>{let originalPauseTest=this.pauseTest;this.pauseTest=function QUnit_pauseTest(){assert.timeout(-1);// prevent the test from timing out\n// This is a temporary work around for\n// https://github.com/emberjs/ember-qunit/issues/496 this clears the\n// timeout that would fail the test when it hits the global testTimeout\n// value.\nclearTimeout(qunit__WEBPACK_IMPORTED_MODULE_7__.config.timeout);return originalPauseTest.call(this);};});});hooks.afterEach(function(){return (0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.teardownContext)(this,options);});}function setupRenderingTest(hooks,_options){let options={waitForSettled,..._options};setupTest(hooks,options);hooks.beforeEach(function(){return (0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.setupRenderingContext)(this);});}function setupApplicationTest(hooks,_options){let options={waitForSettled,..._options};setupTest(hooks,options);hooks.beforeEach(function(){return (0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.setupApplicationContext)(this);});}/**\n   Uses current URL configuration to setup the test container.\n\n   * If `?nocontainer` is set, the test container will be hidden.\n   * If `?devmode` or `?fullscreencontainer` is set, the test container will be\n     made full screen.\n\n   @method setupTestContainer\n */function setupTestContainer(){let testContainer=document.getElementById('ember-testing-container');if(!testContainer){return;}let params=qunit__WEBPACK_IMPORTED_MODULE_7__.urlParams;if(params.devmode||params.fullscreencontainer){testContainer.classList.add('ember-testing-container-full-screen');}if(params.nocontainer){testContainer.classList.add('ember-testing-container-hidden');}}/**\n   Instruct QUnit to start the tests.\n   @method startTests\n */function startTests(){qunit__WEBPACK_IMPORTED_MODULE_7__.start();}/**\n   Sets up the `Ember.Test` adapter for usage with QUnit 2.x.\n\n   @method setupTestAdapter\n */function setupTestAdapter(){(ember__WEBPACK_IMPORTED_MODULE_6___default().Test).adapter=_adapter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create();}/**\n  Ensures that `Ember.testing` is set to `true` before each test begins\n  (including `before` / `beforeEach`), and reset to `false` after each test is\n  completed. This is done via `QUnit.testStart` and `QUnit.testDone`.\n\n */function setupEmberTesting(){qunit__WEBPACK_IMPORTED_MODULE_7__.testStart(()=>{// eslint-disable-next-line ember/no-ember-testing-in-module-scope\n(ember__WEBPACK_IMPORTED_MODULE_6___default().testing)=true;});qunit__WEBPACK_IMPORTED_MODULE_7__.testDone(()=>{// eslint-disable-next-line ember/no-ember-testing-in-module-scope\n(ember__WEBPACK_IMPORTED_MODULE_6___default().testing)=false;});}/**\n  Ensures that `Ember.onerror` (if present) is properly configured to re-throw\n  errors that occur while `Ember.testing` is `true`.\n*/function setupEmberOnerrorValidation(){qunit__WEBPACK_IMPORTED_MODULE_7__.module('ember-qunit: Ember.onerror validation',function(){qunit__WEBPACK_IMPORTED_MODULE_7__.test('Ember.onerror is functioning properly',function(assert){assert.expect(1);let result=(0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.validateErrorHandler)();assert.ok(result.isValid,`Ember.onerror handler with invalid testing behavior detected. An Ember.onerror handler _must_ rethrow exceptions when \\`Ember.testing\\` is \\`true\\` or the test suite is unreliable. See https://git.io/vbine for more details.`);});});}function setupResetOnerror(){qunit__WEBPACK_IMPORTED_MODULE_7__.testDone(_ember_test_helpers__WEBPACK_IMPORTED_MODULE_5__.resetOnerror);}function setupTestIsolationValidation(delay){waitForSettled=false;_ember_runloop__WEBPACK_IMPORTED_MODULE_4__._backburner.DEBUG=true;qunit__WEBPACK_IMPORTED_MODULE_7__.on('testStart',()=>(0,_test_isolation_validation_js__WEBPACK_IMPORTED_MODULE_8__.installTestNotIsolatedHook)(delay));}/**\n   @method start\n   @param {Object} [options] Options to be used for enabling/disabling behaviors\n   @param {Boolean} [options.loadTests] If `false` tests will not be loaded automatically.\n   @param {Boolean} [options.setupTestContainer] If `false` the test container will not\n   be setup based on `devmode`, `dockcontainer`, or `nocontainer` URL params.\n   @param {Boolean} [options.startTests] If `false` tests will not be automatically started\n   (you must run `QUnit.start()` to kick them off).\n   @param {Boolean} [options.setupTestAdapter] If `false` the default Ember.Test adapter will\n   not be updated.\n   @param {Boolean} [options.setupEmberTesting] `false` opts out of the\n   default behavior of setting `Ember.testing` to `true` before all tests and\n   back to `false` after each test will.\n   @param {Boolean} [options.setupEmberOnerrorValidation] If `false` validation\n   of `Ember.onerror` will be disabled.\n   @param {Boolean} [options.setupTestIsolationValidation] If `false` test isolation validation\n   will be disabled.\n   @param {Number} [options.testIsolationValidationDelay] When using\n   setupTestIsolationValidation this number represents the maximum amount of\n   time in milliseconds that is allowed _after_ the test is completed for all\n   async to have been completed. The default value is 50.\n */function start(options={}){if(options.loadTests!==false){(0,_test_loader_js__WEBPACK_IMPORTED_MODULE_2__.loadTests)();}if(options.setupTestContainer!==false){setupTestContainer();}if(options.setupTestAdapter!==false){setupTestAdapter();}if(options.setupEmberTesting!==false){setupEmberTesting();}if(options.setupEmberOnerrorValidation!==false){setupEmberOnerrorValidation();}if(typeof options.setupTestIsolationValidation!=='undefined'&&options.setupTestIsolationValidation!==false){setupTestIsolationValidation(options.testIsolationValidationDelay);}if(options.startTests!==false){startTests();}setupResetOnerror();}\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/index.js?");

/***/ }),

/***/ "../node_modules/ember-qunit/dist/qunit-configuration.js":
/*!***************************************************************!*\
  !*** ../node_modules/ember-qunit/dist/qunit-configuration.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qunit */ \"../node_modules/qunit/qunit/qunit.js\");\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qunit__WEBPACK_IMPORTED_MODULE_0__);\nqunit__WEBPACK_IMPORTED_MODULE_0__.config.autostart=false;qunit__WEBPACK_IMPORTED_MODULE_0__.config.urlConfig.push({id:'nocontainer',label:'Hide container'});qunit__WEBPACK_IMPORTED_MODULE_0__.config.urlConfig.push({id:'devmode',label:'Development mode'});qunit__WEBPACK_IMPORTED_MODULE_0__.config.testTimeout=qunit__WEBPACK_IMPORTED_MODULE_0__.urlParams.devmode?null:60000;//Default Test Timeout 60 Seconds\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/qunit-configuration.js?");

/***/ }),

/***/ "../node_modules/ember-qunit/dist/test-isolation-validation.js":
/*!*********************************************************************!*\
  !*** ../node_modules/ember-qunit/dist/test-isolation-validation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectIfTestNotIsolated: () => (/* binding */ detectIfTestNotIsolated),\n/* harmony export */   installTestNotIsolatedHook: () => (/* binding */ installTestNotIsolatedHook)\n/* harmony export */ });\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qunit */ \"../node_modules/qunit/qunit/qunit.js\");\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qunit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/runloop */ \"@ember/runloop\");\n/* harmony import */ var _ember_runloop__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_runloop__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/test-helpers */ \"@ember/test-helpers\");\n/* harmony import */ var _ember_test_helpers__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__);\n/* eslint-disable no-console */ /**\n * Detects if a specific test isn't isolated. A test is considered\n * not isolated if it:\n *\n * - has pending timers\n * - is in a runloop\n * - has pending AJAX requests\n * - has pending test waiters\n *\n * @function detectIfTestNotIsolated\n * @param {Object} testInfo\n * @param {string} testInfo.module The name of the test module\n * @param {string} testInfo.name The test name\n */function detectIfTestNotIsolated(test,message=''){if(!(0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__.isSettled)()){let{debugInfo}=(0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__.getSettledState)();console.group(`${test.module.name}: ${test.testName}`);debugInfo.toConsole();console.groupEnd();test.expected++;test.assert.pushResult({result:false,message:`${message} \\nMore information has been printed to the console. Please use that information to help in debugging.\\n\\n`});}}/**\n * Installs a hook to detect if a specific test isn't isolated.\n * This hook is installed by patching into the `test.finish` method,\n * which allows us to be very precise as to when the detection occurs.\n *\n * @function installTestNotIsolatedHook\n * @param {number} delay the delay delay to use when checking for isolation validation\n */function installTestNotIsolatedHook(delay=50){if(!(0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__.getDebugInfo)()){return;}let test=qunit__WEBPACK_IMPORTED_MODULE_0__.config.current;let finish=test.finish;let pushFailure=test.pushFailure;test.pushFailure=function(message){if(message.indexOf('Test took longer than')===0){detectIfTestNotIsolated(this,message);}else{return pushFailure.apply(this,arguments);}};// We're hooking into `test.finish`, which utilizes internal ordering of\n// when a test's hooks are invoked. We do this mainly because we need\n// greater precision as to when to detect and subsequently report if the\n// test is isolated.\n//\n// We looked at using:\n// - `afterEach`\n//    - the ordering of when the `afterEach` is called is not easy to guarantee\n//      (ancestor `afterEach`es have to be accounted for too)\n// - `QUnit.on('testEnd')`\n//    - is executed too late; the test is already considered done so\n//      we're unable to push a new assert to fail the current test\n// - 'QUnit.done'\n//    - it detaches the failure from the actual test that failed, making it\n//      more confusing to the end user.\ntest.finish=function(){let doFinish=()=>finish.apply(this,arguments);if((0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__.isSettled)()){return doFinish();}else{return (0,_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__.waitUntil)(_ember_test_helpers__WEBPACK_IMPORTED_MODULE_2__.isSettled,{timeout:delay}).catch(()=>{// we consider that when waitUntil times out, you're in a state of\n// test isolation violation. The nature of the error is irrelevant\n// in this case, and we want to allow the error to fall through\n// to the finally, where cleanup occurs.\n}).finally(()=>{detectIfTestNotIsolated(this,'Test is not isolated (async execution is extending beyond the duration of the test).');// canceling timers here isn't perfect, but is as good as we can do\n// to attempt to prevent future tests from failing due to this test's\n// leakage\n(0,_ember_runloop__WEBPACK_IMPORTED_MODULE_1__._cancelTimers)();return doFinish();});}};}\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/test-isolation-validation.js?");

/***/ }),

/***/ "../node_modules/ember-qunit/dist/test-loader.js":
/*!*******************************************************!*\
  !*** ../node_modules/ember-qunit/dist/test-loader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TestLoader: () => (/* binding */ TestLoader),\n/* harmony export */   loadTests: () => (/* binding */ loadTests)\n/* harmony export */ });\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! qunit */ \"../node_modules/qunit/qunit/qunit.js\");\n/* harmony import */ var qunit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(qunit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ember_cli_test_loader_test_support_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ember-cli-test-loader/test-support/index */ \"ember-cli-test-loader/test-support/index\");\n/* harmony import */ var ember_cli_test_loader_test_support_index__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ember_cli_test_loader_test_support_index__WEBPACK_IMPORTED_MODULE_1__);\n(0,ember_cli_test_loader_test_support_index__WEBPACK_IMPORTED_MODULE_1__.addModuleIncludeMatcher)(function(moduleName){return moduleName.match(/\\.jshint$/);});let moduleLoadFailures=[];qunit__WEBPACK_IMPORTED_MODULE_0__.done(function(){let length=moduleLoadFailures.length;try{if(length===0){// do nothing\n}else if(length===1){throw moduleLoadFailures[0];}else{throw new Error('\\n'+moduleLoadFailures.join('\\n'));}}finally{// ensure we release previously captured errors.\nmoduleLoadFailures=[];}});class TestLoader extends (ember_cli_test_loader_test_support_index__WEBPACK_IMPORTED_MODULE_1___default()){moduleLoadFailure(moduleName,error){moduleLoadFailures.push(error);qunit__WEBPACK_IMPORTED_MODULE_0__.module('TestLoader Failures');qunit__WEBPACK_IMPORTED_MODULE_0__.test(moduleName+': could not be loaded',function(){throw error;});}}/**\n   Load tests following the default patterns:\n\n   * The module name ends with `-test`\n\n   @method loadTests\n */function loadTests(){new TestLoader().loadModules();}\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/test-loader.js?");

/***/ }),

/***/ "../node_modules/qunit/qunit/qunit.js":
/*!********************************************!*\
  !*** ../node_modules/qunit/qunit/qunit.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * QUnit 2.20.0\n * https://qunitjs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n */(function(){'use strict';function _typeof(obj){\"@babel/helpers - typeof\";return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;},_typeof(obj);}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,\"prototype\",{writable:false});return Constructor;}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _iterableToArray(iter){if(typeof Symbol!==\"undefined\"&&iter[Symbol.iterator]!=null||iter[\"@@iterator\"]!=null)return Array.from(iter);}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!==\"undefined\"&&arr[Symbol.iterator]||arr[\"@@iterator\"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function(){};return{s:F,n:function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function(e){throw e;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function(){it=it.call(o);},n:function(){var step=it.next();normalCompletion=step.done;return step;},e:function(e){didErr=true;err=e;},f:function(){try{if(!normalCompletion&&it.return!=null)it.return();}finally{if(didErr)throw err;}}};}// We don't use global-this-polyfill [1], because it modifies\n// the globals scope by default. QUnit must not affect the host context\n// as developers may test their project may be such a polyfill, and/or\n// they may intentionally test their project with and without certain\n// polyfills and we must not affect that. It also uses an obscure\n// mechanism that seems to sometimes causes a runtime error in older\n// browsers (specifically Safari and IE versions that support\n// Object.defineProperty but then report _T_ as undefined).\n// [1] https://github.com/ungap/global-this/blob/v0.4.4/esm/index.js\n//\n// Another way is `Function('return this')()`, but doing so relies\n// on eval which will cause a CSP error on some servers.\n//\n// Instead, simply check the four options that already exist\n// in all supported environments.\nfunction getGlobalThis(){if(typeof globalThis!=='undefined'){// For SpiderMonkey, modern browsers, and recent Node.js\n// eslint-disable-next-line no-undef\nreturn globalThis;}if(typeof self!=='undefined'){// For web workers\n// eslint-disable-next-line no-undef\nreturn self;}if(typeof window$1!=='undefined'){// For document context in browsers\nreturn window$1;}if(typeof global!=='undefined'){// For Node.js\n// eslint-disable-next-line no-undef\nreturn global;}throw new Error('Unable to locate global object');}// This avoids a simple `export const` assignment as that would lead Rollup\n// to change getGlobalThis and use the same (generated) variable name there.\nvar g=getGlobalThis();var window$1=g.window;var console$1=g.console;var setTimeout$1=g.setTimeout;var clearTimeout=g.clearTimeout;var document=window$1&&window$1.document;var navigator=window$1&&window$1.navigator;var localSessionStorage=function(){var x='qunit-test-string';try{g.sessionStorage.setItem(x,x);g.sessionStorage.removeItem(x);return g.sessionStorage;}catch(e){return undefined;}}();// Basic fallback for ES6 Map\n// Support: IE 9-10, Safari 7, PhantomJS; Map is undefined\n// Support: iOS 8; `new Map(iterable)` is not supported\n//\n// Fallback for ES7 Map#keys\n// Support: IE 11; Map#keys is undefined\nvar StringMap=typeof g.Map==='function'&&typeof g.Map.prototype.keys==='function'&&typeof g.Symbol==='function'&&_typeof(g.Symbol.iterator)==='symbol'?g.Map:function StringMap(input){var _this=this;var store=Object.create(null);var hasOwn=Object.prototype.hasOwnProperty;this.has=function(strKey){return hasOwn.call(store,strKey);};this.get=function(strKey){return store[strKey];};this.set=function(strKey,val){if(!hasOwn.call(store,strKey)){this.size++;}store[strKey]=val;return this;};this.delete=function(strKey){if(hasOwn.call(store,strKey)){delete store[strKey];this.size--;}};this.forEach=function(callback){for(var strKey in store){callback(store[strKey],strKey);}};this.keys=function(){return Object.keys(store);};this.clear=function(){store=Object.create(null);this.size=0;};this.size=0;if(input){input.forEach(function(val,strKey){_this.set(strKey,val);});}};// Basic fallback for ES6 Set\n// Support: IE 11, `new Set(iterable)` parameter not yet implemented\n// Test for Set#values() which came after Set(iterable).\nvar StringSet=typeof g.Set==='function'&&typeof g.Set.prototype.values==='function'?g.Set:function(input){var set=Object.create(null);if(Array.isArray(input)){input.forEach(function(item){set[item]=true;});}return{add:function add(value){set[value]=true;},has:function has(value){return value in set;},get size(){return Object.keys(set).length;}};};var toString=Object.prototype.toString;var hasOwn$1=Object.prototype.hasOwnProperty;var performance={// eslint-disable-next-line compat/compat -- Checked\nnow:window$1&&window$1.performance&&window$1.performance.now?window$1.performance.now.bind(window$1.performance):Date.now};// Returns a new Array with the elements that are in a but not in b\nfunction diff(a,b){return a.filter(function(a){return b.indexOf(a)===-1;});}/**\n   * Determines whether an element exists in a given array or not.\n   *\n   * @method inArray\n   * @param {any} elem\n   * @param {Array} array\n   * @return {boolean}\n   */var inArray=Array.prototype.includes?function(elem,array){return array.includes(elem);}:function(elem,array){return array.indexOf(elem)!==-1;};/**\n   * Recursively clone an object into a plain array or object, taking only the\n   * own enumerable properties.\n   *\n   * @param {any} obj\n   * @param {bool} [allowArray=true]\n   * @return {Object|Array}\n   */function objectValues(obj){var allowArray=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var vals=allowArray&&is('array',obj)?[]:{};for(var key in obj){if(hasOwn$1.call(obj,key)){var val=obj[key];vals[key]=val===Object(val)?objectValues(val,allowArray):val;}}return vals;}/**\n   * Recursively clone an object into a plain object, taking only the\n   * subset of own enumerable properties that exist a given model.\n   *\n   * @param {any} obj\n   * @param {any} model\n   * @return {Object}\n   */function objectValuesSubset(obj,model){// Return primitive values unchanged to avoid false positives or confusing\n// results from assert.propContains().\n// E.g. an actual null or false wrongly equaling an empty object,\n// or an actual string being reported as object not matching a partial object.\nif(obj!==Object(obj)){return obj;}// Unlike objectValues(), subset arrays to a plain objects as well.\n// This enables subsetting [20, 30] with {1: 30}.\nvar subset={};for(var key in model){if(hasOwn$1.call(model,key)&&hasOwn$1.call(obj,key)){subset[key]=objectValuesSubset(obj[key],model[key]);}}return subset;}function extend(a,b,undefOnly){for(var prop in b){if(hasOwn$1.call(b,prop)){if(b[prop]===undefined){delete a[prop];}else if(!(undefOnly&&typeof a[prop]!=='undefined')){a[prop]=b[prop];}}}return a;}function objectType(obj){if(typeof obj==='undefined'){return'undefined';}// Consider: typeof null === object\nif(obj===null){return'null';}var match=toString.call(obj).match(/^\\[object\\s(.*)\\]$/);var type=match&&match[1];switch(type){case'Number':if(isNaN(obj)){return'nan';}return'number';case'String':case'Boolean':case'Array':case'Set':case'Map':case'Date':case'RegExp':case'Function':case'Symbol':return type.toLowerCase();default:return _typeof(obj);}}// Safe object type checking\nfunction is(type,obj){return objectType(obj)===type;}// Based on Java's String.hashCode, a simple but not\n// rigorously collision resistant hashing function\nfunction generateHash(module,testName){var str=module+'\\x1C'+testName;var hash=0;for(var i=0;i<str.length;i++){hash=(hash<<5)-hash+str.charCodeAt(i);hash|=0;}// Convert the possibly negative integer hash code into an 8 character hex string, which isn't\n// strictly necessary but increases user understanding that the id is a SHA-like hash\nvar hex=(0x100000000+hash).toString(16);if(hex.length<8){hex='0000000'+hex;}return hex.slice(-8);}/**\n   * Converts an error into a simple string for comparisons.\n   *\n   * @param {Error|any} error\n   * @return {string}\n   */function errorString(error){// Use String() instead of toString() to handle non-object values like undefined or null.\nvar resultErrorString=String(error);// If the error wasn't a subclass of Error but something like\n// an object literal with name and message properties...\nif(resultErrorString.slice(0,7)==='[object'){// Based on https://es5.github.io/#x15.11.4.4\nreturn(error.name||'Error')+(error.message?\": \".concat(error.message):'');}else{return resultErrorString;}}var BOXABLE_TYPES=new StringSet(['boolean','number','string']);// Memory for previously seen containers (object, array, map, set).\n// Used for recursion detection, and to avoid repeated comparison.\n//\n// Elements are { a: val, b: val }.\nvar memory=[];function useStrictEquality(a,b){return a===b;}function useObjectValueEquality(a,b){return a===b||a.valueOf()===b.valueOf();}function compareConstructors(a,b){// Comparing constructors is more strict than using `instanceof`\nreturn getConstructor(a)===getConstructor(b);}function getConstructor(obj){var proto=Object.getPrototypeOf(obj);// If the obj prototype descends from a null constructor, treat it\n// as a null prototype.\n// Ref https://github.com/qunitjs/qunit/issues/851\n//\n// Allow objects with no prototype, from Object.create(null), to be equivalent to\n// plain objects that have Object as their constructor.\nreturn!proto||proto.constructor===null?Object:obj.constructor;}function getRegExpFlags(regexp){return'flags'in regexp?regexp.flags:regexp.toString().match(/[gimuy]*$/)[0];}// Specialised comparisons after entryTypeCallbacks.object, based on `objectType()`\nvar objTypeCallbacks={undefined:useStrictEquality,null:useStrictEquality,// Handle boxed boolean\nboolean:useObjectValueEquality,number:function number(a,b){// Handle NaN and boxed number\nreturn a===b||a.valueOf()===b.valueOf()||isNaN(a.valueOf())&&isNaN(b.valueOf());},// Handle boxed string\nstring:useObjectValueEquality,symbol:useStrictEquality,date:useObjectValueEquality,nan:function nan(){return true;},regexp:function regexp(a,b){return a.source===b.source&&// Include flags in the comparison\ngetRegExpFlags(a)===getRegExpFlags(b);},// identical reference only\nfunction:useStrictEquality,array:function array(a,b){if(a.length!==b.length){// Safe and faster\nreturn false;}for(var i=0;i<a.length;i++){if(!typeEquiv(a[i],b[i])){return false;}}return true;},// Define sets a and b to be equivalent if for each element aVal in a, there\n// is some element bVal in b such that aVal and bVal are equivalent. Element\n// repetitions are not counted, so these are equivalent:\n// a = new Set( [ X={}, Y=[], Y ] );\n// b = new Set( [ Y, X, X ] );\nset:function set(a,b){if(a.size!==b.size){// This optimization has certain quirks because of the lack of\n// repetition counting. For instance, adding the same\n// (reference-identical) element to two equivalent sets can\n// make them non-equivalent.\nreturn false;}var outerEq=true;a.forEach(function(aVal){// Short-circuit if the result is already known. (Using for...of\n// with a break clause would be cleaner here, but it would cause\n// a syntax error on older JavaScript implementations even if\n// Set is unused)\nif(!outerEq){return;}var innerEq=false;b.forEach(function(bVal){// Likewise, short-circuit if the result is already known\nif(innerEq){return;}// Swap out the global memory, as nested typeEquiv() would clobber it\nvar originalMemory=memory;memory=[];if(typeEquiv(bVal,aVal)){innerEq=true;}// Restore\nmemory=originalMemory;});if(!innerEq){outerEq=false;}});return outerEq;},// Define maps a and b to be equivalent if for each key-value pair (aKey, aVal)\n// in a, there is some key-value pair (bKey, bVal) in b such that\n// [ aKey, aVal ] and [ bKey, bVal ] are equivalent. Key repetitions are not\n// counted, so these are equivalent:\n// a = new Map( [ [ {}, 1 ], [ {}, 1 ], [ [], 1 ] ] );\n// b = new Map( [ [ {}, 1 ], [ [], 1 ], [ [], 1 ] ] );\nmap:function map(a,b){if(a.size!==b.size){// This optimization has certain quirks because of the lack of\n// repetition counting. For instance, adding the same\n// (reference-identical) key-value pair to two equivalent maps\n// can make them non-equivalent.\nreturn false;}var outerEq=true;a.forEach(function(aVal,aKey){// Short-circuit if the result is already known. (Using for...of\n// with a break clause would be cleaner here, but it would cause\n// a syntax error on older JavaScript implementations even if\n// Map is unused)\nif(!outerEq){return;}var innerEq=false;b.forEach(function(bVal,bKey){// Likewise, short-circuit if the result is already known\nif(innerEq){return;}// Swap out the global memory, as nested typeEquiv() would clobber it\nvar originalMemory=memory;memory=[];if(objTypeCallbacks.array([bVal,bKey],[aVal,aKey])){innerEq=true;}// Restore\nmemory=originalMemory;});if(!innerEq){outerEq=false;}});return outerEq;}};// Entry points from typeEquiv, based on `typeof`\nvar entryTypeCallbacks={undefined:useStrictEquality,null:useStrictEquality,boolean:useStrictEquality,number:function number(a,b){// Handle NaN\nreturn a===b||isNaN(a)&&isNaN(b);},string:useStrictEquality,symbol:useStrictEquality,function:useStrictEquality,object:function object(a,b){// Handle memory (skip recursion)\nif(memory.some(function(pair){return pair.a===a&&pair.b===b;})){return true;}memory.push({a:a,b:b});var aObjType=objectType(a);var bObjType=objectType(b);if(aObjType!=='object'||bObjType!=='object'){// Handle literal `null`\n// Handle: Array, Map/Set, Date, Regxp/Function, boxed primitives\nreturn aObjType===bObjType&&objTypeCallbacks[aObjType](a,b);}// NOTE: Literal null must not make it here as it would throw\nif(compareConstructors(a,b)===false){return false;}var aProperties=[];var bProperties=[];// Be strict and go deep, no filtering with hasOwnProperty.\nfor(var i in a){// Collect a's properties\naProperties.push(i);// Skip OOP methods that look the same\nif(a.constructor!==Object&&typeof a.constructor!=='undefined'&&typeof a[i]==='function'&&typeof b[i]==='function'&&a[i].toString()===b[i].toString()){continue;}if(!typeEquiv(a[i],b[i])){return false;}}for(var _i in b){// Collect b's properties\nbProperties.push(_i);}return objTypeCallbacks.array(aProperties.sort(),bProperties.sort());}};function typeEquiv(a,b){// Optimization: Only perform type-specific comparison when pairs are not strictly equal.\nif(a===b){return true;}var aType=_typeof(a);var bType=_typeof(b);if(aType!==bType){// Support comparing primitive to boxed primitives\n// Try again after possibly unwrapping one\nreturn(aType==='object'&&BOXABLE_TYPES.has(objectType(a))?a.valueOf():a)===(bType==='object'&&BOXABLE_TYPES.has(objectType(b))?b.valueOf():b);}return entryTypeCallbacks[aType](a,b);}function innerEquiv(a,b){var res=typeEquiv(a,b);// Release any retained objects and reset recursion detection for next call\nmemory=[];return res;}/**\n   * Test any two types of JavaScript values for equality.\n   *\n   * @author Philippe Rathé <prathe@gmail.com>\n   * @author David Chan <david@troi.org>\n   */function equiv(a,b){if(arguments.length===2){return a===b||innerEquiv(a,b);}// Given 0 or 1 arguments, just return true (nothing to compare).\n// Given (A,B,C,D) compare C,D then B,C then A,B.\nvar i=arguments.length-1;while(i>0){if(!innerEquiv(arguments[i-1],arguments[i])){return false;}i--;}return true;}/**\n   * Config object: Maintain internal state\n   * Later exposed as QUnit.config\n   * `config` initialized at top of scope\n   */var config={// HTML Reporter: Modify document.title when suite is done\naltertitle:true,// HTML Reporter: collapse every test except the first failing test\n// If false, all failing tests will be expanded\ncollapse:true,// whether or not to fail when there are zero tests\n// defaults to `true`\nfailOnZeroTests:true,// Select by pattern or case-insensitive substring match against \"moduleName: testName\"\nfilter:undefined,// Depth up-to which object will be dumped\nmaxDepth:5,// Select case-insensitive match of the module name\nmodule:undefined,// HTML Reporter: Select module/test by array of internal IDs\nmoduleId:undefined,// By default, run previously failed tests first\n// very useful in combination with \"Hide passed tests\" checked\nreorder:true,// When enabled, all tests must call expect()\nrequireExpects:false,// By default, scroll to top of the page when suite is done\nscrolltop:true,// The storage module to use for reordering tests\nstorage:localSessionStorage,testId:undefined,// HTML Reporter: List of URL parameters that are given visual controls\nurlConfig:[],// Internal: The first unnamed module\n//\n// By being defined as the intial value for currentModule, it is the\n// receptacle and implied parent for any global tests. It is as if we\n// called `QUnit.module( \"\" );` before any other tests were defined.\n//\n// If we reach begin() and no tests were put in it, we dequeue it as if it\n// never existed, and in that case never expose it to the events and\n// callbacks API.\n//\n// When global tests are defined, then this unnamed module will execute\n// as any other module, including moduleStart/moduleDone events etc.\n//\n// Since this module isn't explicitly created by the user, they have no\n// access to add hooks for it. The hooks object is defined to comply\n// with internal expectations of test.js, but they will be empty.\n// To apply hooks, place tests explicitly in a QUnit.module(), and use\n// its hooks accordingly.\n//\n// For global hooks that apply to all tests and all modules, use QUnit.hooks.\n//\n// NOTE: This is *not* a \"global module\". It is not an ancestor of all modules\n// and tests. It is merely the parent for any tests defined globally,\n// before the first QUnit.module(). As such, the events for this unnamed\n// module will fire as normal, right after its last test, and *not* at\n// the end of the test run.\n//\n// NOTE: This also should probably also not become a global module, unless\n// we keep it out of the public API. For example, it would likely not\n// improve the user interface and plugin behaviour if all modules became\n// wrapped between the start and end events of this module, and thus\n// needlessly add indentation, indirection, or other visible noise.\n// Unit tests for the callbacks API would detect that as a regression.\ncurrentModule:{name:'',tests:[],childModules:[],testsRun:0,testsIgnored:0,hooks:{before:[],beforeEach:[],afterEach:[],after:[]}},// Internal: Exposed to make resets easier\n// Ref https://github.com/qunitjs/qunit/pull/1598\nglobalHooks:{},// Internal state\nblocking:true,callbacks:{},modules:[],queue:[],stats:{all:0,bad:0,testCount:0}};// Apply a predefined QUnit.config object\n//\n// Ignore QUnit.config if it is a QUnit distribution instead of preconfig.\n// That means QUnit was loaded twice! (Use the same approach as export.js)\nvar preConfig=g&&g.QUnit&&!g.QUnit.version&&g.QUnit.config;if(preConfig){extend(config,preConfig);}// Push a loose unnamed module to the modules collection\nconfig.modules.push(config.currentModule);var dump=function(){function quote(str){return'\"'+str.toString().replace(/\\\\/g,'\\\\\\\\').replace(/\"/g,'\\\\\"')+'\"';}function literal(o){return o+'';}function join(pre,arr,post){var s=dump.separator();var inner=dump.indent(1);if(arr.join){arr=arr.join(','+s+inner);}if(!arr){return pre+post;}var base=dump.indent();return[pre,inner+arr,base+post].join(s);}function array(arr,stack){if(dump.maxDepth&&dump.depth>dump.maxDepth){return'[object Array]';}this.up();var i=arr.length;var ret=new Array(i);while(i--){ret[i]=this.parse(arr[i],undefined,stack);}this.down();return join('[',ret,']');}function isArray(obj){return(// Native Arrays\ntoString.call(obj)==='[object Array]'||// NodeList objects\ntypeof obj.length==='number'&&obj.item!==undefined&&(obj.length?obj.item(0)===obj[0]:obj.item(0)===null&&obj[0]===undefined));}var reName=/^function (\\w+)/;var dump={// The objType is used mostly internally, you can fix a (custom) type in advance\nparse:function parse(obj,objType,stack){stack=stack||[];var objIndex=stack.indexOf(obj);if(objIndex!==-1){return\"recursion(\".concat(objIndex-stack.length,\")\");}objType=objType||this.typeOf(obj);var parser=this.parsers[objType];var parserType=_typeof(parser);if(parserType==='function'){stack.push(obj);var res=parser.call(this,obj,stack);stack.pop();return res;}if(parserType==='string'){return parser;}return'[ERROR: Missing QUnit.dump formatter for type '+objType+']';},typeOf:function typeOf(obj){var type;if(obj===null){type='null';}else if(typeof obj==='undefined'){type='undefined';}else if(is('regexp',obj)){type='regexp';}else if(is('date',obj)){type='date';}else if(is('function',obj)){type='function';}else if(obj.setInterval!==undefined&&obj.document!==undefined&&obj.nodeType===undefined){type='window';}else if(obj.nodeType===9){type='document';}else if(obj.nodeType){type='node';}else if(isArray(obj)){type='array';}else if(obj.constructor===Error.prototype.constructor){type='error';}else{type=_typeof(obj);}return type;},separator:function separator(){if(this.multiline){return this.HTML?'<br />':'\\n';}else{return this.HTML?'&#160;':' ';}},// Extra can be a number, shortcut for increasing-calling-decreasing\nindent:function indent(extra){if(!this.multiline){return'';}var chr=this.indentChar;if(this.HTML){chr=chr.replace(/\\t/g,'   ').replace(/ /g,'&#160;');}return new Array(this.depth+(extra||0)).join(chr);},up:function up(a){this.depth+=a||1;},down:function down(a){this.depth-=a||1;},setParser:function setParser(name,parser){this.parsers[name]=parser;},// The next 3 are exposed so you can use them\nquote:quote,literal:literal,join:join,depth:1,maxDepth:config.maxDepth,// This is the list of parsers, to modify them, use dump.setParser\nparsers:{window:'[Window]',document:'[Document]',error:function error(_error){return'Error(\"'+_error.message+'\")';},// This has been unused since QUnit 1.0.0.\n// @todo Deprecate and remove.\nunknown:'[Unknown]',null:'null',undefined:'undefined',function:function _function(fn){var ret='function';// Functions never have name in IE\nvar name='name'in fn?fn.name:(reName.exec(fn)||[])[1];if(name){ret+=' '+name;}ret+='(';ret=[ret,dump.parse(fn,'functionArgs'),'){'].join('');return join(ret,dump.parse(fn,'functionCode'),'}');},array:array,nodelist:array,arguments:array,object:function object(map,stack){var ret=[];if(dump.maxDepth&&dump.depth>dump.maxDepth){return'[object Object]';}dump.up();var keys=[];for(var key in map){keys.push(key);}// Some properties are not always enumerable on Error objects.\nvar nonEnumerableProperties=['message','name'];for(var i in nonEnumerableProperties){var _key=nonEnumerableProperties[i];if(_key in map&&!inArray(_key,keys)){keys.push(_key);}}keys.sort();for(var _i=0;_i<keys.length;_i++){var _key2=keys[_i];var val=map[_key2];ret.push(dump.parse(_key2,'key')+': '+dump.parse(val,undefined,stack));}dump.down();return join('{',ret,'}');},node:function node(_node){var open=dump.HTML?'&lt;':'<';var close=dump.HTML?'&gt;':'>';var tag=_node.nodeName.toLowerCase();var ret=open+tag;var attrs=_node.attributes;if(attrs){for(var i=0;i<attrs.length;i++){var val=attrs[i].nodeValue;// IE6 includes all attributes in .attributes, even ones not explicitly\n// set. Those have values like undefined, null, 0, false, \"\" or\n// \"inherit\".\nif(val&&val!=='inherit'){ret+=' '+attrs[i].nodeName+'='+dump.parse(val,'attribute');}}}ret+=close;// Show content of TextNode or CDATASection\nif(_node.nodeType===3||_node.nodeType===4){ret+=_node.nodeValue;}return ret+open+'/'+tag+close;},// Function calls it internally, it's the arguments part of the function\nfunctionArgs:function functionArgs(fn){var l=fn.length;if(!l){return'';}var args=new Array(l);while(l--){// 97 is 'a'\nargs[l]=String.fromCharCode(97+l);}return' '+args.join(', ')+' ';},// Object calls it internally, the key part of an item in a map\nkey:quote,// Function calls it internally, it's the content of the function\nfunctionCode:'[code]',// Node calls it internally, it's a html attribute value\nattribute:quote,string:quote,date:quote,regexp:literal,number:literal,boolean:literal,symbol:function symbol(sym){return sym.toString();}},// If true, entities are escaped ( <, >, \\t, space and \\n )\nHTML:false,// Indentation unit\nindentChar:'  ',// If true, items in a collection, are separated by a \\n, else just a space.\nmultiline:true};return dump;}();// Support: IE 9\n// Detect if the console object exists and no-op otherwise.\n// This allows support for IE 9, which doesn't have a console\n// object if the developer tools are not open.\n// Support: IE 9\n// Function#bind is supported, but no console.log.bind().\n// Support: SpiderMonkey (mozjs 68+)\n// The console object has a log method, but no warn method.\nvar Logger={warn:console$1?Function.prototype.bind.call(console$1.warn||console$1.log,console$1):function(){}};var SuiteReport=/*#__PURE__*/function(){function SuiteReport(name,parentSuite){_classCallCheck(this,SuiteReport);this.name=name;this.fullName=parentSuite?parentSuite.fullName.concat(name):[];// When an \"error\" event is emitted from onUncaughtException(), the\n// \"runEnd\" event should report the status as failed. The \"runEnd\" event data\n// is tracked through this property (via the \"runSuite\" instance).\nthis.globalFailureCount=0;this.tests=[];this.childSuites=[];if(parentSuite){parentSuite.pushChildSuite(this);}}_createClass(SuiteReport,[{key:\"start\",value:function start(recordTime){if(recordTime){this._startTime=performance.now();}return{name:this.name,fullName:this.fullName.slice(),tests:this.tests.map(function(test){return test.start();}),childSuites:this.childSuites.map(function(suite){return suite.start();}),testCounts:{total:this.getTestCounts().total}};}},{key:\"end\",value:function end(recordTime){if(recordTime){this._endTime=performance.now();}return{name:this.name,fullName:this.fullName.slice(),tests:this.tests.map(function(test){return test.end();}),childSuites:this.childSuites.map(function(suite){return suite.end();}),testCounts:this.getTestCounts(),runtime:this.getRuntime(),status:this.getStatus()};}},{key:\"pushChildSuite\",value:function pushChildSuite(suite){this.childSuites.push(suite);}},{key:\"pushTest\",value:function pushTest(test){this.tests.push(test);}},{key:\"getRuntime\",value:function getRuntime(){return Math.round(this._endTime-this._startTime);}},{key:\"getTestCounts\",value:function getTestCounts(){var counts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{passed:0,failed:0,skipped:0,todo:0,total:0};counts.failed+=this.globalFailureCount;counts.total+=this.globalFailureCount;counts=this.tests.reduce(function(counts,test){if(test.valid){counts[test.getStatus()]++;counts.total++;}return counts;},counts);return this.childSuites.reduce(function(counts,suite){return suite.getTestCounts(counts);},counts);}},{key:\"getStatus\",value:function getStatus(){var _this$getTestCounts=this.getTestCounts(),total=_this$getTestCounts.total,failed=_this$getTestCounts.failed,skipped=_this$getTestCounts.skipped,todo=_this$getTestCounts.todo;if(failed){return'failed';}else{if(skipped===total){return'skipped';}else if(todo===total){return'todo';}else{return'passed';}}}}]);return SuiteReport;}();var moduleStack=[];var runSuite=new SuiteReport();function isParentModuleInQueue(){var modulesInQueue=config.modules.filter(function(module){return!module.ignored;}).map(function(module){return module.moduleId;});return moduleStack.some(function(module){return modulesInQueue.includes(module.moduleId);});}function createModule(name,testEnvironment,modifiers){var parentModule=moduleStack.length?moduleStack.slice(-1)[0]:null;var moduleName=parentModule!==null?[parentModule.name,name].join(' > '):name;var parentSuite=parentModule?parentModule.suiteReport:runSuite;var skip=parentModule!==null&&parentModule.skip||modifiers.skip;var todo=parentModule!==null&&parentModule.todo||modifiers.todo;var env={};if(parentModule){extend(env,parentModule.testEnvironment);}extend(env,testEnvironment);var module={name:moduleName,parentModule:parentModule,hooks:{before:[],beforeEach:[],afterEach:[],after:[]},testEnvironment:env,tests:[],moduleId:generateHash(moduleName),testsRun:0,testsIgnored:0,childModules:[],suiteReport:new SuiteReport(name,parentSuite),// Initialised by test.js when the module start executing,\n// i.e. before the first test in this module (or a child).\nstats:null,// Pass along `skip` and `todo` properties from parent module, in case\n// there is one, to childs. And use own otherwise.\n// This property will be used to mark own tests and tests of child suites\n// as either `skipped` or `todo`.\nskip:skip,todo:skip?false:todo,ignored:modifiers.ignored||false};if(parentModule){parentModule.childModules.push(module);}config.modules.push(module);return module;}function setHookFromEnvironment(hooks,environment,name){var potentialHook=environment[name];if(typeof potentialHook==='function'){hooks[name].push(potentialHook);}delete environment[name];}function makeSetHook(module,hookName){return function setHook(callback){if(config.currentModule!==module){Logger.warn('The `'+hookName+'` hook was called inside the wrong module (`'+config.currentModule.name+'`). '+'Instead, use hooks provided by the callback to the containing module (`'+module.name+'`). '+'This will become an error in QUnit 3.0.');}module.hooks[hookName].push(callback);};}function processModule(name,options,executeNow){var modifiers=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(typeof options==='function'){executeNow=options;options=undefined;}var module=createModule(name,options,modifiers);// Transfer any initial hooks from the options object to the 'hooks' object\nvar testEnvironment=module.testEnvironment;var hooks=module.hooks;setHookFromEnvironment(hooks,testEnvironment,'before');setHookFromEnvironment(hooks,testEnvironment,'beforeEach');setHookFromEnvironment(hooks,testEnvironment,'afterEach');setHookFromEnvironment(hooks,testEnvironment,'after');var moduleFns={before:makeSetHook(module,'before'),beforeEach:makeSetHook(module,'beforeEach'),afterEach:makeSetHook(module,'afterEach'),after:makeSetHook(module,'after')};var prevModule=config.currentModule;config.currentModule=module;if(typeof executeNow==='function'){moduleStack.push(module);try{var cbReturnValue=executeNow.call(module.testEnvironment,moduleFns);if(cbReturnValue&&typeof cbReturnValue.then==='function'){Logger.warn('Returning a promise from a module callback is not supported. '+'Instead, use hooks for async behavior. '+'This will become an error in QUnit 3.0.');}}finally{// If the module closure threw an uncaught error during the load phase,\n// we let this bubble up to global error handlers. But, not until after\n// we teardown internal state to ensure correct module nesting.\n// Ref https://github.com/qunitjs/qunit/issues/1478.\nmoduleStack.pop();config.currentModule=module.parentModule||prevModule;}}}var focused$1=false;// indicates that the \"only\" filter was used\nfunction module$1(name,options,executeNow){var ignored=focused$1&&!isParentModuleInQueue();processModule(name,options,executeNow,{ignored:ignored});}module$1.only=function(){if(!focused$1){// Upon the first module.only() call,\n// delete any and all previously registered modules and tests.\nconfig.modules.length=0;config.queue.length=0;// Ignore any tests declared after this block within the same\n// module parent. https://github.com/qunitjs/qunit/issues/1645\nconfig.currentModule.ignored=true;}focused$1=true;processModule.apply(void 0,arguments);};module$1.skip=function(name,options,executeNow){if(focused$1){return;}processModule(name,options,executeNow,{skip:true});};module$1.todo=function(name,options,executeNow){if(focused$1){return;}processModule(name,options,executeNow,{todo:true});};// Doesn't support IE9, it will return undefined on these browsers\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\nvar fileName=(sourceFromStacktrace(0)||'').replace(/(:\\d+)+\\)?/,'')// Remove anything prior to the last slash (Unix/Windows)\n// from the last frame\n.replace(/.+[/\\\\]/,'');function extractStacktrace(e,offset){offset=offset===undefined?4:offset;if(e&&e.stack){var stack=e.stack.split('\\n');if(/^error$/i.test(stack[0])){stack.shift();}if(fileName){var include=[];for(var i=offset;i<stack.length;i++){if(stack[i].indexOf(fileName)!==-1){break;}include.push(stack[i]);}if(include.length){return include.join('\\n');}}return stack[offset];}}function sourceFromStacktrace(offset){var error=new Error();// Support: Safari <=7 only, IE <=10 - 11 only\n// Not all browsers generate the `stack` property for `new Error()`, see also #636\nif(!error.stack){try{throw error;}catch(err){error=err;}}return extractStacktrace(error,offset);}var Assert=/*#__PURE__*/function(){function Assert(testContext){_classCallCheck(this,Assert);this.test=testContext;}_createClass(Assert,[{key:\"timeout\",value:function timeout(duration){if(typeof duration!=='number'){throw new Error('You must pass a number as the duration to assert.timeout');}this.test.timeout=duration;// If a timeout has been set, clear it and reset with the new duration\nif(config.timeout){clearTimeout(config.timeout);config.timeout=null;if(config.timeoutHandler&&this.test.timeout>0){this.test.internalResetTimeout(this.test.timeout);}}}// Documents a \"step\", which is a string value, in a test as a passing assertion\n},{key:\"step\",value:function step(message){var assertionMessage=message;var result=!!message;this.test.steps.push(message);if(typeof message==='undefined'||message===''){assertionMessage='You must provide a message to assert.step';}else if(typeof message!=='string'){assertionMessage='You must provide a string value to assert.step';result=false;}this.pushResult({result:result,message:assertionMessage});}// Verifies the steps in a test match a given array of string values\n},{key:\"verifySteps\",value:function verifySteps(steps,message){// Since the steps array is just string values, we can clone with slice\nvar actualStepsClone=this.test.steps.slice();this.deepEqual(actualStepsClone,steps,message);this.test.steps.length=0;}},{key:\"expect\",value:function expect(asserts){if(arguments.length===1){this.test.expected=asserts;}else{return this.test.expected;}}// Create a new async pause and return a new function that can release the pause.\n},{key:\"async\",value:function async(count){if(count===undefined){count=1;}else if(typeof count!=='number'){throw new TypeError('async takes number as an input');}var requiredCalls=count;return this.test.internalStop(requiredCalls);}// Exports test.push() to the user API\n// Alias of pushResult.\n},{key:\"push\",value:function push(result,actual,expected,message,negative){Logger.warn('assert.push is deprecated and will be removed in QUnit 3.0.'+' Please use assert.pushResult instead (https://api.qunitjs.com/assert/pushResult).');var currentAssert=this instanceof Assert?this:config.current.assert;return currentAssert.pushResult({result:result,actual:actual,expected:expected,message:message,negative:negative});}},{key:\"pushResult\",value:function pushResult(resultInfo){// Destructure of resultInfo = { result, actual, expected, message, negative }\nvar assert=this;var currentTest=assert instanceof Assert&&assert.test||config.current;// Backwards compatibility fix.\n// Allows the direct use of global exported assertions and QUnit.assert.*\n// Although, it's use is not recommended as it can leak assertions\n// to other tests from async tests, because we only get a reference to the current test,\n// not exactly the test where assertion were intended to be called.\nif(!currentTest){throw new Error('assertion outside test context, in '+sourceFromStacktrace(2));}if(!(assert instanceof Assert)){assert=currentTest.assert;}return assert.test.pushResult(resultInfo);}},{key:\"ok\",value:function ok(result,message){if(!message){message=result?'okay':\"failed, expected argument to be truthy, was: \".concat(dump.parse(result));}this.pushResult({result:!!result,actual:result,expected:true,message:message});}},{key:\"notOk\",value:function notOk(result,message){if(!message){message=!result?'okay':\"failed, expected argument to be falsy, was: \".concat(dump.parse(result));}this.pushResult({result:!result,actual:result,expected:false,message:message});}},{key:\"true\",value:function _true(result,message){this.pushResult({result:result===true,actual:result,expected:true,message:message});}},{key:\"false\",value:function _false(result,message){this.pushResult({result:result===false,actual:result,expected:false,message:message});}},{key:\"equal\",value:function equal(actual,expected,message){this.pushResult({// eslint-disable-next-line eqeqeq\nresult:expected==actual,actual:actual,expected:expected,message:message});}},{key:\"notEqual\",value:function notEqual(actual,expected,message){this.pushResult({// eslint-disable-next-line eqeqeq\nresult:expected!=actual,actual:actual,expected:expected,message:message,negative:true});}},{key:\"propEqual\",value:function propEqual(actual,expected,message){actual=objectValues(actual);expected=objectValues(expected);this.pushResult({result:equiv(actual,expected),actual:actual,expected:expected,message:message});}},{key:\"notPropEqual\",value:function notPropEqual(actual,expected,message){actual=objectValues(actual);expected=objectValues(expected);this.pushResult({result:!equiv(actual,expected),actual:actual,expected:expected,message:message,negative:true});}},{key:\"propContains\",value:function propContains(actual,expected,message){actual=objectValuesSubset(actual,expected);// The expected parameter is usually a plain object, but clone it for\n// consistency with propEqual(), and to make it easy to explain that\n// inheritence is not considered (on either side), and to support\n// recursively checking subsets of nested objects.\nexpected=objectValues(expected,false);this.pushResult({result:equiv(actual,expected),actual:actual,expected:expected,message:message});}},{key:\"notPropContains\",value:function notPropContains(actual,expected,message){actual=objectValuesSubset(actual,expected);expected=objectValues(expected);this.pushResult({result:!equiv(actual,expected),actual:actual,expected:expected,message:message,negative:true});}},{key:\"deepEqual\",value:function deepEqual(actual,expected,message){this.pushResult({result:equiv(actual,expected),actual:actual,expected:expected,message:message});}},{key:\"notDeepEqual\",value:function notDeepEqual(actual,expected,message){this.pushResult({result:!equiv(actual,expected),actual:actual,expected:expected,message:message,negative:true});}},{key:\"strictEqual\",value:function strictEqual(actual,expected,message){this.pushResult({result:expected===actual,actual:actual,expected:expected,message:message});}},{key:\"notStrictEqual\",value:function notStrictEqual(actual,expected,message){this.pushResult({result:expected!==actual,actual:actual,expected:expected,message:message,negative:true});}},{key:'throws',value:function throws(block,expected,message){var _validateExpectedExce=validateExpectedExceptionArgs(expected,message,'throws');var _validateExpectedExce2=_slicedToArray(_validateExpectedExce,2);expected=_validateExpectedExce2[0];message=_validateExpectedExce2[1];var currentTest=this instanceof Assert&&this.test||config.current;if(typeof block!=='function'){currentTest.assert.pushResult({result:false,actual:block,message:'The value provided to `assert.throws` in '+'\"'+currentTest.testName+'\" was not a function.'});return;}var actual;var result=false;currentTest.ignoreGlobalErrors=true;try{block.call(currentTest.testEnvironment);}catch(e){actual=e;}currentTest.ignoreGlobalErrors=false;if(actual){var _validateException=validateException(actual,expected,message);var _validateException2=_slicedToArray(_validateException,3);result=_validateException2[0];expected=_validateException2[1];message=_validateException2[2];}currentTest.assert.pushResult({result:result,// undefined if it didn't throw\nactual:actual&&errorString(actual),expected:expected,message:message});}},{key:\"rejects\",value:function rejects(promise,expected,message){var _validateExpectedExce3=validateExpectedExceptionArgs(expected,message,'rejects');var _validateExpectedExce4=_slicedToArray(_validateExpectedExce3,2);expected=_validateExpectedExce4[0];message=_validateExpectedExce4[1];var currentTest=this instanceof Assert&&this.test||config.current;var then=promise&&promise.then;if(typeof then!=='function'){currentTest.assert.pushResult({result:false,message:'The value provided to `assert.rejects` in '+'\"'+currentTest.testName+'\" was not a promise.',actual:promise});return;}var done=this.async();return then.call(promise,function handleFulfillment(){currentTest.assert.pushResult({result:false,message:'The promise returned by the `assert.rejects` callback in '+'\"'+currentTest.testName+'\" did not reject.',actual:promise});done();},function handleRejection(actual){var result;var _validateException3=validateException(actual,expected,message);var _validateException4=_slicedToArray(_validateException3,3);result=_validateException4[0];expected=_validateException4[1];message=_validateException4[2];currentTest.assert.pushResult({result:result,// leave rejection value of undefined as-is\nactual:actual&&errorString(actual),expected:expected,message:message});done();});}}]);return Assert;}();function validateExpectedExceptionArgs(expected,message,assertionMethod){var expectedType=objectType(expected);// 'expected' is optional unless doing string comparison\nif(expectedType==='string'){if(message===undefined){message=expected;expected=undefined;return[expected,message];}else{throw new Error('assert.'+assertionMethod+' does not accept a string value for the expected argument.\\n'+'Use a non-string object value (e.g. RegExp or validator function) '+'instead if necessary.');}}var valid=!expected||// TODO: be more explicit here\nexpectedType==='regexp'||expectedType==='function'||expectedType==='object';if(!valid){throw new Error('Invalid expected value type ('+expectedType+') '+'provided to assert.'+assertionMethod+'.');}return[expected,message];}function validateException(actual,expected,message){var result=false;var expectedType=objectType(expected);// These branches should be exhaustive, based on validation done in validateExpectedException\n// We don't want to validate\nif(!expected){result=true;// Expected is a regexp\n}else if(expectedType==='regexp'){result=expected.test(errorString(actual));// Log the string form of the regexp\nexpected=String(expected);// Expected is a constructor, maybe an Error constructor.\n// Note the extra check on its prototype - this is an implicit\n// requirement of \"instanceof\", else it will throw a TypeError.\n}else if(expectedType==='function'&&expected.prototype!==undefined&&actual instanceof expected){result=true;// Expected is an Error object\n}else if(expectedType==='object'){result=actual instanceof expected.constructor&&actual.name===expected.name&&actual.message===expected.message;// Log the string form of the Error object\nexpected=errorString(expected);// Expected is a validation function which returns true if validation passed\n}else if(expectedType==='function'){// protect against accidental semantics which could hard error in the test\ntry{result=expected.call({},actual)===true;expected=null;}catch(e){// assign the \"expected\" to a nice error string to communicate the local failure to the user\nexpected=errorString(e);}}return[result,expected,message];}// Provide an alternative to assert.throws(), for environments that consider throws a reserved word\n// Known to us are: Closure Compiler, Narwhal\n// eslint-disable-next-line dot-notation\nAssert.prototype.raises=Assert.prototype['throws'];var LISTENERS=Object.create(null);var SUPPORTED_EVENTS=['error','runStart','suiteStart','testStart','assertion','testEnd','suiteEnd','runEnd'];/**\n   * Emits an event with the specified data to all currently registered listeners.\n   * Callbacks will fire in the order in which they are registered (FIFO). This\n   * function is not exposed publicly; it is used by QUnit internals to emit\n   * logging events.\n   *\n   * @private\n   * @method emit\n   * @param {string} eventName\n   * @param {Object} data\n   * @return {void}\n   */function emit(eventName,data){if(typeof eventName!=='string'){throw new TypeError('eventName must be a string when emitting an event');}// Clone the callbacks in case one of them registers a new callback\nvar originalCallbacks=LISTENERS[eventName];var callbacks=originalCallbacks?_toConsumableArray(originalCallbacks):[];for(var i=0;i<callbacks.length;i++){callbacks[i](data);}}/**\n   * Registers a callback as a listener to the specified event.\n   *\n   * @public\n   * @method on\n   * @param {string} eventName\n   * @param {Function} callback\n   * @return {void}\n   */function on(eventName,callback){if(typeof eventName!=='string'){throw new TypeError('eventName must be a string when registering a listener');}else if(!inArray(eventName,SUPPORTED_EVENTS)){var events=SUPPORTED_EVENTS.join(', ');throw new Error(\"\\\"\".concat(eventName,\"\\\" is not a valid event; must be one of: \").concat(events,\".\"));}else if(typeof callback!=='function'){throw new TypeError('callback must be a function when registering a listener');}if(!LISTENERS[eventName]){LISTENERS[eventName]=[];}// Don't register the same callback more than once\nif(!inArray(callback,LISTENERS[eventName])){LISTENERS[eventName].push(callback);}}var commonjsGlobal=typeof globalThis!=='undefined'?globalThis:typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function commonjsRequire(path){throw new Error('Could not dynamically require \"'+path+'\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');}var promisePolyfill={exports:{}};(function(){/** @suppress {undefinedVars} */var globalNS=function(){// the only reliable means to get the global object is\n// `Function('return this')()`\n// However, this causes CSP violations in Chrome apps.\nif(typeof globalThis!=='undefined'){return globalThis;}if(typeof self!=='undefined'){return self;}if(typeof window!=='undefined'){return window;}if(typeof commonjsGlobal!=='undefined'){return commonjsGlobal;}throw new Error('unable to locate global object');}();// Expose the polyfill if Promise is undefined or set to a\n// non-function value. The latter can be due to a named HTMLElement\n// being exposed by browsers for legacy reasons.\n// https://github.com/taylorhakes/promise-polyfill/issues/114\nif(typeof globalNS['Promise']==='function'){promisePolyfill.exports=globalNS['Promise'];return;}/**\n     * @this {Promise}\n     */function finallyConstructor(callback){var constructor=this.constructor;return this.then(function(value){// @ts-ignore\nreturn constructor.resolve(callback()).then(function(){return value;});},function(reason){// @ts-ignore\nreturn constructor.resolve(callback()).then(function(){// @ts-ignore\nreturn constructor.reject(reason);});});}function allSettled(arr){var P=this;return new P(function(resolve,reject){if(!(arr&&typeof arr.length!=='undefined')){return reject(new TypeError(_typeof(arr)+' '+arr+' is not iterable(cannot read property Symbol(Symbol.iterator))'));}var args=Array.prototype.slice.call(arr);if(args.length===0)return resolve([]);var remaining=args.length;function res(i,val){if(val&&(_typeof(val)==='object'||typeof val==='function')){var then=val.then;if(typeof then==='function'){then.call(val,function(val){res(i,val);},function(e){args[i]={status:'rejected',reason:e};if(--remaining===0){resolve(args);}});return;}}args[i]={status:'fulfilled',value:val};if(--remaining===0){resolve(args);}}for(var i=0;i<args.length;i++){res(i,args[i]);}});}// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc=setTimeout;function isArray(x){return Boolean(x&&typeof x.length!=='undefined');}function noop(){}// Polyfill for Function.prototype.bind\nfunction bind(fn,thisArg){return function(){fn.apply(thisArg,arguments);};}/**\n     * @constructor\n     * @param {Function} fn\n     */function Promise(fn){if(!(this instanceof Promise))throw new TypeError('Promises must be constructed via new');if(typeof fn!=='function')throw new TypeError('not a function');/** @type {!number} */this._state=0;/** @type {!boolean} */this._handled=false;/** @type {Promise|undefined} */this._value=undefined;/** @type {!Array<!Function>} */this._deferreds=[];doResolve(fn,this);}function handle(self,deferred){while(self._state===3){self=self._value;}if(self._state===0){self._deferreds.push(deferred);return;}self._handled=true;Promise._immediateFn(function(){var cb=self._state===1?deferred.onFulfilled:deferred.onRejected;if(cb===null){(self._state===1?resolve:reject)(deferred.promise,self._value);return;}var ret;try{ret=cb(self._value);}catch(e){reject(deferred.promise,e);return;}resolve(deferred.promise,ret);});}function resolve(self,newValue){try{// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\nif(newValue===self)throw new TypeError('A promise cannot be resolved with itself.');if(newValue&&(_typeof(newValue)==='object'||typeof newValue==='function')){var then=newValue.then;if(newValue instanceof Promise){self._state=3;self._value=newValue;finale(self);return;}else if(typeof then==='function'){doResolve(bind(then,newValue),self);return;}}self._state=1;self._value=newValue;finale(self);}catch(e){reject(self,e);}}function reject(self,newValue){self._state=2;self._value=newValue;finale(self);}function finale(self){if(self._state===2&&self._deferreds.length===0){Promise._immediateFn(function(){if(!self._handled){Promise._unhandledRejectionFn(self._value);}});}for(var i=0,len=self._deferreds.length;i<len;i++){handle(self,self._deferreds[i]);}self._deferreds=null;}/**\n     * @constructor\n     */function Handler(onFulfilled,onRejected,promise){this.onFulfilled=typeof onFulfilled==='function'?onFulfilled:null;this.onRejected=typeof onRejected==='function'?onRejected:null;this.promise=promise;}/**\n     * Take a potentially misbehaving resolver function and make sure\n     * onFulfilled and onRejected are only called once.\n     *\n     * Makes no guarantees about asynchrony.\n     */function doResolve(fn,self){var done=false;try{fn(function(value){if(done)return;done=true;resolve(self,value);},function(reason){if(done)return;done=true;reject(self,reason);});}catch(ex){if(done)return;done=true;reject(self,ex);}}Promise.prototype['catch']=function(onRejected){return this.then(null,onRejected);};Promise.prototype.then=function(onFulfilled,onRejected){// @ts-ignore\nvar prom=new this.constructor(noop);handle(this,new Handler(onFulfilled,onRejected,prom));return prom;};Promise.prototype['finally']=finallyConstructor;Promise.all=function(arr){return new Promise(function(resolve,reject){if(!isArray(arr)){return reject(new TypeError('Promise.all accepts an array'));}var args=Array.prototype.slice.call(arr);if(args.length===0)return resolve([]);var remaining=args.length;function res(i,val){try{if(val&&(_typeof(val)==='object'||typeof val==='function')){var then=val.then;if(typeof then==='function'){then.call(val,function(val){res(i,val);},reject);return;}}args[i]=val;if(--remaining===0){resolve(args);}}catch(ex){reject(ex);}}for(var i=0;i<args.length;i++){res(i,args[i]);}});};Promise.allSettled=allSettled;Promise.resolve=function(value){if(value&&_typeof(value)==='object'&&value.constructor===Promise){return value;}return new Promise(function(resolve){resolve(value);});};Promise.reject=function(value){return new Promise(function(resolve,reject){reject(value);});};Promise.race=function(arr){return new Promise(function(resolve,reject){if(!isArray(arr)){return reject(new TypeError('Promise.race accepts an array'));}for(var i=0,len=arr.length;i<len;i++){Promise.resolve(arr[i]).then(resolve,reject);}});};// Use polyfill for setImmediate for performance gains\nPromise._immediateFn=// @ts-ignore\ntypeof setImmediate==='function'&&function(fn){// @ts-ignore\nsetImmediate(fn);}||function(fn){setTimeoutFunc(fn,0);};Promise._unhandledRejectionFn=function _unhandledRejectionFn(err){if(typeof console!=='undefined'&&console){console.warn('Possible Unhandled Promise Rejection:',err);// eslint-disable-line no-console\n}};promisePolyfill.exports=Promise;})();var _Promise=promisePolyfill.exports;// Register logging callbacks\nfunction registerLoggingCallbacks(obj){var callbackNames=['begin','done','log','testStart','testDone','moduleStart','moduleDone'];function registerLoggingCallback(key){return function loggingCallback(callback){if(typeof callback!=='function'){throw new Error('Callback parameter must be a function');}config.callbacks[key].push(callback);};}for(var i=0;i<callbackNames.length;i++){var key=callbackNames[i];// Initialize key collection of logging callback\nif(typeof config.callbacks[key]==='undefined'){config.callbacks[key]=[];}obj[key]=registerLoggingCallback(key);}}function runLoggingCallbacks(key,args){var callbacks=config.callbacks[key];// Handling 'log' callbacks separately. Unlike the other callbacks,\n// the log callback is not controlled by the processing queue,\n// but rather used by asserts. Hence to promisfy the 'log' callback\n// would mean promisfying each step of a test\nif(key==='log'){callbacks.map(function(callback){return callback(args);});return;}// ensure that each callback is executed serially\nvar promiseChain=_Promise.resolve();callbacks.forEach(function(callback){promiseChain=promiseChain.then(function(){return _Promise.resolve(callback(args));});});return promiseChain;}var priorityCount=0;var unitSampler;// This is a queue of functions that are tasks within a single test.\n// After tests are dequeued from config.queue they are expanded into\n// a set of tasks in this queue.\nvar taskQueue=[];/**\n   * Advances the taskQueue to the next task. If the taskQueue is empty,\n   * process the testQueue\n   */function advance(){advanceTaskQueue();if(!taskQueue.length&&!config.blocking&&!config.current){advanceTestQueue();}}/**\n   * Advances the taskQueue with an increased depth\n   */function advanceTaskQueue(){var start=performance.now();config.depth=(config.depth||0)+1;processTaskQueue(start);config.depth--;}/**\n   * Process the first task on the taskQueue as a promise.\n   * Each task is a function added by Test#queue() in /src/test.js\n   */function processTaskQueue(start){if(taskQueue.length&&!config.blocking){var elapsedTime=performance.now()-start;// The updateRate ensures that a user interface (HTML Reporter) can be updated\n// at least once every second. This can also prevent browsers from prompting\n// a warning about long running scripts.\nif(!setTimeout$1||config.updateRate<=0||elapsedTime<config.updateRate){var task=taskQueue.shift();_Promise.resolve(task()).then(function(){if(!taskQueue.length){advance();}else{processTaskQueue(start);}});}else{setTimeout$1(advance);}}}/**\n   * Advance the testQueue to the next test to process. Call done() if testQueue completes.\n   */function advanceTestQueue(){if(!config.blocking&&!config.queue.length&&config.depth===0){done();return;}var testTasks=config.queue.shift();addToTaskQueue(testTasks());if(priorityCount>0){priorityCount--;}advance();}/**\n   * Enqueue the tasks for a test into the task queue.\n   * @param {Array} tasksArray\n   */function addToTaskQueue(tasksArray){taskQueue.push.apply(taskQueue,_toConsumableArray(tasksArray));}/**\n   * Return the number of tasks remaining in the task queue to be processed.\n   * @return {number}\n   */function taskQueueLength(){return taskQueue.length;}/**\n   * Adds a test to the TestQueue for execution.\n   * @param {Function} testTasksFunc\n   * @param {boolean} prioritize\n   * @param {string} seed\n   */function addToTestQueue(testTasksFunc,prioritize,seed){if(prioritize){config.queue.splice(priorityCount++,0,testTasksFunc);}else if(seed){if(!unitSampler){unitSampler=unitSamplerGenerator(seed);}// Insert into a random position after all prioritized items\nvar index=Math.floor(unitSampler()*(config.queue.length-priorityCount+1));config.queue.splice(priorityCount+index,0,testTasksFunc);}else{config.queue.push(testTasksFunc);}}/**\n   * Creates a seeded \"sample\" generator which is used for randomizing tests.\n   */function unitSamplerGenerator(seed){// 32-bit xorshift, requires only a nonzero seed\n// https://excamera.com/sphinx/article-xorshift.html\nvar sample=parseInt(generateHash(seed),16)||-1;return function(){sample^=sample<<13;sample^=sample>>>17;sample^=sample<<5;// ECMAScript has no unsigned number type\nif(sample<0){sample+=0x100000000;}return sample/0x100000000;};}/**\n   * This function is called when the ProcessingQueue is done processing all\n   * items. It handles emitting the final run events.\n   */function done(){// We have reached the end of the processing queue and are about to emit the\n// \"runEnd\" event after which reporters typically stop listening and exit\n// the process. First, check if we need to emit one final test.\nif(config.stats.testCount===0&&config.failOnZeroTests===true){var error;if(config.filter&&config.filter.length){error=new Error(\"No tests matched the filter \\\"\".concat(config.filter,\"\\\".\"));}else if(config.module&&config.module.length){error=new Error(\"No tests matched the module \\\"\".concat(config.module,\"\\\".\"));}else if(config.moduleId&&config.moduleId.length){error=new Error(\"No tests matched the moduleId \\\"\".concat(config.moduleId,\"\\\".\"));}else if(config.testId&&config.testId.length){error=new Error(\"No tests matched the testId \\\"\".concat(config.testId,\"\\\".\"));}else{error=new Error('No tests were run.');}test('global failure',extend(function(assert){assert.pushResult({result:false,message:error.message,source:error.stack});},{validTest:true}));// We do need to call `advance()` in order to resume the processing queue.\n// Once this new test is finished processing, we'll reach `done` again, and\n// that time the above condition will evaluate to false.\nadvance();return;}var storage=config.storage;var runtime=Math.round(performance.now()-config.started);var passed=config.stats.all-config.stats.bad;ProcessingQueue.finished=true;emit('runEnd',runSuite.end(true));runLoggingCallbacks('done',{// @deprecated since 2.19.0 Use done() without `details` parameter,\n// or use `QUnit.on('runEnd')` instead. Parameter to be replaced in\n// QUnit 3.0 with test counts.\npassed:passed,failed:config.stats.bad,total:config.stats.all,runtime:runtime}).then(function(){// Clear own storage items if all tests passed\nif(storage&&config.stats.bad===0){for(var i=storage.length-1;i>=0;i--){var key=storage.key(i);if(key.indexOf('qunit-test-')===0){storage.removeItem(key);}}}});}var ProcessingQueue={finished:false,add:addToTestQueue,advance:advance,taskCount:taskQueueLength};var TestReport=/*#__PURE__*/function(){function TestReport(name,suite,options){_classCallCheck(this,TestReport);this.name=name;this.suiteName=suite.name;this.fullName=suite.fullName.concat(name);this.runtime=0;this.assertions=[];this.skipped=!!options.skip;this.todo=!!options.todo;this.valid=options.valid;this._startTime=0;this._endTime=0;suite.pushTest(this);}_createClass(TestReport,[{key:\"start\",value:function start(recordTime){if(recordTime){this._startTime=performance.now();}return{name:this.name,suiteName:this.suiteName,fullName:this.fullName.slice()};}},{key:\"end\",value:function end(recordTime){if(recordTime){this._endTime=performance.now();}return extend(this.start(),{runtime:this.getRuntime(),status:this.getStatus(),errors:this.getFailedAssertions(),assertions:this.getAssertions()});}},{key:\"pushAssertion\",value:function pushAssertion(assertion){this.assertions.push(assertion);}},{key:\"getRuntime\",value:function getRuntime(){return Math.round(this._endTime-this._startTime);}},{key:\"getStatus\",value:function getStatus(){if(this.skipped){return'skipped';}var testPassed=this.getFailedAssertions().length>0?this.todo:!this.todo;if(!testPassed){return'failed';}else if(this.todo){return'todo';}else{return'passed';}}},{key:\"getFailedAssertions\",value:function getFailedAssertions(){return this.assertions.filter(function(assertion){return!assertion.passed;});}},{key:\"getAssertions\",value:function getAssertions(){return this.assertions.slice();}// Remove actual and expected values from assertions. This is to prevent\n// leaking memory throughout a test suite.\n},{key:\"slimAssertions\",value:function slimAssertions(){this.assertions=this.assertions.map(function(assertion){delete assertion.actual;delete assertion.expected;return assertion;});}}]);return TestReport;}();function Test(settings){this.expected=null;this.assertions=[];this.module=config.currentModule;this.steps=[];this.timeout=undefined;this.data=undefined;this.withData=false;this.pauses=new StringMap();this.nextPauseId=1;// For the most common case, we have:\n// - 0: new Test\n// - 1: addTest\n// - 2: QUnit.test\n// - 3: user file\n//\n// This needs is customised by test.each()\nthis.stackOffset=3;extend(this,settings);// If a module is skipped, all its tests and the tests of the child suites\n// should be treated as skipped even if they are defined as `only` or `todo`.\n// As for `todo` module, all its tests will be treated as `todo` except for\n// tests defined as `skip` which will be left intact.\n//\n// So, if a test is defined as `todo` and is inside a skipped module, we should\n// then treat that test as if was defined as `skip`.\nif(this.module.skip){this.skip=true;this.todo=false;// Skipped tests should be left intact\n}else if(this.module.todo&&!this.skip){this.todo=true;}// Queuing a late test after the run has ended is not allowed.\n// This was once supported for internal use by QUnit.onError().\n// Ref https://github.com/qunitjs/qunit/issues/1377\nif(ProcessingQueue.finished){// Using this for anything other than onError(), such as testing in QUnit.done(),\n// is unstable and will likely result in the added tests being ignored by CI.\n// (Meaning the CI passes irregardless of the added tests).\n//\n// TODO: Make this an error in QUnit 3.0\n// throw new Error( \"Unexpected test after runEnd\" );\nLogger.warn('Unexpected test after runEnd. This is unstable and will fail in QUnit 3.0.');return;}if(!this.skip&&typeof this.callback!=='function'){var method=this.todo?'QUnit.todo':'QUnit.test';throw new TypeError(\"You must provide a callback to \".concat(method,\"(\\\"\").concat(this.testName,\"\\\")\"));}// Register unique strings\nfor(var i=0,l=this.module.tests;i<l.length;i++){if(this.module.tests[i].name===this.testName){this.testName+=' ';}}this.testId=generateHash(this.module.name,this.testName);// No validation after this. Beyond this point, failures must be recorded as\n// a completed test with errors, instead of early bail out.\n// Otherwise, internals may be left in an inconsistent state.\n// Ref https://github.com/qunitjs/qunit/issues/1514\n++Test.count;this.errorForStack=new Error();if(this.callback&&this.callback.validTest){// Omit the test-level trace for the internal \"No tests\" test failure,\n// There is already an assertion-level trace, and that's noisy enough\n// as it is.\nthis.errorForStack.stack=undefined;}this.testReport=new TestReport(this.testName,this.module.suiteReport,{todo:this.todo,skip:this.skip,valid:this.valid()});this.module.tests.push({name:this.testName,testId:this.testId,skip:!!this.skip});if(this.skip){// Skipped tests will fully ignore any sent callback\nthis.callback=function(){};this.async=false;this.expected=0;}else{this.assert=new Assert(this);}}Test.count=0;function getNotStartedModules(startModule){var module=startModule;var modules=[];while(module&&module.testsRun===0){modules.push(module);module=module.parentModule;}// The above push modules from the child to the parent\n// return a reversed order with the top being the top most parent module\nreturn modules.reverse();}Test.prototype={// Use a getter to avoid computing a stack trace (which can be expensive),\n// This is displayed by the HTML Reporter, but most other integrations do\n// not access it.\nget stack(){return extractStacktrace(this.errorForStack,this.stackOffset);},before:function before(){var _this=this;var module=this.module;var notStartedModules=getNotStartedModules(module);// ensure the callbacks are executed serially for each module\nvar moduleStartChain=_Promise.resolve();notStartedModules.forEach(function(startModule){moduleStartChain=moduleStartChain.then(function(){startModule.stats={all:0,bad:0,started:performance.now()};emit('suiteStart',startModule.suiteReport.start(true));return runLoggingCallbacks('moduleStart',{name:startModule.name,tests:startModule.tests});});});return moduleStartChain.then(function(){config.current=_this;_this.testEnvironment=extend({},module.testEnvironment);_this.started=performance.now();emit('testStart',_this.testReport.start(true));return runLoggingCallbacks('testStart',{name:_this.testName,module:module.name,testId:_this.testId,previousFailure:_this.previousFailure}).then(function(){if(!config.pollution){saveGlobal();}});});},run:function run(){config.current=this;if(config.notrycatch){runTest(this);return;}try{runTest(this);}catch(e){this.pushFailure('Died on test #'+(this.assertions.length+1)+': '+(e.message||e)+'\\n'+this.stack,extractStacktrace(e,0));// Else next test will carry the responsibility\nsaveGlobal();// Restart the tests if they're blocking\nif(config.blocking){internalRecover(this);}}function runTest(test){var promise;if(test.withData){promise=test.callback.call(test.testEnvironment,test.assert,test.data);}else{promise=test.callback.call(test.testEnvironment,test.assert);}test.resolvePromise(promise);// If the test has an async \"pause\" on it, but the timeout is 0, then we push a\n// failure as the test should be synchronous.\nif(test.timeout===0&&test.pauses.size>0){pushFailure('Test did not finish synchronously even though assert.timeout( 0 ) was used.',sourceFromStacktrace(2));}}},after:function after(){checkPollution();},queueGlobalHook:function queueGlobalHook(hook,hookName){var _this2=this;var runHook=function runHook(){config.current=_this2;var promise;if(config.notrycatch){promise=hook.call(_this2.testEnvironment,_this2.assert);}else{try{promise=hook.call(_this2.testEnvironment,_this2.assert);}catch(error){_this2.pushFailure('Global '+hookName+' failed on '+_this2.testName+': '+errorString(error),extractStacktrace(error,0));return;}}_this2.resolvePromise(promise,hookName);};return runHook;},queueHook:function queueHook(hook,hookName,hookOwner){var _this3=this;var callHook=function callHook(){var promise=hook.call(_this3.testEnvironment,_this3.assert);_this3.resolvePromise(promise,hookName);};var runHook=function runHook(){if(hookName==='before'){if(hookOwner.testsRun!==0){return;}_this3.preserveEnvironment=true;}// The 'after' hook should only execute when there are not tests left and\n// when the 'after' and 'finish' tasks are the only tasks left to process\nif(hookName==='after'&&!lastTestWithinModuleExecuted(hookOwner)&&(config.queue.length>0||ProcessingQueue.taskCount()>2)){return;}config.current=_this3;if(config.notrycatch){callHook();return;}try{// This try-block includes the indirect call to resolvePromise, which shouldn't\n// have to be inside try-catch. But, since we support any user-provided thenable\n// object, the thenable might throw in some unexpected way.\n// This subtle behaviour is undocumented. To avoid new failures in minor releases\n// we will not change this until QUnit 3.\n// TODO: In QUnit 3, reduce this try-block to just hook.call(), matching\n// the simplicity of queueGlobalHook.\ncallHook();}catch(error){_this3.pushFailure(hookName+' failed on '+_this3.testName+': '+(error.message||error),extractStacktrace(error,0));}};return runHook;},// Currently only used for module level hooks, can be used to add global level ones\nhooks:function hooks(handler){var hooks=[];function processGlobalhooks(test){if((handler==='beforeEach'||handler==='afterEach')&&config.globalHooks[handler]){for(var i=0;i<config.globalHooks[handler].length;i++){hooks.push(test.queueGlobalHook(config.globalHooks[handler][i],handler));}}}function processHooks(test,module){if(module.parentModule){processHooks(test,module.parentModule);}if(module.hooks[handler].length){for(var i=0;i<module.hooks[handler].length;i++){hooks.push(test.queueHook(module.hooks[handler][i],handler,module));}}}// Hooks are ignored on skipped tests\nif(!this.skip){processGlobalhooks(this);processHooks(this,this.module);}return hooks;},finish:function finish(){config.current=this;// Release the timeout and timeout callback references to be garbage collected.\n// https://github.com/qunitjs/qunit/pull/1708\nif(setTimeout$1){clearTimeout(this.timeout);config.timeoutHandler=null;}// Release the test callback to ensure that anything referenced has been\n// released to be garbage collected.\nthis.callback=undefined;if(this.steps.length){var stepsList=this.steps.join(', ');this.pushFailure('Expected assert.verifySteps() to be called before end of test '+\"after using assert.step(). Unverified steps: \".concat(stepsList),this.stack);}if(config.requireExpects&&this.expected===null){this.pushFailure('Expected number of assertions to be defined, but expect() was '+'not called.',this.stack);}else if(this.expected!==null&&this.expected!==this.assertions.length){this.pushFailure('Expected '+this.expected+' assertions, but '+this.assertions.length+' were run',this.stack);}else if(this.expected===null&&!this.assertions.length){this.pushFailure('Expected at least one assertion, but none were run - call '+'expect(0) to accept zero assertions.',this.stack);}var module=this.module;var moduleName=module.name;var testName=this.testName;var skipped=!!this.skip;var todo=!!this.todo;var bad=0;var storage=config.storage;this.runtime=Math.round(performance.now()-this.started);config.stats.all+=this.assertions.length;config.stats.testCount+=1;module.stats.all+=this.assertions.length;for(var i=0;i<this.assertions.length;i++){// A failing assertion will counts toward the HTML Reporter's\n// \"X assertions, Y failed\" line even if it was inside a todo.\n// Inverting this would be similarly confusing since all but the last\n// passing assertion inside a todo test should be considered as good.\n// These stats don't decide the outcome of anything, so counting them\n// as failing seems the most intuitive.\nif(!this.assertions[i].result){bad++;config.stats.bad++;module.stats.bad++;}}if(skipped){incrementTestsIgnored(module);}else{incrementTestsRun(module);}// Store result when possible.\n// Note that this also marks todo tests as bad, thus they get hoisted,\n// and always run first on refresh.\nif(storage){if(bad){storage.setItem('qunit-test-'+moduleName+'-'+testName,bad);}else{storage.removeItem('qunit-test-'+moduleName+'-'+testName);}}// After emitting the js-reporters event we cleanup the assertion data to\n// avoid leaking it. It is not used by the legacy testDone callbacks.\nemit('testEnd',this.testReport.end(true));this.testReport.slimAssertions();var test=this;return runLoggingCallbacks('testDone',{name:testName,module:moduleName,skipped:skipped,todo:todo,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length,runtime:skipped?0:this.runtime,// HTML Reporter use\nassertions:this.assertions,testId:this.testId,// Source of Test\n// generating stack trace is expensive, so using a getter will help defer this until we need it\nget source(){return test.stack;}}).then(function(){if(allTestsExecuted(module)){var completedModules=[module];// Check if the parent modules, iteratively, are done. If that the case,\n// we emit the `suiteEnd` event and trigger `moduleDone` callback.\nvar parent=module.parentModule;while(parent&&allTestsExecuted(parent)){completedModules.push(parent);parent=parent.parentModule;}var moduleDoneChain=_Promise.resolve();completedModules.forEach(function(completedModule){moduleDoneChain=moduleDoneChain.then(function(){return logSuiteEnd(completedModule);});});return moduleDoneChain;}}).then(function(){config.current=undefined;});function logSuiteEnd(module){// Reset `module.hooks` to ensure that anything referenced in these hooks\n// has been released to be garbage collected. Descendant modules that were\n// entirely skipped, e.g. due to filtering, will never have this method\n// called for them, but might have hooks with references pinning data in\n// memory (even if the hooks weren't actually executed), so we reset the\n// hooks on all descendant modules here as well. This is safe because we\n// will never call this as long as any descendant modules still have tests\n// to run. This also means that in multi-tiered nesting scenarios we might\n// reset the hooks multiple times on some modules, but that's harmless.\nvar modules=[module];while(modules.length){var nextModule=modules.shift();nextModule.hooks={};modules.push.apply(modules,_toConsumableArray(nextModule.childModules));}emit('suiteEnd',module.suiteReport.end(true));return runLoggingCallbacks('moduleDone',{name:module.name,tests:module.tests,failed:module.stats.bad,passed:module.stats.all-module.stats.bad,total:module.stats.all,runtime:Math.round(performance.now()-module.stats.started)});}},preserveTestEnvironment:function preserveTestEnvironment(){if(this.preserveEnvironment){this.module.testEnvironment=this.testEnvironment;this.testEnvironment=extend({},this.module.testEnvironment);}},queue:function queue(){var test=this;if(!this.valid()){incrementTestsIgnored(this.module);return;}function runTest(){return[function(){return test.before();}].concat(_toConsumableArray(test.hooks('before')),[function(){test.preserveTestEnvironment();}],_toConsumableArray(test.hooks('beforeEach')),[function(){test.run();}],_toConsumableArray(test.hooks('afterEach').reverse()),_toConsumableArray(test.hooks('after').reverse()),[function(){test.after();},function(){return test.finish();}]);}var previousFailCount=config.storage&&+config.storage.getItem('qunit-test-'+this.module.name+'-'+this.testName);// Prioritize previously failed tests, detected from storage\nvar prioritize=config.reorder&&!!previousFailCount;this.previousFailure=!!previousFailCount;ProcessingQueue.add(runTest,prioritize,config.seed);},pushResult:function pushResult(resultInfo){if(this!==config.current){var message=resultInfo&&resultInfo.message||'';var testName=this&&this.testName||'';var error='Assertion occurred after test finished.\\n'+'> Test: '+testName+'\\n'+'> Message: '+message+'\\n';throw new Error(error);}// Destructure of resultInfo = { result, actual, expected, message, negative }\nvar details={module:this.module.name,name:this.testName,result:resultInfo.result,message:resultInfo.message,actual:resultInfo.actual,testId:this.testId,negative:resultInfo.negative||false,runtime:Math.round(performance.now()-this.started),todo:!!this.todo};if(hasOwn$1.call(resultInfo,'expected')){details.expected=resultInfo.expected;}if(!resultInfo.result){var source=resultInfo.source||sourceFromStacktrace();if(source){details.source=source;}}this.logAssertion(details);this.assertions.push({result:!!resultInfo.result,message:resultInfo.message});},pushFailure:function pushFailure(message,source,actual){if(!(this instanceof Test)){throw new Error('pushFailure() assertion outside test context, was '+sourceFromStacktrace(2));}this.pushResult({result:false,message:message||'error',actual:actual||null,source:source});},/**\n     * Log assertion details using both the old QUnit.log interface and\n     * QUnit.on( \"assertion\" ) interface.\n     *\n     * @private\n     */logAssertion:function logAssertion(details){runLoggingCallbacks('log',details);var assertion={passed:details.result,actual:details.actual,expected:details.expected,message:details.message,stack:details.source,todo:details.todo};this.testReport.pushAssertion(assertion);emit('assertion',assertion);},/**\n     * Reset config.timeout with a new timeout duration.\n     *\n     * @param {number} timeoutDuration\n     */internalResetTimeout:function internalResetTimeout(timeoutDuration){clearTimeout(config.timeout);config.timeout=setTimeout$1(config.timeoutHandler(timeoutDuration),timeoutDuration);},/**\n     * Create a new async pause and return a new function that can release the pause.\n     *\n     * This mechanism is internally used by:\n     *\n     * - explicit async pauses, created by calling `assert.async()`,\n     * - implicit async pauses, created when `QUnit.test()` or module hook callbacks\n     *   use async-await or otherwise return a Promise.\n     *\n     * Happy scenario:\n     *\n     * - Pause is created by calling internalStop().\n     *\n     *   Pause is released normally by invoking release() during the same test.\n     *\n     *   The release() callback lets internal processing resume.\n     *\n     * Failure scenarios:\n     *\n     * - The test fails due to an uncaught exception.\n     *\n     *   In this case, Test.run() will call internalRecover() which empties the clears all\n     *   async pauses and sets the cancelled flag, which means we silently ignore any\n     *   late calls to the resume() callback, as we will have moved on to a different\n     *   test by then, and we don't want to cause an extra \"release during a different test\"\n     *   errors that the developer isn't really responsible for. This can happen when a test\n     *   correctly schedules a call to release(), but also causes an uncaught error. The\n     *   uncaught error means we will no longer wait for the release (as it might not arrive).\n     *\n     * - Pause is never released, or called an insufficient number of times.\n     *\n     *   Our timeout handler will kill the pause and resume test processing, basically\n     *   like internalRecover(), but for one pause instead of any/all.\n     *\n     *   Here, too, any late calls to resume() will be silently ignored to avoid\n     *   extra errors. We tolerate this since the original test will have already been\n     *   marked as failure.\n     *\n     *   TODO: QUnit 3 will enable timeouts by default <https://github.com/qunitjs/qunit/issues/1483>,\n     *   but right now a test will hang indefinitely if async pauses are not released,\n     *   unless QUnit.config.testTimeout or assert.timeout() is used.\n     *\n     * - Pause is spontaneously released during a different test,\n     *   or when no test is currently running.\n     *\n     *   This is close to impossible because this error only happens if the original test\n     *   succesfully finished first (since other failure scenarios kill pauses and ignore\n     *   late calls). It can happen if a test ended exactly as expected, but has some\n     *   external or shared state continuing to hold a reference to the release callback,\n     *   and either the same test scheduled another call to it in the future, or a later test\n     *   causes it to be called through some shared state.\n     *\n     * - Pause release() is called too often, during the same test.\n     *\n     *   This simply throws an error, after which uncaught error handling picks it up\n     *   and processing resumes.\n     *\n     * @param {number} [requiredCalls=1]\n     */internalStop:function internalStop(){var requiredCalls=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;config.blocking=true;var test=this;var pauseId=this.nextPauseId++;var pause={cancelled:false,remaining:requiredCalls};test.pauses.set(pauseId,pause);function release(){if(pause.cancelled){return;}if(config.current===undefined){throw new Error('Unexpected release of async pause after tests finished.\\n'+\"> Test: \".concat(test.testName,\" [async #\").concat(pauseId,\"]\"));}if(config.current!==test){throw new Error('Unexpected release of async pause during a different test.\\n'+\"> Test: \".concat(test.testName,\" [async #\").concat(pauseId,\"]\"));}if(pause.remaining<=0){throw new Error('Tried to release async pause that was already released.\\n'+\"> Test: \".concat(test.testName,\" [async #\").concat(pauseId,\"]\"));}// The `requiredCalls` parameter exists to support `assert.async(count)`\npause.remaining--;if(pause.remaining===0){test.pauses.delete(pauseId);}internalStart(test);}// Set a recovery timeout, if so configured.\nif(setTimeout$1){var timeoutDuration;if(typeof test.timeout==='number'){timeoutDuration=test.timeout;}else if(typeof config.testTimeout==='number'){timeoutDuration=config.testTimeout;}if(typeof timeoutDuration==='number'&&timeoutDuration>0){config.timeoutHandler=function(timeout){return function(){config.timeout=null;pause.cancelled=true;test.pauses.delete(pauseId);test.pushFailure(\"Test took longer than \".concat(timeout,\"ms; test timed out.\"),sourceFromStacktrace(2));internalStart(test);};};clearTimeout(config.timeout);config.timeout=setTimeout$1(config.timeoutHandler(timeoutDuration),timeoutDuration);}}return release;},resolvePromise:function resolvePromise(promise,phase){if(promise!=null){var _test=this;var then=promise.then;if(typeof then==='function'){var resume=_test.internalStop();var resolve=function resolve(){resume();};if(config.notrycatch){then.call(promise,resolve);}else{var reject=function reject(error){var message='Promise rejected '+(!phase?'during':phase.replace(/Each$/,''))+' \"'+_test.testName+'\": '+(error&&error.message||error);_test.pushFailure(message,extractStacktrace(error,0));// Else next test will carry the responsibility\nsaveGlobal();// Unblock\ninternalRecover(_test);};then.call(promise,resolve,reject);}}}},valid:function valid(){// Internally-generated tests are always valid\nif(this.callback&&this.callback.validTest){return true;}function moduleChainIdMatch(testModule,selectedId){return(// undefined or empty array\n!selectedId||!selectedId.length||inArray(testModule.moduleId,selectedId)||testModule.parentModule&&moduleChainIdMatch(testModule.parentModule,selectedId));}if(!moduleChainIdMatch(this.module,config.moduleId)){return false;}if(config.testId&&config.testId.length&&!inArray(this.testId,config.testId)){return false;}function moduleChainNameMatch(testModule,selectedModule){if(!selectedModule){// undefined or empty string\nreturn true;}var testModuleName=testModule.name?testModule.name.toLowerCase():null;if(testModuleName===selectedModule){return true;}else if(testModule.parentModule){return moduleChainNameMatch(testModule.parentModule,selectedModule);}else{return false;}}var selectedModule=config.module&&config.module.toLowerCase();if(!moduleChainNameMatch(this.module,selectedModule)){return false;}var filter=config.filter;if(!filter){return true;}var regexFilter=/^(!?)\\/([\\w\\W]*)\\/(i?$)/.exec(filter);var fullName=this.module.name+': '+this.testName;return regexFilter?this.regexFilter(!!regexFilter[1],regexFilter[2],regexFilter[3],fullName):this.stringFilter(filter,fullName);},regexFilter:function regexFilter(exclude,pattern,flags,fullName){var regex=new RegExp(pattern,flags);var match=regex.test(fullName);return match!==exclude;},stringFilter:function stringFilter(filter,fullName){filter=filter.toLowerCase();fullName=fullName.toLowerCase();var include=filter.charAt(0)!=='!';if(!include){filter=filter.slice(1);}// If the filter matches, we need to honour include\nif(fullName.indexOf(filter)!==-1){return include;}// Otherwise, do the opposite\nreturn!include;}};function pushFailure(){if(!config.current){throw new Error('pushFailure() assertion outside test context, in '+sourceFromStacktrace(2));}// Gets current test obj\nvar currentTest=config.current;return currentTest.pushFailure.apply(currentTest,arguments);}function saveGlobal(){config.pollution=[];if(config.noglobals){for(var key in g){if(hasOwn$1.call(g,key)){// In Opera sometimes DOM element ids show up here, ignore them\nif(/^qunit-test-output/.test(key)){continue;}config.pollution.push(key);}}}}function checkPollution(){var old=config.pollution;saveGlobal();var newGlobals=diff(config.pollution,old);if(newGlobals.length>0){pushFailure('Introduced global variable(s): '+newGlobals.join(', '));}var deletedGlobals=diff(old,config.pollution);if(deletedGlobals.length>0){pushFailure('Deleted global variable(s): '+deletedGlobals.join(', '));}}var focused=false;// indicates that the \"only\" filter was used\nfunction addTest(settings){if(focused||config.currentModule.ignored){return;}var newTest=new Test(settings);newTest.queue();}function addOnlyTest(settings){if(config.currentModule.ignored){return;}if(!focused){config.queue.length=0;focused=true;}var newTest=new Test(settings);newTest.queue();}// Will be exposed as QUnit.test\nfunction test(testName,callback){addTest({testName:testName,callback:callback});}function makeEachTestName(testName,argument){return\"\".concat(testName,\" [\").concat(argument,\"]\");}function runEach(data,eachFn){if(Array.isArray(data)){for(var i=0;i<data.length;i++){eachFn(data[i],i);}}else if(_typeof(data)==='object'&&data!==null){for(var key in data){eachFn(data[key],key);}}else{throw new Error(\"test.each() expects an array or object as input, but\\nfound \".concat(_typeof(data),\" instead.\"));}}extend(test,{todo:function todo(testName,callback){addTest({testName:testName,callback:callback,todo:true});},skip:function skip(testName){addTest({testName:testName,skip:true});},only:function only(testName,callback){addOnlyTest({testName:testName,callback:callback});},each:function each(testName,dataset,callback){runEach(dataset,function(data,testKey){addTest({testName:makeEachTestName(testName,testKey),callback:callback,withData:true,stackOffset:5,data:data});});}});test.todo.each=function(testName,dataset,callback){runEach(dataset,function(data,testKey){addTest({testName:makeEachTestName(testName,testKey),callback:callback,todo:true,withData:true,stackOffset:5,data:data});});};test.skip.each=function(testName,dataset){runEach(dataset,function(_,testKey){addTest({testName:makeEachTestName(testName,testKey),stackOffset:5,skip:true});});};test.only.each=function(testName,dataset,callback){runEach(dataset,function(data,testKey){addOnlyTest({testName:makeEachTestName(testName,testKey),callback:callback,withData:true,stackOffset:5,data:data});});};// Forcefully release all processing holds.\nfunction internalRecover(test){test.pauses.forEach(function(pause){pause.cancelled=true;});test.pauses.clear();internalStart(test);}// Release a processing hold, scheduling a resumption attempt if no holds remain.\nfunction internalStart(test){// Ignore if other async pauses still exist.\nif(test.pauses.size>0){return;}// Add a slight delay to allow more assertions etc.\nif(setTimeout$1){clearTimeout(config.timeout);config.timeout=setTimeout$1(function(){if(test.pauses.size>0){return;}clearTimeout(config.timeout);config.timeout=null;config.blocking=false;ProcessingQueue.advance();});}else{config.blocking=false;ProcessingQueue.advance();}}function collectTests(module){var tests=[].concat(module.tests);var modules=_toConsumableArray(module.childModules);// Do a breadth-first traversal of the child modules\nwhile(modules.length){var nextModule=modules.shift();tests.push.apply(tests,nextModule.tests);modules.push.apply(modules,_toConsumableArray(nextModule.childModules));}return tests;}// This returns true after all executable and skippable tests\n// in a module have been proccessed, and informs 'suiteEnd'\n// and moduleDone().\nfunction allTestsExecuted(module){return module.testsRun+module.testsIgnored===collectTests(module).length;}// This returns true during the last executable non-skipped test\n// within a module, and informs the running of the 'after' hook\n// for a given module. This runs only once for a given module,\n// but must run during the last non-skipped test. When it runs,\n// there may be non-zero skipped tests left.\nfunction lastTestWithinModuleExecuted(module){return module.testsRun===collectTests(module).filter(function(test){return!test.skip;}).length-1;}function incrementTestsRun(module){module.testsRun++;while(module=module.parentModule){module.testsRun++;}}function incrementTestsIgnored(module){module.testsIgnored++;while(module=module.parentModule){module.testsIgnored++;}}/* global module, exports, define */function exportQUnit(QUnit){var exportedModule=false;if(window$1&&document){// QUnit may be defined when it is preconfigured but then only QUnit and QUnit.config may be defined.\nif(window$1.QUnit&&window$1.QUnit.version){throw new Error('QUnit has already been defined.');}window$1.QUnit=QUnit;exportedModule=true;}// For Node.js\nif( true&&module&&module.exports){module.exports=QUnit;// For consistency with CommonJS environments' exports\nmodule.exports.QUnit=QUnit;exportedModule=true;}// For CommonJS with exports, but without module.exports, like Rhino\nif( true&&exports){exports.QUnit=QUnit;exportedModule=true;}// For AMD\nif(true){!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return QUnit;}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));QUnit.config.autostart=false;exportedModule=true;}// For other environments, including Web Workers (globalThis === self),\n// SpiderMonkey (mozjs), and other embedded JavaScript engines\nif(!exportedModule){g.QUnit=QUnit;}}var ConsoleReporter=/*#__PURE__*/function(){function ConsoleReporter(runner){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,ConsoleReporter);// Cache references to console methods to ensure we can report failures\n// from tests tests that mock the console object itself.\n// https://github.com/qunitjs/qunit/issues/1340\n// Support IE 9: Function#bind is supported, but no console.log.bind().\nthis.log=options.log||Function.prototype.bind.call(console$1.log,console$1);runner.on('error',this.onError.bind(this));runner.on('runStart',this.onRunStart.bind(this));runner.on('testStart',this.onTestStart.bind(this));runner.on('testEnd',this.onTestEnd.bind(this));runner.on('runEnd',this.onRunEnd.bind(this));}_createClass(ConsoleReporter,[{key:\"onError\",value:function onError(error){this.log('error',error);}},{key:\"onRunStart\",value:function onRunStart(runStart){this.log('runStart',runStart);}},{key:\"onTestStart\",value:function onTestStart(test){this.log('testStart',test);}},{key:\"onTestEnd\",value:function onTestEnd(test){this.log('testEnd',test);}},{key:\"onRunEnd\",value:function onRunEnd(runEnd){this.log('runEnd',runEnd);}}],[{key:\"init\",value:function init(runner,options){return new ConsoleReporter(runner,options);}}]);return ConsoleReporter;}();// TODO: Consider using globalThis instead of window, so that the reporter\n// works for Node.js as well. As this can add overhead, we should make\n// this opt-in before we enable it for CLI.\n//\n// QUnit 3 will switch from `window` to `globalThis` and then make it\n// no longer an implicit feature of the HTML Reporter, but rather let\n// it be opt-in via `QUnit.config.reporters = ['perf']` or something\n// like that.\nvar nativePerf=window$1&&typeof window$1.performance!=='undefined'&&// eslint-disable-next-line compat/compat -- Checked\ntypeof window$1.performance.mark==='function'&&// eslint-disable-next-line compat/compat -- Checked\ntypeof window$1.performance.measure==='function'?window$1.performance:undefined;var perf={measure:nativePerf?function(comment,startMark,endMark){// `performance.measure` may fail if the mark could not be found.\n// reasons a specific mark could not be found include: outside code invoking `performance.clearMarks()`\ntry{nativePerf.measure(comment,startMark,endMark);}catch(ex){Logger.warn('performance.measure could not be executed because of ',ex.message);}}:function(){},mark:nativePerf?nativePerf.mark.bind(nativePerf):function(){}};var PerfReporter=/*#__PURE__*/function(){function PerfReporter(runner){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,PerfReporter);this.perf=options.perf||perf;runner.on('runStart',this.onRunStart.bind(this));runner.on('runEnd',this.onRunEnd.bind(this));runner.on('suiteStart',this.onSuiteStart.bind(this));runner.on('suiteEnd',this.onSuiteEnd.bind(this));runner.on('testStart',this.onTestStart.bind(this));runner.on('testEnd',this.onTestEnd.bind(this));}_createClass(PerfReporter,[{key:\"onRunStart\",value:function onRunStart(){this.perf.mark('qunit_suite_0_start');}},{key:\"onSuiteStart\",value:function onSuiteStart(suiteStart){var suiteLevel=suiteStart.fullName.length;this.perf.mark(\"qunit_suite_\".concat(suiteLevel,\"_start\"));}},{key:\"onSuiteEnd\",value:function onSuiteEnd(suiteEnd){var suiteLevel=suiteEnd.fullName.length;var suiteName=suiteEnd.fullName.join(' – ');this.perf.mark(\"qunit_suite_\".concat(suiteLevel,\"_end\"));this.perf.measure(\"QUnit Test Suite: \".concat(suiteName),\"qunit_suite_\".concat(suiteLevel,\"_start\"),\"qunit_suite_\".concat(suiteLevel,\"_end\"));}},{key:\"onTestStart\",value:function onTestStart(){this.perf.mark('qunit_test_start');}},{key:\"onTestEnd\",value:function onTestEnd(testEnd){this.perf.mark('qunit_test_end');var testName=testEnd.fullName.join(' – ');this.perf.measure(\"QUnit Test: \".concat(testName),'qunit_test_start','qunit_test_end');}},{key:\"onRunEnd\",value:function onRunEnd(){this.perf.mark('qunit_suite_0_end');this.perf.measure('QUnit Test Run','qunit_suite_0_start','qunit_suite_0_end');}}],[{key:\"init\",value:function init(runner,options){return new PerfReporter(runner,options);}}]);return PerfReporter;}();var FORCE_COLOR,NODE_DISABLE_COLORS,NO_COLOR,TERM,isTTY=true;if(typeof process!=='undefined'){var _ref=process.env||{};FORCE_COLOR=_ref.FORCE_COLOR;NODE_DISABLE_COLORS=_ref.NODE_DISABLE_COLORS;NO_COLOR=_ref.NO_COLOR;TERM=_ref.TERM;isTTY=process.stdout&&process.stdout.isTTY;}var $={enabled:!NODE_DISABLE_COLORS&&NO_COLOR==null&&TERM!=='dumb'&&(FORCE_COLOR!=null&&FORCE_COLOR!=='0'||isTTY),// modifiers\nreset:init(0,0),bold:init(1,22),dim:init(2,22),italic:init(3,23),underline:init(4,24),inverse:init(7,27),hidden:init(8,28),strikethrough:init(9,29),// colors\nblack:init(30,39),red:init(31,39),green:init(32,39),yellow:init(33,39),blue:init(34,39),magenta:init(35,39),cyan:init(36,39),white:init(37,39),gray:init(90,39),grey:init(90,39),// background colors\nbgBlack:init(40,49),bgRed:init(41,49),bgGreen:init(42,49),bgYellow:init(43,49),bgBlue:init(44,49),bgMagenta:init(45,49),bgCyan:init(46,49),bgWhite:init(47,49)};function run(arr,str){var i=0,tmp,beg='',end='';for(;i<arr.length;i++){tmp=arr[i];beg+=tmp.open;end+=tmp.close;if(!!~str.indexOf(tmp.close)){str=str.replace(tmp.rgx,tmp.close+tmp.open);}}return beg+str+end;}function chain(has,keys){var ctx={has:has,keys:keys};ctx.reset=$.reset.bind(ctx);ctx.bold=$.bold.bind(ctx);ctx.dim=$.dim.bind(ctx);ctx.italic=$.italic.bind(ctx);ctx.underline=$.underline.bind(ctx);ctx.inverse=$.inverse.bind(ctx);ctx.hidden=$.hidden.bind(ctx);ctx.strikethrough=$.strikethrough.bind(ctx);ctx.black=$.black.bind(ctx);ctx.red=$.red.bind(ctx);ctx.green=$.green.bind(ctx);ctx.yellow=$.yellow.bind(ctx);ctx.blue=$.blue.bind(ctx);ctx.magenta=$.magenta.bind(ctx);ctx.cyan=$.cyan.bind(ctx);ctx.white=$.white.bind(ctx);ctx.gray=$.gray.bind(ctx);ctx.grey=$.grey.bind(ctx);ctx.bgBlack=$.bgBlack.bind(ctx);ctx.bgRed=$.bgRed.bind(ctx);ctx.bgGreen=$.bgGreen.bind(ctx);ctx.bgYellow=$.bgYellow.bind(ctx);ctx.bgBlue=$.bgBlue.bind(ctx);ctx.bgMagenta=$.bgMagenta.bind(ctx);ctx.bgCyan=$.bgCyan.bind(ctx);ctx.bgWhite=$.bgWhite.bind(ctx);return ctx;}function init(open,close){var blk={open:\"\\x1B[\".concat(open,\"m\"),close:\"\\x1B[\".concat(close,\"m\"),rgx:new RegExp(\"\\\\x1b\\\\[\".concat(close,\"m\"),'g')};return function(txt){if(this!==void 0&&this.has!==void 0){!!~this.has.indexOf(open)||(this.has.push(open),this.keys.push(blk));return txt===void 0?this:$.enabled?run(this.keys,txt+''):txt+'';}return txt===void 0?chain([open],[blk]):$.enabled?run([blk],txt+''):txt+'';};}var hasOwn=Object.prototype.hasOwnProperty;/**\n   * Format a given value into YAML.\n   *\n   * YAML is a superset of JSON that supports all the same data\n   * types and syntax, and more. As such, it is always possible\n   * to fallback to JSON.stringfify, but we generally avoid\n   * that to make output easier to read for humans.\n   *\n   * Supported data types:\n   *\n   * - null\n   * - boolean\n   * - number\n   * - string\n   * - array\n   * - object\n   *\n   * Anything else (including NaN, Infinity, and undefined)\n   * must be described in strings, for display purposes.\n   *\n   * Note that quotes are optional in YAML strings if the\n   * strings are \"simple\", and as such we generally prefer\n   * that for improved readability. We output strings in\n   * one of three ways:\n   *\n   * - bare unquoted text, for simple one-line strings.\n   * - JSON (quoted text), for complex one-line strings.\n   * - YAML Block, for complex multi-line strings.\n   *\n   * Objects with cyclical references will be stringifed as\n   * \"[Circular]\" as they cannot otherwise be represented.\n   */function prettyYamlValue(value){var indent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;if(value===undefined){// Not supported in JSON/YAML, turn into string\n// and let the below output it as bare string.\nvalue=String(value);}// Support IE 9-11: Use isFinite instead of ES6 Number.isFinite\nif(typeof value==='number'&&!isFinite(value)){// Turn NaN and Infinity into simple strings.\n// Paranoia: Don't return directly just in case there's\n// a way to add special characters here.\nvalue=String(value);}if(typeof value==='number'){// Simple numbers\nreturn JSON.stringify(value);}if(typeof value==='string'){// If any of these match, then we can't output it\n// as bare unquoted text, because that would either\n// cause data loss or invalid YAML syntax.\n//\n// - Quotes, escapes, line breaks, or JSON-like stuff.\nvar rSpecialJson=/['\"\\\\/[{}\\]\\r\\n]/;// - Characters that are special at the start of a YAML value\nvar rSpecialYaml=/[-?:,[\\]{}#&*!|=>'\"%@`]/;// - Leading or trailing whitespace.\nvar rUntrimmed=/(^\\s|\\s$)/;// - Ambiguous as YAML number, e.g. '2', '-1.2', '.2', or '2_000'\nvar rNumerical=/^[\\d._-]+$/;// - Ambiguous as YAML bool.\n//   Use case-insensitive match, although technically only\n//   fully-lower, fully-upper, or uppercase-first would be ambiguous.\n//   e.g. true/True/TRUE, but not tRUe.\nvar rBool=/^(true|false|y|n|yes|no|on|off)$/i;// Is this a complex string?\nif(value===''||rSpecialJson.test(value)||rSpecialYaml.test(value[0])||rUntrimmed.test(value)||rNumerical.test(value)||rBool.test(value)){if(!/\\n/.test(value)){// Complex one-line string, use JSON (quoted string)\nreturn JSON.stringify(value);}// See also <https://yaml-multiline.info/>\n// Support IE 9-11: Avoid ES6 String#repeat\nvar prefix=new Array(indent+1).join(' ');var trailingLinebreakMatch=value.match(/\\n+$/);var trailingLinebreaks=trailingLinebreakMatch?trailingLinebreakMatch[0].length:0;if(trailingLinebreaks===1){// Use the most straight-forward \"Block\" string in YAML\n// without any \"Chomping\" indicators.\nvar lines=value// Ignore the last new line, since we'll get that one for free\n// with the straight-forward Block syntax.\n.replace(/\\n$/,'').split('\\n').map(function(line){return prefix+line;});return'|\\n'+lines.join('\\n');}else{// This has either no trailing new lines, or more than 1.\n// Use |+ so that YAML parsers will preserve it exactly.\nvar _lines=value.split('\\n').map(function(line){return prefix+line;});return'|+\\n'+_lines.join('\\n');}}else{// Simple string, use bare unquoted text\nreturn value;}}// Handle null, boolean, array, and object\nreturn JSON.stringify(decycledShallowClone(value),null,2);}/**\n   * Creates a shallow clone of an object where cycles have\n   * been replaced with \"[Circular]\".\n   */function decycledShallowClone(object){var ancestors=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(ancestors.indexOf(object)!==-1){return'[Circular]';}var type=Object.prototype.toString.call(object).replace(/^\\[.+\\s(.+?)]$/,'$1').toLowerCase();var clone;switch(type){case'array':ancestors.push(object);clone=object.map(function(element){return decycledShallowClone(element,ancestors);});ancestors.pop();break;case'object':ancestors.push(object);clone={};Object.keys(object).forEach(function(key){clone[key]=decycledShallowClone(object[key],ancestors);});ancestors.pop();break;default:clone=object;}return clone;}var TapReporter=/*#__PURE__*/function(){function TapReporter(runner){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,TapReporter);// Cache references to console methods to ensure we can report failures\n// from tests tests that mock the console object itself.\n// https://github.com/qunitjs/qunit/issues/1340\n// Support IE 9: Function#bind is supported, but no console.log.bind().\nthis.log=options.log||Function.prototype.bind.call(console$1.log,console$1);this.testCount=0;this.ended=false;this.bailed=false;runner.on('error',this.onError.bind(this));runner.on('runStart',this.onRunStart.bind(this));runner.on('testEnd',this.onTestEnd.bind(this));runner.on('runEnd',this.onRunEnd.bind(this));}_createClass(TapReporter,[{key:\"onRunStart\",value:function onRunStart(_runSuite){this.log('TAP version 13');}},{key:\"onError\",value:function onError(error){if(this.bailed){return;}this.bailed=true;// Imitate onTestEnd\n// Skip this if we're past \"runEnd\" as it would look odd\nif(!this.ended){this.testCount=this.testCount+1;this.log($.red(\"not ok \".concat(this.testCount,\" global failure\")));this.logError(error);}this.log('Bail out! '+errorString(error).split('\\n')[0]);if(this.ended){this.logError(error);}}},{key:\"onTestEnd\",value:function onTestEnd(test){var _this=this;this.testCount=this.testCount+1;if(test.status==='passed'){this.log(\"ok \".concat(this.testCount,\" \").concat(test.fullName.join(' > ')));}else if(test.status==='skipped'){this.log($.yellow(\"ok \".concat(this.testCount,\" # SKIP \").concat(test.fullName.join(' > '))));}else if(test.status==='todo'){this.log($.cyan(\"not ok \".concat(this.testCount,\" # TODO \").concat(test.fullName.join(' > '))));test.errors.forEach(function(error){return _this.logAssertion(error,'todo');});}else{this.log($.red(\"not ok \".concat(this.testCount,\" \").concat(test.fullName.join(' > '))));test.errors.forEach(function(error){return _this.logAssertion(error);});}}},{key:\"onRunEnd\",value:function onRunEnd(runSuite){this.ended=true;this.log(\"1..\".concat(runSuite.testCounts.total));this.log(\"# pass \".concat(runSuite.testCounts.passed));this.log($.yellow(\"# skip \".concat(runSuite.testCounts.skipped)));this.log($.cyan(\"# todo \".concat(runSuite.testCounts.todo)));this.log($.red(\"# fail \".concat(runSuite.testCounts.failed)));}},{key:\"logAssertion\",value:function logAssertion(error,severity){var out='  ---';out+=\"\\n  message: \".concat(prettyYamlValue(error.message||'failed'));out+=\"\\n  severity: \".concat(prettyYamlValue(severity||'failed'));if(hasOwn.call(error,'actual')){out+=\"\\n  actual  : \".concat(prettyYamlValue(error.actual));}if(hasOwn.call(error,'expected')){out+=\"\\n  expected: \".concat(prettyYamlValue(error.expected));}if(error.stack){// Since stacks aren't user generated, take a bit of liberty by\n// adding a trailing new line to allow a straight-forward YAML Blocks.\nout+=\"\\n  stack: \".concat(prettyYamlValue(error.stack+'\\n'));}out+='\\n  ...';this.log(out);}},{key:\"logError\",value:function logError(error){var out='  ---';out+=\"\\n  message: \".concat(prettyYamlValue(errorString(error)));out+=\"\\n  severity: \".concat(prettyYamlValue('failed'));if(error&&error.stack){out+=\"\\n  stack: \".concat(prettyYamlValue(error.stack+'\\n'));}out+='\\n  ...';this.log(out);}}],[{key:\"init\",value:function init(runner,options){return new TapReporter(runner,options);}}]);return TapReporter;}();var reporters={console:ConsoleReporter,perf:PerfReporter,tap:TapReporter};function makeAddGlobalHook(hookName){return function addGlobalHook(callback){if(!config.globalHooks[hookName]){config.globalHooks[hookName]=[];}config.globalHooks[hookName].push(callback);};}var hooks={beforeEach:makeAddGlobalHook('beforeEach'),afterEach:makeAddGlobalHook('afterEach')};/**\n   * Handle a global error that should result in a failed test run.\n   *\n   * Summary:\n   *\n   * - If we're strictly inside a test (or one if its module hooks), the exception\n   *   becomes a failed assertion.\n   *\n   *   This has the important side-effect that uncaught exceptions (such as\n   *   calling an undefined function) during a \"todo\" test do NOT result in\n   *   a failed test run.\n   *\n   * - If we're anywhere outside a test (be it in early event callbacks, or\n   *   internally between tests, or somewhere after \"runEnd\" if the process is\n   *   still alive for some reason), then send an \"error\" event to the reporters.\n   *\n   * @since 2.17.0\n   * @param {Error|any} error\n   */function onUncaughtException(error){if(config.current){config.current.assert.pushResult({result:false,message:\"global failure: \".concat(errorString(error)),// We could let callers specify an offset to subtract a number of frames via\n// sourceFromStacktrace, in case they are a wrapper further away from the error\n// handler, and thus reduce some noise in the stack trace. However, we're not\n// doing this right now because it would almost never be used in practice given\n// the vast majority of error values will be Error objects, and thus have their\n// own stack trace already.\nsource:error&&error.stack||sourceFromStacktrace(2)});}else{// The \"error\" event was added in QUnit 2.17.\n// Increase \"bad assertion\" stats despite no longer pushing an assertion in this case.\n// This ensures \"runEnd\" and \"QUnit.done()\" handlers behave as expected, since the \"bad\"\n// count is typically how reporters decide on the boolean outcome of the test run.\nrunSuite.globalFailureCount++;config.stats.bad++;config.stats.all++;emit('error',error);}}/**\n   * Handle a window.onerror error.\n   *\n   * If there is a current test that sets the internal `ignoreGlobalErrors` field\n   * (such as during `assert.throws()`), then the error is ignored and native\n   * error reporting is suppressed as well. This is because in browsers, an error\n   * can sometimes end up in `window.onerror` instead of in the local try/catch.\n   * This ignoring of errors does not apply to our general onUncaughtException\n   * method, nor to our `unhandledRejection` handlers, as those are not meant\n   * to receive an \"expected\" error during `assert.throws()`.\n   *\n   * @see <https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror>\n   * @deprecated since 2.17.0 Use QUnit.onUncaughtException instead.\n   * @param {Object} details\n   * @param {string} details.message\n   * @param {string} details.fileName\n   * @param {number} details.lineNumber\n   * @param {string|undefined} [details.stacktrace]\n   * @return {bool} True if native error reporting should be suppressed.\n   */function onWindowError(details){Logger.warn('QUnit.onError is deprecated and will be removed in QUnit 3.0.'+' Please use QUnit.onUncaughtException instead.');if(config.current&&config.current.ignoreGlobalErrors){return true;}var err=new Error(details.message);err.stack=details.stacktrace||details.fileName+':'+details.lineNumber;onUncaughtException(err);return false;}var QUnit={};// The \"currentModule\" object would ideally be defined using the createModule()\n// function. Since it isn't, add the missing suiteReport property to it now that\n// we have loaded all source code required to do so.\n//\n// TODO: Consider defining currentModule in core.js or module.js in its entirely\n// rather than partly in config.js and partly here.\nconfig.currentModule.suiteReport=runSuite;var globalStartCalled=false;var runStarted=false;// Figure out if we're running the tests from a server or not\nQUnit.isLocal=window$1&&window$1.location&&window$1.location.protocol==='file:';// Expose the current QUnit version\nQUnit.version='2.20.0';extend(QUnit,{config:config,dump:dump,equiv:equiv,reporters:reporters,hooks:hooks,is:is,objectType:objectType,on:on,onError:onWindowError,onUncaughtException:onUncaughtException,pushFailure:pushFailure,assert:Assert.prototype,module:module$1,test:test,// alias other test flavors for easy access\ntodo:test.todo,skip:test.skip,only:test.only,start:function start(count){if(config.current){throw new Error('QUnit.start cannot be called inside a test context.');}var globalStartAlreadyCalled=globalStartCalled;globalStartCalled=true;if(runStarted){throw new Error('Called start() while test already started running');}if(globalStartAlreadyCalled||count>1){throw new Error('Called start() outside of a test context too many times');}if(config.autostart){throw new Error('Called start() outside of a test context when '+'QUnit.config.autostart was true');}if(!config.pageLoaded){// The page isn't completely loaded yet, so we set autostart and then\n// load if we're in Node or wait for the browser's load event.\nconfig.autostart=true;// Starts from Node even if .load was not previously called. We still return\n// early otherwise we'll wind up \"beginning\" twice.\nif(!document){QUnit.load();}return;}scheduleBegin();},onUnhandledRejection:function onUnhandledRejection(reason){Logger.warn('QUnit.onUnhandledRejection is deprecated and will be removed in QUnit 3.0.'+' Please use QUnit.onUncaughtException instead.');onUncaughtException(reason);},extend:function extend$1(){Logger.warn('QUnit.extend is deprecated and will be removed in QUnit 3.0.'+' Please use Object.assign instead.');// delegate to utility implementation, which does not warn and can be used elsewhere internally\nfor(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return extend.apply(this,args);},load:function load(){config.pageLoaded=true;// Initialize the configuration options\nextend(config,{started:0,updateRate:1000,autostart:true,filter:''},true);if(!runStarted){config.blocking=false;if(config.autostart){scheduleBegin();}}},stack:function stack(offset){offset=(offset||0)+2;return sourceFromStacktrace(offset);}});registerLoggingCallbacks(QUnit);function scheduleBegin(){runStarted=true;// Add a slight delay to allow definition of more modules and tests.\nif(setTimeout$1){setTimeout$1(function(){begin();});}else{begin();}}function unblockAndAdvanceQueue(){config.blocking=false;ProcessingQueue.advance();}function begin(){if(config.started){unblockAndAdvanceQueue();return;}// The test run hasn't officially begun yet\n// Record the time of the test run's beginning\nconfig.started=performance.now();// Delete the loose unnamed module if unused.\nif(config.modules[0].name===''&&config.modules[0].tests.length===0){config.modules.shift();}var modulesLog=[];for(var i=0;i<config.modules.length;i++){// Don't expose the unnamed global test module to plugins.\nif(config.modules[i].name!==''){modulesLog.push({name:config.modules[i].name,moduleId:config.modules[i].moduleId,// Added in QUnit 1.16.0 for internal use by html-reporter,\n// but no longer used since QUnit 2.7.0.\n// @deprecated Kept unofficially to be removed in QUnit 3.0.\ntests:config.modules[i].tests});}}// The test run is officially beginning now\nemit('runStart',runSuite.start(true));runLoggingCallbacks('begin',{totalTests:Test.count,modules:modulesLog}).then(unblockAndAdvanceQueue);}exportQUnit(QUnit);(function(){if(!window$1||!document){return;}var config=QUnit.config;var hasOwn=Object.prototype.hasOwnProperty;// Stores fixture HTML for resetting later\nfunction storeFixture(){// Avoid overwriting user-defined values\nif(hasOwn.call(config,'fixture')){return;}var fixture=document.getElementById('qunit-fixture');if(fixture){config.fixture=fixture.cloneNode(true);}}QUnit.begin(storeFixture);// Resets the fixture DOM element if available.\nfunction resetFixture(){if(config.fixture==null){return;}var fixture=document.getElementById('qunit-fixture');var resetFixtureType=_typeof(config.fixture);if(resetFixtureType==='string'){// support user defined values for `config.fixture`\nvar newFixture=document.createElement('div');newFixture.setAttribute('id','qunit-fixture');newFixture.innerHTML=config.fixture;fixture.parentNode.replaceChild(newFixture,fixture);}else{var clonedFixture=config.fixture.cloneNode(true);fixture.parentNode.replaceChild(clonedFixture,fixture);}}QUnit.testStart(resetFixture);})();(function(){// Only interact with URLs via window.location\nvar location=typeof window$1!=='undefined'&&window$1.location;if(!location){return;}var urlParams=getUrlParams();QUnit.urlParams=urlParams;QUnit.config.filter=urlParams.filter;QUnit.config.module=urlParams.module;QUnit.config.moduleId=[].concat(urlParams.moduleId||[]);QUnit.config.testId=[].concat(urlParams.testId||[]);// Test order randomization\nif(urlParams.seed===true){// Generate a random seed if the option is specified without a value\nQUnit.config.seed=Math.random().toString(36).slice(2);}else if(urlParams.seed){QUnit.config.seed=urlParams.seed;}// Add URL-parameter-mapped config values with UI form rendering data\nQUnit.config.urlConfig.push({id:'hidepassed',label:'Hide passed tests',tooltip:'Only show tests and assertions that fail. Stored as query-strings.'},{id:'noglobals',label:'Check for Globals',tooltip:'Enabling this will test if any test introduces new properties on the '+'global object (`window` in Browsers). Stored as query-strings.'},{id:'notrycatch',label:'No try-catch',tooltip:'Enabling this will run tests outside of a try-catch block. Makes debugging '+'exceptions in IE reasonable. Stored as query-strings.'});QUnit.begin(function(){var urlConfig=QUnit.config.urlConfig;for(var i=0;i<urlConfig.length;i++){// Options can be either strings or objects with nonempty \"id\" properties\nvar option=QUnit.config.urlConfig[i];if(typeof option!=='string'){option=option.id;}if(QUnit.config[option]===undefined){QUnit.config[option]=urlParams[option];}}});function getUrlParams(){var urlParams=Object.create(null);var params=location.search.slice(1).split('&');var length=params.length;for(var i=0;i<length;i++){if(params[i]){var param=params[i].split('=');var name=decodeQueryParam(param[0]);// Allow just a key to turn on a flag, e.g., test.html?noglobals\nvar value=param.length===1||decodeQueryParam(param.slice(1).join('='));if(name in urlParams){urlParams[name]=[].concat(urlParams[name],value);}else{urlParams[name]=value;}}}return urlParams;}function decodeQueryParam(param){return decodeURIComponent(param.replace(/\\+/g,'%20'));}})();var fuzzysort$1={exports:{}};(function(module){(function(root,UMD){if(module.exports)module.exports=UMD();else root.fuzzysort=UMD();})(commonjsGlobal,function UMD(){function fuzzysortNew(instanceOptions){var fuzzysort={single:function single(search,target,options){if(search=='farzher')return{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6]};if(!search)return null;if(!isObj(search))search=fuzzysort.getPreparedSearch(search);if(!target)return null;if(!isObj(target))target=fuzzysort.getPrepared(target);var allowTypo=options&&options.allowTypo!==undefined?options.allowTypo:instanceOptions&&instanceOptions.allowTypo!==undefined?instanceOptions.allowTypo:true;var algorithm=allowTypo?fuzzysort.algorithm:fuzzysort.algorithmNoTypo;return algorithm(search,target,search[0]);},go:function go(search,targets,options){if(search=='farzher')return[{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6],obj:targets?targets[0]:null}];if(!search)return noResults;search=fuzzysort.prepareSearch(search);var searchLowerCode=search[0];var threshold=options&&options.threshold||instanceOptions&&instanceOptions.threshold||-9007199254740991;var limit=options&&options.limit||instanceOptions&&instanceOptions.limit||9007199254740991;var allowTypo=options&&options.allowTypo!==undefined?options.allowTypo:instanceOptions&&instanceOptions.allowTypo!==undefined?instanceOptions.allowTypo:true;var algorithm=allowTypo?fuzzysort.algorithm:fuzzysort.algorithmNoTypo;var resultsLen=0;var limitedCount=0;var targetsLen=targets.length;// This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\n// options.keys\nif(options&&options.keys){var scoreFn=options.scoreFn||defaultScoreFn;var keys=options.keys;var keysLen=keys.length;for(var i=targetsLen-1;i>=0;--i){var obj=targets[i];var objResults=new Array(keysLen);for(var keyI=keysLen-1;keyI>=0;--keyI){var key=keys[keyI];var target=getValue(obj,key);if(!target){objResults[keyI]=null;continue;}if(!isObj(target))target=fuzzysort.getPrepared(target);objResults[keyI]=algorithm(search,target,searchLowerCode);}objResults.obj=obj;// before scoreFn so scoreFn can use it\nvar score=scoreFn(objResults);if(score===null)continue;if(score<threshold)continue;objResults.score=score;if(resultsLen<limit){q.add(objResults);++resultsLen;}else{++limitedCount;if(score>q.peek().score)q.replaceTop(objResults);}}// options.key\n}else if(options&&options.key){var key=options.key;for(var i=targetsLen-1;i>=0;--i){var obj=targets[i];var target=getValue(obj,key);if(!target)continue;if(!isObj(target))target=fuzzysort.getPrepared(target);var result=algorithm(search,target,searchLowerCode);if(result===null)continue;if(result.score<threshold)continue;// have to clone result so duplicate targets from different obj can each reference the correct obj\nresult={target:result.target,_targetLowerCodes:null,_nextBeginningIndexes:null,score:result.score,indexes:result.indexes,obj:obj};// hidden\nif(resultsLen<limit){q.add(result);++resultsLen;}else{++limitedCount;if(result.score>q.peek().score)q.replaceTop(result);}}// no keys\n}else{for(var i=targetsLen-1;i>=0;--i){var target=targets[i];if(!target)continue;if(!isObj(target))target=fuzzysort.getPrepared(target);var result=algorithm(search,target,searchLowerCode);if(result===null)continue;if(result.score<threshold)continue;if(resultsLen<limit){q.add(result);++resultsLen;}else{++limitedCount;if(result.score>q.peek().score)q.replaceTop(result);}}}if(resultsLen===0)return noResults;var results=new Array(resultsLen);for(var i=resultsLen-1;i>=0;--i){results[i]=q.poll();}results.total=resultsLen+limitedCount;return results;},goAsync:function goAsync(search,targets,options){var canceled=false;var p=new Promise(function(resolve,reject){if(search=='farzher')return resolve([{target:\"farzher was here (^-^*)/\",score:0,indexes:[0,1,2,3,4,5,6],obj:targets?targets[0]:null}]);if(!search)return resolve(noResults);search=fuzzysort.prepareSearch(search);var searchLowerCode=search[0];var q=fastpriorityqueue();var iCurrent=targets.length-1;var threshold=options&&options.threshold||instanceOptions&&instanceOptions.threshold||-9007199254740991;var limit=options&&options.limit||instanceOptions&&instanceOptions.limit||9007199254740991;var allowTypo=options&&options.allowTypo!==undefined?options.allowTypo:instanceOptions&&instanceOptions.allowTypo!==undefined?instanceOptions.allowTypo:true;var algorithm=allowTypo?fuzzysort.algorithm:fuzzysort.algorithmNoTypo;var resultsLen=0;var limitedCount=0;function step(){if(canceled)return reject('canceled');var startMs=Date.now();// This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\n// options.keys\nif(options&&options.keys){var scoreFn=options.scoreFn||defaultScoreFn;var keys=options.keys;var keysLen=keys.length;for(;iCurrent>=0;--iCurrent){if(iCurrent%1000/*itemsPerCheck*/===0){if(Date.now()-startMs>=10/*asyncInterval*/){isNode?setImmediate(step):setTimeout(step);return;}}var obj=targets[iCurrent];var objResults=new Array(keysLen);for(var keyI=keysLen-1;keyI>=0;--keyI){var key=keys[keyI];var target=getValue(obj,key);if(!target){objResults[keyI]=null;continue;}if(!isObj(target))target=fuzzysort.getPrepared(target);objResults[keyI]=algorithm(search,target,searchLowerCode);}objResults.obj=obj;// before scoreFn so scoreFn can use it\nvar score=scoreFn(objResults);if(score===null)continue;if(score<threshold)continue;objResults.score=score;if(resultsLen<limit){q.add(objResults);++resultsLen;}else{++limitedCount;if(score>q.peek().score)q.replaceTop(objResults);}}// options.key\n}else if(options&&options.key){var key=options.key;for(;iCurrent>=0;--iCurrent){if(iCurrent%1000/*itemsPerCheck*/===0){if(Date.now()-startMs>=10/*asyncInterval*/){isNode?setImmediate(step):setTimeout(step);return;}}var obj=targets[iCurrent];var target=getValue(obj,key);if(!target)continue;if(!isObj(target))target=fuzzysort.getPrepared(target);var result=algorithm(search,target,searchLowerCode);if(result===null)continue;if(result.score<threshold)continue;// have to clone result so duplicate targets from different obj can each reference the correct obj\nresult={target:result.target,_targetLowerCodes:null,_nextBeginningIndexes:null,score:result.score,indexes:result.indexes,obj:obj};// hidden\nif(resultsLen<limit){q.add(result);++resultsLen;}else{++limitedCount;if(result.score>q.peek().score)q.replaceTop(result);}}// no keys\n}else{for(;iCurrent>=0;--iCurrent){if(iCurrent%1000/*itemsPerCheck*/===0){if(Date.now()-startMs>=10/*asyncInterval*/){isNode?setImmediate(step):setTimeout(step);return;}}var target=targets[iCurrent];if(!target)continue;if(!isObj(target))target=fuzzysort.getPrepared(target);var result=algorithm(search,target,searchLowerCode);if(result===null)continue;if(result.score<threshold)continue;if(resultsLen<limit){q.add(result);++resultsLen;}else{++limitedCount;if(result.score>q.peek().score)q.replaceTop(result);}}}if(resultsLen===0)return resolve(noResults);var results=new Array(resultsLen);for(var i=resultsLen-1;i>=0;--i){results[i]=q.poll();}results.total=resultsLen+limitedCount;resolve(results);}isNode?setImmediate(step):step();//setTimeout here is too slow\n});p.cancel=function(){canceled=true;};return p;},highlight:function highlight(result,hOpen,hClose){if(typeof hOpen=='function')return fuzzysort.highlightCallback(result,hOpen);if(result===null)return null;if(hOpen===undefined)hOpen='<b>';if(hClose===undefined)hClose='</b>';var highlighted='';var matchesIndex=0;var opened=false;var target=result.target;var targetLen=target.length;var matchesBest=result.indexes;for(var i=0;i<targetLen;++i){var char=target[i];if(matchesBest[matchesIndex]===i){++matchesIndex;if(!opened){opened=true;highlighted+=hOpen;}if(matchesIndex===matchesBest.length){highlighted+=char+hClose+target.substr(i+1);break;}}else{if(opened){opened=false;highlighted+=hClose;}}highlighted+=char;}return highlighted;},highlightCallback:function highlightCallback(result,cb){if(result===null)return null;var target=result.target;var targetLen=target.length;var indexes=result.indexes;var highlighted='';var matchI=0;var indexesI=0;var opened=false;var result=[];for(var i=0;i<targetLen;++i){var char=target[i];if(indexes[indexesI]===i){++indexesI;if(!opened){opened=true;result.push(highlighted);highlighted='';}if(indexesI===indexes.length){highlighted+=char;result.push(cb(highlighted,matchI++));highlighted='';result.push(target.substr(i+1));break;}}else{if(opened){opened=false;result.push(cb(highlighted,matchI++));highlighted='';}}highlighted+=char;}return result;},prepare:function prepare(target){if(!target)return{target:'',_targetLowerCodes:[0/*this 0 doesn't make sense. here because an empty array causes the algorithm to deoptimize and run 50% slower!*/],_nextBeginningIndexes:null,score:null,indexes:null,obj:null};// hidden\nreturn{target:target,_targetLowerCodes:fuzzysort.prepareLowerCodes(target),_nextBeginningIndexes:null,score:null,indexes:null,obj:null};// hidden\n},prepareSlow:function prepareSlow(target){if(!target)return{target:'',_targetLowerCodes:[0/*this 0 doesn't make sense. here because an empty array causes the algorithm to deoptimize and run 50% slower!*/],_nextBeginningIndexes:null,score:null,indexes:null,obj:null};// hidden\nreturn{target:target,_targetLowerCodes:fuzzysort.prepareLowerCodes(target),_nextBeginningIndexes:fuzzysort.prepareNextBeginningIndexes(target),score:null,indexes:null,obj:null};// hidden\n},prepareSearch:function prepareSearch(search){if(!search)search='';return fuzzysort.prepareLowerCodes(search);},// Below this point is only internal code\n// Below this point is only internal code\n// Below this point is only internal code\n// Below this point is only internal code\ngetPrepared:function getPrepared(target){if(target.length>999)return fuzzysort.prepare(target);// don't cache huge targets\nvar targetPrepared=preparedCache.get(target);if(targetPrepared!==undefined)return targetPrepared;targetPrepared=fuzzysort.prepare(target);preparedCache.set(target,targetPrepared);return targetPrepared;},getPreparedSearch:function getPreparedSearch(search){if(search.length>999)return fuzzysort.prepareSearch(search);// don't cache huge searches\nvar searchPrepared=preparedSearchCache.get(search);if(searchPrepared!==undefined)return searchPrepared;searchPrepared=fuzzysort.prepareSearch(search);preparedSearchCache.set(search,searchPrepared);return searchPrepared;},algorithm:function algorithm(searchLowerCodes,prepared,searchLowerCode){var targetLowerCodes=prepared._targetLowerCodes;var searchLen=searchLowerCodes.length;var targetLen=targetLowerCodes.length;var searchI=0;// where we at\nvar targetI=0;// where you at\nvar typoSimpleI=0;var matchesSimpleLen=0;// very basic fuzzy match; to remove non-matching targets ASAP!\n// walk through target. find sequential matches.\n// if all chars aren't found then exit\nfor(;;){var isMatch=searchLowerCode===targetLowerCodes[targetI];if(isMatch){matchesSimple[matchesSimpleLen++]=targetI;++searchI;if(searchI===searchLen)break;searchLowerCode=searchLowerCodes[typoSimpleI===0?searchI:typoSimpleI===searchI?searchI+1:typoSimpleI===searchI-1?searchI-1:searchI];}++targetI;if(targetI>=targetLen){// Failed to find searchI\n// Check for typo or exit\n// we go as far as possible before trying to transpose\n// then we transpose backwards until we reach the beginning\nfor(;;){if(searchI<=1)return null;// not allowed to transpose first char\nif(typoSimpleI===0){// we haven't tried to transpose yet\n--searchI;var searchLowerCodeNew=searchLowerCodes[searchI];if(searchLowerCode===searchLowerCodeNew)continue;// doesn't make sense to transpose a repeat char\ntypoSimpleI=searchI;}else{if(typoSimpleI===1)return null;// reached the end of the line for transposing\n--typoSimpleI;searchI=typoSimpleI;searchLowerCode=searchLowerCodes[searchI+1];var searchLowerCodeNew=searchLowerCodes[searchI];if(searchLowerCode===searchLowerCodeNew)continue;// doesn't make sense to transpose a repeat char\n}matchesSimpleLen=searchI;targetI=matchesSimple[matchesSimpleLen-1]+1;break;}}}var searchI=0;var typoStrictI=0;var successStrict=false;var matchesStrictLen=0;var nextBeginningIndexes=prepared._nextBeginningIndexes;if(nextBeginningIndexes===null)nextBeginningIndexes=prepared._nextBeginningIndexes=fuzzysort.prepareNextBeginningIndexes(prepared.target);var firstPossibleI=targetI=matchesSimple[0]===0?0:nextBeginningIndexes[matchesSimple[0]-1];// Our target string successfully matched all characters in sequence!\n// Let's try a more advanced and strict test to improve the score\n// only count it as a match if it's consecutive or a beginning character!\nif(targetI!==targetLen)for(;;){if(targetI>=targetLen){// We failed to find a good spot for this search char, go back to the previous search char and force it forward\nif(searchI<=0){// We failed to push chars forward for a better match\n// transpose, starting from the beginning\n++typoStrictI;if(typoStrictI>searchLen-2)break;if(searchLowerCodes[typoStrictI]===searchLowerCodes[typoStrictI+1])continue;// doesn't make sense to transpose a repeat char\ntargetI=firstPossibleI;continue;}--searchI;var lastMatch=matchesStrict[--matchesStrictLen];targetI=nextBeginningIndexes[lastMatch];}else{var isMatch=searchLowerCodes[typoStrictI===0?searchI:typoStrictI===searchI?searchI+1:typoStrictI===searchI-1?searchI-1:searchI]===targetLowerCodes[targetI];if(isMatch){matchesStrict[matchesStrictLen++]=targetI;++searchI;if(searchI===searchLen){successStrict=true;break;}++targetI;}else{targetI=nextBeginningIndexes[targetI];}}}{// tally up the score & keep track of matches for highlighting later\nif(successStrict){var matchesBest=matchesStrict;var matchesBestLen=matchesStrictLen;}else{var matchesBest=matchesSimple;var matchesBestLen=matchesSimpleLen;}var score=0;var lastTargetI=-1;for(var i=0;i<searchLen;++i){var targetI=matchesBest[i];// score only goes down if they're not consecutive\nif(lastTargetI!==targetI-1)score-=targetI;lastTargetI=targetI;}if(!successStrict){score*=1000;if(typoSimpleI!==0)score+=-20;/*typoPenalty*/}else{if(typoStrictI!==0)score+=-20;/*typoPenalty*/}score-=targetLen-searchLen;prepared.score=score;prepared.indexes=new Array(matchesBestLen);for(var i=matchesBestLen-1;i>=0;--i){prepared.indexes[i]=matchesBest[i];}return prepared;}},algorithmNoTypo:function algorithmNoTypo(searchLowerCodes,prepared,searchLowerCode){var targetLowerCodes=prepared._targetLowerCodes;var searchLen=searchLowerCodes.length;var targetLen=targetLowerCodes.length;var searchI=0;// where we at\nvar targetI=0;// where you at\nvar matchesSimpleLen=0;// very basic fuzzy match; to remove non-matching targets ASAP!\n// walk through target. find sequential matches.\n// if all chars aren't found then exit\nfor(;;){var isMatch=searchLowerCode===targetLowerCodes[targetI];if(isMatch){matchesSimple[matchesSimpleLen++]=targetI;++searchI;if(searchI===searchLen)break;searchLowerCode=searchLowerCodes[searchI];}++targetI;if(targetI>=targetLen)return null;// Failed to find searchI\n}var searchI=0;var successStrict=false;var matchesStrictLen=0;var nextBeginningIndexes=prepared._nextBeginningIndexes;if(nextBeginningIndexes===null)nextBeginningIndexes=prepared._nextBeginningIndexes=fuzzysort.prepareNextBeginningIndexes(prepared.target);targetI=matchesSimple[0]===0?0:nextBeginningIndexes[matchesSimple[0]-1];// Our target string successfully matched all characters in sequence!\n// Let's try a more advanced and strict test to improve the score\n// only count it as a match if it's consecutive or a beginning character!\nif(targetI!==targetLen)for(;;){if(targetI>=targetLen){// We failed to find a good spot for this search char, go back to the previous search char and force it forward\nif(searchI<=0)break;// We failed to push chars forward for a better match\n--searchI;var lastMatch=matchesStrict[--matchesStrictLen];targetI=nextBeginningIndexes[lastMatch];}else{var isMatch=searchLowerCodes[searchI]===targetLowerCodes[targetI];if(isMatch){matchesStrict[matchesStrictLen++]=targetI;++searchI;if(searchI===searchLen){successStrict=true;break;}++targetI;}else{targetI=nextBeginningIndexes[targetI];}}}{// tally up the score & keep track of matches for highlighting later\nif(successStrict){var matchesBest=matchesStrict;var matchesBestLen=matchesStrictLen;}else{var matchesBest=matchesSimple;var matchesBestLen=matchesSimpleLen;}var score=0;var lastTargetI=-1;for(var i=0;i<searchLen;++i){var targetI=matchesBest[i];// score only goes down if they're not consecutive\nif(lastTargetI!==targetI-1)score-=targetI;lastTargetI=targetI;}if(!successStrict)score*=1000;score-=targetLen-searchLen;prepared.score=score;prepared.indexes=new Array(matchesBestLen);for(var i=matchesBestLen-1;i>=0;--i){prepared.indexes[i]=matchesBest[i];}return prepared;}},prepareLowerCodes:function prepareLowerCodes(str){var strLen=str.length;var lowerCodes=[];// new Array(strLen)    sparse array is too slow\nvar lower=str.toLowerCase();for(var i=0;i<strLen;++i){lowerCodes[i]=lower.charCodeAt(i);}return lowerCodes;},prepareBeginningIndexes:function prepareBeginningIndexes(target){var targetLen=target.length;var beginningIndexes=[];var beginningIndexesLen=0;var wasUpper=false;var wasAlphanum=false;for(var i=0;i<targetLen;++i){var targetCode=target.charCodeAt(i);var isUpper=targetCode>=65&&targetCode<=90;var isAlphanum=isUpper||targetCode>=97&&targetCode<=122||targetCode>=48&&targetCode<=57;var isBeginning=isUpper&&!wasUpper||!wasAlphanum||!isAlphanum;wasUpper=isUpper;wasAlphanum=isAlphanum;if(isBeginning)beginningIndexes[beginningIndexesLen++]=i;}return beginningIndexes;},prepareNextBeginningIndexes:function prepareNextBeginningIndexes(target){var targetLen=target.length;var beginningIndexes=fuzzysort.prepareBeginningIndexes(target);var nextBeginningIndexes=[];// new Array(targetLen)     sparse array is too slow\nvar lastIsBeginning=beginningIndexes[0];var lastIsBeginningI=0;for(var i=0;i<targetLen;++i){if(lastIsBeginning>i){nextBeginningIndexes[i]=lastIsBeginning;}else{lastIsBeginning=beginningIndexes[++lastIsBeginningI];nextBeginningIndexes[i]=lastIsBeginning===undefined?targetLen:lastIsBeginning;}}return nextBeginningIndexes;},cleanup:cleanup,new:fuzzysortNew};return fuzzysort;}// fuzzysortNew\n// This stuff is outside fuzzysortNew, because it's shared with instances of fuzzysort.new()\nvar isNode=typeof commonjsRequire!=='undefined'&&typeof window==='undefined';var MyMap=typeof Map==='function'?Map:function(){var s=Object.create(null);this.get=function(k){return s[k];};this.set=function(k,val){s[k]=val;return this;};this.clear=function(){s=Object.create(null);};};var preparedCache=new MyMap();var preparedSearchCache=new MyMap();var noResults=[];noResults.total=0;var matchesSimple=[];var matchesStrict=[];function cleanup(){preparedCache.clear();preparedSearchCache.clear();matchesSimple=[];matchesStrict=[];}function defaultScoreFn(a){var max=-9007199254740991;for(var i=a.length-1;i>=0;--i){var result=a[i];if(result===null)continue;var score=result.score;if(score>max)max=score;}if(max===-9007199254740991)return null;return max;}// prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\n// prop = 'key1.key2'        10ms\n// prop = ['key1', 'key2']   27ms\nfunction getValue(obj,prop){var tmp=obj[prop];if(tmp!==undefined)return tmp;var segs=prop;if(!Array.isArray(prop))segs=prop.split('.');var len=segs.length;var i=-1;while(obj&&++i<len){obj=obj[segs[i]];}return obj;}function isObj(x){return _typeof(x)==='object';}// faster as a function\n// Hacked version of https://github.com/lemire/FastPriorityQueue.js\nvar fastpriorityqueue=function fastpriorityqueue(){var r=[],o=0,e={};function n(){for(var e=0,n=r[e],c=1;c<o;){var f=c+1;e=c,f<o&&r[f].score<r[c].score&&(e=f),r[e-1>>1]=r[e],c=1+(e<<1);}for(var a=e-1>>1;e>0&&n.score<r[a].score;a=(e=a)-1>>1){r[e]=r[a];}r[e]=n;}return e.add=function(e){var n=o;r[o++]=e;for(var c=n-1>>1;n>0&&e.score<r[c].score;c=(n=c)-1>>1){r[n]=r[c];}r[n]=e;},e.poll=function(){if(0!==o){var e=r[0];return r[0]=r[--o],n(),e;}},e.peek=function(e){if(0!==o)return r[0];},e.replaceTop=function(o){r[0]=o,n();},e;};var q=fastpriorityqueue();// reuse this, except for async, it needs to make its own\nreturn fuzzysortNew();});// UMD\n// TODO: (performance) wasm version!?\n// TODO: (performance) threads?\n// TODO: (performance) avoid cache misses\n// TODO: (performance) preparedCache is a memory leak\n// TODO: (like sublime) backslash === forwardslash\n// TODO: (like sublime) spaces: \"a b\" should do 2 searches 1 for a and 1 for b\n// TODO: (scoring) garbage in targets that allows most searches to strict match need a penality\n// TODO: (performance) idk if allowTypo is optimized\n})(fuzzysort$1);var fuzzysort=fuzzysort$1.exports;var stats={failedTests:[],defined:0,completed:0};// Escape text for attribute or text content.\nfunction escapeText(str){if(!str){return'';}// Both single quotes and double quotes (for attributes)\nreturn(''+str).replace(/['\"<>&]/g,function(s){switch(s){case\"'\":return'&#039;';case'\"':return'&quot;';case'<':return'&lt;';case'>':return'&gt;';case'&':return'&amp;';}});}(function(){// Don't load the HTML Reporter on non-browser environments\nif(!window$1||!document){return;}QUnit.reporters.perf.init(QUnit);var config=QUnit.config;var hiddenTests=[];var collapseNext=false;var hasOwn=Object.prototype.hasOwnProperty;var unfilteredUrl=setUrl({filter:undefined,module:undefined,moduleId:undefined,testId:undefined});var dropdownData=null;function trim(string){if(typeof string.trim==='function'){return string.trim();}else{return string.replace(/^\\s+|\\s+$/g,'');}}function addEvent(elem,type,fn){elem.addEventListener(type,fn,false);}function removeEvent(elem,type,fn){elem.removeEventListener(type,fn,false);}function addEvents(elems,type,fn){var i=elems.length;while(i--){addEvent(elems[i],type,fn);}}function hasClass(elem,name){return(' '+elem.className+' ').indexOf(' '+name+' ')>=0;}function addClass(elem,name){if(!hasClass(elem,name)){elem.className+=(elem.className?' ':'')+name;}}function toggleClass(elem,name,force){if(force||typeof force==='undefined'&&!hasClass(elem,name)){addClass(elem,name);}else{removeClass(elem,name);}}function removeClass(elem,name){var set=' '+elem.className+' ';// Class name may appear multiple times\nwhile(set.indexOf(' '+name+' ')>=0){set=set.replace(' '+name+' ',' ');}// Trim for prettiness\nelem.className=trim(set);}function id(name){return document.getElementById&&document.getElementById(name);}function abortTests(){var abortButton=id('qunit-abort-tests-button');if(abortButton){abortButton.disabled=true;abortButton.innerHTML='Aborting...';}QUnit.config.queue.length=0;return false;}function interceptNavigation(ev){// Trim potential accidental whitespace so that QUnit doesn't throw an error about no tests matching the filter.\nvar filterInputElem=id('qunit-filter-input');filterInputElem.value=trim(filterInputElem.value);applyUrlParams();if(ev&&ev.preventDefault){ev.preventDefault();}return false;}function getUrlConfigHtml(){var selection=false;var urlConfig=config.urlConfig;var urlConfigHtml='';for(var i=0;i<urlConfig.length;i++){// Options can be either strings or objects with nonempty \"id\" properties\nvar val=config.urlConfig[i];if(typeof val==='string'){val={id:val,label:val};}var escaped=escapeText(val.id);var escapedTooltip=escapeText(val.tooltip);if(!val.value||typeof val.value==='string'){urlConfigHtml+=\"<label for='qunit-urlconfig-\"+escaped+\"' title='\"+escapedTooltip+\"'><input id='qunit-urlconfig-\"+escaped+\"' name='\"+escaped+\"' type='checkbox'\"+(val.value?\" value='\"+escapeText(val.value)+\"'\":'')+(config[val.id]?\" checked='checked'\":'')+\" title='\"+escapedTooltip+\"' />\"+escapeText(val.label)+'</label>';}else{urlConfigHtml+=\"<label for='qunit-urlconfig-\"+escaped+\"' title='\"+escapedTooltip+\"'>\"+val.label+\": </label><select id='qunit-urlconfig-\"+escaped+\"' name='\"+escaped+\"' title='\"+escapedTooltip+\"'><option></option>\";if(Array.isArray(val.value)){for(var j=0;j<val.value.length;j++){escaped=escapeText(val.value[j]);urlConfigHtml+=\"<option value='\"+escaped+\"'\"+(config[val.id]===val.value[j]?(selection=true)&&\" selected='selected'\":'')+'>'+escaped+'</option>';}}else{for(var _j in val.value){if(hasOwn.call(val.value,_j)){urlConfigHtml+=\"<option value='\"+escapeText(_j)+\"'\"+(config[val.id]===_j?(selection=true)&&\" selected='selected'\":'')+'>'+escapeText(val.value[_j])+'</option>';}}}if(config[val.id]&&!selection){escaped=escapeText(config[val.id]);urlConfigHtml+=\"<option value='\"+escaped+\"' selected='selected' disabled='disabled'>\"+escaped+'</option>';}urlConfigHtml+='</select>';}}return urlConfigHtml;}// Handle \"click\" events on toolbar checkboxes and \"change\" for select menus.\n// Updates the URL with the new state of `config.urlConfig` values.\nfunction toolbarChanged(){var field=this;var params={};// Detect if field is a select menu or a checkbox\nvar value;if('selectedIndex'in field){value=field.options[field.selectedIndex].value||undefined;}else{value=field.checked?field.defaultValue||true:undefined;}params[field.name]=value;var updatedUrl=setUrl(params);// Check if we can apply the change without a page refresh\nif(field.name==='hidepassed'&&'replaceState'in window$1.history){QUnit.urlParams[field.name]=value;config[field.name]=value||false;var tests=id('qunit-tests');if(tests){var length=tests.children.length;var children=tests.children;if(field.checked){for(var i=0;i<length;i++){var test=children[i];var className=test?test.className:'';var classNameHasPass=className.indexOf('pass')>-1;var classNameHasSkipped=className.indexOf('skipped')>-1;if(classNameHasPass||classNameHasSkipped){hiddenTests.push(test);}}var _iterator=_createForOfIteratorHelper(hiddenTests),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var hiddenTest=_step.value;tests.removeChild(hiddenTest);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}else{var _test;while((_test=hiddenTests.pop())!=null){tests.appendChild(_test);}}}window$1.history.replaceState(null,'',updatedUrl);}else{window$1.location=updatedUrl;}}function setUrl(params){var querystring='?';var location=window$1.location;params=extend(extend({},QUnit.urlParams),params);for(var key in params){// Skip inherited or undefined properties\nif(hasOwn.call(params,key)&&params[key]!==undefined){// Output a parameter for each value of this key\n// (but usually just one)\nvar arrValue=[].concat(params[key]);for(var i=0;i<arrValue.length;i++){querystring+=encodeURIComponent(key);if(arrValue[i]!==true){querystring+='='+encodeURIComponent(arrValue[i]);}querystring+='&';}}}return location.protocol+'//'+location.host+location.pathname+querystring.slice(0,-1);}function applyUrlParams(){var filter=id('qunit-filter-input').value;window$1.location=setUrl({filter:filter===''?undefined:filter,moduleId:_toConsumableArray(dropdownData.selectedMap.keys()),// Remove module and testId filter\nmodule:undefined,testId:undefined});}function toolbarUrlConfigContainer(){var urlConfigContainer=document.createElement('span');urlConfigContainer.innerHTML=getUrlConfigHtml();addClass(urlConfigContainer,'qunit-url-config');addEvents(urlConfigContainer.getElementsByTagName('input'),'change',toolbarChanged);addEvents(urlConfigContainer.getElementsByTagName('select'),'change',toolbarChanged);return urlConfigContainer;}function abortTestsButton(){var button=document.createElement('button');button.id='qunit-abort-tests-button';button.innerHTML='Abort';addEvent(button,'click',abortTests);return button;}function toolbarLooseFilter(){var filter=document.createElement('form');var label=document.createElement('label');var input=document.createElement('input');var button=document.createElement('button');addClass(filter,'qunit-filter');label.innerHTML='Filter: ';input.type='text';input.value=config.filter||'';input.name='filter';input.id='qunit-filter-input';button.innerHTML='Go';label.appendChild(input);filter.appendChild(label);filter.appendChild(document.createTextNode(' '));filter.appendChild(button);addEvent(filter,'submit',interceptNavigation);return filter;}function createModuleListItem(moduleId,name,checked){return'<li><label class=\"clickable'+(checked?' checked':'')+'\"><input type=\"checkbox\" '+'value=\"'+escapeText(moduleId)+'\"'+(checked?' checked=\"checked\"':'')+' />'+escapeText(name)+'</label></li>';}/**\n     * @param {Array} Results from fuzzysort\n     * @return {string} HTML\n     */function moduleListHtml(results){var html='';// Hoist the already selected items, and show them always\n// even if not matched by the current search.\ndropdownData.selectedMap.forEach(function(name,moduleId){html+=createModuleListItem(moduleId,name,true);});for(var i=0;i<results.length;i++){var mod=results[i].obj;if(!dropdownData.selectedMap.has(mod.moduleId)){html+=createModuleListItem(mod.moduleId,mod.name,false);}}return html;}function toolbarModuleFilter(beginDetails){var initialSelected=null;dropdownData={options:beginDetails.modules.slice(),selectedMap:new StringMap(),isDirty:function isDirty(){return _toConsumableArray(dropdownData.selectedMap.keys()).sort().join(',')!==_toConsumableArray(initialSelected.keys()).sort().join(',');}};if(config.moduleId.length){// The module dropdown is seeded with the runtime configuration of the last run.\n//\n// We don't reference `config.moduleId` directly after this and keep our own\n// copy because:\n// 1. This naturally filters out unknown moduleIds.\n// 2. Gives us a place to manage and remember unsubmitted checkbox changes.\n// 3. Gives us an efficient way to map a selected moduleId to module name\n//    during rendering.\nfor(var i=0;i<beginDetails.modules.length;i++){var mod=beginDetails.modules[i];if(config.moduleId.indexOf(mod.moduleId)!==-1){dropdownData.selectedMap.set(mod.moduleId,mod.name);}}}initialSelected=new StringMap(dropdownData.selectedMap);var moduleSearch=document.createElement('input');moduleSearch.id='qunit-modulefilter-search';moduleSearch.autocomplete='off';addEvent(moduleSearch,'input',searchInput);addEvent(moduleSearch,'input',searchFocus);addEvent(moduleSearch,'focus',searchFocus);addEvent(moduleSearch,'click',searchFocus);var label=document.createElement('label');label.htmlFor='qunit-modulefilter-search';label.textContent='Module:';var searchContainer=document.createElement('span');searchContainer.id='qunit-modulefilter-search-container';searchContainer.appendChild(moduleSearch);var applyButton=document.createElement('button');applyButton.textContent='Apply';applyButton.title='Re-run the selected test modules';addEvent(applyButton,'click',applyUrlParams);var resetButton=document.createElement('button');resetButton.textContent='Reset';resetButton.type='reset';resetButton.title='Restore the previous module selection';var clearButton=document.createElement('button');clearButton.textContent='Select none';clearButton.type='button';clearButton.title='Clear the current module selection';addEvent(clearButton,'click',function(){dropdownData.selectedMap.clear();selectionChange();searchInput();});var actions=document.createElement('span');actions.id='qunit-modulefilter-actions';actions.appendChild(applyButton);actions.appendChild(resetButton);if(initialSelected.size){// Only show clear button if functionally different from reset\nactions.appendChild(clearButton);}var dropDownList=document.createElement('ul');dropDownList.id='qunit-modulefilter-dropdown-list';var dropDown=document.createElement('div');dropDown.id='qunit-modulefilter-dropdown';dropDown.style.display='none';dropDown.appendChild(actions);dropDown.appendChild(dropDownList);addEvent(dropDown,'change',selectionChange);searchContainer.appendChild(dropDown);// Set initial moduleSearch.placeholder and clearButton/resetButton.\nselectionChange();var moduleFilter=document.createElement('form');moduleFilter.id='qunit-modulefilter';moduleFilter.appendChild(label);moduleFilter.appendChild(document.createTextNode(' '));moduleFilter.appendChild(searchContainer);addEvent(moduleFilter,'submit',interceptNavigation);addEvent(moduleFilter,'reset',function(){dropdownData.selectedMap=new StringMap(initialSelected);// Set moduleSearch.placeholder and reflect non-dirty state\nselectionChange();searchInput();});// Enables show/hide for the dropdown\nfunction searchFocus(){if(dropDown.style.display!=='none'){return;}// Optimization: Defer rendering options until focussed.\n// https://github.com/qunitjs/qunit/issues/1664\nsearchInput();dropDown.style.display='block';// Hide on Escape keydown or on click outside the container\naddEvent(document,'click',hideHandler);addEvent(document,'keydown',hideHandler);function hideHandler(e){var inContainer=moduleFilter.contains(e.target);if(e.keyCode===27||!inContainer){if(e.keyCode===27&&inContainer){moduleSearch.focus();}dropDown.style.display='none';removeEvent(document,'click',hideHandler);removeEvent(document,'keydown',hideHandler);moduleSearch.value='';searchInput();}}}/**\n       * @param {string} searchText\n       * @return {string} HTML\n       */function filterModules(searchText){var results;if(searchText===''){// Improve on-boarding experience by having an immediate display of\n// module names, indicating how the interface works. This also makes\n// for a quicker interaction in the common case of small projects.\n// Don't mandate typing just to get the menu.\nresults=dropdownData.options.slice(0,20).map(function(obj){// Fake empty results. https://github.com/farzher/fuzzysort/issues/41\nreturn{obj:obj};});}else{results=fuzzysort.go(searchText,dropdownData.options,{limit:20,key:'name',allowTypo:true});}return moduleListHtml(results);}// Processes module search box input\nvar searchInputTimeout;function searchInput(){// Use a debounce with a ~0ms timeout. This is effectively instantaneous,\n// but is better than undebounced because it avoids an ever-growing\n// backlog of unprocessed now-outdated input events if fuzzysearch or\n// drodown DOM is slow (e.g. very large test suite).\nwindow$1.clearTimeout(searchInputTimeout);searchInputTimeout=window$1.setTimeout(function(){dropDownList.innerHTML=filterModules(moduleSearch.value);});}// Processes checkbox change, or a generic render (initial render, or after reset event)\n// Avoid any dropdown rendering here as this is used by toolbarModuleFilter()\n// during the initial render, which should not delay test execution.\nfunction selectionChange(evt){var checkbox=evt&&evt.target||null;if(checkbox){// Update internal state\nif(checkbox.checked){dropdownData.selectedMap.set(checkbox.value,checkbox.parentNode.textContent);}else{dropdownData.selectedMap.delete(checkbox.value);}// Update UI state\ntoggleClass(checkbox.parentNode,'checked',checkbox.checked);}var textForm=dropdownData.selectedMap.size?dropdownData.selectedMap.size+' '+(dropdownData.selectedMap.size===1?'module':'modules'):'All modules';moduleSearch.placeholder=textForm;moduleSearch.title='Type to search through and reduce the list.';resetButton.disabled=!dropdownData.isDirty();clearButton.style.display=dropdownData.selectedMap.size?'':'none';}return moduleFilter;}function appendToolbar(beginDetails){var toolbar=id('qunit-testrunner-toolbar');if(toolbar){toolbar.appendChild(toolbarUrlConfigContainer());var toolbarFilters=document.createElement('span');toolbarFilters.id='qunit-toolbar-filters';toolbarFilters.appendChild(toolbarLooseFilter());toolbarFilters.appendChild(toolbarModuleFilter(beginDetails));var clearfix=document.createElement('div');clearfix.className='clearfix';toolbar.appendChild(toolbarFilters);toolbar.appendChild(clearfix);}}function appendHeader(){var header=id('qunit-header');if(header){header.innerHTML=\"<a href='\"+escapeText(unfilteredUrl)+\"'>\"+header.innerHTML+'</a> ';}}function appendBanner(){var banner=id('qunit-banner');if(banner){banner.className='';}}function appendTestResults(){var tests=id('qunit-tests');var result=id('qunit-testresult');var controls;if(result){result.parentNode.removeChild(result);}if(tests){tests.innerHTML='';result=document.createElement('p');result.id='qunit-testresult';result.className='result';tests.parentNode.insertBefore(result,tests);result.innerHTML='<div id=\"qunit-testresult-display\">Running...<br />&#160;</div>'+'<div id=\"qunit-testresult-controls\"></div>'+'<div class=\"clearfix\"></div>';controls=id('qunit-testresult-controls');}if(controls){controls.appendChild(abortTestsButton());}}function appendFilteredTest(){var testId=QUnit.config.testId;if(!testId||testId.length<=0){return'';}return\"<div id='qunit-filteredTest'>Rerunning selected tests: \"+escapeText(testId.join(', '))+\" <a id='qunit-clearFilter' href='\"+escapeText(unfilteredUrl)+\"'>Run all tests</a></div>\";}function appendUserAgent(){var userAgent=id('qunit-userAgent');if(userAgent){userAgent.innerHTML='';userAgent.appendChild(document.createTextNode('QUnit '+QUnit.version+'; '+navigator.userAgent));}}function appendInterface(beginDetails){var qunit=id('qunit');// For compat with QUnit 1.2, and to support fully custom theme HTML,\n// we will use any existing elements if no id=\"qunit\" element exists.\n//\n// Note that we don't fail or fallback to creating it ourselves,\n// because not having id=\"qunit\" (and not having the below elements)\n// simply means QUnit acts headless, allowing users to use their own\n// reporters, or for a test runner to listen for events directly without\n// having the HTML reporter actively render anything.\nif(qunit){qunit.setAttribute('role','main');// Since QUnit 1.3, these are created automatically if the page\n// contains id=\"qunit\".\nqunit.innerHTML=\"<h1 id='qunit-header'>\"+escapeText(document.title)+'</h1>'+\"<h2 id='qunit-banner'></h2>\"+\"<div id='qunit-testrunner-toolbar' role='navigation'></div>\"+appendFilteredTest()+\"<h2 id='qunit-userAgent'></h2>\"+\"<ol id='qunit-tests'></ol>\";}appendHeader();appendBanner();appendTestResults();appendUserAgent();appendToolbar(beginDetails);}function appendTest(name,testId,moduleName){var tests=id('qunit-tests');if(!tests){return;}var title=document.createElement('strong');title.innerHTML=getNameHtml(name,moduleName);var testBlock=document.createElement('li');testBlock.appendChild(title);// No ID or rerun link for \"global failure\" blocks\nif(testId!==undefined){var rerunTrigger=document.createElement('a');rerunTrigger.innerHTML='Rerun';rerunTrigger.href=setUrl({testId:testId});testBlock.id='qunit-test-output-'+testId;testBlock.appendChild(rerunTrigger);}var assertList=document.createElement('ol');assertList.className='qunit-assert-list';testBlock.appendChild(assertList);tests.appendChild(testBlock);return testBlock;}// HTML Reporter initialization and load\nQUnit.on('runStart',function(runStart){stats.defined=runStart.testCounts.total;});QUnit.begin(function(beginDetails){// Initialize QUnit elements\n// This is done from begin() instead of runStart, because\n// urlparams.js uses begin(), which we need to wait for.\n// urlparams.js in turn uses begin() to allow plugins to\n// add entries to QUnit.config.urlConfig, which may be done\n// asynchronously.\n// <https://github.com/qunitjs/qunit/issues/1657>\nappendInterface(beginDetails);});function getRerunFailedHtml(failedTests){if(failedTests.length===0){return'';}var href=setUrl({testId:failedTests});return[\"<br /><a href='\"+escapeText(href)+\"'>\",failedTests.length===1?'Rerun 1 failed test':'Rerun '+failedTests.length+' failed tests','</a>'].join('');}QUnit.on('runEnd',function(runEnd){var banner=id('qunit-banner');var tests=id('qunit-tests');var abortButton=id('qunit-abort-tests-button');var assertPassed=config.stats.all-config.stats.bad;var html=[runEnd.testCounts.total,' tests completed in ',runEnd.runtime,' milliseconds, with ',runEnd.testCounts.failed,' failed, ',runEnd.testCounts.skipped,' skipped, and ',runEnd.testCounts.todo,' todo.<br />',\"<span class='passed'>\",assertPassed,\"</span> assertions of <span class='total'>\",config.stats.all,\"</span> passed, <span class='failed'>\",config.stats.bad,'</span> failed.',getRerunFailedHtml(stats.failedTests)].join('');var test;var assertLi;var assertList;// Update remaining tests to aborted\nif(abortButton&&abortButton.disabled){html='Tests aborted after '+runEnd.runtime+' milliseconds.';for(var i=0;i<tests.children.length;i++){test=tests.children[i];if(test.className===''||test.className==='running'){test.className='aborted';assertList=test.getElementsByTagName('ol')[0];assertLi=document.createElement('li');assertLi.className='fail';assertLi.innerHTML='Test aborted.';assertList.appendChild(assertLi);}}}if(banner&&(!abortButton||abortButton.disabled===false)){banner.className=runEnd.status==='failed'?'qunit-fail':'qunit-pass';}if(abortButton){abortButton.parentNode.removeChild(abortButton);}if(tests){id('qunit-testresult-display').innerHTML=html;}if(config.altertitle&&document.title){// Show ✖ for good, ✔ for bad suite result in title\n// use escape sequences in case file gets loaded with non-utf-8\n// charset\ndocument.title=[runEnd.status==='failed'?\"\\u2716\":\"\\u2714\",document.title.replace(/^[\\u2714\\u2716] /i,'')].join(' ');}// Scroll back to top to show results\nif(config.scrolltop&&window$1.scrollTo){window$1.scrollTo(0,0);}});function getNameHtml(name,module){var nameHtml='';if(module){nameHtml=\"<span class='module-name'>\"+escapeText(module)+'</span>: ';}nameHtml+=\"<span class='test-name'>\"+escapeText(name)+'</span>';return nameHtml;}function getProgressHtml(stats){return[stats.completed,' / ',stats.defined,' tests completed.<br />'].join('');}QUnit.testStart(function(details){var running,bad;appendTest(details.name,details.testId,details.module);running=id('qunit-testresult-display');if(running){addClass(running,'running');bad=QUnit.config.reorder&&details.previousFailure;running.innerHTML=[getProgressHtml(stats),bad?'Rerunning previously failed test: <br />':'Running: ',getNameHtml(details.name,details.module),getRerunFailedHtml(stats.failedTests)].join('');}});function stripHtml(string){// Strip tags, html entity and whitespaces\nreturn string.replace(/<\\/?[^>]+(>|$)/g,'').replace(/&quot;/g,'').replace(/\\s+/g,'');}QUnit.log(function(details){var testItem=id('qunit-test-output-'+details.testId);if(!testItem){return;}var message=escapeText(details.message)||(details.result?'okay':'failed');message=\"<span class='test-message'>\"+message+'</span>';message+=\"<span class='runtime'>@ \"+details.runtime+' ms</span>';var expected;var actual;var diff;var showDiff=false;// The pushFailure doesn't provide details.expected\n// when it calls, it's implicit to also not show expected and diff stuff\n// Also, we need to check details.expected existence, as it can exist and be undefined\nif(!details.result&&hasOwn.call(details,'expected')){if(details.negative){expected='NOT '+QUnit.dump.parse(details.expected);}else{expected=QUnit.dump.parse(details.expected);}actual=QUnit.dump.parse(details.actual);message+=\"<table><tr class='test-expected'><th>Expected: </th><td><pre>\"+escapeText(expected)+'</pre></td></tr>';if(actual!==expected){message+=\"<tr class='test-actual'><th>Result: </th><td><pre>\"+escapeText(actual)+'</pre></td></tr>';if(typeof details.actual==='number'&&typeof details.expected==='number'){if(!isNaN(details.actual)&&!isNaN(details.expected)){showDiff=true;diff=details.actual-details.expected;diff=(diff>0?'+':'')+diff;}}else if(typeof details.actual!=='boolean'&&typeof details.expected!=='boolean'){diff=QUnit.diff(expected,actual);// don't show diff if there is zero overlap\nshowDiff=stripHtml(diff).length!==stripHtml(expected).length+stripHtml(actual).length;}if(showDiff){message+=\"<tr class='test-diff'><th>Diff: </th><td><pre>\"+diff+'</pre></td></tr>';}}else if(expected.indexOf('[object Array]')!==-1||expected.indexOf('[object Object]')!==-1){message+=\"<tr class='test-message'><th>Message: </th><td>\"+'Diff suppressed as the depth of object is more than current max depth ('+QUnit.config.maxDepth+').<p>Hint: Use <code>QUnit.dump.maxDepth</code> to '+\" run with a higher max depth or <a href='\"+escapeText(setUrl({maxDepth:-1}))+\"'>\"+'Rerun</a> without max depth.</p></td></tr>';}else{message+=\"<tr class='test-message'><th>Message: </th><td>\"+'Diff suppressed as the expected and actual results have an equivalent'+' serialization</td></tr>';}if(details.source){message+=\"<tr class='test-source'><th>Source: </th><td><pre>\"+escapeText(details.source)+'</pre></td></tr>';}message+='</table>';// This occurs when pushFailure is set and we have an extracted stack trace\n}else if(!details.result&&details.source){message+='<table>'+\"<tr class='test-source'><th>Source: </th><td><pre>\"+escapeText(details.source)+'</pre></td></tr>'+'</table>';}var assertList=testItem.getElementsByTagName('ol')[0];var assertLi=document.createElement('li');assertLi.className=details.result?'pass':'fail';assertLi.innerHTML=message;assertList.appendChild(assertLi);});QUnit.testDone(function(details){var tests=id('qunit-tests');var testItem=id('qunit-test-output-'+details.testId);if(!tests||!testItem){return;}removeClass(testItem,'running');var status;if(details.failed>0){status='failed';}else if(details.todo){status='todo';}else{status=details.skipped?'skipped':'passed';}var assertList=testItem.getElementsByTagName('ol')[0];var good=details.passed;var bad=details.failed;// This test passed if it has no unexpected failed assertions\nvar testPassed=details.failed>0?details.todo:!details.todo;if(testPassed){// Collapse the passing tests\naddClass(assertList,'qunit-collapsed');}else{stats.failedTests.push(details.testId);if(config.collapse){if(!collapseNext){// Skip collapsing the first failing test\ncollapseNext=true;}else{// Collapse remaining tests\naddClass(assertList,'qunit-collapsed');}}}// The testItem.firstChild is the test name\nvar testTitle=testItem.firstChild;var testCounts=bad?\"<b class='failed'>\"+bad+'</b>, '+\"<b class='passed'>\"+good+'</b>, ':'';testTitle.innerHTML+=\" <b class='counts'>(\"+testCounts+details.assertions.length+')</b>';stats.completed++;if(details.skipped){testItem.className='skipped';var skipped=document.createElement('em');skipped.className='qunit-skipped-label';skipped.innerHTML='skipped';testItem.insertBefore(skipped,testTitle);}else{addEvent(testTitle,'click',function(){toggleClass(assertList,'qunit-collapsed');});testItem.className=testPassed?'pass':'fail';if(details.todo){var todoLabel=document.createElement('em');todoLabel.className='qunit-todo-label';todoLabel.innerHTML='todo';testItem.className+=' todo';testItem.insertBefore(todoLabel,testTitle);}var time=document.createElement('span');time.className='runtime';time.innerHTML=details.runtime+' ms';testItem.insertBefore(time,assertList);}// Show the source of the test when showing assertions\nif(details.source){var sourceName=document.createElement('p');sourceName.innerHTML='<strong>Source: </strong>'+escapeText(details.source);addClass(sourceName,'qunit-source');if(testPassed){addClass(sourceName,'qunit-collapsed');}addEvent(testTitle,'click',function(){toggleClass(sourceName,'qunit-collapsed');});testItem.appendChild(sourceName);}if(config.hidepassed&&(status==='passed'||details.skipped)){// use removeChild instead of remove because of support\nhiddenTests.push(testItem);tests.removeChild(testItem);}});QUnit.on('error',function(error){var testItem=appendTest('global failure');if(!testItem){// HTML Reporter is probably disabled or not yet initialized.\nreturn;}// Render similar to a failed assertion (see above QUnit.log callback)\nvar message=escapeText(errorString(error));message=\"<span class='test-message'>\"+message+'</span>';if(error&&error.stack){message+='<table>'+\"<tr class='test-source'><th>Source: </th><td><pre>\"+escapeText(error.stack)+'</pre></td></tr>'+'</table>';}var assertList=testItem.getElementsByTagName('ol')[0];var assertLi=document.createElement('li');assertLi.className='fail';assertLi.innerHTML=message;assertList.appendChild(assertLi);// Make it visible\ntestItem.className='fail';});// Avoid readyState issue with phantomjs\n// Ref: #818\nvar usingPhantom=function(p){return p&&p.version&&p.version.major>0;}(window$1.phantom);if(usingPhantom){console$1.warn('Support for PhantomJS is deprecated and will be removed in QUnit 3.0.');}if(!usingPhantom&&document.readyState==='complete'){QUnit.load();}else{addEvent(window$1,'load',QUnit.load);}// Wrap window.onerror. We will call the original window.onerror to see if\n// the existing handler fully handles the error; if not, we will call the\n// QUnit.onError function.\nvar originalWindowOnError=window$1.onerror;// Cover uncaught exceptions\n// Returning true will suppress the default browser handler,\n// returning false will let it run.\nwindow$1.onerror=function(message,fileName,lineNumber,columnNumber,errorObj){var ret=false;if(originalWindowOnError){for(var _len=arguments.length,args=new Array(_len>5?_len-5:0),_key=5;_key<_len;_key++){args[_key-5]=arguments[_key];}ret=originalWindowOnError.call.apply(originalWindowOnError,[this,message,fileName,lineNumber,columnNumber,errorObj].concat(args));}// Treat return value as window.onerror itself does,\n// Only do our handling if not suppressed.\nif(ret!==true){// If there is a current test that sets the internal `ignoreGlobalErrors` field\n// (such as during `assert.throws()`), then the error is ignored and native\n// error reporting is suppressed as well. This is because in browsers, an error\n// can sometimes end up in `window.onerror` instead of in the local try/catch.\n// This ignoring of errors does not apply to our general onUncaughtException\n// method, nor to our `unhandledRejection` handlers, as those are not meant\n// to receive an \"expected\" error during `assert.throws()`.\nif(config.current&&config.current.ignoreGlobalErrors){return true;}// According to\n// https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror,\n// most modern browsers support an errorObj argument; use that to\n// get a full stack trace if it's available.\nvar error=errorObj||new Error(message);if(!error.stack&&fileName&&lineNumber){error.stack=\"\".concat(fileName,\":\").concat(lineNumber);}QUnit.onUncaughtException(error);}return ret;};window$1.addEventListener('unhandledrejection',function(event){QUnit.onUncaughtException(event.reason);});})();/*\n   * This file is a modified version of google-diff-match-patch's JavaScript implementation\n   * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),\n   * modifications are licensed as more fully set forth in LICENSE.txt.\n   *\n   * The original source of google-diff-match-patch is attributable and licensed as follows:\n   *\n   * Copyright 2006 Google Inc.\n   * https://code.google.com/p/google-diff-match-patch/\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   * https://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * More Info:\n   *  https://code.google.com/p/google-diff-match-patch/\n   *\n   * Usage: QUnit.diff(expected, actual)\n   *\n   */QUnit.diff=function(){function DiffMatchPatch(){}//  DIFF FUNCTIONS\n/**\n     * The data structure representing a diff is an array of tuples:\n     * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n     * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n     */var DIFF_DELETE=-1;var DIFF_INSERT=1;var DIFF_EQUAL=0;var hasOwn=Object.prototype.hasOwnProperty;/**\n     * Find the differences between two texts.  Simplifies the problem by stripping\n     * any common prefix or suffix off the texts before diffing.\n     * @param {string} text1 Old string to be diffed.\n     * @param {string} text2 New string to be diffed.\n     * @param {boolean=} optChecklines Optional speedup flag. If present and false,\n     *     then don't run a line-level diff first to identify the changed areas.\n     *     Defaults to true, which does a faster, slightly less optimal diff.\n     * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n     */DiffMatchPatch.prototype.DiffMain=function(text1,text2,optChecklines){// The diff must be complete in up to 1 second.\nvar deadline=Date.now()+1000;// Check for null inputs.\nif(text1===null||text2===null){throw new Error('Cannot diff null input.');}// Check for equality (speedup).\nif(text1===text2){if(text1){return[[DIFF_EQUAL,text1]];}return[];}if(typeof optChecklines==='undefined'){optChecklines=true;}// Trim off common prefix (speedup).\nvar commonlength=this.diffCommonPrefix(text1,text2);var commonprefix=text1.substring(0,commonlength);text1=text1.substring(commonlength);text2=text2.substring(commonlength);// Trim off common suffix (speedup).\ncommonlength=this.diffCommonSuffix(text1,text2);var commonsuffix=text1.substring(text1.length-commonlength);text1=text1.substring(0,text1.length-commonlength);text2=text2.substring(0,text2.length-commonlength);// Compute the diff on the middle block.\nvar diffs=this.diffCompute(text1,text2,optChecklines,deadline);// Restore the prefix and suffix.\nif(commonprefix){diffs.unshift([DIFF_EQUAL,commonprefix]);}if(commonsuffix){diffs.push([DIFF_EQUAL,commonsuffix]);}this.diffCleanupMerge(diffs);return diffs;};/**\n     * Reduce the number of edits by eliminating operationally trivial equalities.\n     * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n     */DiffMatchPatch.prototype.diffCleanupEfficiency=function(diffs){var changes,equalities,equalitiesLength,lastequality,pointer,preIns,preDel,postIns,postDel;changes=false;equalities=[];// Stack of indices where equalities are found.\nequalitiesLength=0;// Keeping our own length var is faster in JS.\n/** @type {?string} */lastequality=null;// Always equal to diffs[equalities[equalitiesLength - 1]][1]\npointer=0;// Index of current position.\n// Is there an insertion operation before the last equality.\npreIns=false;// Is there a deletion operation before the last equality.\npreDel=false;// Is there an insertion operation after the last equality.\npostIns=false;// Is there a deletion operation after the last equality.\npostDel=false;while(pointer<diffs.length){// Equality found.\nif(diffs[pointer][0]===DIFF_EQUAL){if(diffs[pointer][1].length<4&&(postIns||postDel)){// Candidate found.\nequalities[equalitiesLength++]=pointer;preIns=postIns;preDel=postDel;lastequality=diffs[pointer][1];}else{// Not a candidate, and can never become one.\nequalitiesLength=0;lastequality=null;}postIns=postDel=false;// An insertion or deletion.\n}else{if(diffs[pointer][0]===DIFF_DELETE){postDel=true;}else{postIns=true;}/*\n           * Five types to be split:\n           * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n           * <ins>A</ins>X<ins>C</ins><del>D</del>\n           * <ins>A</ins><del>B</del>X<ins>C</ins>\n           * <ins>A</del>X<ins>C</ins><del>D</del>\n           * <ins>A</ins><del>B</del>X<del>C</del>\n           */if(lastequality&&(preIns&&preDel&&postIns&&postDel||lastequality.length<2&&preIns+preDel+postIns+postDel===3)){// Duplicate record.\ndiffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]);// Change second copy to insert.\ndiffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT;equalitiesLength--;// Throw away the equality we just deleted;\nlastequality=null;if(preIns&&preDel){// No changes made which could affect previous entry, keep going.\npostIns=postDel=true;equalitiesLength=0;}else{equalitiesLength--;// Throw away the previous equality.\npointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1;postIns=postDel=false;}changes=true;}}pointer++;}if(changes){this.diffCleanupMerge(diffs);}};/**\n     * Convert a diff array into a pretty HTML report.\n     * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n     * @param {integer} string to be beautified.\n     * @return {string} HTML representation.\n     */DiffMatchPatch.prototype.diffPrettyHtml=function(diffs){var html=[];for(var x=0;x<diffs.length;x++){var op=diffs[x][0];// Operation (insert, delete, equal)\nvar data=diffs[x][1];// Text of change.\nswitch(op){case DIFF_INSERT:html[x]='<ins>'+escapeText(data)+'</ins>';break;case DIFF_DELETE:html[x]='<del>'+escapeText(data)+'</del>';break;case DIFF_EQUAL:html[x]='<span>'+escapeText(data)+'</span>';break;}}return html.join('');};/**\n     * Determine the common prefix of two strings.\n     * @param {string} text1 First string.\n     * @param {string} text2 Second string.\n     * @return {number} The number of characters common to the start of each\n     *     string.\n     */DiffMatchPatch.prototype.diffCommonPrefix=function(text1,text2){var pointermid,pointermax,pointermin,pointerstart;// Quick check for common null cases.\nif(!text1||!text2||text1.charAt(0)!==text2.charAt(0)){return 0;}// Binary search.\n// Performance analysis: https://neil.fraser.name/news/2007/10/09/\npointermin=0;pointermax=Math.min(text1.length,text2.length);pointermid=pointermax;pointerstart=0;while(pointermin<pointermid){if(text1.substring(pointerstart,pointermid)===text2.substring(pointerstart,pointermid)){pointermin=pointermid;pointerstart=pointermin;}else{pointermax=pointermid;}pointermid=Math.floor((pointermax-pointermin)/2+pointermin);}return pointermid;};/**\n     * Determine the common suffix of two strings.\n     * @param {string} text1 First string.\n     * @param {string} text2 Second string.\n     * @return {number} The number of characters common to the end of each string.\n     */DiffMatchPatch.prototype.diffCommonSuffix=function(text1,text2){var pointermid,pointermax,pointermin,pointerend;// Quick check for common null cases.\nif(!text1||!text2||text1.charAt(text1.length-1)!==text2.charAt(text2.length-1)){return 0;}// Binary search.\n// Performance analysis: https://neil.fraser.name/news/2007/10/09/\npointermin=0;pointermax=Math.min(text1.length,text2.length);pointermid=pointermax;pointerend=0;while(pointermin<pointermid){if(text1.substring(text1.length-pointermid,text1.length-pointerend)===text2.substring(text2.length-pointermid,text2.length-pointerend)){pointermin=pointermid;pointerend=pointermin;}else{pointermax=pointermid;}pointermid=Math.floor((pointermax-pointermin)/2+pointermin);}return pointermid;};/**\n     * Find the differences between two texts.  Assumes that the texts do not\n     * have any common prefix or suffix.\n     * @param {string} text1 Old string to be diffed.\n     * @param {string} text2 New string to be diffed.\n     * @param {boolean} checklines Speedup flag.  If false, then don't run a\n     *     line-level diff first to identify the changed areas.\n     *     If true, then run a faster, slightly less optimal diff.\n     * @param {number} deadline Time when the diff should be complete by.\n     * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n     * @private\n     */DiffMatchPatch.prototype.diffCompute=function(text1,text2,checklines,deadline){var diffs,longtext,shorttext,i,hm,text1A,text2A,text1B,text2B,midCommon,diffsA,diffsB;if(!text1){// Just add some text (speedup).\nreturn[[DIFF_INSERT,text2]];}if(!text2){// Just delete some text (speedup).\nreturn[[DIFF_DELETE,text1]];}longtext=text1.length>text2.length?text1:text2;shorttext=text1.length>text2.length?text2:text1;i=longtext.indexOf(shorttext);if(i!==-1){// Shorter text is inside the longer text (speedup).\ndiffs=[[DIFF_INSERT,longtext.substring(0,i)],[DIFF_EQUAL,shorttext],[DIFF_INSERT,longtext.substring(i+shorttext.length)]];// Swap insertions for deletions if diff is reversed.\nif(text1.length>text2.length){diffs[0][0]=diffs[2][0]=DIFF_DELETE;}return diffs;}if(shorttext.length===1){// Single character string.\n// After the previous speedup, the character can't be an equality.\nreturn[[DIFF_DELETE,text1],[DIFF_INSERT,text2]];}// Check to see if the problem can be split in two.\nhm=this.diffHalfMatch(text1,text2);if(hm){// A half-match was found, sort out the return data.\ntext1A=hm[0];text1B=hm[1];text2A=hm[2];text2B=hm[3];midCommon=hm[4];// Send both pairs off for separate processing.\ndiffsA=this.DiffMain(text1A,text2A,checklines,deadline);diffsB=this.DiffMain(text1B,text2B,checklines,deadline);// Merge the results.\nreturn diffsA.concat([[DIFF_EQUAL,midCommon]],diffsB);}if(checklines&&text1.length>100&&text2.length>100){return this.diffLineMode(text1,text2,deadline);}return this.diffBisect(text1,text2,deadline);};/**\n     * Do the two texts share a substring which is at least half the length of the\n     * longer text?\n     * This speedup can produce non-minimal diffs.\n     * @param {string} text1 First string.\n     * @param {string} text2 Second string.\n     * @return {Array.<string>} Five element Array, containing the prefix of\n     *     text1, the suffix of text1, the prefix of text2, the suffix of\n     *     text2 and the common middle.  Or null if there was no match.\n     * @private\n     */DiffMatchPatch.prototype.diffHalfMatch=function(text1,text2){var longtext,shorttext,dmp,text1A,text2B,text2A,text1B,midCommon,hm1,hm2,hm;longtext=text1.length>text2.length?text1:text2;shorttext=text1.length>text2.length?text2:text1;if(longtext.length<4||shorttext.length*2<longtext.length){return null;// Pointless.\n}dmp=this;// 'this' becomes 'window' in a closure.\n/**\n       * Does a substring of shorttext exist within longtext such that the substring\n       * is at least half the length of longtext?\n       * Closure, but does not reference any external variables.\n       * @param {string} longtext Longer string.\n       * @param {string} shorttext Shorter string.\n       * @param {number} i Start index of quarter length substring within longtext.\n       * @return {Array.<string>} Five element Array, containing the prefix of\n       *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n       *     of shorttext and the common middle.  Or null if there was no match.\n       * @private\n       */function diffHalfMatchI(longtext,shorttext,i){var seed,j,bestCommon,prefixLength,suffixLength,bestLongtextA,bestLongtextB,bestShorttextA,bestShorttextB;// Start with a 1/4 length substring at position i as a seed.\nseed=longtext.substring(i,i+Math.floor(longtext.length/4));j=-1;bestCommon='';while((j=shorttext.indexOf(seed,j+1))!==-1){prefixLength=dmp.diffCommonPrefix(longtext.substring(i),shorttext.substring(j));suffixLength=dmp.diffCommonSuffix(longtext.substring(0,i),shorttext.substring(0,j));if(bestCommon.length<suffixLength+prefixLength){bestCommon=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength);bestLongtextA=longtext.substring(0,i-suffixLength);bestLongtextB=longtext.substring(i+prefixLength);bestShorttextA=shorttext.substring(0,j-suffixLength);bestShorttextB=shorttext.substring(j+prefixLength);}}if(bestCommon.length*2>=longtext.length){return[bestLongtextA,bestLongtextB,bestShorttextA,bestShorttextB,bestCommon];}else{return null;}}// First check if the second quarter is the seed for a half-match.\nhm1=diffHalfMatchI(longtext,shorttext,Math.ceil(longtext.length/4));// Check again based on the third quarter.\nhm2=diffHalfMatchI(longtext,shorttext,Math.ceil(longtext.length/2));if(!hm1&&!hm2){return null;}else if(!hm2){hm=hm1;}else if(!hm1){hm=hm2;}else{// Both matched.  Select the longest.\nhm=hm1[4].length>hm2[4].length?hm1:hm2;}// A half-match was found, sort out the return data.\nif(text1.length>text2.length){text1A=hm[0];text1B=hm[1];text2A=hm[2];text2B=hm[3];}else{text2A=hm[0];text2B=hm[1];text1A=hm[2];text1B=hm[3];}midCommon=hm[4];return[text1A,text1B,text2A,text2B,midCommon];};/**\n     * Do a quick line-level diff on both strings, then rediff the parts for\n     * greater accuracy.\n     * This speedup can produce non-minimal diffs.\n     * @param {string} text1 Old string to be diffed.\n     * @param {string} text2 New string to be diffed.\n     * @param {number} deadline Time when the diff should be complete by.\n     * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n     * @private\n     */DiffMatchPatch.prototype.diffLineMode=function(text1,text2,deadline){var a,diffs,linearray,pointer,countInsert,countDelete,textInsert,textDelete,j;// Scan the text on a line-by-line basis first.\na=this.diffLinesToChars(text1,text2);text1=a.chars1;text2=a.chars2;linearray=a.lineArray;diffs=this.DiffMain(text1,text2,false,deadline);// Convert the diff back to original text.\nthis.diffCharsToLines(diffs,linearray);// Eliminate freak matches (e.g. blank lines)\nthis.diffCleanupSemantic(diffs);// Rediff any replacement blocks, this time character-by-character.\n// Add a dummy entry at the end.\ndiffs.push([DIFF_EQUAL,'']);pointer=0;countDelete=0;countInsert=0;textDelete='';textInsert='';while(pointer<diffs.length){switch(diffs[pointer][0]){case DIFF_INSERT:countInsert++;textInsert+=diffs[pointer][1];break;case DIFF_DELETE:countDelete++;textDelete+=diffs[pointer][1];break;case DIFF_EQUAL:// Upon reaching an equality, check for prior redundancies.\nif(countDelete>=1&&countInsert>=1){// Delete the offending records and add the merged ones.\ndiffs.splice(pointer-countDelete-countInsert,countDelete+countInsert);pointer=pointer-countDelete-countInsert;a=this.DiffMain(textDelete,textInsert,false,deadline);for(j=a.length-1;j>=0;j--){diffs.splice(pointer,0,a[j]);}pointer=pointer+a.length;}countInsert=0;countDelete=0;textDelete='';textInsert='';break;}pointer++;}diffs.pop();// Remove the dummy entry at the end.\nreturn diffs;};/**\n     * Find the 'middle snake' of a diff, split the problem in two\n     * and return the recursively constructed diff.\n     * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n     * @param {string} text1 Old string to be diffed.\n     * @param {string} text2 New string to be diffed.\n     * @param {number} deadline Time at which to bail if not yet complete.\n     * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n     * @private\n     */DiffMatchPatch.prototype.diffBisect=function(text1,text2,deadline){var text1Length,text2Length,maxD,vOffset,vLength,v1,v2,x,delta,front,k1start,k1end,k2start,k2end,k2Offset,k1Offset,x1,x2,y1,y2,d,k1,k2;// Cache the text lengths to prevent multiple calls.\ntext1Length=text1.length;text2Length=text2.length;maxD=Math.ceil((text1Length+text2Length)/2);vOffset=maxD;vLength=2*maxD;v1=new Array(vLength);v2=new Array(vLength);// Setting all elements to -1 is faster in Chrome & Firefox than mixing\n// integers and undefined.\nfor(x=0;x<vLength;x++){v1[x]=-1;v2[x]=-1;}v1[vOffset+1]=0;v2[vOffset+1]=0;delta=text1Length-text2Length;// If the total number of characters is odd, then the front path will collide\n// with the reverse path.\nfront=delta%2!==0;// Offsets for start and end of k loop.\n// Prevents mapping of space beyond the grid.\nk1start=0;k1end=0;k2start=0;k2end=0;for(d=0;d<maxD;d++){// Bail out if deadline is reached.\nif(Date.now()>deadline){break;}// Walk the front path one step.\nfor(k1=-d+k1start;k1<=d-k1end;k1+=2){k1Offset=vOffset+k1;if(k1===-d||k1!==d&&v1[k1Offset-1]<v1[k1Offset+1]){x1=v1[k1Offset+1];}else{x1=v1[k1Offset-1]+1;}y1=x1-k1;while(x1<text1Length&&y1<text2Length&&text1.charAt(x1)===text2.charAt(y1)){x1++;y1++;}v1[k1Offset]=x1;if(x1>text1Length){// Ran off the right of the graph.\nk1end+=2;}else if(y1>text2Length){// Ran off the bottom of the graph.\nk1start+=2;}else if(front){k2Offset=vOffset+delta-k1;if(k2Offset>=0&&k2Offset<vLength&&v2[k2Offset]!==-1){// Mirror x2 onto top-left coordinate system.\nx2=text1Length-v2[k2Offset];if(x1>=x2){// Overlap detected.\nreturn this.diffBisectSplit(text1,text2,x1,y1,deadline);}}}}// Walk the reverse path one step.\nfor(k2=-d+k2start;k2<=d-k2end;k2+=2){k2Offset=vOffset+k2;if(k2===-d||k2!==d&&v2[k2Offset-1]<v2[k2Offset+1]){x2=v2[k2Offset+1];}else{x2=v2[k2Offset-1]+1;}y2=x2-k2;while(x2<text1Length&&y2<text2Length&&text1.charAt(text1Length-x2-1)===text2.charAt(text2Length-y2-1)){x2++;y2++;}v2[k2Offset]=x2;if(x2>text1Length){// Ran off the left of the graph.\nk2end+=2;}else if(y2>text2Length){// Ran off the top of the graph.\nk2start+=2;}else if(!front){k1Offset=vOffset+delta-k2;if(k1Offset>=0&&k1Offset<vLength&&v1[k1Offset]!==-1){x1=v1[k1Offset];y1=vOffset+x1-k1Offset;// Mirror x2 onto top-left coordinate system.\nx2=text1Length-x2;if(x1>=x2){// Overlap detected.\nreturn this.diffBisectSplit(text1,text2,x1,y1,deadline);}}}}}// Diff took too long and hit the deadline or\n// number of diffs equals number of characters, no commonality at all.\nreturn[[DIFF_DELETE,text1],[DIFF_INSERT,text2]];};/**\n     * Given the location of the 'middle snake', split the diff in two parts\n     * and recurse.\n     * @param {string} text1 Old string to be diffed.\n     * @param {string} text2 New string to be diffed.\n     * @param {number} x Index of split point in text1.\n     * @param {number} y Index of split point in text2.\n     * @param {number} deadline Time at which to bail if not yet complete.\n     * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n     * @private\n     */DiffMatchPatch.prototype.diffBisectSplit=function(text1,text2,x,y,deadline){var text1a,text1b,text2a,text2b,diffs,diffsb;text1a=text1.substring(0,x);text2a=text2.substring(0,y);text1b=text1.substring(x);text2b=text2.substring(y);// Compute both diffs serially.\ndiffs=this.DiffMain(text1a,text2a,false,deadline);diffsb=this.DiffMain(text1b,text2b,false,deadline);return diffs.concat(diffsb);};/**\n     * Reduce the number of edits by eliminating semantically trivial equalities.\n     * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n     */DiffMatchPatch.prototype.diffCleanupSemantic=function(diffs){var changes=false;var equalities=[];// Stack of indices where equalities are found.\nvar equalitiesLength=0;// Keeping our own length var is faster in JS.\n/** @type {?string} */var lastequality=null;// Always equal to diffs[equalities[equalitiesLength - 1]][1]\nvar pointer=0;// Index of current position.\n// Number of characters that changed prior to the equality.\nvar lengthInsertions1=0;var lengthDeletions1=0;// Number of characters that changed after the equality.\nvar lengthInsertions2=0;var lengthDeletions2=0;while(pointer<diffs.length){if(diffs[pointer][0]===DIFF_EQUAL){// Equality found.\nequalities[equalitiesLength++]=pointer;lengthInsertions1=lengthInsertions2;lengthDeletions1=lengthDeletions2;lengthInsertions2=0;lengthDeletions2=0;lastequality=diffs[pointer][1];}else{// An insertion or deletion.\nif(diffs[pointer][0]===DIFF_INSERT){lengthInsertions2+=diffs[pointer][1].length;}else{lengthDeletions2+=diffs[pointer][1].length;}// Eliminate an equality that is smaller or equal to the edits on both\n// sides of it.\nif(lastequality&&lastequality.length<=Math.max(lengthInsertions1,lengthDeletions1)&&lastequality.length<=Math.max(lengthInsertions2,lengthDeletions2)){// Duplicate record.\ndiffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]);// Change second copy to insert.\ndiffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT;// Throw away the equality we just deleted.\nequalitiesLength--;// Throw away the previous equality (it needs to be reevaluated).\nequalitiesLength--;pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1;// Reset the counters.\nlengthInsertions1=0;lengthDeletions1=0;lengthInsertions2=0;lengthDeletions2=0;lastequality=null;changes=true;}}pointer++;}// Normalize the diff.\nif(changes){this.diffCleanupMerge(diffs);}var deletion,insertion,overlapLength1,overlapLength2;// Find any overlaps between deletions and insertions.\n// e.g: <del>abcxxx</del><ins>xxxdef</ins>\n//   -> <del>abc</del>xxx<ins>def</ins>\n// e.g: <del>xxxabc</del><ins>defxxx</ins>\n//   -> <ins>def</ins>xxx<del>abc</del>\n// Only extract an overlap if it is as big as the edit ahead or behind it.\npointer=1;while(pointer<diffs.length){if(diffs[pointer-1][0]===DIFF_DELETE&&diffs[pointer][0]===DIFF_INSERT){deletion=diffs[pointer-1][1];insertion=diffs[pointer][1];overlapLength1=this.diffCommonOverlap(deletion,insertion);overlapLength2=this.diffCommonOverlap(insertion,deletion);if(overlapLength1>=overlapLength2){if(overlapLength1>=deletion.length/2||overlapLength1>=insertion.length/2){// Overlap found.  Insert an equality and trim the surrounding edits.\ndiffs.splice(pointer,0,[DIFF_EQUAL,insertion.substring(0,overlapLength1)]);diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlapLength1);diffs[pointer+1][1]=insertion.substring(overlapLength1);pointer++;}}else{if(overlapLength2>=deletion.length/2||overlapLength2>=insertion.length/2){// Reverse overlap found.\n// Insert an equality and swap and trim the surrounding edits.\ndiffs.splice(pointer,0,[DIFF_EQUAL,deletion.substring(0,overlapLength2)]);diffs[pointer-1][0]=DIFF_INSERT;diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlapLength2);diffs[pointer+1][0]=DIFF_DELETE;diffs[pointer+1][1]=deletion.substring(overlapLength2);pointer++;}}pointer++;}pointer++;}};/**\n     * Determine if the suffix of one string is the prefix of another.\n     * @param {string} text1 First string.\n     * @param {string} text2 Second string.\n     * @return {number} The number of characters common to the end of the first\n     *     string and the start of the second string.\n     * @private\n     */DiffMatchPatch.prototype.diffCommonOverlap=function(text1,text2){// Cache the text lengths to prevent multiple calls.\nvar text1Length=text1.length;var text2Length=text2.length;// Eliminate the null case.\nif(text1Length===0||text2Length===0){return 0;}// Truncate the longer string.\nif(text1Length>text2Length){text1=text1.substring(text1Length-text2Length);}else if(text1Length<text2Length){text2=text2.substring(0,text1Length);}var textLength=Math.min(text1Length,text2Length);// Quick check for the worst case.\nif(text1===text2){return textLength;}// Start by looking for a single character match\n// and increase length until no match is found.\n// Performance analysis: https://neil.fraser.name/news/2010/11/04/\nvar best=0;var length=1;while(true){var pattern=text1.substring(textLength-length);var found=text2.indexOf(pattern);if(found===-1){return best;}length+=found;if(found===0||text1.substring(textLength-length)===text2.substring(0,length)){best=length;length++;}}};/**\n     * Split two texts into an array of strings.  Reduce the texts to a string of\n     * hashes where each Unicode character represents one line.\n     * @param {string} text1 First string.\n     * @param {string} text2 Second string.\n     * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n     *     An object containing the encoded text1, the encoded text2 and\n     *     the array of unique strings.\n     *     The zeroth element of the array of unique strings is intentionally blank.\n     * @private\n     */DiffMatchPatch.prototype.diffLinesToChars=function(text1,text2){var lineArray=[];// E.g. lineArray[4] === 'Hello\\n'\nvar lineHash={};// E.g. lineHash['Hello\\n'] === 4\n// '\\x00' is a valid character, but various debuggers don't like it.\n// So we'll insert a junk entry to avoid generating a null character.\nlineArray[0]='';/**\n       * Split a text into an array of strings.  Reduce the texts to a string of\n       * hashes where each Unicode character represents one line.\n       * Modifies linearray and linehash through being a closure.\n       * @param {string} text String to encode.\n       * @return {string} Encoded string.\n       * @private\n       */function diffLinesToCharsMunge(text){var chars='';// Walk the text, pulling out a substring for each line.\n// text.split('\\n') would would temporarily double our memory footprint.\n// Modifying text would create many large strings to garbage collect.\nvar lineStart=0;var lineEnd=-1;// Keeping our own length variable is faster than looking it up.\nvar lineArrayLength=lineArray.length;while(lineEnd<text.length-1){lineEnd=text.indexOf('\\n',lineStart);if(lineEnd===-1){lineEnd=text.length-1;}var line=text.substring(lineStart,lineEnd+1);lineStart=lineEnd+1;if(hasOwn.call(lineHash,line)){chars+=String.fromCharCode(lineHash[line]);}else{chars+=String.fromCharCode(lineArrayLength);lineHash[line]=lineArrayLength;lineArray[lineArrayLength++]=line;}}return chars;}var chars1=diffLinesToCharsMunge(text1);var chars2=diffLinesToCharsMunge(text2);return{chars1:chars1,chars2:chars2,lineArray:lineArray};};/**\n     * Rehydrate the text in a diff from a string of line hashes to real lines of\n     * text.\n     * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n     * @param {!Array.<string>} lineArray Array of unique strings.\n     * @private\n     */DiffMatchPatch.prototype.diffCharsToLines=function(diffs,lineArray){for(var x=0;x<diffs.length;x++){var chars=diffs[x][1];var text=[];for(var y=0;y<chars.length;y++){text[y]=lineArray[chars.charCodeAt(y)];}diffs[x][1]=text.join('');}};/**\n     * Reorder and merge like edit sections.  Merge equalities.\n     * Any edit section can move as long as it doesn't cross an equality.\n     * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n     */DiffMatchPatch.prototype.diffCleanupMerge=function(diffs){diffs.push([DIFF_EQUAL,'']);// Add a dummy entry at the end.\nvar pointer=0;var countDelete=0;var countInsert=0;var textDelete='';var textInsert='';while(pointer<diffs.length){switch(diffs[pointer][0]){case DIFF_INSERT:countInsert++;textInsert+=diffs[pointer][1];pointer++;break;case DIFF_DELETE:countDelete++;textDelete+=diffs[pointer][1];pointer++;break;case DIFF_EQUAL:// Upon reaching an equality, check for prior redundancies.\nif(countDelete+countInsert>1){if(countDelete!==0&&countInsert!==0){// Factor out any common prefixes.\nvar commonlength=this.diffCommonPrefix(textInsert,textDelete);if(commonlength!==0){if(pointer-countDelete-countInsert>0&&diffs[pointer-countDelete-countInsert-1][0]===DIFF_EQUAL){diffs[pointer-countDelete-countInsert-1][1]+=textInsert.substring(0,commonlength);}else{diffs.splice(0,0,[DIFF_EQUAL,textInsert.substring(0,commonlength)]);pointer++;}textInsert=textInsert.substring(commonlength);textDelete=textDelete.substring(commonlength);}// Factor out any common suffixies.\ncommonlength=this.diffCommonSuffix(textInsert,textDelete);if(commonlength!==0){diffs[pointer][1]=textInsert.substring(textInsert.length-commonlength)+diffs[pointer][1];textInsert=textInsert.substring(0,textInsert.length-commonlength);textDelete=textDelete.substring(0,textDelete.length-commonlength);}}// Delete the offending records and add the merged ones.\nif(countDelete===0){diffs.splice(pointer-countInsert,countDelete+countInsert,[DIFF_INSERT,textInsert]);}else if(countInsert===0){diffs.splice(pointer-countDelete,countDelete+countInsert,[DIFF_DELETE,textDelete]);}else{diffs.splice(pointer-countDelete-countInsert,countDelete+countInsert,[DIFF_DELETE,textDelete],[DIFF_INSERT,textInsert]);}pointer=pointer-countDelete-countInsert+(countDelete?1:0)+(countInsert?1:0)+1;}else if(pointer!==0&&diffs[pointer-1][0]===DIFF_EQUAL){// Merge this equality with the previous one.\ndiffs[pointer-1][1]+=diffs[pointer][1];diffs.splice(pointer,1);}else{pointer++;}countInsert=0;countDelete=0;textDelete='';textInsert='';break;}}if(diffs[diffs.length-1][1]===''){diffs.pop();// Remove the dummy entry at the end.\n}// Second pass: look for single edits surrounded on both sides by equalities\n// which can be shifted sideways to eliminate an equality.\n// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\nvar changes=false;pointer=1;// Intentionally ignore the first and last element (don't need checking).\nwhile(pointer<diffs.length-1){if(diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL){var diffPointer=diffs[pointer][1];var position=diffPointer.substring(diffPointer.length-diffs[pointer-1][1].length);// This is a single edit surrounded by equalities.\nif(position===diffs[pointer-1][1]){// Shift the edit over the previous equality.\ndiffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length);diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1];diffs.splice(pointer-1,1);changes=true;}else if(diffPointer.substring(0,diffs[pointer+1][1].length)===diffs[pointer+1][1]){// Shift the edit over the next equality.\ndiffs[pointer-1][1]+=diffs[pointer+1][1];diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1];diffs.splice(pointer+1,1);changes=true;}}pointer++;}// If shifts were made, the diff needs reordering and another shift sweep.\nif(changes){this.diffCleanupMerge(diffs);}};return function(o,n){var diff,output,text;diff=new DiffMatchPatch();output=diff.DiffMain(o,n);diff.diffCleanupEfficiency(output);text=diff.diffPrettyHtml(output);return text;};}();})();\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/qunit/qunit/qunit.js?");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/ember-qunit/dist/test-container-styles.css":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/ember-qunit/dist/test-container-styles.css ***!
  \*********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Override QUnit's default styles that place #qunit-fixture outside the viewport */\\n#qunit-fixture {\\n  position: relative;\\n  left: auto;\\n  top: auto;\\n  width: auto;\\n  height: auto;\\n}\\n\\n#ember-testing-container {\\n  position: fixed;\\n\\n  background-color: #fff;\\n  background-image:\\n    linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee),\\n    linear-gradient(45deg, #eee 25%, transparent 25%, transparent 75%, #eee 75%, #eee);\\n  background-position: 0 0, 10px 10px;\\n  background-size: 20px 20px;\\n\\n  bottom: 0;\\n  right: 0;\\n  width: 640px;\\n  height: 384px;\\n  overflow: auto;\\n  z-index: 98;\\n  border: 1px solid #ccc;\\n  margin: 0 auto;\\n\\n  /* Prevent leaking position fixed elements outside the testing container */\\n  transform: translateZ(0);\\n}\\n\\n#ember-testing-container.ember-testing-container-full-screen {\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto;\\n  z-index: 98;\\n  border: none;\\n  right: 0;\\n}\\n\\n#ember-testing-container.ember-testing-container-hidden {\\n  opacity: 0;\\n  pointer-events: none;\\n}\\n\\n#ember-testing {\\n  width: 200%;\\n  height: 200%;\\n  transform: scale(0.5);\\n  transform-origin: top left;\\n}\\n\\n.ember-testing-container-full-screen #ember-testing {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  transform: scale(1);\\n}\\n\\n#qunit-tests > li:last-child {\\n  margin-bottom: 384px;\\n}\\n\\n@supports (display: flex) or (display: -webkit-box) {\\n  @media (min-height: 500px) {\\n    #qunit-tests {\\n      overflow: auto;\\n    }\\n\\n    #ember-testing-container {\\n      right: 30px;\\n    }\\n  }\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/test-container-styles.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/qunit/qunit/qunit.css":
/*!************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/qunit/qunit/qunit.css ***!
  \************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*!\\n * QUnit 2.20.0\\n * https://qunitjs.com/\\n *\\n * Copyright OpenJS Foundation and other contributors\\n * Released under the MIT license\\n * https://jquery.org/license\\n */\\n\\n/** Font Family and Sizes */\\n\\n#qunit-tests, #qunit-header, #qunit-banner, #qunit-testrunner-toolbar, #qunit-filteredTest, #qunit-userAgent, #qunit-testresult {\\n\\tfont-family: \\\"Helvetica Neue Light\\\", \\\"HelveticaNeue-Light\\\", \\\"Helvetica Neue\\\", Calibri, Helvetica, Arial, sans-serif;\\n}\\n\\n#qunit-testrunner-toolbar, #qunit-filteredTest, #qunit-userAgent, #qunit-testresult, #qunit-tests li { font-size: small; }\\n#qunit-tests { font-size: smaller; }\\n\\n\\n/** Resets */\\n\\n#qunit-tests, #qunit-header, #qunit-banner, #qunit-filteredTest, #qunit-userAgent, #qunit-testresult, #qunit-modulefilter {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n}\\n\\n/* Style our buttons in a simple way, uninfluenced by the styles\\n   the tested app might load. Don't affect buttons in #qunit-fixture!\\n   https://github.com/qunitjs/qunit/pull/1395\\n   https://github.com/qunitjs/qunit/issues/1437 */\\n#qunit-testrunner-toolbar button,\\n#qunit-testresult button {\\n\\tall: unset; /* best effort, modern browsers only */\\n\\tfont: inherit;\\n\\tcolor: initial;\\n\\tborder: initial;\\n\\tbackground-color: buttonface;\\n\\tpadding: 0 4px;\\n}\\n\\n\\n/** Fixed headers with scrollable tests */\\n\\n@supports (display: flex) or (display: -webkit-box) {\\n\\t@media (min-height: 500px) {\\n\\t\\t#qunit {\\n\\t\\t\\tposition: fixed;\\n\\t\\t\\tleft: 0;\\n\\t\\t\\tright: 0;\\n\\t\\t\\ttop: 0;\\n\\t\\t\\tbottom: 0;\\n\\t\\t\\tpadding: 8px;\\n\\t\\t\\tdisplay: -webkit-box;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t}\\n\\n\\t\\t#qunit-tests {\\n\\t\\t\\toverflow: scroll;\\n\\t\\t}\\n\\n\\t\\t#qunit-banner {\\n\\t\\t\\tflex: 5px 0 0;\\n\\t\\t}\\n\\t}\\n}\\n\\n\\n/** Header (excluding toolbar) */\\n\\n#qunit-header {\\n\\tpadding: 0.5em 0 0.5em 1em;\\n\\n\\tcolor: #C2CCD1;\\n\\tbackground-color: #0D3349;\\n\\n\\tfont-size: 1.5em;\\n\\tline-height: 1em;\\n\\tfont-weight: 400;\\n\\n\\tborder-radius: 5px 5px 0 0;\\n}\\n\\n#qunit-header a {\\n\\ttext-decoration: none;\\n\\tcolor: inherit;\\n}\\n\\n#qunit-header a:hover,\\n#qunit-header a:focus {\\n\\tcolor: #FFF;\\n}\\n\\n#qunit-banner {\\n\\theight: 5px;\\n}\\n\\n#qunit-filteredTest {\\n\\tpadding: 0.5em 1em 0.5em 1em;\\n\\tcolor: #366097;\\n\\tbackground-color: #F4FF77;\\n}\\n\\n#qunit-userAgent {\\n\\tpadding: 0.5em 1em 0.5em 1em;\\n\\tcolor: #FFF;\\n\\tbackground-color: #2B81AF;\\n\\ttext-shadow: rgba(0, 0, 0, 0.5) 2px 2px 1px;\\n}\\n\\n\\n/** Toolbar */\\n\\n#qunit-testrunner-toolbar {\\n\\tpadding: 0.5em 1em 0.5em 1em;\\n\\tcolor: #5E740B;\\n\\tbackground-color: #EEE;\\n}\\n\\n#qunit-testrunner-toolbar .clearfix {\\n\\theight: 0;\\n\\tclear: both;\\n}\\n\\n#qunit-testrunner-toolbar label {\\n\\tdisplay: inline-block;\\n}\\n\\n#qunit-testrunner-toolbar input[type=checkbox],\\n#qunit-testrunner-toolbar input[type=radio] {\\n\\tmargin: 3px;\\n\\tvertical-align: -2px;\\n}\\n\\n#qunit-testrunner-toolbar input[type=text] {\\n\\tbox-sizing: border-box;\\n\\theight: 1.6em;\\n}\\n\\n#qunit-testrunner-toolbar button,\\n#qunit-testresult button {\\n  border-radius: .25em;\\n  border: 1px solid #AAA;\\n  background-color: #F8F8F8;\\n  color: #222;\\n  line-height: 1.6;\\n  cursor: pointer;\\n}\\n#qunit-testrunner-toolbar button:hover,\\n#qunit-testresult button:hover {\\n\\tborder-color: #AAA;\\n\\tbackground-color: #FFF;\\n\\tcolor: #444;\\n}\\n#qunit-testrunner-toolbar button:active,\\n#qunit-testresult button:active {\\n\\tborder-color: #777;\\n\\tbackground-color: #CCC;\\n\\tcolor: #000;\\n}\\n#qunit-testrunner-toolbar button:focus,\\n#qunit-testresult button:focus {\\n\\tborder-color: #2F68DA;\\n\\t/* emulate 2px border without a layout shift */\\n\\tbox-shadow: inset 0 0 0 1px #2F68DA\\n}\\n#qunit-testrunner-toolbar button:disabled,\\n#qunit-testresult button:disabled {\\n\\tborder-color: #CCC;\\n\\tbackground-color: #CCC;\\n\\tcolor: #FFF;\\n  cursor: default;\\n}\\n\\n#qunit-toolbar-filters {\\n\\tfloat: right;\\n\\t/* aligning right avoids overflows and inefficient use of space\\n\\t   around the dropdown menu on narrow viewports */\\n\\ttext-align: right;\\n}\\n\\n.qunit-url-config,\\n.qunit-filter,\\n#qunit-modulefilter {\\n\\tdisplay: inline-block;\\n\\tline-height: 2.1em;\\n\\ttext-align: left;\\n}\\n\\n.qunit-filter,\\n#qunit-modulefilter {\\n\\tposition: relative;\\n\\tmargin-left: 1em;\\n}\\n\\n.qunit-url-config label {\\n\\tmargin-right: 0.5em;\\n}\\n\\n#qunit-modulefilter-search {\\n\\tbox-sizing: border-box;\\n\\tmin-width: 400px;\\n\\tmin-width: min(400px, 80vw);\\n}\\n\\n#qunit-modulefilter-search-container {\\n\\tposition: relative;\\n}\\n#qunit-modulefilter-search-container:after {\\n\\tposition: absolute;\\n\\tright: 0.3em;\\n\\tbottom: 0;\\n\\tline-height: 100%;\\n\\tcontent: \\\"\\\\25bc\\\";\\n\\tcolor: black;\\n}\\n\\n#qunit-modulefilter-dropdown {\\n\\t/* align with #qunit-modulefilter-search */\\n\\tbox-sizing: border-box;\\n\\tmin-width: 400px;\\n\\tmin-width: min(400px, 80vw);\\n\\tmax-width: 80vw;\\n\\tposition: absolute;\\n\\tright: 0;\\n\\ttop: 100%;\\n\\tmargin-top: 2px;\\n\\n\\t/* ensure that when on a narrow viewports and having only one result,\\n\\t   that #qunit-modulefilter-actions fall outside the dropdown rectangle. */\\n\\tmin-height: 3em;\\n\\n\\tborder: 1px solid #AAA;\\n\\tborder-top-color: transparent;\\n\\tborder-radius: 0 0 .25em .25em;\\n\\tcolor: #0D3349;\\n\\tbackground-color: #F5F5F5;\\n\\tz-index: 99;\\n}\\n\\n#qunit-modulefilter-actions {\\n\\tdisplay: block;\\n\\toverflow: auto;\\n\\t/* align with #qunit-modulefilter-dropdown-list */\\n\\tfont: smaller/1.5em sans-serif;\\n}\\n@media (min-width: 350px) {\\n\\t#qunit-modulefilter-actions {\\n\\t\\tposition: absolute;\\n\\t\\tright: 0;\\n\\t}\\n}\\n\\n#qunit-modulefilter-dropdown #qunit-modulefilter-actions > * {\\n\\tbox-sizing: border-box;\\n\\tmax-height: 2.8em;\\n\\tdisplay: block;\\n\\tpadding: 0.4em;\\n}\\n\\n#qunit-modulefilter-dropdown #qunit-modulefilter-actions > button {\\n\\tfloat: right;\\n\\tmargin: 0.25em;\\n}\\n\\n#qunit-modulefilter-dropdown-list {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tfont: smaller/1.5em sans-serif;\\n}\\n\\n#qunit-modulefilter-dropdown-list li {\\n\\tlist-style: none;\\n}\\n#qunit-modulefilter-dropdown-list .clickable {\\n\\tdisplay: block;\\n\\tpadding: 0.25em 0.50em 0.25em 0.15em;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n#qunit-modulefilter-dropdown-list .clickable.checked {\\n\\tfont-weight: bold;\\n\\tbackground-color: #E2F0F7;\\n\\tcolor: #0D3349;\\n}\\n#qunit-modulefilter-dropdown .clickable:hover {\\n\\tbackground-color: #FFF;\\n\\tcolor: #444;\\n}\\n\\n\\n/** Tests: Pass/Fail */\\n\\n#qunit-tests {\\n\\tlist-style-position: inside;\\n}\\n\\n#qunit-tests li {\\n\\tpadding: 0.4em 1em 0.4em 1em;\\n\\tborder-bottom: 1px solid #FFF;\\n\\tlist-style-position: inside;\\n}\\n\\n#qunit-tests > li {\\n\\tdisplay: none;\\n}\\n\\n#qunit-tests li.running,\\n#qunit-tests li.pass,\\n#qunit-tests li.fail,\\n#qunit-tests li.skipped,\\n#qunit-tests li.aborted {\\n\\tdisplay: list-item;\\n}\\n\\n#qunit-tests.hidepass {\\n\\tposition: relative;\\n}\\n\\n#qunit-tests.hidepass li.running,\\n#qunit-tests.hidepass li.pass:not(.todo) {\\n\\tvisibility: hidden;\\n\\tposition: absolute;\\n\\twidth:   0;\\n\\theight:  0;\\n\\tpadding: 0;\\n\\tborder:  0;\\n\\tmargin:  0;\\n}\\n\\n#qunit-tests li strong {\\n\\tcursor: pointer;\\n}\\n\\n#qunit-tests li.skipped strong {\\n\\tcursor: default;\\n}\\n\\n#qunit-tests li a {\\n\\tpadding: 0.5em;\\n\\tcolor: inherit;\\n\\ttext-decoration: underline;\\n}\\n#qunit-tests li a:hover,\\n#qunit-tests li a:focus {\\n\\tcolor: #0D3349;\\n}\\n\\n#qunit-tests li .runtime {\\n\\tfloat: right;\\n\\tfont-size: smaller;\\n}\\n\\n.qunit-assert-list {\\n\\tmargin-top: 0.5em;\\n\\tpadding: 0.5em;\\n\\n\\tbackground-color: #FFF;\\n\\n\\tborder-radius: 5px;\\n}\\n\\n.qunit-source {\\n\\tmargin: 0.6em 0 0.3em;\\n}\\n\\n.qunit-collapsed {\\n\\tdisplay: none;\\n}\\n\\n#qunit-tests table {\\n\\tborder-collapse: collapse;\\n\\tmargin-top: 0.2em;\\n}\\n\\n#qunit-tests th {\\n\\ttext-align: right;\\n\\tvertical-align: top;\\n\\tpadding: 0 0.5em 0 0;\\n}\\n\\n#qunit-tests td {\\n\\tvertical-align: top;\\n}\\n\\n#qunit-tests pre {\\n\\tmargin: 0;\\n\\twhite-space: pre-wrap;\\n\\tword-wrap: break-word;\\n}\\n\\n#qunit-tests del {\\n\\tcolor: #374E0C;\\n\\tbackground-color: #E0F2BE;\\n\\ttext-decoration: none;\\n}\\n\\n#qunit-tests ins {\\n\\tcolor: #500;\\n\\tbackground-color: #FFCACA;\\n\\ttext-decoration: none;\\n}\\n\\n/*** Test Counts */\\n\\n#qunit-tests b.counts                       { color: #0D3349; }\\n#qunit-tests b.passed                       { color: #5E740B; }\\n#qunit-tests b.failed                       { color: #710909; }\\n\\n#qunit-tests li li {\\n\\tpadding: 5px;\\n\\tbackground-color: #FFF;\\n\\tborder-bottom: none;\\n\\tlist-style-position: inside;\\n}\\n\\n/*** Passing Styles */\\n\\n\\n#qunit-tests .pass {\\n\\tcolor: #2F68DA;\\n\\tbackground-color: #E2F0F7;\\n}\\n\\n#qunit-tests .pass .test-name {\\n\\tcolor: #366097;\\n}\\n\\n#qunit-tests li li.pass {\\n\\tcolor: #3C510C;\\n\\tbackground-color: #FFF;\\n\\tborder-left: 10px solid #C6E746;\\n}\\n\\n#qunit-tests .pass .test-actual,\\n#qunit-tests .pass .test-expected           { color: #999; }\\n\\n#qunit-banner.qunit-pass                    { background-color: #C6E746; }\\n\\n/*** Failing Styles */\\n\\n#qunit-tests .fail {\\n\\tcolor: #000;\\n\\tbackground-color: #EE5757;\\n}\\n\\n#qunit-tests li li.fail {\\n\\tcolor: #710909;\\n\\tbackground-color: #FFF;\\n\\tborder-left: 10px solid #EE5757;\\n\\twhite-space: pre;\\n}\\n\\n#qunit-tests > li:last-child {\\n\\tborder-radius: 0 0 5px 5px;\\n}\\n\\n#qunit-tests .fail .test-actual             { color: #EE5757; }\\n#qunit-tests .fail .test-expected           { color: #008000; }\\n\\n#qunit-banner.qunit-fail                    { background-color: #EE5757; }\\n\\n\\n/*** Aborted tests */\\n#qunit-tests .aborted { color: #000; background-color: orange; }\\n/*** Skipped tests */\\n\\n#qunit-tests .skipped {\\n\\tbackground-color: #EBECE9;\\n}\\n\\n#qunit-tests .qunit-todo-label,\\n#qunit-tests .qunit-skipped-label {\\n\\tbackground-color: #F4FF77;\\n\\tdisplay: inline-block;\\n\\tfont-style: normal;\\n\\tcolor: #366097;\\n\\tline-height: 1.8em;\\n\\tpadding: 0 0.5em;\\n\\tmargin: -0.4em 0.4em -0.4em 0;\\n}\\n\\n#qunit-tests .qunit-todo-label {\\n\\tbackground-color: #EEE;\\n}\\n\\n/** Result */\\n\\n#qunit-testresult {\\n\\tcolor: #366097;\\n\\tbackground-color: #E2F0F7;\\n\\n\\tborder-bottom: 1px solid #FFF;\\n}\\n#qunit-testresult a {\\n\\tcolor: #2F68DA;\\n}\\n#qunit-testresult .clearfix {\\n\\theight: 0;\\n\\tclear: both;\\n}\\n#qunit-testresult .module-name {\\n\\tfont-weight: 700;\\n}\\n#qunit-testresult-display {\\n\\tpadding: 0.5em 1em 0.5em 1em;\\n\\twidth: 85%;\\n\\tfloat:left;\\n}\\n#qunit-testresult-controls {\\n\\tpadding: 0.5em 1em 0.5em 1em;\\n  width: 10%;\\n\\tfloat:left;\\n}\\n\\n/** Fixture */\\n\\n#qunit-fixture {\\n\\tposition: absolute;\\n\\ttop: -10000px;\\n\\tleft: -10000px;\\n\\twidth: 1000px;\\n\\theight: 1000px;\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/qunit/qunit/qunit.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/ember-qunit/dist/test-container-styles.css":
/*!******************************************************************!*\
  !*** ../node_modules/ember-qunit/dist/test-container-styles.css ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_test_container_styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./test-container-styles.css */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/ember-qunit/dist/test-container-styles.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_test_container_styles_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_test_container_styles_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/ember-qunit/dist/test-container-styles.css?");

/***/ }),

/***/ "../node_modules/qunit/qunit/qunit.css":
/*!*********************************************!*\
  !*** ../node_modules/qunit/qunit/qunit.css ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_qunit_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./qunit.css */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/qunit/qunit/qunit.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_qunit_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_qunit_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/qunit/qunit/qunit.css?");

/***/ }),

/***/ "../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "../node_modules/qunit-dom/dist/es/index.js":
/*!**************************************************!*\
  !*** ../node_modules/qunit-dom/dist/es/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   install: () => (/* binding */ install),\n/* harmony export */   setup: () => (/* binding */ setup)\n/* harmony export */ });\nfunction exists(options,message){var expectedCount=null;if(typeof options==='string'){message=options;}else if(options){expectedCount=options.count;}var elements=this.findElements();if(expectedCount===null){var result=elements.length>0;var expected=format$1(this.targetDescription);var actual=result?expected:format$1(this.targetDescription,0);if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else if(typeof expectedCount==='number'){var result=elements.length===expectedCount;var actual=format$1(this.targetDescription,elements.length);var expected=format$1(this.targetDescription,expectedCount);if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else{throw new TypeError(\"Unexpected Parameter: \".concat(expectedCount));}}function format$1(selector,num){if(num===undefined||num===null){return\"Element \".concat(selector,\" exists\");}else if(num===0){return\"Element \".concat(selector,\" does not exist\");}else if(num===1){return\"Element \".concat(selector,\" exists once\");}else if(num===2){return\"Element \".concat(selector,\" exists twice\");}else{return\"Element \".concat(selector,\" exists \").concat(num,\" times\");}}// imported from https://github.com/nathanboktae/chai-dom\nfunction elementToString(el){if(!el)return'<not found>';var desc;if(el instanceof NodeList){if(el.length===0){return'empty NodeList';}desc=Array.prototype.slice.call(el,0,5).map(elementToString).join(', ');return el.length>5?\"\".concat(desc,\"... (+\").concat(el.length-5,\" more)\"):desc;}if(!(el instanceof HTMLElement||el instanceof SVGElement)){return String(el);}desc=el.tagName.toLowerCase();if(el.id){desc+=\"#\".concat(el.id);}if(el.className&&!(el.className instanceof SVGAnimatedString)){desc+=\".\".concat(String(el.className).replace(/\\s+/g,'.'));}Array.prototype.forEach.call(el.attributes,function(attr){if(attr.name!=='class'&&attr.name!=='id'){desc+=\"[\".concat(attr.name).concat(attr.value?\"=\\\"\".concat(attr.value,\"\\\"]\"):']');}});return desc;}function focused(message){var element=this.findTargetElement();if(!element)return;var result=document.activeElement===element;var actual=elementToString(document.activeElement);var expected=elementToString(this.target);if(!message){message=\"Element \".concat(expected,\" is focused\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}function notFocused(message){var element=this.findTargetElement();if(!element)return;var result=document.activeElement!==element;var expected=\"Element \".concat(this.targetDescription,\" is not focused\");var actual=result?expected:\"Element \".concat(this.targetDescription,\" is focused\");if(!message){message=expected;}this.pushResult({result:result,message:message,actual:actual,expected:expected});}function checked(message){var element=this.findTargetElement();if(!element)return;var isChecked=element.checked===true;var isNotChecked=element.checked===false;var result=isChecked;var hasCheckedProp=isChecked||isNotChecked;if(!hasCheckedProp){var ariaChecked=element.getAttribute('aria-checked');if(ariaChecked!==null){result=ariaChecked==='true';}}var actual=result?'checked':'not checked';var expected='checked';if(!message){message=\"Element \".concat(elementToString(this.target),\" is checked\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}function notChecked(message){var element=this.findTargetElement();if(!element)return;var isChecked=element.checked===true;var isNotChecked=element.checked===false;var result=!isChecked;var hasCheckedProp=isChecked||isNotChecked;if(!hasCheckedProp){var ariaChecked=element.getAttribute('aria-checked');if(ariaChecked!==null){result=ariaChecked!=='true';}}var actual=result?'not checked':'checked';var expected='not checked';if(!message){message=\"Element \".concat(elementToString(this.target),\" is not checked\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}function required(message){var element=this.findTargetElement();if(!element)return;if(!(element instanceof HTMLInputElement||element instanceof HTMLTextAreaElement||element instanceof HTMLSelectElement)){throw new TypeError(\"Unexpected Element Type: \".concat(element.toString()));}var result=element.required===true;var actual=result?'required':'not required';var expected='required';if(!message){message=\"Element \".concat(elementToString(this.target),\" is required\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}function notRequired(message){var element=this.findTargetElement();if(!element)return;if(!(element instanceof HTMLInputElement||element instanceof HTMLTextAreaElement||element instanceof HTMLSelectElement)){throw new TypeError(\"Unexpected Element Type: \".concat(element.toString()));}var result=element.required===false;var actual=!result?'required':'not required';var expected='not required';if(!message){message=\"Element \".concat(elementToString(this.target),\" is not required\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}function isValid(message,options){if(options===void 0){options={};}var element=this.findTargetElement();if(!element)return;if(!(element instanceof HTMLFormElement||element instanceof HTMLInputElement||element instanceof HTMLTextAreaElement||element instanceof HTMLButtonElement||element instanceof HTMLOutputElement||element instanceof HTMLSelectElement)){throw new TypeError(\"Unexpected Element Type: \".concat(element.toString()));}var validity=element.reportValidity()===true;var result=validity===!options.inverted;var actual=validity?'valid':'not valid';var expected=options.inverted?'not valid':'valid';if(!message){message=\"Element \".concat(elementToString(this.target),\" is \").concat(actual);}this.pushResult({result:result,actual:actual,expected:expected,message:message});}// Visible logic based on jQuery's\n// https://github.com/jquery/jquery/blob/4a2bcc27f9c3ee24b3effac0fbe1285d1ee23cc5/src/css/hiddenVisibleSelectors.js#L11-L13\nfunction visible(el){if(el===null)return false;if(el.offsetWidth===0||el.offsetHeight===0)return false;var clientRects=el.getClientRects();if(clientRects.length===0)return false;for(var i=0;i<clientRects.length;i++){var rect=clientRects[i];if(rect.width!==0&&rect.height!==0)return true;}return false;}function isVisible(options,message){var expectedCount=null;if(typeof options==='string'){message=options;}else if(options){expectedCount=options.count;}var elements=this.findElements().filter(visible);if(expectedCount===null){var result=elements.length>0;var expected=format(this.targetDescription);var actual=result?expected:format(this.targetDescription,0);if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else if(typeof expectedCount==='number'){var result=elements.length===expectedCount;var actual=format(this.targetDescription,elements.length);var expected=format(this.targetDescription,expectedCount);if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else{throw new TypeError(\"Unexpected Parameter: \".concat(expectedCount));}}function format(selector,num){if(num===undefined||num===null){return\"Element \".concat(selector,\" is visible\");}else if(num===0){return\"Element \".concat(selector,\" is not visible\");}else if(num===1){return\"Element \".concat(selector,\" is visible once\");}else if(num===2){return\"Element \".concat(selector,\" is visible twice\");}else{return\"Element \".concat(selector,\" is visible \").concat(num,\" times\");}}function isDisabled(message,options){if(options===void 0){options={};}var inverted=options.inverted;var element=this.findTargetElement();if(!element)return;if(!(element instanceof HTMLInputElement||element instanceof HTMLTextAreaElement||element instanceof HTMLSelectElement||element instanceof HTMLButtonElement||element instanceof HTMLOptGroupElement||element instanceof HTMLOptionElement||element instanceof HTMLFieldSetElement)){throw new TypeError(\"Unexpected Element Type: \".concat(element.toString()));}var result=element.disabled===!inverted;var actual=element.disabled===false?\"Element \".concat(this.targetDescription,\" is not disabled\"):\"Element \".concat(this.targetDescription,\" is disabled\");var expected=inverted?\"Element \".concat(this.targetDescription,\" is not disabled\"):\"Element \".concat(this.targetDescription,\" is disabled\");if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}function matchesSelector(elements,compareSelector){var failures=elements.filter(function(it){return!it.matches(compareSelector);});return failures.length;}function collapseWhitespace(string){return string.replace(/[\\t\\r\\n]/g,' ').replace(/ +/g,' ').replace(/^ /,'').replace(/ $/,'');}/**\n * This function can be used to convert a NodeList to a regular array.\n * We should be using `Array.from()` for this, but IE11 doesn't support that :(\n *\n * @private\n */function toArray(list){return Array.prototype.slice.call(list);}var DOMAssertions=/** @class */function(){function DOMAssertions(target,rootElement,testContext){this.target=target;this.rootElement=rootElement;this.testContext=testContext;}/**\n     * Assert an {@link HTMLElement} (or multiple) matching the `selector` exists.\n     *\n     * @param {object?} options\n     * @param {number?} options.count\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('#title').exists();\n     * assert.dom('.choice').exists({ count: 4 });\n     *\n     * @see {@link #doesNotExist}\n     */DOMAssertions.prototype.exists=function(options,message){exists.call(this,options,message);return this;};/**\n     * Assert an {@link HTMLElement} matching the `selector` does not exists.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.should-not-exist').doesNotExist();\n     *\n     * @see {@link #exists}\n     */DOMAssertions.prototype.doesNotExist=function(message){exists.call(this,{count:0},message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is currently checked.\n     *\n     * Note: This also supports `aria-checked=\"true/false\"`.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.active').isChecked();\n     *\n     * @see {@link #isNotChecked}\n     */DOMAssertions.prototype.isChecked=function(message){checked.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is currently unchecked.\n     *\n     * Note: This also supports `aria-checked=\"true/false\"`.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.active').isNotChecked();\n     *\n     * @see {@link #isChecked}\n     */DOMAssertions.prototype.isNotChecked=function(message){notChecked.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is currently focused.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.email').isFocused();\n     *\n     * @see {@link #isNotFocused}\n     */DOMAssertions.prototype.isFocused=function(message){focused.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is not currently focused.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input[type=\"password\"]').isNotFocused();\n     *\n     * @see {@link #isFocused}\n     */DOMAssertions.prototype.isNotFocused=function(message){notFocused.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is currently required.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input[type=\"text\"]').isRequired();\n     *\n     * @see {@link #isNotRequired}\n     */DOMAssertions.prototype.isRequired=function(message){required.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is currently not required.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input[type=\"text\"]').isNotRequired();\n     *\n     * @see {@link #isRequired}\n     */DOMAssertions.prototype.isNotRequired=function(message){notRequired.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} passes validation\n     *\n     * Validity is determined by asserting that:\n     *\n     * - `element.reportValidity() === true`\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.input').isValid();\n     *\n     * @see {@link #isValid}\n     */DOMAssertions.prototype.isValid=function(message){isValid.call(this,message);return this;};/**\n     * Assert that the {@link HTMLElement} does not pass validation\n     *\n     * Validity is determined by asserting that:\n     *\n     * - `element.reportValidity() === true`\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.input').isNotValid();\n     *\n     * @see {@link #isValid}\n     */DOMAssertions.prototype.isNotValid=function(message){isValid.call(this,message,{inverted:true});return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` exists and is visible.\n     *\n     * Visibility is determined by asserting that:\n     *\n     * - the element's offsetWidth and offsetHeight are non-zero\n     * - any of the element's DOMRect objects have a non-zero size\n     *\n     * Additionally, visibility in this case means that the element is visible on the page,\n     * but not necessarily in the viewport.\n     *\n     * @param {object?} options\n     * @param {number?} options.count\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('#title').isVisible();\n     * assert.dom('.choice').isVisible({ count: 4 });\n     *\n     * @see {@link #isNotVisible}\n     */DOMAssertions.prototype.isVisible=function(options,message){isVisible.call(this,options,message);return this;};/**\n     * Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` does not exist or is not visible on the page.\n     *\n     * Visibility is determined by asserting that:\n     *\n     * - the element's offsetWidth or offsetHeight are zero\n     * - all of the element's DOMRect objects have a size of zero\n     *\n     * Additionally, visibility in this case means that the element is visible on the page,\n     * but not necessarily in the viewport.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.foo').isNotVisible();\n     *\n     * @see {@link #isVisible}\n     */DOMAssertions.prototype.isNotVisible=function(message){isVisible.call(this,{count:0},message);return this;};/**\n     * Assert that the {@link HTMLElement} has an attribute with the provided `name`\n     * and optionally checks if the attribute `value` matches the provided text\n     * or regular expression.\n     *\n     * @param {string} name\n     * @param {string|RegExp|object?} value\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.password-input').hasAttribute('type', 'password');\n     *\n     * @see {@link #doesNotHaveAttribute}\n     */DOMAssertions.prototype.hasAttribute=function(name,value,message){var element=this.findTargetElement();if(!element)return this;if(arguments.length===1){value={any:true};}var actualValue=element.getAttribute(name);if(value instanceof RegExp){var result=value.test(actualValue);var expected=\"Element \".concat(this.targetDescription,\" has attribute \\\"\").concat(name,\"\\\" with value matching \").concat(value);var actual=actualValue===null?\"Element \".concat(this.targetDescription,\" does not have attribute \\\"\").concat(name,\"\\\"\"):\"Element \".concat(this.targetDescription,\" has attribute \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(actualValue));if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else if(value.any===true){var result=actualValue!==null;var expected=\"Element \".concat(this.targetDescription,\" has attribute \\\"\").concat(name,\"\\\"\");var actual=result?expected:\"Element \".concat(this.targetDescription,\" does not have attribute \\\"\").concat(name,\"\\\"\");if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else{var result=value===actualValue;var expected=\"Element \".concat(this.targetDescription,\" has attribute \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(value));var actual=actualValue===null?\"Element \".concat(this.targetDescription,\" does not have attribute \\\"\").concat(name,\"\\\"\"):\"Element \".concat(this.targetDescription,\" has attribute \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(actualValue));if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}return this;};/**\n     * Assert that the {@link HTMLElement} has no attribute with the provided `name`.\n     *\n     * **Aliases:** `hasNoAttribute`, `lacksAttribute`\n     *\n     * @param {string} name\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.username').doesNotHaveAttribute('disabled');\n     *\n     * @see {@link #hasAttribute}\n     */DOMAssertions.prototype.doesNotHaveAttribute=function(name,message){var element=this.findTargetElement();if(!element)return;var result=!element.hasAttribute(name);var expected=\"Element \".concat(this.targetDescription,\" does not have attribute \\\"\").concat(name,\"\\\"\");var actual=expected;if(!result){var value=element.getAttribute(name);actual=\"Element \".concat(this.targetDescription,\" has attribute \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(value));}if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});return this;};DOMAssertions.prototype.hasNoAttribute=function(name,message){return this.doesNotHaveAttribute(name,message);};DOMAssertions.prototype.lacksAttribute=function(name,message){return this.doesNotHaveAttribute(name,message);};/**\n     * Assert that the {@link HTMLElement} has an ARIA attribute with the provided\n     * `name` and optionally checks if the attribute `value` matches the provided\n     * text or regular expression.\n     *\n     * @param {string} name\n     * @param {string|RegExp|object?} value\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('button').hasAria('pressed', 'true');\n     *\n     * @see {@link #doesNotHaveAria}\n     */DOMAssertions.prototype.hasAria=function(name,value,message){return this.hasAttribute(\"aria-\".concat(name),value,message);};/**\n     * Assert that the {@link HTMLElement} has no ARIA attribute with the\n     * provided `name`.\n     *\n     * **Aliases:** `hasNoAria`, `lacksAria`\n     *\n     * @param {string} name\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('button').doesNotHaveAria('pressed');\n     *\n     * @see {@link #hasAria}\n     */DOMAssertions.prototype.doesNotHaveAria=function(name,message){return this.doesNotHaveAttribute(\"aria-\".concat(name),message);};DOMAssertions.prototype.hasNoAria=function(name,message){return this.doesNotHaveAria(name,message);};DOMAssertions.prototype.lacksAria=function(name,message){return this.doesNotHaveAria(name,message);};/**\n     * Assert that the {@link HTMLElement} has a property with the provided `name`\n     * and checks if the property `value` matches the provided text or regular\n     * expression.\n     *\n     * @param {string} name\n     * @param {RegExp|any} value\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.password-input').hasProperty('type', 'password');\n     *\n     * @see {@link #doesNotHaveProperty}\n     */DOMAssertions.prototype.hasProperty=function(name,value,message){var element=this.findTargetElement();if(!element)return this;var description=this.targetDescription;var actualValue=element[name];if(value instanceof RegExp){var result=value.test(String(actualValue));var expected=\"Element \".concat(description,\" has property \\\"\").concat(name,\"\\\" with value matching \").concat(value);var actual=\"Element \".concat(description,\" has property \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(actualValue));if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else{var result=value===actualValue;var expected=\"Element \".concat(description,\" has property \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(value));var actual=\"Element \".concat(description,\" has property \\\"\").concat(name,\"\\\" with value \").concat(JSON.stringify(actualValue));if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});}return this;};/**\n     *  Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is disabled.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.foo').isDisabled();\n     *\n     * @see {@link #isNotDisabled}\n     */DOMAssertions.prototype.isDisabled=function(message){isDisabled.call(this,message);return this;};/**\n     *  Assert that the {@link HTMLElement} or an {@link HTMLElement} matching the\n     * `selector` is not disabled.\n     *\n     * **Aliases:** `isEnabled`\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.foo').isNotDisabled();\n     *\n     * @see {@link #isDisabled}\n     */DOMAssertions.prototype.isNotDisabled=function(message){isDisabled.call(this,message,{inverted:true});return this;};DOMAssertions.prototype.isEnabled=function(message){return this.isNotDisabled(message);};/**\n     * Assert that the {@link HTMLElement} has the `expected` CSS class using\n     * [`classList`](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList).\n     *\n     * `expected` can also be a regular expression, and the assertion will return\n     * true if any of the element's CSS classes match.\n     *\n     * @param {string|RegExp} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input[type=\"password\"]').hasClass('secret-password-input');\n     *\n     * @example\n     * assert.dom('input[type=\"password\"]').hasClass(/.*password-input/);\n     *\n     * @see {@link #doesNotHaveClass}\n     */DOMAssertions.prototype.hasClass=function(expected,message){var element=this.findTargetElement();if(!element)return this;var actual=element.classList.toString();if(expected instanceof RegExp){var classNames=Array.prototype.slice.call(element.classList);var result=classNames.some(function(className){return expected.test(className);});if(!message){message=\"Element \".concat(this.targetDescription,\" has CSS class matching \").concat(expected);}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else{var result=element.classList.contains(expected);if(!message){message=\"Element \".concat(this.targetDescription,\" has CSS class \\\"\").concat(expected,\"\\\"\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}return this;};/**\n     * Assert that the {@link HTMLElement} does not have the `expected` CSS class using\n     * [`classList`](https://developer.mozilla.org/en-US/docs/Web/API/Element/classList).\n     *\n     * `expected` can also be a regular expression, and the assertion will return\n     * true if none of the element's CSS classes match.\n     *\n     * **Aliases:** `hasNoClass`, `lacksClass`\n     *\n     * @param {string|RegExp} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input[type=\"password\"]').doesNotHaveClass('username-input');\n     *\n     * @example\n     * assert.dom('input[type=\"password\"]').doesNotHaveClass(/username-.*-input/);\n     *\n     * @see {@link #hasClass}\n     */DOMAssertions.prototype.doesNotHaveClass=function(expected,message){var element=this.findTargetElement();if(!element)return this;var actual=element.classList.toString();if(expected instanceof RegExp){var classNames=Array.prototype.slice.call(element.classList);var result=classNames.every(function(className){return!expected.test(className);});if(!message){message=\"Element \".concat(this.targetDescription,\" does not have CSS class matching \").concat(expected);}this.pushResult({result:result,actual:actual,expected:\"not: \".concat(expected),message:message});}else{var result=!element.classList.contains(expected);if(!message){message=\"Element \".concat(this.targetDescription,\" does not have CSS class \\\"\").concat(expected,\"\\\"\");}this.pushResult({result:result,actual:actual,expected:\"not: \".concat(expected),message:message});}return this;};DOMAssertions.prototype.hasNoClass=function(expected,message){return this.doesNotHaveClass(expected,message);};DOMAssertions.prototype.lacksClass=function(expected,message){return this.doesNotHaveClass(expected,message);};/**\n     * Assert that the [HTMLElement][] has the `expected` style declarations using\n     * [`window.getComputedStyle`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle).\n     *\n     * @param {object} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.progress-bar').hasStyle({\n     *   opacity: 1,\n     *   display: 'block'\n     * });\n     *\n     * @see {@link #hasClass}\n     */DOMAssertions.prototype.hasStyle=function(expected,message){return this.hasPseudoElementStyle(null,expected,message);};/**\n     * Assert that the pseudo element for `selector` of the [HTMLElement][] has the `expected` style declarations using\n     * [`window.getComputedStyle`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle).\n     *\n     * @param {string} selector\n     * @param {object} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.progress-bar').hasPseudoElementStyle(':after', {\n     *   content: '\";\"',\n     * });\n     *\n     * @see {@link #hasClass}\n     */DOMAssertions.prototype.hasPseudoElementStyle=function(selector,expected,message){var element=this.findTargetElement();if(!element)return this;var computedStyle=window.getComputedStyle(element,selector);var expectedProperties=Object.keys(expected);if(expectedProperties.length<=0){throw new TypeError(\"Missing style expectations. There must be at least one style property in the passed in expectation object.\");}var result=expectedProperties.every(function(property){return computedStyle[property]===expected[property];});var actual={};expectedProperties.forEach(function(property){return actual[property]=computedStyle[property];});if(!message){var normalizedSelector=selector?selector.replace(/^:{0,2}/,'::'):'';message=\"Element \".concat(this.targetDescription).concat(normalizedSelector,\" has style \\\"\").concat(JSON.stringify(expected),\"\\\"\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});return this;};/**\n     * Assert that the [HTMLElement][] does not have the `expected` style declarations using\n     * [`window.getComputedStyle`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle).\n     *\n     * @param {object} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.progress-bar').doesNotHaveStyle({\n     *   opacity: 1,\n     *   display: 'block'\n     * });\n     *\n     * @see {@link #hasClass}\n     */DOMAssertions.prototype.doesNotHaveStyle=function(expected,message){return this.doesNotHavePseudoElementStyle(null,expected,message);};/**\n     * Assert that the pseudo element for `selector` of the [HTMLElement][] does not have the `expected` style declarations using\n     * [`window.getComputedStyle`](https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle).\n     *\n     * @param {string} selector\n     * @param {object} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('.progress-bar').doesNotHavePseudoElementStyle(':after', {\n     *   content: '\";\"',\n     * });\n     *\n     * @see {@link #hasClass}\n     */DOMAssertions.prototype.doesNotHavePseudoElementStyle=function(selector,expected,message){var element=this.findTargetElement();if(!element)return this;var computedStyle=window.getComputedStyle(element,selector);var expectedProperties=Object.keys(expected);if(expectedProperties.length<=0){throw new TypeError(\"Missing style expectations. There must be at least one style property in the passed in expectation object.\");}var result=expectedProperties.some(function(property){return computedStyle[property]!==expected[property];});var actual={};expectedProperties.forEach(function(property){return actual[property]=computedStyle[property];});if(!message){var normalizedSelector=selector?selector.replace(/^:{0,2}/,'::'):'';message=\"Element \".concat(this.targetDescription).concat(normalizedSelector,\" does not have style \\\"\").concat(JSON.stringify(expected),\"\\\"\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});return this;};/**\n     * Assert that the text of the {@link HTMLElement} or an {@link HTMLElement}\n     * matching the `selector` matches the `expected` text, using the\n     * [`textContent`](https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent)\n     * attribute and stripping/collapsing whitespace.\n     *\n     * `expected` can also be a regular expression.\n     *\n     * > Note: This assertion will collapse whitespace if the type you pass in is a string.\n     * > If you are testing specifically for whitespace integrity, pass your expected text\n     * > in as a RegEx pattern.\n     *\n     * **Aliases:** `matchesText`\n     *\n     * @param {string|RegExp} expected\n     * @param {string?} message\n     *\n     * @example\n     * // <h2 id=\"title\">\n     * //   Welcome to <b>QUnit</b>\n     * // </h2>\n     *\n     * assert.dom('#title').hasText('Welcome to QUnit');\n     *\n     * @example\n     * assert.dom('.foo').hasText(/[12]\\d{3}/);\n     *\n     * @see {@link #includesText}\n     */DOMAssertions.prototype.hasText=function(expected,message){var element=this.findTargetElement();if(!element)return this;if(expected instanceof RegExp){var result=expected.test(element.textContent);var actual=element.textContent;if(!message){message=\"Element \".concat(this.targetDescription,\" has text matching \").concat(expected);}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else if(expected.any===true){var result=Boolean(element.textContent);var expected_1=\"Element \".concat(this.targetDescription,\" has a text\");var actual=result?expected_1:\"Element \".concat(this.targetDescription,\" has no text\");if(!message){message=expected_1;}this.pushResult({result:result,actual:actual,expected:expected_1,message:message});}else if(typeof expected==='string'){expected=collapseWhitespace(expected);var actual=collapseWhitespace(element.textContent);var result=actual===expected;if(!message){message=\"Element \".concat(this.targetDescription,\" has text \\\"\").concat(expected,\"\\\"\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else{throw new TypeError(\"You must pass a string or Regular Expression to \\\"hasText\\\". You passed \".concat(expected,\".\"));}return this;};DOMAssertions.prototype.matchesText=function(expected,message){return this.hasText(expected,message);};/**\n     * Assert that the `textContent` property of an {@link HTMLElement} is not empty.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('button.share').hasAnyText();\n     *\n     * @see {@link #hasText}\n     */DOMAssertions.prototype.hasAnyText=function(message){return this.hasText({any:true},message);};/**\n     * Assert that the `textContent` property of an {@link HTMLElement} is empty.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('div').hasNoText();\n     *\n     * @see {@link #hasNoText}\n     */DOMAssertions.prototype.hasNoText=function(message){return this.hasText('',message);};/**\n     * Assert that the text of the {@link HTMLElement} or an {@link HTMLElement}\n     * matching the `selector` contains the given `text`, using the\n     * [`textContent`](https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent)\n     * attribute.\n     *\n     * > Note: This assertion will collapse whitespace in `textContent` before searching.\n     * > If you would like to assert on a string that *should* contain line breaks, tabs,\n     * > more than one space in a row, or starting/ending whitespace, use the {@link #hasText}\n     * > selector and pass your expected text in as a RegEx pattern.\n     *\n     * **Aliases:** `containsText`, `hasTextContaining`\n     *\n     * @param {string} text\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('#title').includesText('Welcome');\n     *\n     * @see {@link #hasText}\n     */DOMAssertions.prototype.includesText=function(text,message){var element=this.findTargetElement();if(!element)return this;var collapsedText=collapseWhitespace(element.textContent);var result=collapsedText.indexOf(text)!==-1;var actual=collapsedText;var expected=text;if(!message){message=\"Element \".concat(this.targetDescription,\" has text containing \\\"\").concat(text,\"\\\"\");}if(!result&&text!==collapseWhitespace(text)){console.warn('The `.includesText()`, `.containsText()`, and `.hasTextContaining()` assertions collapse whitespace. The text you are checking for contains whitespace that may have made your test fail incorrectly. Try the `.hasText()` assertion passing in your expected text as a RegExp pattern. Your text:\\n'+text);}this.pushResult({result:result,actual:actual,expected:expected,message:message});return this;};DOMAssertions.prototype.containsText=function(expected,message){return this.includesText(expected,message);};DOMAssertions.prototype.hasTextContaining=function(expected,message){return this.includesText(expected,message);};/**\n     * Assert that the text of the {@link HTMLElement} or an {@link HTMLElement}\n     * matching the `selector` does not include the given `text`, using the\n     * [`textContent`](https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent)\n     * attribute.\n     *\n     * **Aliases:** `doesNotContainText`, `doesNotHaveTextContaining`\n     *\n     * @param {string} text\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('#title').doesNotIncludeText('Welcome');\n     */DOMAssertions.prototype.doesNotIncludeText=function(text,message){var element=this.findTargetElement();if(!element)return this;var collapsedText=collapseWhitespace(element.textContent);var result=collapsedText.indexOf(text)===-1;var expected=\"Element \".concat(this.targetDescription,\" does not include text \\\"\").concat(text,\"\\\"\");var actual=expected;if(!result){actual=\"Element \".concat(this.targetDescription,\" includes text \\\"\").concat(text,\"\\\"\");}if(!message){message=expected;}this.pushResult({result:result,actual:actual,expected:expected,message:message});return this;};DOMAssertions.prototype.doesNotContainText=function(unexpected,message){return this.doesNotIncludeText(unexpected,message);};DOMAssertions.prototype.doesNotHaveTextContaining=function(unexpected,message){return this.doesNotIncludeText(unexpected,message);};/**\n     * Assert that the `value` property of an {@link HTMLInputElement} matches\n     * the `expected` text or regular expression.\n     *\n     * If no `expected` value is provided, the assertion will fail if the\n     * `value` is an empty string.\n     *\n     * @param {string|RegExp|object?} expected\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.username').hasValue('HSimpson');\n  \n     * @see {@link #hasAnyValue}\n     * @see {@link #hasNoValue}\n     */DOMAssertions.prototype.hasValue=function(expected,message){var element=this.findTargetElement();if(!element)return this;if(arguments.length===0){expected={any:true};}var value=element.value;if(expected instanceof RegExp){var result=expected.test(value);var actual=value;if(!message){message=\"Element \".concat(this.targetDescription,\" has value matching \").concat(expected);}this.pushResult({result:result,actual:actual,expected:expected,message:message});}else if(expected.any===true){var result=Boolean(value);var expected_2=\"Element \".concat(this.targetDescription,\" has a value\");var actual=result?expected_2:\"Element \".concat(this.targetDescription,\" has no value\");if(!message){message=expected_2;}this.pushResult({result:result,actual:actual,expected:expected_2,message:message});}else{var actual=value;var result=actual===expected;if(!message){message=\"Element \".concat(this.targetDescription,\" has value \\\"\").concat(expected,\"\\\"\");}this.pushResult({result:result,actual:actual,expected:expected,message:message});}return this;};/**\n     * Assert that the `value` property of an {@link HTMLInputElement} is not empty.\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.username').hasAnyValue();\n     *\n     * @see {@link #hasValue}\n     * @see {@link #hasNoValue}\n     */DOMAssertions.prototype.hasAnyValue=function(message){return this.hasValue({any:true},message);};/**\n     * Assert that the `value` property of an {@link HTMLInputElement} is empty.\n     *\n     * **Aliases:** `lacksValue`\n     *\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input.username').hasNoValue();\n     *\n     * @see {@link #hasValue}\n     * @see {@link #hasAnyValue}\n     */DOMAssertions.prototype.hasNoValue=function(message){return this.hasValue('',message);};DOMAssertions.prototype.lacksValue=function(message){return this.hasNoValue(message);};/**\n     * Assert that the target selector selects only Elements that are also selected by\n     * compareSelector.\n     *\n     * @param {string} compareSelector\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('p.red').matchesSelector('div.wrapper p:last-child')\n     */DOMAssertions.prototype.matchesSelector=function(compareSelector,message){var targetElements=this.target instanceof Element?[this.target]:this.findElements();var targets=targetElements.length;var matchFailures=matchesSelector(targetElements,compareSelector);var singleElement=targets===1;var selectedByPart=this.target instanceof Element?'passed':\"selected by \".concat(this.target);var actual;var expected;if(matchFailures===0){// no failures matching.\nif(!message){message=singleElement?\"The element \".concat(selectedByPart,\" also matches the selector \").concat(compareSelector,\".\"):\"\".concat(targets,\" elements, selected by \").concat(this.target,\", also match the selector \").concat(compareSelector,\".\");}actual=expected=message;this.pushResult({result:true,actual:actual,expected:expected,message:message});}else{var difference=targets-matchFailures;// there were failures when matching.\nif(!message){message=singleElement?\"The element \".concat(selectedByPart,\" did not also match the selector \").concat(compareSelector,\".\"):\"\".concat(matchFailures,\" out of \").concat(targets,\" elements selected by \").concat(this.target,\" did not also match the selector \").concat(compareSelector,\".\");}actual=singleElement?message:\"\".concat(difference,\" elements matched \").concat(compareSelector,\".\");expected=singleElement?\"The element should have matched \".concat(compareSelector,\".\"):\"\".concat(targets,\" elements should have matched \").concat(compareSelector,\".\");this.pushResult({result:false,actual:actual,expected:expected,message:message});}return this;};/**\n     * Assert that the target selector selects only Elements that are not also selected by\n     * compareSelector.\n     *\n     * @param {string} compareSelector\n     * @param {string?} message\n     *\n     * @example\n     * assert.dom('input').doesNotMatchSelector('input[disabled]')\n     */DOMAssertions.prototype.doesNotMatchSelector=function(compareSelector,message){var targetElements=this.target instanceof Element?[this.target]:this.findElements();var targets=targetElements.length;var matchFailures=matchesSelector(targetElements,compareSelector);var singleElement=targets===1;var selectedByPart=this.target instanceof Element?'passed':\"selected by \".concat(this.target);var actual;var expected;if(matchFailures===targets){// the assertion is successful because no element matched the other selector.\nif(!message){message=singleElement?\"The element \".concat(selectedByPart,\" did not also match the selector \").concat(compareSelector,\".\"):\"\".concat(targets,\" elements, selected by \").concat(this.target,\", did not also match the selector \").concat(compareSelector,\".\");}actual=expected=message;this.pushResult({result:true,actual:actual,expected:expected,message:message});}else{var difference=targets-matchFailures;// the assertion fails because at least one element matched the other selector.\nif(!message){message=singleElement?\"The element \".concat(selectedByPart,\" must not also match the selector \").concat(compareSelector,\".\"):\"\".concat(difference,\" elements out of \").concat(targets,\", selected by \").concat(this.target,\", must not also match the selector \").concat(compareSelector,\".\");}actual=singleElement?\"The element \".concat(selectedByPart,\" matched \").concat(compareSelector,\".\"):\"\".concat(matchFailures,\" elements did not match \").concat(compareSelector,\".\");expected=singleElement?message:\"\".concat(targets,\" elements should not have matched \").concat(compareSelector,\".\");this.pushResult({result:false,actual:actual,expected:expected,message:message});}return this;};/**\n     * Assert that the tagName of the {@link HTMLElement} or an {@link HTMLElement}\n     * matching the `selector` matches the `expected` tagName, using the\n     * [`tagName`](https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName)\n     * property of the {@link HTMLElement}.\n     *\n     * @param {string} expected\n     * @param {string?} message\n     *\n     * @example\n     * // <h1 id=\"title\">\n     * //   Title\n     * // </h1>\n     *\n     * assert.dom('#title').hasTagName('h1');\n     */DOMAssertions.prototype.hasTagName=function(tagName,message){var element=this.findTargetElement();var actual;var expected;if(!element)return this;if(typeof tagName!=='string'){throw new TypeError(\"You must pass a string to \\\"hasTagName\\\". You passed \".concat(tagName,\".\"));}actual=element.tagName.toLowerCase();expected=tagName.toLowerCase();if(actual===expected){if(!message){message=\"Element \".concat(this.targetDescription,\" has tagName \").concat(expected);}this.pushResult({result:true,actual:actual,expected:expected,message:message});}else{if(!message){message=\"Element \".concat(this.targetDescription,\" does not have tagName \").concat(expected);}this.pushResult({result:false,actual:actual,expected:expected,message:message});}return this;};/**\n     * Assert that the tagName of the {@link HTMLElement} or an {@link HTMLElement}\n     * matching the `selector` does not match the `expected` tagName, using the\n     * [`tagName`](https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName)\n     * property of the {@link HTMLElement}.\n     *\n     * @param {string} expected\n     * @param {string?} message\n     *\n     * @example\n     * // <section id=\"block\">\n     * //   Title\n     * // </section>\n     *\n     * assert.dom('section#block').doesNotHaveTagName('div');\n     */DOMAssertions.prototype.doesNotHaveTagName=function(tagName,message){var element=this.findTargetElement();var actual;var expected;if(!element)return this;if(typeof tagName!=='string'){throw new TypeError(\"You must pass a string to \\\"doesNotHaveTagName\\\". You passed \".concat(tagName,\".\"));}actual=element.tagName.toLowerCase();expected=tagName.toLowerCase();if(actual!==expected){if(!message){message=\"Element \".concat(this.targetDescription,\" does not have tagName \").concat(expected);}this.pushResult({result:true,actual:actual,expected:expected,message:message});}else{if(!message){message=\"Element \".concat(this.targetDescription,\" has tagName \").concat(expected);}this.pushResult({result:false,actual:actual,expected:expected,message:message});}return this;};/**\n     * @private\n     */DOMAssertions.prototype.pushResult=function(result){this.testContext.pushResult(result);};/**\n     * Finds a valid HTMLElement from target, or pushes a failing assertion if a valid\n     * element is not found.\n     * @private\n     * @returns (HTMLElement|null) a valid HTMLElement, or null\n     */DOMAssertions.prototype.findTargetElement=function(){var el=this.findElement();if(el===null){var message=\"Element \".concat(this.target||'<unknown>',\" should exist\");this.pushResult({message:message,result:false,actual:undefined,expected:undefined});return null;}return el;};/**\n     * Finds a valid HTMLElement from target\n     * @private\n     * @returns (HTMLElement|null) a valid HTMLElement, or null\n     * @throws TypeError will be thrown if target is an unrecognized type\n     */DOMAssertions.prototype.findElement=function(){if(this.target===null){return null;}else if(typeof this.target==='string'){return this.rootElement.querySelector(this.target);}else if(this.target instanceof Element){return this.target;}else{throw new TypeError(\"Unexpected Parameter: \".concat(this.target));}};/**\n     * Finds a collection of Element instances from target using querySelectorAll\n     * @private\n     * @returns (Element[]) an array of Element instances\n     * @throws TypeError will be thrown if target is an unrecognized type\n     */DOMAssertions.prototype.findElements=function(){if(this.target===null){return[];}else if(typeof this.target==='string'){return toArray(this.rootElement.querySelectorAll(this.target));}else if(this.target instanceof Element){return[this.target];}else{throw new TypeError(\"Unexpected Parameter: \".concat(this.target));}};Object.defineProperty(DOMAssertions.prototype,\"targetDescription\",{/**\n         * @private\n         */get:function(){return elementToString(this.target);},enumerable:false,configurable:true});return DOMAssertions;}();var _getRootElement=function(){return null;};function overrideRootElement(fn){_getRootElement=fn;}function getRootElement(){return _getRootElement();}function install(assert){assert.dom=function(target,rootElement){if(!isValidRootElement(rootElement)){throw new Error(\"\".concat(rootElement,\" is not a valid root element\"));}rootElement=rootElement||this.dom.rootElement||getRootElement();if(arguments.length===0){target=rootElement instanceof Element?rootElement:null;}return new DOMAssertions(target,rootElement,this);};function isValidRootElement(element){return!element||typeof element==='object'&&typeof element.querySelector==='function'&&typeof element.querySelectorAll==='function';}}function setup(assert,options){if(options===void 0){options={};}install(assert);var getRootElement=typeof options.getRootElement==='function'?options.getRootElement:function(){return document.querySelector('#ember-testing');};overrideRootElement(getRootElement);}\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/qunit-dom/dist/es/index.js?");

/***/ }),

/***/ "../node_modules/sinon/pkg/sinon-esm.js":
/*!**********************************************!*\
  !*** ../node_modules/sinon/pkg/sinon-esm.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FakeXMLHttpRequest: () => (/* binding */ _FakeXMLHttpRequest),\n/* harmony export */   addBehavior: () => (/* binding */ _addBehavior),\n/* harmony export */   assert: () => (/* binding */ _assert),\n/* harmony export */   createFakeServer: () => (/* binding */ _createFakeServer),\n/* harmony export */   createFakeServerWithClock: () => (/* binding */ _createFakeServerWithClock),\n/* harmony export */   createSandbox: () => (/* binding */ _createSandbox),\n/* harmony export */   createStubInstance: () => (/* binding */ _createStubInstance),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   defaultConfig: () => (/* binding */ _defaultConfig),\n/* harmony export */   define: () => (/* binding */ _define),\n/* harmony export */   expectation: () => (/* binding */ _expectation),\n/* harmony export */   fake: () => (/* binding */ _fake),\n/* harmony export */   fakeServer: () => (/* binding */ _fakeServer),\n/* harmony export */   fakeServerWithClock: () => (/* binding */ _fakeServerWithClock),\n/* harmony export */   getFakes: () => (/* binding */ _getFakes),\n/* harmony export */   inject: () => (/* binding */ _inject),\n/* harmony export */   leakThreshold: () => (/* binding */ _leakThreshold),\n/* harmony export */   match: () => (/* binding */ _match),\n/* harmony export */   mock: () => (/* binding */ _mock),\n/* harmony export */   promise: () => (/* binding */ _promise),\n/* harmony export */   replace: () => (/* binding */ _replace),\n/* harmony export */   replaceGetter: () => (/* binding */ _replaceGetter),\n/* harmony export */   replaceSetter: () => (/* binding */ _replaceSetter),\n/* harmony export */   reset: () => (/* binding */ _reset),\n/* harmony export */   resetBehavior: () => (/* binding */ _resetBehavior),\n/* harmony export */   resetHistory: () => (/* binding */ _resetHistory),\n/* harmony export */   restore: () => (/* binding */ _restore),\n/* harmony export */   restoreContext: () => (/* binding */ _restoreContext),\n/* harmony export */   restoreObject: () => (/* binding */ _restoreObject),\n/* harmony export */   serverPrototype: () => (/* binding */ _serverPrototype),\n/* harmony export */   spy: () => (/* binding */ _spy),\n/* harmony export */   stub: () => (/* binding */ _stub),\n/* harmony export */   timers: () => (/* binding */ _timers),\n/* harmony export */   useFakeServer: () => (/* binding */ _useFakeServer),\n/* harmony export */   useFakeTimers: () => (/* binding */ _useFakeTimers),\n/* harmony export */   useFakeXMLHttpRequest: () => (/* binding */ _useFakeXMLHttpRequest),\n/* harmony export */   usingPromise: () => (/* binding */ _usingPromise),\n/* harmony export */   verify: () => (/* binding */ _verify),\n/* harmony export */   verifyAndRestore: () => (/* binding */ _verifyAndRestore),\n/* harmony export */   xhr: () => (/* binding */ _xhr)\n/* harmony export */ });\n/* Sinon.JS 17.0.1, 2023-11-01, @license BSD-3 */let sinon;(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o;}return r;})()({1:[function(require,module,exports){\"use strict\";const behavior=require(\"./sinon/behavior\");const createSandbox=require(\"./sinon/create-sandbox\");const extend=require(\"./sinon/util/core/extend\");const fakeTimers=require(\"./sinon/util/fake-timers\");const Sandbox=require(\"./sinon/sandbox\");const stub=require(\"./sinon/stub\");const promise=require(\"./sinon/promise\");const nise=require(\"nise\");const assert=require(\"assert\");/**\n * @param {object} opts injection point to override the default XHR lib in testing\n * @param {object} opts.sinonXhrLib\n * @returns {object} a configured sandbox\n */module.exports=function createApi(opts={sinonXhrLib:nise}){assert(opts?.sinonXhrLib,\"No XHR lib passed in\");const{sinonXhrLib}=opts;const apiMethods={createSandbox:createSandbox,match:require(\"@sinonjs/samsam\").createMatcher,restoreObject:require(\"./sinon/restore-object\"),expectation:require(\"./sinon/mock-expectation\"),defaultConfig:require(\"./sinon/util/core/default-config\"),// fake timers\ntimers:fakeTimers.timers,// fake XHR\nxhr:sinonXhrLib.fakeXhr.xhr,FakeXMLHttpRequest:sinonXhrLib.fakeXhr.FakeXMLHttpRequest,// fake server\nfakeServer:sinonXhrLib.fakeServer,fakeServerWithClock:sinonXhrLib.fakeServerWithClock,createFakeServer:sinonXhrLib.fakeServer.create.bind(sinonXhrLib.fakeServer),createFakeServerWithClock:sinonXhrLib.fakeServerWithClock.create.bind(sinonXhrLib.fakeServerWithClock),addBehavior:function(name,fn){behavior.addBehavior(stub,name,fn);},// fake promise\npromise:promise};const sandbox=new Sandbox();return extend(sandbox,apiMethods);};},{\"./sinon/behavior\":5,\"./sinon/create-sandbox\":8,\"./sinon/mock-expectation\":12,\"./sinon/promise\":14,\"./sinon/restore-object\":19,\"./sinon/sandbox\":20,\"./sinon/stub\":23,\"./sinon/util/core/default-config\":25,\"./sinon/util/core/extend\":27,\"./sinon/util/fake-timers\":42,\"@sinonjs/samsam\":89,\"assert\":112,\"nise\":133}],2:[function(require,module,exports){\"use strict\";// eslint-disable-next-line no-undef\nsinon=require(\"./sinon\");},{\"./sinon\":3}],3:[function(require,module,exports){\"use strict\";const createApi=require(\"./create-sinon-api\");module.exports=createApi();},{\"./create-sinon-api\":1}],4:[function(require,module,exports){\"use strict\";/** @module */const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const calledInOrder=require(\"@sinonjs/commons\").calledInOrder;const createMatcher=require(\"@sinonjs/samsam\").createMatcher;const orderByFirstCall=require(\"@sinonjs/commons\").orderByFirstCall;const timesInWords=require(\"./util/core/times-in-words\");const inspect=require(\"util\").inspect;const stringSlice=require(\"@sinonjs/commons\").prototypes.string.slice;const globalObject=require(\"@sinonjs/commons\").global;const arraySlice=arrayProto.slice;const concat=arrayProto.concat;const forEach=arrayProto.forEach;const join=arrayProto.join;const splice=arrayProto.splice;function applyDefaults(obj,defaults){for(const key of Object.keys(defaults)){const val=obj[key];if(val===null||typeof val===\"undefined\"){obj[key]=defaults[key];}}}/**\n * @typedef {object} CreateAssertOptions\n * @global\n *\n * @property {boolean} [shouldLimitAssertionLogs] default is false\n * @property {number}  [assertionLogLimit] default is 10K\n */ /**\n * Create an assertion object that exposes several methods to invoke\n *\n * @param {CreateAssertOptions}  [opts] options bag\n * @returns {object} object with multiple assertion methods\n */function createAssertObject(opts){const cleanedAssertOptions=opts||{};applyDefaults(cleanedAssertOptions,{shouldLimitAssertionLogs:false,assertionLogLimit:1e4});const assert={failException:\"AssertError\",fail:function fail(message){let msg=message;if(cleanedAssertOptions.shouldLimitAssertionLogs){msg=message.substring(0,cleanedAssertOptions.assertionLogLimit);}const error=new Error(msg);error.name=this.failException||assert.failException;throw error;},pass:function pass(){return;},callOrder:function assertCallOrder(){verifyIsStub.apply(null,arguments);let expected=\"\";let actual=\"\";if(!calledInOrder(arguments)){try{expected=join(arguments,\", \");const calls=arraySlice(arguments);let i=calls.length;while(i){if(!calls[--i].called){splice(calls,i,1);}}actual=join(orderByFirstCall(calls),\", \");}catch(e){// If this fails, we'll just fall back to the blank string\n}failAssertion(this,`expected ${expected} to be called in order but were called as ${actual}`);}else{assert.pass(\"callOrder\");}},callCount:function assertCallCount(method,count){verifyIsStub(method);let msg;if(typeof count!==\"number\"){msg=`expected ${inspect(count)} to be a number `+`but was of type ${typeof count}`;failAssertion(this,msg);}else if(method.callCount!==count){msg=`expected %n to be called ${timesInWords(count)} `+`but was called %c%C`;failAssertion(this,method.printf(msg));}else{assert.pass(\"callCount\");}},expose:function expose(target,options){if(!target){throw new TypeError(\"target is null or undefined\");}const o=options||{};const prefix=typeof o.prefix===\"undefined\"&&\"assert\"||o.prefix;const includeFail=typeof o.includeFail===\"undefined\"||Boolean(o.includeFail);const instance=this;forEach(Object.keys(instance),function(method){if(method!==\"expose\"&&(includeFail||!/^(fail)/.test(method))){target[exposedName(prefix,method)]=instance[method];}});return target;},match:function match(actual,expectation){const matcher=createMatcher(expectation);if(matcher.test(actual)){assert.pass(\"match\");}else{const formatted=[\"expected value to match\",`    expected = ${inspect(expectation)}`,`    actual = ${inspect(actual)}`];failAssertion(this,join(formatted,\"\\n\"));}}};function verifyIsStub(){const args=arraySlice(arguments);forEach(args,function(method){if(!method){assert.fail(\"fake is not a spy\");}if(method.proxy&&method.proxy.isSinonProxy){verifyIsStub(method.proxy);}else{if(typeof method!==\"function\"){assert.fail(`${method} is not a function`);}if(typeof method.getCall!==\"function\"){assert.fail(`${method} is not stubbed`);}}});}function verifyIsValidAssertion(assertionMethod,assertionArgs){switch(assertionMethod){case\"notCalled\":case\"called\":case\"calledOnce\":case\"calledTwice\":case\"calledThrice\":if(assertionArgs.length!==0){assert.fail(`${assertionMethod} takes 1 argument but was called with ${assertionArgs.length+1} arguments`);}break;default:break;}}function failAssertion(object,msg){const obj=object||globalObject;const failMethod=obj.fail||assert.fail;failMethod.call(obj,msg);}function mirrorPropAsAssertion(name,method,message){let msg=message;let meth=method;if(arguments.length===2){msg=method;meth=name;}assert[name]=function(fake){verifyIsStub(fake);const args=arraySlice(arguments,1);let failed=false;verifyIsValidAssertion(name,args);if(typeof meth===\"function\"){failed=!meth(fake);}else{failed=typeof fake[meth]===\"function\"?!fake[meth].apply(fake,args):!fake[meth];}if(failed){failAssertion(this,(fake.printf||fake.proxy.printf).apply(fake,concat([msg],args)));}else{assert.pass(name);}};}function exposedName(prefix,prop){return!prefix||/^fail/.test(prop)?prop:prefix+stringSlice(prop,0,1).toUpperCase()+stringSlice(prop,1);}mirrorPropAsAssertion(\"called\",\"expected %n to have been called at least once but was never called\");mirrorPropAsAssertion(\"notCalled\",function(spy){return!spy.called;},\"expected %n to not have been called but was called %c%C\");mirrorPropAsAssertion(\"calledOnce\",\"expected %n to be called once but was called %c%C\");mirrorPropAsAssertion(\"calledTwice\",\"expected %n to be called twice but was called %c%C\");mirrorPropAsAssertion(\"calledThrice\",\"expected %n to be called thrice but was called %c%C\");mirrorPropAsAssertion(\"calledOn\",\"expected %n to be called with %1 as this but was called with %t\");mirrorPropAsAssertion(\"alwaysCalledOn\",\"expected %n to always be called with %1 as this but was called with %t\");mirrorPropAsAssertion(\"calledWithNew\",\"expected %n to be called with new\");mirrorPropAsAssertion(\"alwaysCalledWithNew\",\"expected %n to always be called with new\");mirrorPropAsAssertion(\"calledWith\",\"expected %n to be called with arguments %D\");mirrorPropAsAssertion(\"calledWithMatch\",\"expected %n to be called with match %D\");mirrorPropAsAssertion(\"alwaysCalledWith\",\"expected %n to always be called with arguments %D\");mirrorPropAsAssertion(\"alwaysCalledWithMatch\",\"expected %n to always be called with match %D\");mirrorPropAsAssertion(\"calledWithExactly\",\"expected %n to be called with exact arguments %D\");mirrorPropAsAssertion(\"calledOnceWithExactly\",\"expected %n to be called once and with exact arguments %D\");mirrorPropAsAssertion(\"calledOnceWithMatch\",\"expected %n to be called once and with match %D\");mirrorPropAsAssertion(\"alwaysCalledWithExactly\",\"expected %n to always be called with exact arguments %D\");mirrorPropAsAssertion(\"neverCalledWith\",\"expected %n to never be called with arguments %*%C\");mirrorPropAsAssertion(\"neverCalledWithMatch\",\"expected %n to never be called with match %*%C\");mirrorPropAsAssertion(\"threw\",\"%n did not throw exception%C\");mirrorPropAsAssertion(\"alwaysThrew\",\"%n did not always throw exception%C\");return assert;}module.exports=createAssertObject();module.exports.createAssertObject=createAssertObject;},{\"./util/core/times-in-words\":37,\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89,\"util\":118}],5:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const extend=require(\"./util/core/extend\");const functionName=require(\"@sinonjs/commons\").functionName;const nextTick=require(\"./util/core/next-tick\");const valueToString=require(\"@sinonjs/commons\").valueToString;const exportAsyncBehaviors=require(\"./util/core/export-async-behaviors\");const concat=arrayProto.concat;const join=arrayProto.join;const reverse=arrayProto.reverse;const slice=arrayProto.slice;const useLeftMostCallback=-1;const useRightMostCallback=-2;function getCallback(behavior,args){const callArgAt=behavior.callArgAt;if(callArgAt>=0){return args[callArgAt];}let argumentList;if(callArgAt===useLeftMostCallback){argumentList=args;}if(callArgAt===useRightMostCallback){argumentList=reverse(slice(args));}const callArgProp=behavior.callArgProp;for(let i=0,l=argumentList.length;i<l;++i){if(!callArgProp&&typeof argumentList[i]===\"function\"){return argumentList[i];}if(callArgProp&&argumentList[i]&&typeof argumentList[i][callArgProp]===\"function\"){return argumentList[i][callArgProp];}}return null;}function getCallbackError(behavior,func,args){if(behavior.callArgAt<0){let msg;if(behavior.callArgProp){msg=`${functionName(behavior.stub)} expected to yield to '${valueToString(behavior.callArgProp)}', but no object with such a property was passed.`;}else{msg=`${functionName(behavior.stub)} expected to yield, but no callback was passed.`;}if(args.length>0){msg+=` Received [${join(args,\", \")}]`;}return msg;}return`argument at index ${behavior.callArgAt} is not a function: ${func}`;}function ensureArgs(name,behavior,args){// map function name to internal property\n//   callsArg => callArgAt\nconst property=name.replace(/sArg/,\"ArgAt\");const index=behavior[property];if(index>=args.length){throw new TypeError(`${name} failed: ${index+1} arguments required but only ${args.length} present`);}}function callCallback(behavior,args){if(typeof behavior.callArgAt===\"number\"){ensureArgs(\"callsArg\",behavior,args);const func=getCallback(behavior,args);if(typeof func!==\"function\"){throw new TypeError(getCallbackError(behavior,func,args));}if(behavior.callbackAsync){nextTick(function(){func.apply(behavior.callbackContext,behavior.callbackArguments);});}else{return func.apply(behavior.callbackContext,behavior.callbackArguments);}}return undefined;}const proto={create:function create(stub){const behavior=extend({},proto);delete behavior.create;delete behavior.addBehavior;delete behavior.createBehavior;behavior.stub=stub;if(stub.defaultBehavior&&stub.defaultBehavior.promiseLibrary){behavior.promiseLibrary=stub.defaultBehavior.promiseLibrary;}return behavior;},isPresent:function isPresent(){return typeof this.callArgAt===\"number\"||this.exception||this.exceptionCreator||typeof this.returnArgAt===\"number\"||this.returnThis||typeof this.resolveArgAt===\"number\"||this.resolveThis||typeof this.throwArgAt===\"number\"||this.fakeFn||this.returnValueDefined;},/*eslint complexity: [\"error\", 20]*/invoke:function invoke(context,args){/*\n         * callCallback (conditionally) calls ensureArgs\n         *\n         * Note: callCallback intentionally happens before\n         * everything else and cannot be moved lower\n         */const returnValue=callCallback(this,args);if(this.exception){throw this.exception;}else if(this.exceptionCreator){this.exception=this.exceptionCreator();this.exceptionCreator=undefined;throw this.exception;}else if(typeof this.returnArgAt===\"number\"){ensureArgs(\"returnsArg\",this,args);return args[this.returnArgAt];}else if(this.returnThis){return context;}else if(typeof this.throwArgAt===\"number\"){ensureArgs(\"throwsArg\",this,args);throw args[this.throwArgAt];}else if(this.fakeFn){return this.fakeFn.apply(context,args);}else if(typeof this.resolveArgAt===\"number\"){ensureArgs(\"resolvesArg\",this,args);return(this.promiseLibrary||Promise).resolve(args[this.resolveArgAt]);}else if(this.resolveThis){return(this.promiseLibrary||Promise).resolve(context);}else if(this.resolve){return(this.promiseLibrary||Promise).resolve(this.returnValue);}else if(this.reject){return(this.promiseLibrary||Promise).reject(this.returnValue);}else if(this.callsThrough){const wrappedMethod=this.effectiveWrappedMethod();return wrappedMethod.apply(context,args);}else if(this.callsThroughWithNew){// Get the original method (assumed to be a constructor in this case)\nconst WrappedClass=this.effectiveWrappedMethod();// Turn the arguments object into a normal array\nconst argsArray=slice(args);// Call the constructor\nconst F=WrappedClass.bind.apply(WrappedClass,concat([null],argsArray));return new F();}else if(typeof this.returnValue!==\"undefined\"){return this.returnValue;}else if(typeof this.callArgAt===\"number\"){return returnValue;}return this.returnValue;},effectiveWrappedMethod:function effectiveWrappedMethod(){for(let stubb=this.stub;stubb;stubb=stubb.parent){if(stubb.wrappedMethod){return stubb.wrappedMethod;}}throw new Error(\"Unable to find wrapped method\");},onCall:function onCall(index){return this.stub.onCall(index);},onFirstCall:function onFirstCall(){return this.stub.onFirstCall();},onSecondCall:function onSecondCall(){return this.stub.onSecondCall();},onThirdCall:function onThirdCall(){return this.stub.onThirdCall();},withArgs:function withArgs(/* arguments */){throw new Error('Defining a stub by invoking \"stub.onCall(...).withArgs(...)\" '+'is not supported. Use \"stub.withArgs(...).onCall(...)\" '+\"to define sequential behavior for calls with certain arguments.\");}};function createBehavior(behaviorMethod){return function(){this.defaultBehavior=this.defaultBehavior||proto.create(this);this.defaultBehavior[behaviorMethod].apply(this.defaultBehavior,arguments);return this;};}function addBehavior(stub,name,fn){proto[name]=function(){fn.apply(this,concat([this],slice(arguments)));return this.stub||this;};stub[name]=createBehavior(name);}proto.addBehavior=addBehavior;proto.createBehavior=createBehavior;const asyncBehaviors=exportAsyncBehaviors(proto);module.exports=extend.nonEnum({},proto,asyncBehaviors);},{\"./util/core/export-async-behaviors\":26,\"./util/core/extend\":27,\"./util/core/next-tick\":35,\"@sinonjs/commons\":49}],6:[function(require,module,exports){\"use strict\";const walk=require(\"./util/core/walk\");const getPropertyDescriptor=require(\"./util/core/get-property-descriptor\");const hasOwnProperty=require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;const push=require(\"@sinonjs/commons\").prototypes.array.push;function collectMethod(methods,object,prop,propOwner){if(typeof getPropertyDescriptor(propOwner,prop).value===\"function\"&&hasOwnProperty(object,prop)){push(methods,object[prop]);}}// This function returns an array of all the own methods on the passed object\nfunction collectOwnMethods(object){const methods=[];walk(object,collectMethod.bind(null,methods,object));return methods;}module.exports=collectOwnMethods;},{\"./util/core/get-property-descriptor\":30,\"./util/core/walk\":40,\"@sinonjs/commons\":49}],7:[function(require,module,exports){\"use strict\";module.exports=class Colorizer{constructor(supportsColor=require(\"supports-color\")){this.supportsColor=supportsColor;}/**\n     * Should be renamed to true #privateField\n     * when we can ensure ES2022 support\n     *\n     * @private\n     */colorize(str,color){if(this.supportsColor.stdout===false){return str;}return`\\x1b[${color}m${str}\\x1b[0m`;}red(str){return this.colorize(str,31);}green(str){return this.colorize(str,32);}cyan(str){return this.colorize(str,96);}white(str){return this.colorize(str,39);}bold(str){return this.colorize(str,1);}};},{\"supports-color\":177}],8:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const Sandbox=require(\"./sandbox\");const forEach=arrayProto.forEach;const push=arrayProto.push;function prepareSandboxFromConfig(config){const sandbox=new Sandbox({assertOptions:config.assertOptions});if(config.useFakeServer){if(typeof config.useFakeServer===\"object\"){sandbox.serverPrototype=config.useFakeServer;}sandbox.useFakeServer();}if(config.useFakeTimers){if(typeof config.useFakeTimers===\"object\"){sandbox.useFakeTimers(config.useFakeTimers);}else{sandbox.useFakeTimers();}}return sandbox;}function exposeValue(sandbox,config,key,value){if(!value){return;}if(config.injectInto&&!(key in config.injectInto)){config.injectInto[key]=value;push(sandbox.injectedKeys,key);}else{push(sandbox.args,value);}}/**\n * Options to customize a sandbox\n *\n * The sandbox's methods can be injected into another object for\n * convenience. The `injectInto` configuration option can name an\n * object to add properties to.\n *\n * @typedef {object} SandboxConfig\n * @property {string[]} properties The properties of the API to expose on the sandbox. Examples: ['spy', 'fake', 'restore']\n * @property {object} injectInto an object in which to inject properties from the sandbox (a facade). This is mostly an integration feature (sinon-test being one).\n * @property {boolean} useFakeTimers  whether timers are faked by default\n * @property {boolean|object} useFakeServer  whether XHR's are faked and the server feature enabled by default. It could also be a different default fake server implementation to use\n * @property {object} [assertOptions] see CreateAssertOptions in ./assert\n *\n * This type def is really suffering from JSDoc not having standardized\n * how to reference types defined in other modules :(\n */ /**\n * A configured sinon sandbox (private type)\n *\n * @typedef {object} ConfiguredSinonSandboxType\n * @private\n * @augments Sandbox\n * @property {string[]} injectedKeys the keys that have been injected (from config.injectInto)\n * @property {*[]} args the arguments for the sandbox\n */ /**\n * Create a sandbox\n *\n * As of Sinon 5 the `sinon` instance itself is a Sandbox, so you\n * hardly ever need to create additional instances for the sake of testing\n *\n * @param config {SandboxConfig}\n * @returns {Sandbox}\n */function createSandbox(config){if(!config){return new Sandbox();}const configuredSandbox=prepareSandboxFromConfig(config);configuredSandbox.args=configuredSandbox.args||[];configuredSandbox.injectedKeys=[];configuredSandbox.injectInto=config.injectInto;const exposed=configuredSandbox.inject({});if(config.properties){forEach(config.properties,function(prop){const value=exposed[prop]||prop===\"sandbox\"&&configuredSandbox;exposeValue(configuredSandbox,config,prop,value);});}else{exposeValue(configuredSandbox,config,\"sandbox\");}return configuredSandbox;}module.exports=createSandbox;},{\"./sandbox\":20,\"@sinonjs/commons\":49}],9:[function(require,module,exports){\"use strict\";const stub=require(\"./stub\");const sinonType=require(\"./util/core/sinon-type\");const forEach=require(\"@sinonjs/commons\").prototypes.array.forEach;function isStub(value){return sinonType.get(value)===\"stub\";}module.exports=function createStubInstance(constructor,overrides){if(typeof constructor!==\"function\"){throw new TypeError(\"The constructor should be a function.\");}const stubInstance=Object.create(constructor.prototype);sinonType.set(stubInstance,\"stub-instance\");const stubbedObject=stub(stubInstance);forEach(Object.keys(overrides||{}),function(propertyName){if(propertyName in stubbedObject){const value=overrides[propertyName];if(isStub(value)){stubbedObject[propertyName]=value;}else{stubbedObject[propertyName].returns(value);}}else{throw new Error(`Cannot stub ${propertyName}. Property does not exist!`);}});return stubbedObject;};},{\"./stub\":23,\"./util/core/sinon-type\":36,\"@sinonjs/commons\":49}],10:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const isPropertyConfigurable=require(\"./util/core/is-property-configurable\");const exportAsyncBehaviors=require(\"./util/core/export-async-behaviors\");const extend=require(\"./util/core/extend\");const slice=arrayProto.slice;const useLeftMostCallback=-1;const useRightMostCallback=-2;function throwsException(fake,error,message){if(typeof error===\"function\"){fake.exceptionCreator=error;}else if(typeof error===\"string\"){fake.exceptionCreator=function(){const newException=new Error(message||`Sinon-provided ${error}`);newException.name=error;return newException;};}else if(!error){fake.exceptionCreator=function(){return new Error(\"Error\");};}else{fake.exception=error;}}const SKIP_OPTIONS_FOR_YIELDS={skipReturn:true,skipThrows:true};function clear(fake,options){fake.fakeFn=undefined;fake.callsThrough=undefined;fake.callsThroughWithNew=undefined;if(!options||!options.skipThrows){fake.exception=undefined;fake.exceptionCreator=undefined;fake.throwArgAt=undefined;}fake.callArgAt=undefined;fake.callbackArguments=undefined;fake.callbackContext=undefined;fake.callArgProp=undefined;fake.callbackAsync=undefined;if(!options||!options.skipReturn){fake.returnValue=undefined;fake.returnValueDefined=undefined;fake.returnArgAt=undefined;fake.returnThis=undefined;}fake.resolve=undefined;fake.resolveThis=undefined;fake.resolveArgAt=undefined;fake.reject=undefined;}const defaultBehaviors={callsFake:function callsFake(fake,fn){clear(fake);fake.fakeFn=fn;},callsArg:function callsArg(fake,index){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.callArgAt=index;fake.callbackArguments=[];},callsArgOn:function callsArgOn(fake,index,context){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.callArgAt=index;fake.callbackArguments=[];fake.callbackContext=context;},callsArgWith:function callsArgWith(fake,index){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.callArgAt=index;fake.callbackArguments=slice(arguments,2);},callsArgOnWith:function callsArgWith(fake,index,context){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.callArgAt=index;fake.callbackArguments=slice(arguments,3);fake.callbackContext=context;},usingPromise:function usingPromise(fake,promiseLibrary){fake.promiseLibrary=promiseLibrary;},yields:function(fake){clear(fake,SKIP_OPTIONS_FOR_YIELDS);fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice(arguments,1);},yieldsRight:function(fake){clear(fake,SKIP_OPTIONS_FOR_YIELDS);fake.callArgAt=useRightMostCallback;fake.callbackArguments=slice(arguments,1);},yieldsOn:function(fake,context){clear(fake,SKIP_OPTIONS_FOR_YIELDS);fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice(arguments,2);fake.callbackContext=context;},yieldsTo:function(fake,prop){clear(fake,SKIP_OPTIONS_FOR_YIELDS);fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice(arguments,2);fake.callArgProp=prop;},yieldsToOn:function(fake,prop,context){clear(fake,SKIP_OPTIONS_FOR_YIELDS);fake.callArgAt=useLeftMostCallback;fake.callbackArguments=slice(arguments,3);fake.callbackContext=context;fake.callArgProp=prop;},throws:throwsException,throwsException:throwsException,returns:function returns(fake,value){clear(fake);fake.returnValue=value;fake.returnValueDefined=true;},returnsArg:function returnsArg(fake,index){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.returnArgAt=index;},throwsArg:function throwsArg(fake,index){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.throwArgAt=index;},returnsThis:function returnsThis(fake){clear(fake);fake.returnThis=true;},resolves:function resolves(fake,value){clear(fake);fake.returnValue=value;fake.resolve=true;fake.returnValueDefined=true;},resolvesArg:function resolvesArg(fake,index){if(typeof index!==\"number\"){throw new TypeError(\"argument index is not number\");}clear(fake);fake.resolveArgAt=index;fake.resolve=true;},rejects:function rejects(fake,error,message){let reason;if(typeof error===\"string\"){reason=new Error(message||\"\");reason.name=error;}else if(!error){reason=new Error(\"Error\");}else{reason=error;}clear(fake);fake.returnValue=reason;fake.reject=true;fake.returnValueDefined=true;return fake;},resolvesThis:function resolvesThis(fake){clear(fake);fake.resolveThis=true;},callThrough:function callThrough(fake){clear(fake);fake.callsThrough=true;},callThroughWithNew:function callThroughWithNew(fake){clear(fake);fake.callsThroughWithNew=true;},get:function get(fake,getterFunction){const rootStub=fake.stub||fake;Object.defineProperty(rootStub.rootObj,rootStub.propName,{get:getterFunction,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)});return fake;},set:function set(fake,setterFunction){const rootStub=fake.stub||fake;Object.defineProperty(rootStub.rootObj,rootStub.propName,// eslint-disable-next-line accessor-pairs\n{set:setterFunction,configurable:isPropertyConfigurable(rootStub.rootObj,rootStub.propName)});return fake;},value:function value(fake,newVal){const rootStub=fake.stub||fake;Object.defineProperty(rootStub.rootObj,rootStub.propName,{value:newVal,enumerable:true,writable:true,configurable:rootStub.shadowsPropOnPrototype||isPropertyConfigurable(rootStub.rootObj,rootStub.propName)});return fake;}};const asyncBehaviors=exportAsyncBehaviors(defaultBehaviors);module.exports=extend({},defaultBehaviors,asyncBehaviors);},{\"./util/core/export-async-behaviors\":26,\"./util/core/extend\":27,\"./util/core/is-property-configurable\":33,\"@sinonjs/commons\":49}],11:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const createProxy=require(\"./proxy\");const nextTick=require(\"./util/core/next-tick\");const slice=arrayProto.slice;let promiseLib=Promise;module.exports=fake;/**\n * Returns a `fake` that records all calls, arguments and return values.\n *\n * When an `f` argument is supplied, this implementation will be used.\n *\n * @example\n * // create an empty fake\n * var f1 = sinon.fake();\n *\n * f1();\n *\n * f1.calledOnce()\n * // true\n *\n * @example\n * function greet(greeting) {\n *   console.log(`Hello ${greeting}`);\n * }\n *\n * // create a fake with implementation\n * var f2 = sinon.fake(greet);\n *\n * // Hello world\n * f2(\"world\");\n *\n * f2.calledWith(\"world\");\n * // true\n *\n * @param {Function|undefined} f\n * @returns {Function}\n * @namespace\n */function fake(f){if(arguments.length>0&&typeof f!==\"function\"){throw new TypeError(\"Expected f argument to be a Function\");}return wrapFunc(f);}/**\n * Creates a `fake` that returns the provided `value`, as well as recording all\n * calls, arguments and return values.\n *\n * @example\n * var f1 = sinon.fake.returns(42);\n *\n * f1();\n * // 42\n *\n * @memberof fake\n * @param {*} value\n * @returns {Function}\n */fake.returns=function returns(value){// eslint-disable-next-line jsdoc/require-jsdoc\nfunction f(){return value;}return wrapFunc(f);};/**\n * Creates a `fake` that throws an Error.\n * If the `value` argument does not have Error in its prototype chain, it will\n * be used for creating a new error.\n *\n * @example\n * var f1 = sinon.fake.throws(\"hello\");\n *\n * f1();\n * // Uncaught Error: hello\n *\n * @example\n * var f2 = sinon.fake.throws(new TypeError(\"Invalid argument\"));\n *\n * f2();\n * // Uncaught TypeError: Invalid argument\n *\n * @memberof fake\n * @param {*|Error} value\n * @returns {Function}\n */fake.throws=function throws(value){// eslint-disable-next-line jsdoc/require-jsdoc\nfunction f(){throw getError(value);}return wrapFunc(f);};/**\n * Creates a `fake` that returns a promise that resolves to the passed `value`\n * argument.\n *\n * @example\n * var f1 = sinon.fake.resolves(\"apple pie\");\n *\n * await f1();\n * // \"apple pie\"\n *\n * @memberof fake\n * @param {*} value\n * @returns {Function}\n */fake.resolves=function resolves(value){// eslint-disable-next-line jsdoc/require-jsdoc\nfunction f(){return promiseLib.resolve(value);}return wrapFunc(f);};/**\n * Creates a `fake` that returns a promise that rejects to the passed `value`\n * argument. When `value` does not have Error in its prototype chain, it will be\n * wrapped in an Error.\n *\n * @example\n * var f1 = sinon.fake.rejects(\":(\");\n *\n * try {\n *   await ft();\n * } catch (error) {\n *   console.log(error);\n *   // \":(\"\n * }\n *\n * @memberof fake\n * @param {*} value\n * @returns {Function}\n */fake.rejects=function rejects(value){// eslint-disable-next-line jsdoc/require-jsdoc\nfunction f(){return promiseLib.reject(getError(value));}return wrapFunc(f);};/**\n * Causes `fake` to use a custom Promise implementation, instead of the native\n * Promise implementation.\n *\n * @example\n * const bluebird = require(\"bluebird\");\n * sinon.fake.usingPromise(bluebird);\n *\n * @memberof fake\n * @param {*} promiseLibrary\n * @returns {Function}\n */fake.usingPromise=function usingPromise(promiseLibrary){promiseLib=promiseLibrary;return fake;};/**\n * Returns a `fake` that calls the callback with the defined arguments.\n *\n * @example\n * function callback() {\n *   console.log(arguments.join(\"*\"));\n * }\n *\n * const f1 = sinon.fake.yields(\"apple\", \"pie\");\n *\n * f1(callback);\n * // \"apple*pie\"\n *\n * @memberof fake\n * @returns {Function}\n */fake.yields=function yields(){const values=slice(arguments);// eslint-disable-next-line jsdoc/require-jsdoc\nfunction f(){const callback=arguments[arguments.length-1];if(typeof callback!==\"function\"){throw new TypeError(\"Expected last argument to be a function\");}callback.apply(null,values);}return wrapFunc(f);};/**\n * Returns a `fake` that calls the callback **asynchronously** with the\n * defined arguments.\n *\n * @example\n * function callback() {\n *   console.log(arguments.join(\"*\"));\n * }\n *\n * const f1 = sinon.fake.yields(\"apple\", \"pie\");\n *\n * f1(callback);\n *\n * setTimeout(() => {\n *   // \"apple*pie\"\n * });\n *\n * @memberof fake\n * @returns {Function}\n */fake.yieldsAsync=function yieldsAsync(){const values=slice(arguments);// eslint-disable-next-line jsdoc/require-jsdoc\nfunction f(){const callback=arguments[arguments.length-1];if(typeof callback!==\"function\"){throw new TypeError(\"Expected last argument to be a function\");}nextTick(function(){callback.apply(null,values);});}return wrapFunc(f);};let uuid=0;/**\n * Creates a proxy (sinon concept) from the passed function.\n *\n * @private\n * @param  {Function} f\n * @returns {Function}\n */function wrapFunc(f){const fakeInstance=function(){let firstArg,lastArg;if(arguments.length>0){firstArg=arguments[0];lastArg=arguments[arguments.length-1];}const callback=lastArg&&typeof lastArg===\"function\"?lastArg:undefined;/* eslint-disable no-use-before-define */proxy.firstArg=firstArg;proxy.lastArg=lastArg;proxy.callback=callback;return f&&f.apply(this,arguments);};const proxy=createProxy(fakeInstance,f||fakeInstance);proxy.displayName=\"fake\";proxy.id=`fake#${uuid++}`;return proxy;}/**\n * Returns an Error instance from the passed value, if the value is not\n * already an Error instance.\n *\n * @private\n * @param  {*} value [description]\n * @returns {Error}       [description]\n */function getError(value){return value instanceof Error?value:new Error(value);}},{\"./proxy\":18,\"./util/core/next-tick\":35,\"@sinonjs/commons\":49}],12:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const proxyInvoke=require(\"./proxy-invoke\");const proxyCallToString=require(\"./proxy-call\").toString;const timesInWords=require(\"./util/core/times-in-words\");const extend=require(\"./util/core/extend\");const match=require(\"@sinonjs/samsam\").createMatcher;const stub=require(\"./stub\");const assert=require(\"./assert\");const deepEqual=require(\"@sinonjs/samsam\").deepEqual;const inspect=require(\"util\").inspect;const valueToString=require(\"@sinonjs/commons\").valueToString;const every=arrayProto.every;const forEach=arrayProto.forEach;const push=arrayProto.push;const slice=arrayProto.slice;function callCountInWords(callCount){if(callCount===0){return\"never called\";}return`called ${timesInWords(callCount)}`;}function expectedCallCountInWords(expectation){const min=expectation.minCalls;const max=expectation.maxCalls;if(typeof min===\"number\"&&typeof max===\"number\"){let str=timesInWords(min);if(min!==max){str=`at least ${str} and at most ${timesInWords(max)}`;}return str;}if(typeof min===\"number\"){return`at least ${timesInWords(min)}`;}return`at most ${timesInWords(max)}`;}function receivedMinCalls(expectation){const hasMinLimit=typeof expectation.minCalls===\"number\";return!hasMinLimit||expectation.callCount>=expectation.minCalls;}function receivedMaxCalls(expectation){if(typeof expectation.maxCalls!==\"number\"){return false;}return expectation.callCount===expectation.maxCalls;}function verifyMatcher(possibleMatcher,arg){const isMatcher=match.isMatcher(possibleMatcher);return isMatcher&&possibleMatcher.test(arg)||true;}const mockExpectation={minCalls:1,maxCalls:1,create:function create(methodName){const expectation=extend.nonEnum(stub(),mockExpectation);delete expectation.create;expectation.method=methodName;return expectation;},invoke:function invoke(func,thisValue,args){this.verifyCallAllowed(thisValue,args);return proxyInvoke.apply(this,arguments);},atLeast:function atLeast(num){if(typeof num!==\"number\"){throw new TypeError(`'${valueToString(num)}' is not number`);}if(!this.limitsSet){this.maxCalls=null;this.limitsSet=true;}this.minCalls=num;return this;},atMost:function atMost(num){if(typeof num!==\"number\"){throw new TypeError(`'${valueToString(num)}' is not number`);}if(!this.limitsSet){this.minCalls=null;this.limitsSet=true;}this.maxCalls=num;return this;},never:function never(){return this.exactly(0);},once:function once(){return this.exactly(1);},twice:function twice(){return this.exactly(2);},thrice:function thrice(){return this.exactly(3);},exactly:function exactly(num){if(typeof num!==\"number\"){throw new TypeError(`'${valueToString(num)}' is not a number`);}this.atLeast(num);return this.atMost(num);},met:function met(){return!this.failed&&receivedMinCalls(this);},verifyCallAllowed:function verifyCallAllowed(thisValue,args){const expectedArguments=this.expectedArguments;if(receivedMaxCalls(this)){this.failed=true;mockExpectation.fail(`${this.method} already called ${timesInWords(this.maxCalls)}`);}if(\"expectedThis\"in this&&this.expectedThis!==thisValue){mockExpectation.fail(`${this.method} called with ${valueToString(thisValue)} as thisValue, expected ${valueToString(this.expectedThis)}`);}if(!(\"expectedArguments\"in this)){return;}if(!args){mockExpectation.fail(`${this.method} received no arguments, expected ${inspect(expectedArguments)}`);}if(args.length<expectedArguments.length){mockExpectation.fail(`${this.method} received too few arguments (${inspect(args)}), expected ${inspect(expectedArguments)}`);}if(this.expectsExactArgCount&&args.length!==expectedArguments.length){mockExpectation.fail(`${this.method} received too many arguments (${inspect(args)}), expected ${inspect(expectedArguments)}`);}forEach(expectedArguments,function(expectedArgument,i){if(!verifyMatcher(expectedArgument,args[i])){mockExpectation.fail(`${this.method} received wrong arguments ${inspect(args)}, didn't match ${String(expectedArguments)}`);}if(!deepEqual(args[i],expectedArgument)){mockExpectation.fail(`${this.method} received wrong arguments ${inspect(args)}, expected ${inspect(expectedArguments)}`);}},this);},allowsCall:function allowsCall(thisValue,args){const expectedArguments=this.expectedArguments;if(this.met()&&receivedMaxCalls(this)){return false;}if(\"expectedThis\"in this&&this.expectedThis!==thisValue){return false;}if(!(\"expectedArguments\"in this)){return true;}// eslint-disable-next-line no-underscore-dangle\nconst _args=args||[];if(_args.length<expectedArguments.length){return false;}if(this.expectsExactArgCount&&_args.length!==expectedArguments.length){return false;}return every(expectedArguments,function(expectedArgument,i){if(!verifyMatcher(expectedArgument,_args[i])){return false;}if(!deepEqual(_args[i],expectedArgument)){return false;}return true;});},withArgs:function withArgs(){this.expectedArguments=slice(arguments);return this;},withExactArgs:function withExactArgs(){this.withArgs.apply(this,arguments);this.expectsExactArgCount=true;return this;},on:function on(thisValue){this.expectedThis=thisValue;return this;},toString:function(){const args=slice(this.expectedArguments||[]);if(!this.expectsExactArgCount){push(args,\"[...]\");}const callStr=proxyCallToString.call({proxy:this.method||\"anonymous mock expectation\",args:args});const message=`${callStr.replace(\", [...\",\"[, ...\")} ${expectedCallCountInWords(this)}`;if(this.met()){return`Expectation met: ${message}`;}return`Expected ${message} (${callCountInWords(this.callCount)})`;},verify:function verify(){if(!this.met()){mockExpectation.fail(String(this));}else{mockExpectation.pass(String(this));}return true;},pass:function pass(message){assert.pass(message);},fail:function fail(message){const exception=new Error(message);exception.name=\"ExpectationError\";throw exception;}};module.exports=mockExpectation;},{\"./assert\":4,\"./proxy-call\":16,\"./proxy-invoke\":17,\"./stub\":23,\"./util/core/extend\":27,\"./util/core/times-in-words\":37,\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89,\"util\":118}],13:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const mockExpectation=require(\"./mock-expectation\");const proxyCallToString=require(\"./proxy-call\").toString;const extend=require(\"./util/core/extend\");const deepEqual=require(\"@sinonjs/samsam\").deepEqual;const wrapMethod=require(\"./util/core/wrap-method\");const usePromiseLibrary=require(\"./util/core/use-promise-library\");const concat=arrayProto.concat;const filter=arrayProto.filter;const forEach=arrayProto.forEach;const every=arrayProto.every;const join=arrayProto.join;const push=arrayProto.push;const slice=arrayProto.slice;const unshift=arrayProto.unshift;function mock(object){if(!object||typeof object===\"string\"){return mockExpectation.create(object?object:\"Anonymous mock\");}return mock.create(object);}function each(collection,callback){const col=collection||[];forEach(col,callback);}function arrayEquals(arr1,arr2,compareLength){if(compareLength&&arr1.length!==arr2.length){return false;}return every(arr1,function(element,i){return deepEqual(arr2[i],element);});}extend(mock,{create:function create(object){if(!object){throw new TypeError(\"object is null\");}const mockObject=extend.nonEnum({},mock,{object:object});delete mockObject.create;return mockObject;},expects:function expects(method){if(!method){throw new TypeError(\"method is falsy\");}if(!this.expectations){this.expectations={};this.proxies=[];this.failures=[];}if(!this.expectations[method]){this.expectations[method]=[];const mockObject=this;wrapMethod(this.object,method,function(){return mockObject.invokeMethod(method,this,arguments);});push(this.proxies,method);}const expectation=mockExpectation.create(method);expectation.wrappedMethod=this.object[method].wrappedMethod;push(this.expectations[method],expectation);usePromiseLibrary(this.promiseLibrary,expectation);return expectation;},restore:function restore(){const object=this.object;each(this.proxies,function(proxy){if(typeof object[proxy].restore===\"function\"){object[proxy].restore();}});},verify:function verify(){const expectations=this.expectations||{};const messages=this.failures?slice(this.failures):[];const met=[];each(this.proxies,function(proxy){each(expectations[proxy],function(expectation){if(!expectation.met()){push(messages,String(expectation));}else{push(met,String(expectation));}});});this.restore();if(messages.length>0){mockExpectation.fail(join(concat(messages,met),\"\\n\"));}else if(met.length>0){mockExpectation.pass(join(concat(messages,met),\"\\n\"));}return true;},usingPromise:function usingPromise(promiseLibrary){this.promiseLibrary=promiseLibrary;return this;},invokeMethod:function invokeMethod(method,thisValue,args){/* if we cannot find any matching files we will explicitly call mockExpection#fail with error messages */ /* eslint consistent-return: \"off\" */const expectations=this.expectations&&this.expectations[method]?this.expectations[method]:[];const currentArgs=args||[];let available;const expectationsWithMatchingArgs=filter(expectations,function(expectation){const expectedArgs=expectation.expectedArguments||[];return arrayEquals(expectedArgs,currentArgs,expectation.expectsExactArgCount);});const expectationsToApply=filter(expectationsWithMatchingArgs,function(expectation){return!expectation.met()&&expectation.allowsCall(thisValue,args);});if(expectationsToApply.length>0){return expectationsToApply[0].apply(thisValue,args);}const messages=[];let exhausted=0;forEach(expectationsWithMatchingArgs,function(expectation){if(expectation.allowsCall(thisValue,args)){available=available||expectation;}else{exhausted+=1;}});if(available&&exhausted===0){return available.apply(thisValue,args);}forEach(expectations,function(expectation){push(messages,`    ${String(expectation)}`);});unshift(messages,`Unexpected call: ${proxyCallToString.call({proxy:method,args:args})}`);const err=new Error();if(!err.stack){// PhantomJS does not serialize the stack trace until the error has been thrown\ntry{throw err;}catch(e){/* empty */}}push(this.failures,`Unexpected call: ${proxyCallToString.call({proxy:method,args:args,stack:err.stack})}`);mockExpectation.fail(join(messages,\"\\n\"));}});module.exports=mock;},{\"./mock-expectation\":12,\"./proxy-call\":16,\"./util/core/extend\":27,\"./util/core/use-promise-library\":38,\"./util/core/wrap-method\":41,\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89}],14:[function(require,module,exports){\"use strict\";const fake=require(\"./fake\");const isRestorable=require(\"./util/core/is-restorable\");const STATUS_PENDING=\"pending\";const STATUS_RESOLVED=\"resolved\";const STATUS_REJECTED=\"rejected\";/**\n * Returns a fake for a given function or undefined. If no function is given, a\n * new fake is returned. If the given function is already a fake, it is\n * returned as is. Otherwise the given function is wrapped in a new fake.\n *\n * @param {Function} [executor] The optional executor function.\n * @returns {Function}\n */function getFakeExecutor(executor){if(isRestorable(executor)){return executor;}if(executor){return fake(executor);}return fake();}/**\n * Returns a new promise that exposes it's internal `status`, `resolvedValue`\n * and `rejectedValue` and can be resolved or rejected from the outside by\n * calling `resolve(value)` or `reject(reason)`.\n *\n * @param {Function} [executor] The optional executor function.\n * @returns {Promise}\n */function promise(executor){const fakeExecutor=getFakeExecutor(executor);const sinonPromise=new Promise(fakeExecutor);sinonPromise.status=STATUS_PENDING;sinonPromise.then(function(value){sinonPromise.status=STATUS_RESOLVED;sinonPromise.resolvedValue=value;}).catch(function(reason){sinonPromise.status=STATUS_REJECTED;sinonPromise.rejectedValue=reason;});/**\n     * Resolves or rejects the promise with the given status and value.\n     *\n     * @param {string} status\n     * @param {*} value\n     * @param {Function} callback\n     */function finalize(status,value,callback){if(sinonPromise.status!==STATUS_PENDING){throw new Error(`Promise already ${sinonPromise.status}`);}sinonPromise.status=status;callback(value);}sinonPromise.resolve=function(value){finalize(STATUS_RESOLVED,value,fakeExecutor.firstCall.args[0]);// Return the promise so that callers can await it:\nreturn sinonPromise;};sinonPromise.reject=function(reason){finalize(STATUS_REJECTED,reason,fakeExecutor.firstCall.args[1]);// Return a new promise that resolves when the sinon promise was\n// rejected, so that callers can await it:\nreturn new Promise(function(resolve){sinonPromise.catch(()=>resolve());});};return sinonPromise;}module.exports=promise;},{\"./fake\":11,\"./util/core/is-restorable\":34}],15:[function(require,module,exports){\"use strict\";const push=require(\"@sinonjs/commons\").prototypes.array.push;exports.incrementCallCount=function incrementCallCount(proxy){proxy.called=true;proxy.callCount+=1;proxy.notCalled=false;proxy.calledOnce=proxy.callCount===1;proxy.calledTwice=proxy.callCount===2;proxy.calledThrice=proxy.callCount===3;};exports.createCallProperties=function createCallProperties(proxy){proxy.firstCall=proxy.getCall(0);proxy.secondCall=proxy.getCall(1);proxy.thirdCall=proxy.getCall(2);proxy.lastCall=proxy.getCall(proxy.callCount-1);};exports.delegateToCalls=function delegateToCalls(proxy,method,matchAny,actual,returnsValues,notCalled,totalCallCount){proxy[method]=function(){if(!this.called){if(notCalled){return notCalled.apply(this,arguments);}return false;}if(totalCallCount!==undefined&&this.callCount!==totalCallCount){return false;}let currentCall;let matches=0;const returnValues=[];for(let i=0,l=this.callCount;i<l;i+=1){currentCall=this.getCall(i);const returnValue=currentCall[actual||method].apply(currentCall,arguments);push(returnValues,returnValue);if(returnValue){matches+=1;if(matchAny){return true;}}}if(returnsValues){return returnValues;}return matches===this.callCount;};};},{\"@sinonjs/commons\":49}],16:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const match=require(\"@sinonjs/samsam\").createMatcher;const deepEqual=require(\"@sinonjs/samsam\").deepEqual;const functionName=require(\"@sinonjs/commons\").functionName;const inspect=require(\"util\").inspect;const valueToString=require(\"@sinonjs/commons\").valueToString;const concat=arrayProto.concat;const filter=arrayProto.filter;const join=arrayProto.join;const map=arrayProto.map;const reduce=arrayProto.reduce;const slice=arrayProto.slice;/**\n * @param proxy\n * @param text\n * @param args\n */function throwYieldError(proxy,text,args){let msg=functionName(proxy)+text;if(args.length){msg+=` Received [${join(slice(args),\", \")}]`;}throw new Error(msg);}const callProto={calledOn:function calledOn(thisValue){if(match.isMatcher(thisValue)){return thisValue.test(this.thisValue);}return this.thisValue===thisValue;},calledWith:function calledWith(){const self=this;const calledWithArgs=slice(arguments);if(calledWithArgs.length>self.args.length){return false;}return reduce(calledWithArgs,function(prev,arg,i){return prev&&deepEqual(self.args[i],arg);},true);},calledWithMatch:function calledWithMatch(){const self=this;const calledWithMatchArgs=slice(arguments);if(calledWithMatchArgs.length>self.args.length){return false;}return reduce(calledWithMatchArgs,function(prev,expectation,i){const actual=self.args[i];return prev&&match(expectation).test(actual);},true);},calledWithExactly:function calledWithExactly(){return arguments.length===this.args.length&&this.calledWith.apply(this,arguments);},notCalledWith:function notCalledWith(){return!this.calledWith.apply(this,arguments);},notCalledWithMatch:function notCalledWithMatch(){return!this.calledWithMatch.apply(this,arguments);},returned:function returned(value){return deepEqual(this.returnValue,value);},threw:function threw(error){if(typeof error===\"undefined\"||!this.exception){return Boolean(this.exception);}return this.exception===error||this.exception.name===error;},calledWithNew:function calledWithNew(){return this.proxy.prototype&&this.thisValue instanceof this.proxy;},calledBefore:function(other){return this.callId<other.callId;},calledAfter:function(other){return this.callId>other.callId;},calledImmediatelyBefore:function(other){return this.callId===other.callId-1;},calledImmediatelyAfter:function(other){return this.callId===other.callId+1;},callArg:function(pos){this.ensureArgIsAFunction(pos);return this.args[pos]();},callArgOn:function(pos,thisValue){this.ensureArgIsAFunction(pos);return this.args[pos].apply(thisValue);},callArgWith:function(pos){return this.callArgOnWith.apply(this,concat([pos,null],slice(arguments,1)));},callArgOnWith:function(pos,thisValue){this.ensureArgIsAFunction(pos);const args=slice(arguments,2);return this.args[pos].apply(thisValue,args);},throwArg:function(pos){if(pos>this.args.length){throw new TypeError(`Not enough arguments: ${pos} required but only ${this.args.length} present`);}throw this.args[pos];},yield:function(){return this.yieldOn.apply(this,concat([null],slice(arguments,0)));},yieldOn:function(thisValue){const args=slice(this.args);const yieldFn=filter(args,function(arg){return typeof arg===\"function\";})[0];if(!yieldFn){throwYieldError(this.proxy,\" cannot yield since no callback was passed.\",args);}return yieldFn.apply(thisValue,slice(arguments,1));},yieldTo:function(prop){return this.yieldToOn.apply(this,concat([prop,null],slice(arguments,1)));},yieldToOn:function(prop,thisValue){const args=slice(this.args);const yieldArg=filter(args,function(arg){return arg&&typeof arg[prop]===\"function\";})[0];const yieldFn=yieldArg&&yieldArg[prop];if(!yieldFn){throwYieldError(this.proxy,` cannot yield to '${valueToString(prop)}' since no callback was passed.`,args);}return yieldFn.apply(thisValue,slice(arguments,2));},toString:function(){if(!this.args){return\":(\";}let callStr=this.proxy?`${String(this.proxy)}(`:\"\";const formattedArgs=map(this.args,function(arg){return inspect(arg);});callStr=`${callStr+join(formattedArgs,\", \")})`;if(typeof this.returnValue!==\"undefined\"){callStr+=` => ${inspect(this.returnValue)}`;}if(this.exception){callStr+=` !${this.exception.name}`;if(this.exception.message){callStr+=`(${this.exception.message})`;}}if(this.stack){// If we have a stack, add the first frame that's in end-user code\n// Skip the first two frames because they will refer to Sinon code\ncallStr+=(this.stack.split(\"\\n\")[3]||\"unknown\").replace(/^\\s*(?:at\\s+|@)?/,\" at \");}return callStr;},ensureArgIsAFunction:function(pos){if(typeof this.args[pos]!==\"function\"){throw new TypeError(`Expected argument at position ${pos} to be a Function, but was ${typeof this.args[pos]}`);}}};Object.defineProperty(callProto,\"stack\",{enumerable:true,configurable:true,get:function(){return this.errorWithCallStack&&this.errorWithCallStack.stack||\"\";}});callProto.invokeCallback=callProto.yield;/**\n * @param proxy\n * @param thisValue\n * @param args\n * @param returnValue\n * @param exception\n * @param id\n * @param errorWithCallStack\n *\n * @returns {object} proxyCall\n */function createProxyCall(proxy,thisValue,args,returnValue,exception,id,errorWithCallStack){if(typeof id!==\"number\"){throw new TypeError(\"Call id is not a number\");}let firstArg,lastArg;if(args.length>0){firstArg=args[0];lastArg=args[args.length-1];}const proxyCall=Object.create(callProto);const callback=lastArg&&typeof lastArg===\"function\"?lastArg:undefined;proxyCall.proxy=proxy;proxyCall.thisValue=thisValue;proxyCall.args=args;proxyCall.firstArg=firstArg;proxyCall.lastArg=lastArg;proxyCall.callback=callback;proxyCall.returnValue=returnValue;proxyCall.exception=exception;proxyCall.callId=id;proxyCall.errorWithCallStack=errorWithCallStack;return proxyCall;}createProxyCall.toString=callProto.toString;// used by mocks\nmodule.exports=createProxyCall;},{\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89,\"util\":118}],17:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const proxyCallUtil=require(\"./proxy-call-util\");const push=arrayProto.push;const forEach=arrayProto.forEach;const concat=arrayProto.concat;const ErrorConstructor=Error.prototype.constructor;const bind=Function.prototype.bind;let callId=0;module.exports=function invoke(func,thisValue,args){const matchings=this.matchingFakes(args);const currentCallId=callId++;let exception,returnValue;proxyCallUtil.incrementCallCount(this);push(this.thisValues,thisValue);push(this.args,args);push(this.callIds,currentCallId);forEach(matchings,function(matching){proxyCallUtil.incrementCallCount(matching);push(matching.thisValues,thisValue);push(matching.args,args);push(matching.callIds,currentCallId);});// Make call properties available from within the spied function:\nproxyCallUtil.createCallProperties(this);forEach(matchings,proxyCallUtil.createCallProperties);try{this.invoking=true;const thisCall=this.getCall(this.callCount-1);if(thisCall.calledWithNew()){// Call through with `new`\nreturnValue=new(bind.apply(this.func||func,concat([thisValue],args)))();if(typeof returnValue!==\"object\"&&typeof returnValue!==\"function\"){returnValue=thisValue;}}else{returnValue=(this.func||func).apply(thisValue,args);}}catch(e){exception=e;}finally{delete this.invoking;}push(this.exceptions,exception);push(this.returnValues,returnValue);forEach(matchings,function(matching){push(matching.exceptions,exception);push(matching.returnValues,returnValue);});const err=new ErrorConstructor();// 1. Please do not get stack at this point. It may be so very slow, and not actually used\n// 2. PhantomJS does not serialize the stack trace until the error has been thrown:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\ntry{throw err;}catch(e){/* empty */}push(this.errorsWithCallStack,err);forEach(matchings,function(matching){push(matching.errorsWithCallStack,err);});// Make return value and exception available in the calls:\nproxyCallUtil.createCallProperties(this);forEach(matchings,proxyCallUtil.createCallProperties);if(exception!==undefined){throw exception;}return returnValue;};},{\"./proxy-call-util\":15,\"@sinonjs/commons\":49}],18:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const extend=require(\"./util/core/extend\");const functionToString=require(\"./util/core/function-to-string\");const proxyCall=require(\"./proxy-call\");const proxyCallUtil=require(\"./proxy-call-util\");const proxyInvoke=require(\"./proxy-invoke\");const inspect=require(\"util\").inspect;const push=arrayProto.push;const forEach=arrayProto.forEach;const slice=arrayProto.slice;const emptyFakes=Object.freeze([]);// Public API\nconst proxyApi={toString:functionToString,named:function named(name){this.displayName=name;const nameDescriptor=Object.getOwnPropertyDescriptor(this,\"name\");if(nameDescriptor&&nameDescriptor.configurable){// IE 11 functions don't have a name.\n// Safari 9 has names that are not configurable.\nnameDescriptor.value=name;Object.defineProperty(this,\"name\",nameDescriptor);}return this;},invoke:proxyInvoke,/*\n     * Hook for derived implementation to return fake instances matching the\n     * given arguments.\n     */matchingFakes:function/*args, strict*/(){return emptyFakes;},getCall:function getCall(index){let i=index;if(i<0){// Negative indices means counting backwards from the last call\ni+=this.callCount;}if(i<0||i>=this.callCount){return null;}return proxyCall(this,this.thisValues[i],this.args[i],this.returnValues[i],this.exceptions[i],this.callIds[i],this.errorsWithCallStack[i]);},getCalls:function(){const calls=[];let i;for(i=0;i<this.callCount;i++){push(calls,this.getCall(i));}return calls;},calledBefore:function calledBefore(proxy){if(!this.called){return false;}if(!proxy.called){return true;}return this.callIds[0]<proxy.callIds[proxy.callIds.length-1];},calledAfter:function calledAfter(proxy){if(!this.called||!proxy.called){return false;}return this.callIds[this.callCount-1]>proxy.callIds[0];},calledImmediatelyBefore:function calledImmediatelyBefore(proxy){if(!this.called||!proxy.called){return false;}return this.callIds[this.callCount-1]===proxy.callIds[proxy.callCount-1]-1;},calledImmediatelyAfter:function calledImmediatelyAfter(proxy){if(!this.called||!proxy.called){return false;}return this.callIds[this.callCount-1]===proxy.callIds[proxy.callCount-1]+1;},formatters:require(\"./spy-formatters\"),printf:function(format){const spyInstance=this;const args=slice(arguments,1);let formatter;return(format||\"\").replace(/%(.)/g,function(match,specifier){formatter=proxyApi.formatters[specifier];if(typeof formatter===\"function\"){return String(formatter(spyInstance,args));}else if(!isNaN(parseInt(specifier,10))){return inspect(args[specifier-1]);}return`%${specifier}`;});},resetHistory:function(){if(this.invoking){const err=new Error(\"Cannot reset Sinon function while invoking it. \"+\"Move the call to .resetHistory outside of the callback.\");err.name=\"InvalidResetException\";throw err;}this.called=false;this.notCalled=true;this.calledOnce=false;this.calledTwice=false;this.calledThrice=false;this.callCount=0;this.firstCall=null;this.secondCall=null;this.thirdCall=null;this.lastCall=null;this.args=[];this.firstArg=null;this.lastArg=null;this.returnValues=[];this.thisValues=[];this.exceptions=[];this.callIds=[];this.errorsWithCallStack=[];if(this.fakes){forEach(this.fakes,function(fake){fake.resetHistory();});}return this;}};const delegateToCalls=proxyCallUtil.delegateToCalls;delegateToCalls(proxyApi,\"calledOn\",true);delegateToCalls(proxyApi,\"alwaysCalledOn\",false,\"calledOn\");delegateToCalls(proxyApi,\"calledWith\",true);delegateToCalls(proxyApi,\"calledOnceWith\",true,\"calledWith\",false,undefined,1);delegateToCalls(proxyApi,\"calledWithMatch\",true);delegateToCalls(proxyApi,\"alwaysCalledWith\",false,\"calledWith\");delegateToCalls(proxyApi,\"alwaysCalledWithMatch\",false,\"calledWithMatch\");delegateToCalls(proxyApi,\"calledWithExactly\",true);delegateToCalls(proxyApi,\"calledOnceWithExactly\",true,\"calledWithExactly\",false,undefined,1);delegateToCalls(proxyApi,\"calledOnceWithMatch\",true,\"calledWithMatch\",false,undefined,1);delegateToCalls(proxyApi,\"alwaysCalledWithExactly\",false,\"calledWithExactly\");delegateToCalls(proxyApi,\"neverCalledWith\",false,\"notCalledWith\",false,function(){return true;});delegateToCalls(proxyApi,\"neverCalledWithMatch\",false,\"notCalledWithMatch\",false,function(){return true;});delegateToCalls(proxyApi,\"threw\",true);delegateToCalls(proxyApi,\"alwaysThrew\",false,\"threw\");delegateToCalls(proxyApi,\"returned\",true);delegateToCalls(proxyApi,\"alwaysReturned\",false,\"returned\");delegateToCalls(proxyApi,\"calledWithNew\",true);delegateToCalls(proxyApi,\"alwaysCalledWithNew\",false,\"calledWithNew\");function createProxy(func,originalFunc){const proxy=wrapFunction(func,originalFunc);// Inherit function properties:\nextend(proxy,func);proxy.prototype=func.prototype;extend.nonEnum(proxy,proxyApi);return proxy;}function wrapFunction(func,originalFunc){const arity=originalFunc.length;let p;// Do not change this to use an eval. Projects that depend on sinon block the use of eval.\n// ref: https://github.com/sinonjs/sinon/issues/710\nswitch(arity){/*eslint-disable no-unused-vars, max-len*/case 0:p=function proxy(){return p.invoke(func,this,slice(arguments));};break;case 1:p=function proxy(a){return p.invoke(func,this,slice(arguments));};break;case 2:p=function proxy(a,b){return p.invoke(func,this,slice(arguments));};break;case 3:p=function proxy(a,b,c){return p.invoke(func,this,slice(arguments));};break;case 4:p=function proxy(a,b,c,d){return p.invoke(func,this,slice(arguments));};break;case 5:p=function proxy(a,b,c,d,e){return p.invoke(func,this,slice(arguments));};break;case 6:p=function proxy(a,b,c,d,e,f){return p.invoke(func,this,slice(arguments));};break;case 7:p=function proxy(a,b,c,d,e,f,g){return p.invoke(func,this,slice(arguments));};break;case 8:p=function proxy(a,b,c,d,e,f,g,h){return p.invoke(func,this,slice(arguments));};break;case 9:p=function proxy(a,b,c,d,e,f,g,h,i){return p.invoke(func,this,slice(arguments));};break;case 10:p=function proxy(a,b,c,d,e,f,g,h,i,j){return p.invoke(func,this,slice(arguments));};break;case 11:p=function proxy(a,b,c,d,e,f,g,h,i,j,k){return p.invoke(func,this,slice(arguments));};break;case 12:p=function proxy(a,b,c,d,e,f,g,h,i,j,k,l){return p.invoke(func,this,slice(arguments));};break;default:p=function proxy(){return p.invoke(func,this,slice(arguments));};break;/*eslint-enable*/}const nameDescriptor=Object.getOwnPropertyDescriptor(originalFunc,\"name\");if(nameDescriptor&&nameDescriptor.configurable){// IE 11 functions don't have a name.\n// Safari 9 has names that are not configurable.\nObject.defineProperty(p,\"name\",nameDescriptor);}extend.nonEnum(p,{isSinonProxy:true,called:false,notCalled:true,calledOnce:false,calledTwice:false,calledThrice:false,callCount:0,firstCall:null,firstArg:null,secondCall:null,thirdCall:null,lastCall:null,lastArg:null,args:[],returnValues:[],thisValues:[],exceptions:[],callIds:[],errorsWithCallStack:[]});return p;}module.exports=createProxy;},{\"./proxy-call\":16,\"./proxy-call-util\":15,\"./proxy-invoke\":17,\"./spy-formatters\":21,\"./util/core/extend\":27,\"./util/core/function-to-string\":28,\"@sinonjs/commons\":49,\"util\":118}],19:[function(require,module,exports){\"use strict\";const walkObject=require(\"./util/core/walk-object\");function filter(object,property){return object[property].restore&&object[property].restore.sinon;}function restore(object,property){object[property].restore();}function restoreObject(object){return walkObject(restore,object,filter);}module.exports=restoreObject;},{\"./util/core/walk-object\":39}],20:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const logger=require(\"@sinonjs/commons\").deprecated;const collectOwnMethods=require(\"./collect-own-methods\");const getPropertyDescriptor=require(\"./util/core/get-property-descriptor\");const isPropertyConfigurable=require(\"./util/core/is-property-configurable\");const match=require(\"@sinonjs/samsam\").createMatcher;const sinonAssert=require(\"./assert\");const sinonClock=require(\"./util/fake-timers\");const sinonMock=require(\"./mock\");const sinonSpy=require(\"./spy\");const sinonStub=require(\"./stub\");const sinonCreateStubInstance=require(\"./create-stub-instance\");const sinonFake=require(\"./fake\");const valueToString=require(\"@sinonjs/commons\").valueToString;const fakeServer=require(\"nise\").fakeServer;const fakeXhr=require(\"nise\").fakeXhr;const usePromiseLibrary=require(\"./util/core/use-promise-library\");const DEFAULT_LEAK_THRESHOLD=10000;const filter=arrayProto.filter;const forEach=arrayProto.forEach;const push=arrayProto.push;const reverse=arrayProto.reverse;function applyOnEach(fakes,method){const matchingFakes=filter(fakes,function(fake){return typeof fake[method]===\"function\";});forEach(matchingFakes,function(fake){fake[method]();});}function throwOnAccessors(descriptor){if(typeof descriptor.get===\"function\"){throw new Error(\"Use sandbox.replaceGetter for replacing getters\");}if(typeof descriptor.set===\"function\"){throw new Error(\"Use sandbox.replaceSetter for replacing setters\");}}function verifySameType(object,property,replacement){if(typeof object[property]!==typeof replacement){throw new TypeError(`Cannot replace ${typeof object[property]} with ${typeof replacement}`);}}function checkForValidArguments(descriptor,property,replacement){if(typeof descriptor===\"undefined\"){throw new TypeError(`Cannot replace non-existent property ${valueToString(property)}. Perhaps you meant sandbox.define()?`);}if(typeof replacement===\"undefined\"){throw new TypeError(\"Expected replacement argument to be defined\");}}/**\n * A sinon sandbox\n *\n * @param opts\n * @param {object} [opts.assertOptions] see the CreateAssertOptions in ./assert\n * @class\n */function Sandbox(opts={}){const sandbox=this;const assertOptions=opts.assertOptions||{};let fakeRestorers=[];let promiseLib;let collection=[];let loggedLeakWarning=false;sandbox.leakThreshold=DEFAULT_LEAK_THRESHOLD;function addToCollection(object){if(push(collection,object)>sandbox.leakThreshold&&!loggedLeakWarning){// eslint-disable-next-line no-console\nlogger.printWarning(\"Potential memory leak detected; be sure to call restore() to clean up your sandbox. To suppress this warning, modify the leakThreshold property of your sandbox.\");loggedLeakWarning=true;}}sandbox.assert=sinonAssert.createAssertObject(assertOptions);sandbox.serverPrototype=fakeServer;// this is for testing only\nsandbox.getFakes=function getFakes(){return collection;};sandbox.createStubInstance=function createStubInstance(){const stubbed=sinonCreateStubInstance.apply(null,arguments);const ownMethods=collectOwnMethods(stubbed);forEach(ownMethods,function(method){addToCollection(method);});usePromiseLibrary(promiseLib,ownMethods);return stubbed;};sandbox.inject=function inject(obj){obj.spy=function(){return sandbox.spy.apply(null,arguments);};obj.stub=function(){return sandbox.stub.apply(null,arguments);};obj.mock=function(){return sandbox.mock.apply(null,arguments);};obj.createStubInstance=function(){return sandbox.createStubInstance.apply(sandbox,arguments);};obj.fake=function(){return sandbox.fake.apply(null,arguments);};obj.define=function(){return sandbox.define.apply(null,arguments);};obj.replace=function(){return sandbox.replace.apply(null,arguments);};obj.replaceSetter=function(){return sandbox.replaceSetter.apply(null,arguments);};obj.replaceGetter=function(){return sandbox.replaceGetter.apply(null,arguments);};if(sandbox.clock){obj.clock=sandbox.clock;}if(sandbox.server){obj.server=sandbox.server;obj.requests=sandbox.server.requests;}obj.match=match;return obj;};sandbox.mock=function mock(){const m=sinonMock.apply(null,arguments);addToCollection(m);usePromiseLibrary(promiseLib,m);return m;};sandbox.reset=function reset(){applyOnEach(collection,\"reset\");applyOnEach(collection,\"resetHistory\");};sandbox.resetBehavior=function resetBehavior(){applyOnEach(collection,\"resetBehavior\");};sandbox.resetHistory=function resetHistory(){function privateResetHistory(f){const method=f.resetHistory||f.reset;if(method){method.call(f);}}forEach(collection,privateResetHistory);};sandbox.restore=function restore(){if(arguments.length){throw new Error(\"sandbox.restore() does not take any parameters. Perhaps you meant stub.restore()\");}reverse(collection);applyOnEach(collection,\"restore\");collection=[];forEach(fakeRestorers,function(restorer){restorer();});fakeRestorers=[];sandbox.restoreContext();};sandbox.restoreContext=function restoreContext(){if(!sandbox.injectedKeys){return;}forEach(sandbox.injectedKeys,function(injectedKey){delete sandbox.injectInto[injectedKey];});sandbox.injectedKeys.length=0;};/**\n     * Creates a restorer function for the property\n     *\n     * @param {object|Function} object\n     * @param {string} property\n     * @param {boolean} forceAssignment\n     * @returns {Function} restorer function\n     */function getFakeRestorer(object,property,forceAssignment=false){const descriptor=getPropertyDescriptor(object,property);const value=object[property];function restorer(){if(forceAssignment){object[property]=value;}else if(descriptor?.isOwn){Object.defineProperty(object,property,descriptor);}else{delete object[property];}}restorer.object=object;restorer.property=property;return restorer;}function verifyNotReplaced(object,property){forEach(fakeRestorers,function(fakeRestorer){if(fakeRestorer.object===object&&fakeRestorer.property===property){throw new TypeError(`Attempted to replace ${property} which is already replaced`);}});}/**\n     * Replace an existing property\n     *\n     * @param {object|Function} object\n     * @param {string} property\n     * @param {*} replacement a fake, stub, spy or any other value\n     * @returns {*}\n     */sandbox.replace=function replace(object,property,replacement){const descriptor=getPropertyDescriptor(object,property);checkForValidArguments(descriptor,property,replacement);throwOnAccessors(descriptor);verifySameType(object,property,replacement);verifyNotReplaced(object,property);// store a function for restoring the replaced property\npush(fakeRestorers,getFakeRestorer(object,property));object[property]=replacement;return replacement;};sandbox.replace.usingAccessor=function replaceUsingAccessor(object,property,replacement){const descriptor=getPropertyDescriptor(object,property);checkForValidArguments(descriptor,property,replacement);verifySameType(object,property,replacement);verifyNotReplaced(object,property);// store a function for restoring the replaced property\npush(fakeRestorers,getFakeRestorer(object,property,true));object[property]=replacement;return replacement;};sandbox.define=function define(object,property,value){const descriptor=getPropertyDescriptor(object,property);if(descriptor){throw new TypeError(`Cannot define the already existing property ${valueToString(property)}. Perhaps you meant sandbox.replace()?`);}if(typeof value===\"undefined\"){throw new TypeError(\"Expected value argument to be defined\");}verifyNotReplaced(object,property);// store a function for restoring the defined property\npush(fakeRestorers,getFakeRestorer(object,property));object[property]=value;return value;};sandbox.replaceGetter=function replaceGetter(object,property,replacement){const descriptor=getPropertyDescriptor(object,property);if(typeof descriptor===\"undefined\"){throw new TypeError(`Cannot replace non-existent property ${valueToString(property)}`);}if(typeof replacement!==\"function\"){throw new TypeError(\"Expected replacement argument to be a function\");}if(typeof descriptor.get!==\"function\"){throw new Error(\"`object.property` is not a getter\");}verifyNotReplaced(object,property);// store a function for restoring the replaced property\npush(fakeRestorers,getFakeRestorer(object,property));Object.defineProperty(object,property,{get:replacement,configurable:isPropertyConfigurable(object,property)});return replacement;};sandbox.replaceSetter=function replaceSetter(object,property,replacement){const descriptor=getPropertyDescriptor(object,property);if(typeof descriptor===\"undefined\"){throw new TypeError(`Cannot replace non-existent property ${valueToString(property)}`);}if(typeof replacement!==\"function\"){throw new TypeError(\"Expected replacement argument to be a function\");}if(typeof descriptor.set!==\"function\"){throw new Error(\"`object.property` is not a setter\");}verifyNotReplaced(object,property);// store a function for restoring the replaced property\npush(fakeRestorers,getFakeRestorer(object,property));// eslint-disable-next-line accessor-pairs\nObject.defineProperty(object,property,{set:replacement,configurable:isPropertyConfigurable(object,property)});return replacement;};function commonPostInitSetup(args,spy){const[object,property,types]=args;const isSpyingOnEntireObject=typeof property===\"undefined\"&&typeof object===\"object\";if(isSpyingOnEntireObject){const ownMethods=collectOwnMethods(spy);forEach(ownMethods,function(method){addToCollection(method);});usePromiseLibrary(promiseLib,ownMethods);}else if(Array.isArray(types)){for(const accessorType of types){addToCollection(spy[accessorType]);usePromiseLibrary(promiseLib,spy[accessorType]);}}else{addToCollection(spy);usePromiseLibrary(promiseLib,spy);}return spy;}sandbox.spy=function spy(){const createdSpy=sinonSpy.apply(sinonSpy,arguments);return commonPostInitSetup(arguments,createdSpy);};sandbox.stub=function stub(){const createdStub=sinonStub.apply(sinonStub,arguments);return commonPostInitSetup(arguments,createdStub);};// eslint-disable-next-line no-unused-vars\nsandbox.fake=function fake(f){const s=sinonFake.apply(sinonFake,arguments);addToCollection(s);return s;};forEach(Object.keys(sinonFake),function(key){const fakeBehavior=sinonFake[key];if(typeof fakeBehavior===\"function\"){sandbox.fake[key]=function(){const s=fakeBehavior.apply(fakeBehavior,arguments);addToCollection(s);return s;};}});sandbox.useFakeTimers=function useFakeTimers(args){const clock=sinonClock.useFakeTimers.call(null,args);sandbox.clock=clock;addToCollection(clock);return clock;};sandbox.verify=function verify(){applyOnEach(collection,\"verify\");};sandbox.verifyAndRestore=function verifyAndRestore(){let exception;try{sandbox.verify();}catch(e){exception=e;}sandbox.restore();if(exception){throw exception;}};sandbox.useFakeServer=function useFakeServer(){const proto=sandbox.serverPrototype||fakeServer;if(!proto||!proto.create){return null;}sandbox.server=proto.create();addToCollection(sandbox.server);return sandbox.server;};sandbox.useFakeXMLHttpRequest=function useFakeXMLHttpRequest(){const xhr=fakeXhr.useFakeXMLHttpRequest();addToCollection(xhr);return xhr;};sandbox.usingPromise=function usingPromise(promiseLibrary){promiseLib=promiseLibrary;collection.promiseLibrary=promiseLibrary;return sandbox;};}Sandbox.prototype.match=match;module.exports=Sandbox;},{\"./assert\":4,\"./collect-own-methods\":6,\"./create-stub-instance\":9,\"./fake\":11,\"./mock\":13,\"./spy\":22,\"./stub\":23,\"./util/core/get-property-descriptor\":30,\"./util/core/is-property-configurable\":33,\"./util/core/use-promise-library\":38,\"./util/fake-timers\":42,\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89,\"nise\":133}],21:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const Colorizer=require(\"./colorizer\");const colororizer=new Colorizer();const match=require(\"@sinonjs/samsam\").createMatcher;const timesInWords=require(\"./util/core/times-in-words\");const inspect=require(\"util\").inspect;const jsDiff=require(\"diff\");const join=arrayProto.join;const map=arrayProto.map;const push=arrayProto.push;const slice=arrayProto.slice;/**\n *\n * @param matcher\n * @param calledArg\n * @param calledArgMessage\n *\n * @returns {string} the colored text\n */function colorSinonMatchText(matcher,calledArg,calledArgMessage){let calledArgumentMessage=calledArgMessage;let matcherMessage=matcher.message;if(!matcher.test(calledArg)){matcherMessage=colororizer.red(matcher.message);if(calledArgumentMessage){calledArgumentMessage=colororizer.green(calledArgumentMessage);}}return`${calledArgumentMessage} ${matcherMessage}`;}/**\n * @param diff\n *\n * @returns {string} the colored diff\n */function colorDiffText(diff){const objects=map(diff,function(part){let text=part.value;if(part.added){text=colororizer.green(text);}else if(part.removed){text=colororizer.red(text);}if(diff.length===2){text+=\" \";// format simple diffs\n}return text;});return join(objects,\"\");}/**\n *\n * @param value\n * @returns {string} a quoted string\n */function quoteStringValue(value){if(typeof value===\"string\"){return JSON.stringify(value);}return value;}module.exports={c:function(spyInstance){return timesInWords(spyInstance.callCount);},n:function(spyInstance){// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\nreturn spyInstance.toString();},D:function(spyInstance,args){let message=\"\";for(let i=0,l=spyInstance.callCount;i<l;++i){// describe multiple calls\nif(l>1){message+=`\\nCall ${i+1}:`;}const calledArgs=spyInstance.getCall(i).args;const expectedArgs=slice(args);for(let j=0;j<calledArgs.length||j<expectedArgs.length;++j){let calledArg=calledArgs[j];let expectedArg=expectedArgs[j];if(calledArg){calledArg=quoteStringValue(calledArg);}if(expectedArg){expectedArg=quoteStringValue(expectedArg);}message+=\"\\n\";const calledArgMessage=j<calledArgs.length?inspect(calledArg):\"\";if(match.isMatcher(expectedArg)){message+=colorSinonMatchText(expectedArg,calledArg,calledArgMessage);}else{const expectedArgMessage=j<expectedArgs.length?inspect(expectedArg):\"\";const diff=jsDiff.diffJson(calledArgMessage,expectedArgMessage);message+=colorDiffText(diff);}}}return message;},C:function(spyInstance){const calls=[];for(let i=0,l=spyInstance.callCount;i<l;++i){// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\nlet stringifiedCall=`    ${spyInstance.getCall(i).toString()}`;if(/\\n/.test(calls[i-1])){stringifiedCall=`\\n${stringifiedCall}`;}push(calls,stringifiedCall);}return calls.length>0?`\\n${join(calls,\"\\n\")}`:\"\";},t:function(spyInstance){const objects=[];for(let i=0,l=spyInstance.callCount;i<l;++i){push(objects,inspect(spyInstance.thisValues[i]));}return join(objects,\", \");},\"*\":function(spyInstance,args){return join(map(args,function(arg){return inspect(arg);}),\", \");}};},{\"./colorizer\":7,\"./util/core/times-in-words\":37,\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89,\"diff\":119,\"util\":118}],22:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const createProxy=require(\"./proxy\");const extend=require(\"./util/core/extend\");const functionName=require(\"@sinonjs/commons\").functionName;const getPropertyDescriptor=require(\"./util/core/get-property-descriptor\");const deepEqual=require(\"@sinonjs/samsam\").deepEqual;const isEsModule=require(\"./util/core/is-es-module\");const proxyCallUtil=require(\"./proxy-call-util\");const walkObject=require(\"./util/core/walk-object\");const wrapMethod=require(\"./util/core/wrap-method\");const valueToString=require(\"@sinonjs/commons\").valueToString;/* cache references to library methods so that they also can be stubbed without problems */const forEach=arrayProto.forEach;const pop=arrayProto.pop;const push=arrayProto.push;const slice=arrayProto.slice;const filter=Array.prototype.filter;let uuid=0;function matches(fake,args,strict){const margs=fake.matchingArguments;if(margs.length<=args.length&&deepEqual(slice(args,0,margs.length),margs)){return!strict||margs.length===args.length;}return false;}// Public API\nconst spyApi={withArgs:function(){const args=slice(arguments);const matching=pop(this.matchingFakes(args,true));if(matching){return matching;}const original=this;const fake=this.instantiateFake();fake.matchingArguments=args;fake.parent=this;push(this.fakes,fake);fake.withArgs=function(){return original.withArgs.apply(original,arguments);};forEach(original.args,function(arg,i){if(!matches(fake,arg)){return;}proxyCallUtil.incrementCallCount(fake);push(fake.thisValues,original.thisValues[i]);push(fake.args,arg);push(fake.returnValues,original.returnValues[i]);push(fake.exceptions,original.exceptions[i]);push(fake.callIds,original.callIds[i]);});proxyCallUtil.createCallProperties(fake);return fake;},// Override proxy default implementation\nmatchingFakes:function(args,strict){return filter.call(this.fakes,function(fake){return matches(fake,args,strict);});}};/* eslint-disable @sinonjs/no-prototype-methods/no-prototype-methods */const delegateToCalls=proxyCallUtil.delegateToCalls;delegateToCalls(spyApi,\"callArg\",false,\"callArgWith\",true,function(){throw new Error(`${this.toString()} cannot call arg since it was not yet invoked.`);});spyApi.callArgWith=spyApi.callArg;delegateToCalls(spyApi,\"callArgOn\",false,\"callArgOnWith\",true,function(){throw new Error(`${this.toString()} cannot call arg since it was not yet invoked.`);});spyApi.callArgOnWith=spyApi.callArgOn;delegateToCalls(spyApi,\"throwArg\",false,\"throwArg\",false,function(){throw new Error(`${this.toString()} cannot throw arg since it was not yet invoked.`);});delegateToCalls(spyApi,\"yield\",false,\"yield\",true,function(){throw new Error(`${this.toString()} cannot yield since it was not yet invoked.`);});// \"invokeCallback\" is an alias for \"yield\" since \"yield\" is invalid in strict mode.\nspyApi.invokeCallback=spyApi.yield;delegateToCalls(spyApi,\"yieldOn\",false,\"yieldOn\",true,function(){throw new Error(`${this.toString()} cannot yield since it was not yet invoked.`);});delegateToCalls(spyApi,\"yieldTo\",false,\"yieldTo\",true,function(property){throw new Error(`${this.toString()} cannot yield to '${valueToString(property)}' since it was not yet invoked.`);});delegateToCalls(spyApi,\"yieldToOn\",false,\"yieldToOn\",true,function(property){throw new Error(`${this.toString()} cannot yield to '${valueToString(property)}' since it was not yet invoked.`);});function createSpy(func){let name;let funk=func;if(typeof funk!==\"function\"){funk=function(){return;};}else{name=functionName(funk);}const proxy=createProxy(funk,funk);// Inherit spy API:\nextend.nonEnum(proxy,spyApi);extend.nonEnum(proxy,{displayName:name||\"spy\",fakes:[],instantiateFake:createSpy,id:`spy#${uuid++}`});return proxy;}function spy(object,property,types){if(isEsModule(object)){throw new TypeError(\"ES Modules cannot be spied\");}if(!property&&typeof object===\"function\"){return createSpy(object);}if(!property&&typeof object===\"object\"){return walkObject(spy,object);}if(!object&&!property){return createSpy(function(){return;});}if(!types){return wrapMethod(object,property,createSpy(object[property]));}const descriptor={};const methodDesc=getPropertyDescriptor(object,property);forEach(types,function(type){descriptor[type]=createSpy(methodDesc[type]);});return wrapMethod(object,property,descriptor);}extend(spy,spyApi);module.exports=spy;},{\"./proxy\":18,\"./proxy-call-util\":15,\"./util/core/extend\":27,\"./util/core/get-property-descriptor\":30,\"./util/core/is-es-module\":31,\"./util/core/walk-object\":39,\"./util/core/wrap-method\":41,\"@sinonjs/commons\":49,\"@sinonjs/samsam\":89}],23:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const behavior=require(\"./behavior\");const behaviors=require(\"./default-behaviors\");const createProxy=require(\"./proxy\");const functionName=require(\"@sinonjs/commons\").functionName;const hasOwnProperty=require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;const isNonExistentProperty=require(\"./util/core/is-non-existent-property\");const spy=require(\"./spy\");const extend=require(\"./util/core/extend\");const getPropertyDescriptor=require(\"./util/core/get-property-descriptor\");const isEsModule=require(\"./util/core/is-es-module\");const sinonType=require(\"./util/core/sinon-type\");const wrapMethod=require(\"./util/core/wrap-method\");const throwOnFalsyObject=require(\"./throw-on-falsy-object\");const valueToString=require(\"@sinonjs/commons\").valueToString;const walkObject=require(\"./util/core/walk-object\");const forEach=arrayProto.forEach;const pop=arrayProto.pop;const slice=arrayProto.slice;const sort=arrayProto.sort;let uuid=0;function createStub(originalFunc){// eslint-disable-next-line prefer-const\nlet proxy;function functionStub(){const args=slice(arguments);const matchings=proxy.matchingFakes(args);const fnStub=pop(sort(matchings,function(a,b){return a.matchingArguments.length-b.matchingArguments.length;}))||proxy;return getCurrentBehavior(fnStub).invoke(this,arguments);}proxy=createProxy(functionStub,originalFunc||functionStub);// Inherit spy API:\nextend.nonEnum(proxy,spy);// Inherit stub API:\nextend.nonEnum(proxy,stub);const name=originalFunc?functionName(originalFunc):null;extend.nonEnum(proxy,{fakes:[],instantiateFake:createStub,displayName:name||\"stub\",defaultBehavior:null,behaviors:[],id:`stub#${uuid++}`});sinonType.set(proxy,\"stub\");return proxy;}function stub(object,property){if(arguments.length>2){throw new TypeError(\"stub(obj, 'meth', fn) has been removed, see documentation\");}if(isEsModule(object)){throw new TypeError(\"ES Modules cannot be stubbed\");}throwOnFalsyObject.apply(null,arguments);if(isNonExistentProperty(object,property)){throw new TypeError(`Cannot stub non-existent property ${valueToString(property)}`);}const actualDescriptor=getPropertyDescriptor(object,property);assertValidPropertyDescriptor(actualDescriptor,property);const isObjectOrFunction=typeof object===\"object\"||typeof object===\"function\";const isStubbingEntireObject=typeof property===\"undefined\"&&isObjectOrFunction;const isCreatingNewStub=!object&&typeof property===\"undefined\";const isStubbingNonFuncProperty=isObjectOrFunction&&typeof property!==\"undefined\"&&(typeof actualDescriptor===\"undefined\"||typeof actualDescriptor.value!==\"function\");if(isStubbingEntireObject){return walkObject(stub,object);}if(isCreatingNewStub){return createStub();}const func=typeof actualDescriptor.value===\"function\"?actualDescriptor.value:null;const s=createStub(func);extend.nonEnum(s,{rootObj:object,propName:property,shadowsPropOnPrototype:!actualDescriptor.isOwn,restore:function restore(){if(actualDescriptor!==undefined&&actualDescriptor.isOwn){Object.defineProperty(object,property,actualDescriptor);return;}delete object[property];}});return isStubbingNonFuncProperty?s:wrapMethod(object,property,s);}function assertValidPropertyDescriptor(descriptor,property){if(!descriptor||!property){return;}if(descriptor.isOwn&&!descriptor.configurable&&!descriptor.writable){throw new TypeError(`Descriptor for property ${property} is non-configurable and non-writable`);}if((descriptor.get||descriptor.set)&&!descriptor.configurable){throw new TypeError(`Descriptor for accessor property ${property} is non-configurable`);}if(isDataDescriptor(descriptor)&&!descriptor.writable){throw new TypeError(`Descriptor for data property ${property} is non-writable`);}}function isDataDescriptor(descriptor){return!descriptor.value&&!descriptor.writable&&!descriptor.set&&!descriptor.get;}/*eslint-disable no-use-before-define*/function getParentBehaviour(stubInstance){return stubInstance.parent&&getCurrentBehavior(stubInstance.parent);}function getDefaultBehavior(stubInstance){return stubInstance.defaultBehavior||getParentBehaviour(stubInstance)||behavior.create(stubInstance);}function getCurrentBehavior(stubInstance){const currentBehavior=stubInstance.behaviors[stubInstance.callCount-1];return currentBehavior&&currentBehavior.isPresent()?currentBehavior:getDefaultBehavior(stubInstance);}/*eslint-enable no-use-before-define*/const proto={resetBehavior:function(){this.defaultBehavior=null;this.behaviors=[];delete this.returnValue;delete this.returnArgAt;delete this.throwArgAt;delete this.resolveArgAt;delete this.fakeFn;this.returnThis=false;this.resolveThis=false;forEach(this.fakes,function(fake){fake.resetBehavior();});},reset:function(){this.resetHistory();this.resetBehavior();},onCall:function onCall(index){if(!this.behaviors[index]){this.behaviors[index]=behavior.create(this);}return this.behaviors[index];},onFirstCall:function onFirstCall(){return this.onCall(0);},onSecondCall:function onSecondCall(){return this.onCall(1);},onThirdCall:function onThirdCall(){return this.onCall(2);},withArgs:function withArgs(){const fake=spy.withArgs.apply(this,arguments);if(this.defaultBehavior&&this.defaultBehavior.promiseLibrary){fake.defaultBehavior=fake.defaultBehavior||behavior.create(fake);fake.defaultBehavior.promiseLibrary=this.defaultBehavior.promiseLibrary;}return fake;}};forEach(Object.keys(behavior),function(method){if(hasOwnProperty(behavior,method)&&!hasOwnProperty(proto,method)&&method!==\"create\"&&method!==\"invoke\"){proto[method]=behavior.createBehavior(method);}});forEach(Object.keys(behaviors),function(method){if(hasOwnProperty(behaviors,method)&&!hasOwnProperty(proto,method)){behavior.addBehavior(stub,method,behaviors[method]);}});extend(stub,proto);module.exports=stub;},{\"./behavior\":5,\"./default-behaviors\":10,\"./proxy\":18,\"./spy\":22,\"./throw-on-falsy-object\":24,\"./util/core/extend\":27,\"./util/core/get-property-descriptor\":30,\"./util/core/is-es-module\":31,\"./util/core/is-non-existent-property\":32,\"./util/core/sinon-type\":36,\"./util/core/walk-object\":39,\"./util/core/wrap-method\":41,\"@sinonjs/commons\":49}],24:[function(require,module,exports){\"use strict\";const valueToString=require(\"@sinonjs/commons\").valueToString;function throwOnFalsyObject(object,property){if(property&&!object){const type=object===null?\"null\":\"undefined\";throw new Error(`Trying to stub property '${valueToString(property)}' of ${type}`);}}module.exports=throwOnFalsyObject;},{\"@sinonjs/commons\":49}],25:[function(require,module,exports){\"use strict\";module.exports={injectInto:null,properties:[\"spy\",\"stub\",\"mock\",\"clock\",\"server\",\"requests\",\"fake\",\"define\",\"replace\",\"replaceSetter\",\"replaceGetter\",\"createStubInstance\"],useFakeTimers:true,useFakeServer:true};},{}],26:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const reduce=arrayProto.reduce;module.exports=function exportAsyncBehaviors(behaviorMethods){return reduce(Object.keys(behaviorMethods),function(acc,method){// need to avoid creating another async versions of the newly added async methods\nif(method.match(/^(callsArg|yields)/)&&!method.match(/Async/)){acc[`${method}Async`]=function(){const result=behaviorMethods[method].apply(this,arguments);this.callbackAsync=true;return result;};}return acc;},{});};},{\"@sinonjs/commons\":49}],27:[function(require,module,exports){\"use strict\";const arrayProto=require(\"@sinonjs/commons\").prototypes.array;const hasOwnProperty=require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;const join=arrayProto.join;const push=arrayProto.push;// Adapted from https://developer.mozilla.org/en/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\nconst hasDontEnumBug=function(){const obj={constructor:function(){return\"0\";},toString:function(){return\"1\";},valueOf:function(){return\"2\";},toLocaleString:function(){return\"3\";},prototype:function(){return\"4\";},isPrototypeOf:function(){return\"5\";},propertyIsEnumerable:function(){return\"6\";},hasOwnProperty:function(){return\"7\";},length:function(){return\"8\";},unique:function(){return\"9\";}};const result=[];for(const prop in obj){if(hasOwnProperty(obj,prop)){push(result,obj[prop]());}}return join(result,\"\")!==\"0123456789\";}();/**\n *\n * @param target\n * @param sources\n * @param doCopy\n * @returns {*} target\n */function extendCommon(target,sources,doCopy){let source,i,prop;for(i=0;i<sources.length;i++){source=sources[i];for(prop in source){if(hasOwnProperty(source,prop)){doCopy(target,source,prop);}}// Make sure we copy (own) toString method even when in JScript with DontEnum bug\n// See https://developer.mozilla.org/en/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\nif(hasDontEnumBug&&hasOwnProperty(source,\"toString\")&&source.toString!==target.toString){target.toString=source.toString;}}return target;}/**\n * Public: Extend target in place with all (own) properties, except 'name' when [[writable]] is false,\n *         from sources in-order. Thus, last source will override properties in previous sources.\n *\n * @param {object} target - The Object to extend\n * @param {object[]} sources - Objects to copy properties from.\n * @returns {object} the extended target\n */module.exports=function extend(target,...sources){return extendCommon(target,sources,function copyValue(dest,source,prop){const destOwnPropertyDescriptor=Object.getOwnPropertyDescriptor(dest,prop);const sourceOwnPropertyDescriptor=Object.getOwnPropertyDescriptor(source,prop);if(prop===\"name\"&&!destOwnPropertyDescriptor.writable){return;}const descriptors={configurable:sourceOwnPropertyDescriptor.configurable,enumerable:sourceOwnPropertyDescriptor.enumerable};/*\n                if the sorce has an Accessor property copy over the accessor functions (get and set)\n                data properties has writable attribute where as accessor property don't\n                REF: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#properties\n            */if(hasOwnProperty(sourceOwnPropertyDescriptor,\"writable\")){descriptors.writable=sourceOwnPropertyDescriptor.writable;descriptors.value=sourceOwnPropertyDescriptor.value;}else{if(sourceOwnPropertyDescriptor.get){descriptors.get=sourceOwnPropertyDescriptor.get.bind(dest);}if(sourceOwnPropertyDescriptor.set){descriptors.set=sourceOwnPropertyDescriptor.set.bind(dest);}}Object.defineProperty(dest,prop,descriptors);});};/**\n * Public: Extend target in place with all (own) properties from sources in-order. Thus, last source will\n *         override properties in previous sources. Define the properties as non enumerable.\n *\n * @param {object} target - The Object to extend\n * @param {object[]} sources - Objects to copy properties from.\n * @returns {object} the extended target\n */module.exports.nonEnum=function extendNonEnum(target,...sources){return extendCommon(target,sources,function copyProperty(dest,source,prop){Object.defineProperty(dest,prop,{value:source[prop],enumerable:false,configurable:true,writable:true});});};},{\"@sinonjs/commons\":49}],28:[function(require,module,exports){\"use strict\";module.exports=function toString(){let i,prop,thisValue;if(this.getCall&&this.callCount){i=this.callCount;while(i--){thisValue=this.getCall(i).thisValue;// eslint-disable-next-line guard-for-in\nfor(prop in thisValue){try{if(thisValue[prop]===this){return prop;}}catch(e){// no-op - accessing props can throw an error, nothing to do here\n}}}}return this.displayName||\"sinon fake\";};},{}],29:[function(require,module,exports){\"use strict\";/* istanbul ignore next : not testing that setTimeout works */function nextTick(callback){setTimeout(callback,0);}module.exports=function getNextTick(process,setImmediate){if(typeof process===\"object\"&&typeof process.nextTick===\"function\"){return process.nextTick;}if(typeof setImmediate===\"function\"){return setImmediate;}return nextTick;};},{}],30:[function(require,module,exports){\"use strict\";/* eslint-disable jsdoc/valid-types */ /*\n * The following type def is strictly an illegal JSDoc, but the expression forms a\n * legal Typescript union type and is understood by Visual Studio and the IntelliJ\n * family of editors. The \"TS\" flavor of JSDoc is becoming the de-facto standard these\n * days for that reason (and the fact that JSDoc is essentially unmaintained)\n */ /**\n * @typedef {{isOwn: boolean} & PropertyDescriptor} SinonPropertyDescriptor\n * a slightly enriched property descriptor\n * @property {boolean} isOwn true if the descriptor is owned by this object, false if it comes from the prototype\n */ /* eslint-enable jsdoc/valid-types */ /**\n * Returns a slightly modified property descriptor that one can tell is from the object or the prototype\n *\n * @param {*} object\n * @param {string} property\n * @returns {SinonPropertyDescriptor}\n */function getPropertyDescriptor(object,property){let proto=object;let descriptor;const isOwn=Boolean(object&&Object.getOwnPropertyDescriptor(object,property));while(proto&&!(descriptor=Object.getOwnPropertyDescriptor(proto,property))){proto=Object.getPrototypeOf(proto);}if(descriptor){descriptor.isOwn=isOwn;}return descriptor;}module.exports=getPropertyDescriptor;},{}],31:[function(require,module,exports){\"use strict\";/**\n * Verify if an object is a ECMAScript Module\n *\n * As the exports from a module is immutable we cannot alter the exports\n * using spies or stubs. Let the consumer know this to avoid bug reports\n * on weird error messages.\n *\n * @param {object} object The object to examine\n * @returns {boolean} true when the object is a module\n */module.exports=function(object){return object&&typeof Symbol!==\"undefined\"&&object[Symbol.toStringTag]===\"Module\"&&Object.isSealed(object);};},{}],32:[function(require,module,exports){\"use strict\";/**\n * @param {*} object\n * @param {string} property\n * @returns {boolean} whether a prop exists in the prototype chain\n */function isNonExistentProperty(object,property){return Boolean(object&&typeof property!==\"undefined\"&&!(property in object));}module.exports=isNonExistentProperty;},{}],33:[function(require,module,exports){\"use strict\";const getPropertyDescriptor=require(\"./get-property-descriptor\");function isPropertyConfigurable(obj,propName){const propertyDescriptor=getPropertyDescriptor(obj,propName);return propertyDescriptor?propertyDescriptor.configurable:true;}module.exports=isPropertyConfigurable;},{\"./get-property-descriptor\":30}],34:[function(require,module,exports){\"use strict\";function isRestorable(obj){return typeof obj===\"function\"&&typeof obj.restore===\"function\"&&obj.restore.sinon;}module.exports=isRestorable;},{}],35:[function(require,module,exports){\"use strict\";const globalObject=require(\"@sinonjs/commons\").global;const getNextTick=require(\"./get-next-tick\");module.exports=getNextTick(globalObject.process,globalObject.setImmediate);},{\"./get-next-tick\":29,\"@sinonjs/commons\":49}],36:[function(require,module,exports){\"use strict\";const sinonTypeSymbolProperty=Symbol(\"SinonType\");module.exports={/**\n     * Set the type of a Sinon object to make it possible to identify it later at runtime\n     *\n     * @param {object|Function} object  object/function to set the type on\n     * @param {string} type the named type of the object/function\n     */set(object,type){Object.defineProperty(object,sinonTypeSymbolProperty,{value:type,configurable:false,enumerable:false});},get(object){return object&&object[sinonTypeSymbolProperty];}};},{}],37:[function(require,module,exports){\"use strict\";const array=[null,\"once\",\"twice\",\"thrice\"];module.exports=function timesInWords(count){return array[count]||`${count||0} times`;};},{}],38:[function(require,module,exports){\"use strict\";const forEach=Array.prototype.forEach;function usePromiseLibrary(library,fakes){if(typeof library===\"undefined\"){return;}if(Array.isArray(fakes)){forEach.call(fakes,usePromiseLibrary.bind(null,library));return;}if(typeof fakes.usingPromise===\"function\"){fakes.usingPromise(library);}}module.exports=usePromiseLibrary;},{}],39:[function(require,module,exports){\"use strict\";const functionName=require(\"@sinonjs/commons\").functionName;const getPropertyDescriptor=require(\"./get-property-descriptor\");const walk=require(\"./walk\");/**\n * A utility that allows traversing an object, applying mutating functions on the properties\n *\n * @param {Function} mutator called on each property\n * @param {object} object the object we are walking over\n * @param {Function} filter a predicate (boolean function) that will decide whether or not to apply the mutator to the current property\n * @returns {void} nothing\n */function walkObject(mutator,object,filter){let called=false;const name=functionName(mutator);if(!object){throw new Error(`Trying to ${name} object but received ${String(object)}`);}walk(object,function(prop,propOwner){// we don't want to stub things like toString(), valueOf(), etc. so we only stub if the object\n// is not Object.prototype\nif(propOwner!==Object.prototype&&prop!==\"constructor\"&&typeof getPropertyDescriptor(propOwner,prop).value===\"function\"){if(filter){if(filter(object,prop)){called=true;mutator(object,prop);}}else{called=true;mutator(object,prop);}}});if(!called){throw new Error(`Found no methods on object to which we could apply mutations`);}return object;}module.exports=walkObject;},{\"./get-property-descriptor\":30,\"./walk\":40,\"@sinonjs/commons\":49}],40:[function(require,module,exports){\"use strict\";const forEach=require(\"@sinonjs/commons\").prototypes.array.forEach;function walkInternal(obj,iterator,context,originalObj,seen){let prop;const proto=Object.getPrototypeOf(obj);if(typeof Object.getOwnPropertyNames!==\"function\"){// We explicitly want to enumerate through all of the prototype's properties\n// in this case, therefore we deliberately leave out an own property check.\n/* eslint-disable-next-line guard-for-in */for(prop in obj){iterator.call(context,obj[prop],prop,obj);}return;}forEach(Object.getOwnPropertyNames(obj),function(k){if(seen[k]!==true){seen[k]=true;const target=typeof Object.getOwnPropertyDescriptor(obj,k).get===\"function\"?originalObj:obj;iterator.call(context,k,target);}});if(proto){walkInternal(proto,iterator,context,originalObj,seen);}}/* Walks the prototype chain of an object and iterates over every own property\n * name encountered. The iterator is called in the same fashion that Array.prototype.forEach\n * works, where it is passed the value, key, and own object as the 1st, 2nd, and 3rd positional\n * argument, respectively. In cases where Object.getOwnPropertyNames is not available, walk will\n * default to using a simple for..in loop.\n *\n * obj - The object to walk the prototype chain for.\n * iterator - The function to be called on each pass of the walk.\n * context - (Optional) When given, the iterator will be called with this object as the receiver.\n */module.exports=function walk(obj,iterator,context){return walkInternal(obj,iterator,context,obj,{});};},{\"@sinonjs/commons\":49}],41:[function(require,module,exports){\"use strict\";// eslint-disable-next-line no-empty-function\nconst noop=()=>{};const getPropertyDescriptor=require(\"./get-property-descriptor\");const extend=require(\"./extend\");const sinonType=require(\"./sinon-type\");const hasOwnProperty=require(\"@sinonjs/commons\").prototypes.object.hasOwnProperty;const valueToString=require(\"@sinonjs/commons\").valueToString;const push=require(\"@sinonjs/commons\").prototypes.array.push;function isFunction(obj){return typeof obj===\"function\"||Boolean(obj&&obj.constructor&&obj.call&&obj.apply);}function mirrorProperties(target,source){for(const prop in source){if(!hasOwnProperty(target,prop)){target[prop]=source[prop];}}}function getAccessor(object,property,method){const accessors=[\"get\",\"set\"];const descriptor=getPropertyDescriptor(object,property);for(let i=0;i<accessors.length;i++){if(descriptor[accessors[i]]&&descriptor[accessors[i]].name===method.name){return accessors[i];}}return null;}// Cheap way to detect if we have ES5 support.\nconst hasES5Support=(\"keys\"in Object);module.exports=function wrapMethod(object,property,method){if(!object){throw new TypeError(\"Should wrap property of object\");}if(typeof method!==\"function\"&&typeof method!==\"object\"){throw new TypeError(\"Method wrapper should be a function or a property descriptor\");}function checkWrappedMethod(wrappedMethod){let error;if(!isFunction(wrappedMethod)){error=new TypeError(`Attempted to wrap ${typeof wrappedMethod} property ${valueToString(property)} as function`);}else if(wrappedMethod.restore&&wrappedMethod.restore.sinon){error=new TypeError(`Attempted to wrap ${valueToString(property)} which is already wrapped`);}else if(wrappedMethod.calledBefore){const verb=wrappedMethod.returns?\"stubbed\":\"spied on\";error=new TypeError(`Attempted to wrap ${valueToString(property)} which is already ${verb}`);}if(error){if(wrappedMethod&&wrappedMethod.stackTraceError){error.stack+=`\\n--------------\\n${wrappedMethod.stackTraceError.stack}`;}throw error;}}let error,wrappedMethod,i,wrappedMethodDesc,target,accessor;const wrappedMethods=[];function simplePropertyAssignment(){wrappedMethod=object[property];checkWrappedMethod(wrappedMethod);object[property]=method;method.displayName=property;}// Firefox has a problem when using hasOwn.call on objects from other frames.\nconst owned=object.hasOwnProperty?object.hasOwnProperty(property)// eslint-disable-line @sinonjs/no-prototype-methods/no-prototype-methods\n:hasOwnProperty(object,property);if(hasES5Support){const methodDesc=typeof method===\"function\"?{value:method}:method;wrappedMethodDesc=getPropertyDescriptor(object,property);if(!wrappedMethodDesc){error=new TypeError(`Attempted to wrap ${typeof wrappedMethod} property ${property} as function`);}else if(wrappedMethodDesc.restore&&wrappedMethodDesc.restore.sinon){error=new TypeError(`Attempted to wrap ${property} which is already wrapped`);}if(error){if(wrappedMethodDesc&&wrappedMethodDesc.stackTraceError){error.stack+=`\\n--------------\\n${wrappedMethodDesc.stackTraceError.stack}`;}throw error;}const types=Object.keys(methodDesc);for(i=0;i<types.length;i++){wrappedMethod=wrappedMethodDesc[types[i]];checkWrappedMethod(wrappedMethod);push(wrappedMethods,wrappedMethod);}mirrorProperties(methodDesc,wrappedMethodDesc);for(i=0;i<types.length;i++){mirrorProperties(methodDesc[types[i]],wrappedMethodDesc[types[i]]);}// you are not allowed to flip the configurable prop on an\n// existing descriptor to anything but false (#2514)\nif(!owned){methodDesc.configurable=true;}Object.defineProperty(object,property,methodDesc);// catch failing assignment\n// this is the converse of the check in `.restore` below\nif(typeof method===\"function\"&&object[property]!==method){// correct any wrongdoings caused by the defineProperty call above,\n// such as adding new items (if object was a Storage object)\ndelete object[property];simplePropertyAssignment();}}else{simplePropertyAssignment();}extendObjectWithWrappedMethods();function extendObjectWithWrappedMethods(){for(i=0;i<wrappedMethods.length;i++){accessor=getAccessor(object,property,wrappedMethods[i]);target=accessor?method[accessor]:method;extend.nonEnum(target,{displayName:property,wrappedMethod:wrappedMethods[i],// Set up an Error object for a stack trace which can be used later to find what line of\n// code the original method was created on.\nstackTraceError:new Error(\"Stack Trace for original\"),restore:restore});target.restore.sinon=true;if(!hasES5Support){mirrorProperties(target,wrappedMethod);}}}function restore(){accessor=getAccessor(object,property,this.wrappedMethod);let descriptor;// For prototype properties try to reset by delete first.\n// If this fails (ex: localStorage on mobile safari) then force a reset\n// via direct assignment.\nif(accessor){if(!owned){try{// In some cases `delete` may throw an error\ndelete object[property][accessor];}catch(e){}// eslint-disable-line no-empty\n// For native code functions `delete` fails without throwing an error\n// on Chrome < 43, PhantomJS, etc.\n}else if(hasES5Support){descriptor=getPropertyDescriptor(object,property);descriptor[accessor]=wrappedMethodDesc[accessor];Object.defineProperty(object,property,descriptor);}if(hasES5Support){descriptor=getPropertyDescriptor(object,property);if(descriptor&&descriptor.value===target){object[property][accessor]=this.wrappedMethod;}}else{// Use strict equality comparison to check failures then force a reset\n// via direct assignment.\nif(object[property][accessor]===target){object[property][accessor]=this.wrappedMethod;}}}else{if(!owned){try{delete object[property];}catch(e){}// eslint-disable-line no-empty\n}else if(hasES5Support){Object.defineProperty(object,property,wrappedMethodDesc);}if(hasES5Support){descriptor=getPropertyDescriptor(object,property);if(descriptor&&descriptor.value===target){object[property]=this.wrappedMethod;}}else{if(object[property]===target){object[property]=this.wrappedMethod;}}}if(sinonType.get(object)===\"stub-instance\"){// this is simply to avoid errors after restoring if something should\n// traverse the object in a cleanup phase, ref #2477\nobject[property]=noop;}}return method;};},{\"./extend\":27,\"./get-property-descriptor\":30,\"./sinon-type\":36,\"@sinonjs/commons\":49}],42:[function(require,module,exports){\"use strict\";const extend=require(\"./core/extend\");const FakeTimers=require(\"@sinonjs/fake-timers\");const globalObject=require(\"@sinonjs/commons\").global;/**\n *\n * @param config\n * @param globalCtx\n *\n * @returns {object} the clock, after installing it on the global context, if given\n */function createClock(config,globalCtx){let FakeTimersCtx=FakeTimers;if(globalCtx!==null&&typeof globalCtx===\"object\"){FakeTimersCtx=FakeTimers.withGlobal(globalCtx);}const clock=FakeTimersCtx.install(config);clock.restore=clock.uninstall;return clock;}/**\n *\n * @param obj\n * @param globalPropName\n */function addIfDefined(obj,globalPropName){const globalProp=globalObject[globalPropName];if(typeof globalProp!==\"undefined\"){obj[globalPropName]=globalProp;}}/**\n * @param {number|Date|object} dateOrConfig The unix epoch value to install with (default 0)\n * @returns {object} Returns a lolex clock instance\n */exports.useFakeTimers=function(dateOrConfig){const hasArguments=typeof dateOrConfig!==\"undefined\";const argumentIsDateLike=(typeof dateOrConfig===\"number\"||dateOrConfig instanceof Date)&&arguments.length===1;const argumentIsObject=dateOrConfig!==null&&typeof dateOrConfig===\"object\"&&arguments.length===1;if(!hasArguments){return createClock({now:0});}if(argumentIsDateLike){return createClock({now:dateOrConfig});}if(argumentIsObject){const config=extend.nonEnum({},dateOrConfig);const globalCtx=config.global;delete config.global;return createClock(config,globalCtx);}throw new TypeError(\"useFakeTimers expected epoch or config object. See https://github.com/sinonjs/sinon\");};exports.clock={create:function(now){return FakeTimers.createClock(now);}};const timers={setTimeout:setTimeout,clearTimeout:clearTimeout,setInterval:setInterval,clearInterval:clearInterval,Date:Date};addIfDefined(timers,\"setImmediate\");addIfDefined(timers,\"clearImmediate\");exports.timers=timers;},{\"./core/extend\":27,\"@sinonjs/commons\":49,\"@sinonjs/fake-timers\":62}],43:[function(require,module,exports){\"use strict\";var every=require(\"./prototypes/array\").every;/**\n * @private\n */function hasCallsLeft(callMap,spy){if(callMap[spy.id]===undefined){callMap[spy.id]=0;}return callMap[spy.id]<spy.callCount;}/**\n * @private\n */function checkAdjacentCalls(callMap,spy,index,spies){var calledBeforeNext=true;if(index!==spies.length-1){calledBeforeNext=spy.calledBefore(spies[index+1]);}if(hasCallsLeft(callMap,spy)&&calledBeforeNext){callMap[spy.id]+=1;return true;}return false;}/**\n * A Sinon proxy object (fake, spy, stub)\n *\n * @typedef {object} SinonProxy\n * @property {Function} calledBefore - A method that determines if this proxy was called before another one\n * @property {string} id - Some id\n * @property {number} callCount - Number of times this proxy has been called\n */ /**\n * Returns true when the spies have been called in the order they were supplied in\n *\n * @param  {SinonProxy[] | SinonProxy} spies An array of proxies, or several proxies as arguments\n * @returns {boolean} true when spies are called in order, false otherwise\n */function calledInOrder(spies){var callMap={};// eslint-disable-next-line no-underscore-dangle\nvar _spies=arguments.length>1?arguments:spies;return every(_spies,checkAdjacentCalls.bind(null,callMap));}module.exports=calledInOrder;},{\"./prototypes/array\":51}],44:[function(require,module,exports){\"use strict\";var functionName=require(\"./function-name\");/**\n * Returns a display name for a value from a constructor\n *\n * @param  {object} value A value to examine\n * @returns {(string|null)} A string or null\n */function className(value){return value.constructor&&value.constructor.name||// The next branch is for IE11 support only:\n// Because the name property is not set on the prototype\n// of the Function object, we finally try to grab the\n// name from its definition. This will never be reached\n// in node, so we are not able to test this properly.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\ntypeof value.constructor===\"function\"&&/* istanbul ignore next */functionName(value.constructor)||null;}module.exports=className;},{\"./function-name\":47}],45:[function(require,module,exports){/* eslint-disable no-console */\"use strict\";/**\n * Returns a function that will invoke the supplied function and print a\n * deprecation warning to the console each time it is called.\n *\n * @param  {Function} func\n * @param  {string} msg\n * @returns {Function}\n */exports.wrap=function(func,msg){var wrapped=function(){exports.printWarning(msg);return func.apply(this,arguments);};if(func.prototype){wrapped.prototype=func.prototype;}return wrapped;};/**\n * Returns a string which can be supplied to `wrap()` to notify the user that a\n * particular part of the sinon API has been deprecated.\n *\n * @param  {string} packageName\n * @param  {string} funcName\n * @returns {string}\n */exports.defaultMsg=function(packageName,funcName){return`${packageName}.${funcName} is deprecated and will be removed from the public API in a future version of ${packageName}.`;};/**\n * Prints a warning on the console, when it exists\n *\n * @param  {string} msg\n * @returns {undefined}\n */exports.printWarning=function(msg){/* istanbul ignore next */if(typeof process===\"object\"&&process.emitWarning){// Emit Warnings in Node\nprocess.emitWarning(msg);}else if(console.info){console.info(msg);}else{console.log(msg);}};},{}],46:[function(require,module,exports){\"use strict\";/**\n * Returns true when fn returns true for all members of obj.\n * This is an every implementation that works for all iterables\n *\n * @param  {object}   obj\n * @param  {Function} fn\n * @returns {boolean}\n */module.exports=function every(obj,fn){var pass=true;try{// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\nobj.forEach(function(){if(!fn.apply(this,arguments)){// Throwing an error is the only way to break `forEach`\nthrow new Error();}});}catch(e){pass=false;}return pass;};},{}],47:[function(require,module,exports){\"use strict\";/**\n * Returns a display name for a function\n *\n * @param  {Function} func\n * @returns {string}\n */module.exports=function functionName(func){if(!func){return\"\";}try{return func.displayName||func.name||// Use function decomposition as a last resort to get function\n// name. Does not rely on function decomposition to work - if it\n// doesn't debugging will be slightly less informative\n// (i.e. toString will say 'spy' rather than 'myFunc').\n(String(func).match(/function ([^\\s(]+)/)||[])[1];}catch(e){// Stringify may fail and we might get an exception, as a last-last\n// resort fall back to empty string.\nreturn\"\";}};},{}],48:[function(require,module,exports){\"use strict\";/**\n * A reference to the global object\n *\n * @type {object} globalObject\n */var globalObject;/* istanbul ignore else */if(typeof global!==\"undefined\"){// Node\nglobalObject=global;}else if(typeof window!==\"undefined\"){// Browser\nglobalObject=window;}else{// WebWorker\nglobalObject=self;}module.exports=globalObject;},{}],49:[function(require,module,exports){\"use strict\";module.exports={global:require(\"./global\"),calledInOrder:require(\"./called-in-order\"),className:require(\"./class-name\"),deprecated:require(\"./deprecated\"),every:require(\"./every\"),functionName:require(\"./function-name\"),orderByFirstCall:require(\"./order-by-first-call\"),prototypes:require(\"./prototypes\"),typeOf:require(\"./type-of\"),valueToString:require(\"./value-to-string\")};},{\"./called-in-order\":43,\"./class-name\":44,\"./deprecated\":45,\"./every\":46,\"./function-name\":47,\"./global\":48,\"./order-by-first-call\":50,\"./prototypes\":54,\"./type-of\":60,\"./value-to-string\":61}],50:[function(require,module,exports){\"use strict\";var sort=require(\"./prototypes/array\").sort;var slice=require(\"./prototypes/array\").slice;/**\n * @private\n */function comparator(a,b){// uuid, won't ever be equal\nvar aCall=a.getCall(0);var bCall=b.getCall(0);var aId=aCall&&aCall.callId||-1;var bId=bCall&&bCall.callId||-1;return aId<bId?-1:1;}/**\n * A Sinon proxy object (fake, spy, stub)\n *\n * @typedef {object} SinonProxy\n * @property {Function} getCall - A method that can return the first call\n */ /**\n * Sorts an array of SinonProxy instances (fake, spy, stub) by their first call\n *\n * @param  {SinonProxy[] | SinonProxy} spies\n * @returns {SinonProxy[]}\n */function orderByFirstCall(spies){return sort(slice(spies),comparator);}module.exports=orderByFirstCall;},{\"./prototypes/array\":51}],51:[function(require,module,exports){\"use strict\";var copyPrototype=require(\"./copy-prototype-methods\");module.exports=copyPrototype(Array.prototype);},{\"./copy-prototype-methods\":52}],52:[function(require,module,exports){\"use strict\";var call=Function.call;var throwsOnProto=require(\"./throws-on-proto\");var disallowedProperties=[// ignore size because it throws from Map\n\"size\",\"caller\",\"callee\",\"arguments\"];// This branch is covered when tests are run with `--disable-proto=throw`,\n// however we can test both branches at the same time, so this is ignored\n/* istanbul ignore next */if(throwsOnProto){disallowedProperties.push(\"__proto__\");}module.exports=function copyPrototypeMethods(prototype){// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\nreturn Object.getOwnPropertyNames(prototype).reduce(function(result,name){if(disallowedProperties.includes(name)){return result;}if(typeof prototype[name]!==\"function\"){return result;}result[name]=call.bind(prototype[name]);return result;},Object.create(null));};},{\"./throws-on-proto\":59}],53:[function(require,module,exports){\"use strict\";var copyPrototype=require(\"./copy-prototype-methods\");module.exports=copyPrototype(Function.prototype);},{\"./copy-prototype-methods\":52}],54:[function(require,module,exports){\"use strict\";module.exports={array:require(\"./array\"),function:require(\"./function\"),map:require(\"./map\"),object:require(\"./object\"),set:require(\"./set\"),string:require(\"./string\")};},{\"./array\":51,\"./function\":53,\"./map\":55,\"./object\":56,\"./set\":57,\"./string\":58}],55:[function(require,module,exports){\"use strict\";var copyPrototype=require(\"./copy-prototype-methods\");module.exports=copyPrototype(Map.prototype);},{\"./copy-prototype-methods\":52}],56:[function(require,module,exports){\"use strict\";var copyPrototype=require(\"./copy-prototype-methods\");module.exports=copyPrototype(Object.prototype);},{\"./copy-prototype-methods\":52}],57:[function(require,module,exports){\"use strict\";var copyPrototype=require(\"./copy-prototype-methods\");module.exports=copyPrototype(Set.prototype);},{\"./copy-prototype-methods\":52}],58:[function(require,module,exports){\"use strict\";var copyPrototype=require(\"./copy-prototype-methods\");module.exports=copyPrototype(String.prototype);},{\"./copy-prototype-methods\":52}],59:[function(require,module,exports){\"use strict\";/**\n * Is true when the environment causes an error to be thrown for accessing the\n * __proto__ property.\n *\n * This is necessary in order to support `node --disable-proto=throw`.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\n *\n * @type {boolean}\n */let throwsOnProto;try{const object={};// eslint-disable-next-line no-proto, no-unused-expressions\nobject.__proto__;throwsOnProto=false;}catch(_){// This branch is covered when tests are run with `--disable-proto=throw`,\n// however we can test both branches at the same time, so this is ignored\n/* istanbul ignore next */throwsOnProto=true;}module.exports=throwsOnProto;},{}],60:[function(require,module,exports){\"use strict\";var type=require(\"type-detect\");/**\n * Returns the lower-case result of running type from type-detect on the value\n *\n * @param  {*} value\n * @returns {string}\n */module.exports=function typeOf(value){return type(value).toLowerCase();};},{\"type-detect\":179}],61:[function(require,module,exports){\"use strict\";/**\n * Returns a string representation of the value\n *\n * @param  {*} value\n * @returns {string}\n */function valueToString(value){if(value&&value.toString){// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\nreturn value.toString();}return String(value);}module.exports=valueToString;},{}],62:[function(require,module,exports){\"use strict\";const globalObject=require(\"@sinonjs/commons\").global;let timersModule;if(typeof require===\"function\"&&typeof module===\"object\"){try{timersModule=require(\"timers\");}catch(e){// ignored\n}}/**\n * @typedef {object} IdleDeadline\n * @property {boolean} didTimeout - whether or not the callback was called before reaching the optional timeout\n * @property {function():number} timeRemaining - a floating-point value providing an estimate of the number of milliseconds remaining in the current idle period\n */ /**\n * Queues a function to be called during a browser's idle periods\n *\n * @callback RequestIdleCallback\n * @param {function(IdleDeadline)} callback\n * @param {{timeout: number}} options - an options object\n * @returns {number} the id\n */ /**\n * @callback NextTick\n * @param {VoidVarArgsFunc} callback - the callback to run\n * @param {...*} args - optional arguments to call the callback with\n * @returns {void}\n */ /**\n * @callback SetImmediate\n * @param {VoidVarArgsFunc} callback - the callback to run\n * @param {...*} args - optional arguments to call the callback with\n * @returns {NodeImmediate}\n */ /**\n * @callback VoidVarArgsFunc\n * @param {...*} callback - the callback to run\n * @returns {void}\n */ /**\n * @typedef RequestAnimationFrame\n * @property {function(number):void} requestAnimationFrame\n * @returns {number} - the id\n */ /**\n * @typedef Performance\n * @property {function(): number} now\n */ /* eslint-disable jsdoc/require-property-description */ /**\n * @typedef {object} Clock\n * @property {number} now - the current time\n * @property {Date} Date - the Date constructor\n * @property {number} loopLimit - the maximum number of timers before assuming an infinite loop\n * @property {RequestIdleCallback} requestIdleCallback\n * @property {function(number):void} cancelIdleCallback\n * @property {setTimeout} setTimeout\n * @property {clearTimeout} clearTimeout\n * @property {NextTick} nextTick\n * @property {queueMicrotask} queueMicrotask\n * @property {setInterval} setInterval\n * @property {clearInterval} clearInterval\n * @property {SetImmediate} setImmediate\n * @property {function(NodeImmediate):void} clearImmediate\n * @property {function():number} countTimers\n * @property {RequestAnimationFrame} requestAnimationFrame\n * @property {function(number):void} cancelAnimationFrame\n * @property {function():void} runMicrotasks\n * @property {function(string | number): number} tick\n * @property {function(string | number): Promise<number>} tickAsync\n * @property {function(): number} next\n * @property {function(): Promise<number>} nextAsync\n * @property {function(): number} runAll\n * @property {function(): number} runToFrame\n * @property {function(): Promise<number>} runAllAsync\n * @property {function(): number} runToLast\n * @property {function(): Promise<number>} runToLastAsync\n * @property {function(): void} reset\n * @property {function(number | Date): void} setSystemTime\n * @property {function(number): void} jump\n * @property {Performance} performance\n * @property {function(number[]): number[]} hrtime - process.hrtime (legacy)\n * @property {function(): void} uninstall Uninstall the clock.\n * @property {Function[]} methods - the methods that are faked\n * @property {boolean} [shouldClearNativeTimers] inherited from config\n * @property {{methodName:string, original:any}[] | undefined} timersModuleMethods\n */ /* eslint-enable jsdoc/require-property-description */ /**\n * Configuration object for the `install` method.\n *\n * @typedef {object} Config\n * @property {number|Date} [now] a number (in milliseconds) or a Date object (default epoch)\n * @property {string[]} [toFake] names of the methods that should be faked.\n * @property {number} [loopLimit] the maximum number of timers that will be run when calling runAll()\n * @property {boolean} [shouldAdvanceTime] tells FakeTimers to increment mocked time automatically (default false)\n * @property {number} [advanceTimeDelta] increment mocked time every <<advanceTimeDelta>> ms (default: 20ms)\n * @property {boolean} [shouldClearNativeTimers] forwards clear timer calls to native functions if they are not fakes (default: false)\n */ /* eslint-disable jsdoc/require-property-description */ /**\n * The internal structure to describe a scheduled fake timer\n *\n * @typedef {object} Timer\n * @property {Function} func\n * @property {*[]} args\n * @property {number} delay\n * @property {number} callAt\n * @property {number} createdAt\n * @property {boolean} immediate\n * @property {number} id\n * @property {Error} [error]\n */ /**\n * A Node timer\n *\n * @typedef {object} NodeImmediate\n * @property {function(): boolean} hasRef\n * @property {function(): NodeImmediate} ref\n * @property {function(): NodeImmediate} unref\n */ /* eslint-enable jsdoc/require-property-description */ /* eslint-disable complexity */ /**\n * Mocks available features in the specified global namespace.\n *\n * @param {*} _global Namespace to mock (e.g. `window`)\n * @returns {FakeTimers}\n */function withGlobal(_global){const maxTimeout=Math.pow(2,31)-1;//see https://heycam.github.io/webidl/#abstract-opdef-converttoint\nconst idCounterStart=1e12;// arbitrarily large number to avoid collisions with native timer IDs\nconst NOOP=function(){return undefined;};const NOOP_ARRAY=function(){return[];};const timeoutResult=_global.setTimeout(NOOP,0);const addTimerReturnsObject=typeof timeoutResult===\"object\";const hrtimePresent=_global.process&&typeof _global.process.hrtime===\"function\";const hrtimeBigintPresent=hrtimePresent&&typeof _global.process.hrtime.bigint===\"function\";const nextTickPresent=_global.process&&typeof _global.process.nextTick===\"function\";const utilPromisify=_global.process&&require(\"util\").promisify;const performancePresent=_global.performance&&typeof _global.performance.now===\"function\";const hasPerformancePrototype=_global.Performance&&(typeof _global.Performance).match(/^(function|object)$/);const hasPerformanceConstructorPrototype=_global.performance&&_global.performance.constructor&&_global.performance.constructor.prototype;const queueMicrotaskPresent=_global.hasOwnProperty(\"queueMicrotask\");const requestAnimationFramePresent=_global.requestAnimationFrame&&typeof _global.requestAnimationFrame===\"function\";const cancelAnimationFramePresent=_global.cancelAnimationFrame&&typeof _global.cancelAnimationFrame===\"function\";const requestIdleCallbackPresent=_global.requestIdleCallback&&typeof _global.requestIdleCallback===\"function\";const cancelIdleCallbackPresent=_global.cancelIdleCallback&&typeof _global.cancelIdleCallback===\"function\";const setImmediatePresent=_global.setImmediate&&typeof _global.setImmediate===\"function\";const intlPresent=_global.Intl&&typeof _global.Intl===\"object\";_global.clearTimeout(timeoutResult);const NativeDate=_global.Date;const NativeIntl=_global.Intl;let uniqueTimerId=idCounterStart;/**\n     * @param {number} num\n     * @returns {boolean}\n     */function isNumberFinite(num){if(Number.isFinite){return Number.isFinite(num);}return isFinite(num);}let isNearInfiniteLimit=false;/**\n     * @param {Clock} clock\n     * @param {number} i\n     */function checkIsNearInfiniteLimit(clock,i){if(clock.loopLimit&&i===clock.loopLimit-1){isNearInfiniteLimit=true;}}/**\n     *\n     */function resetIsNearInfiniteLimit(){isNearInfiniteLimit=false;}/**\n     * Parse strings like \"01:10:00\" (meaning 1 hour, 10 minutes, 0 seconds) into\n     * number of milliseconds. This is used to support human-readable strings passed\n     * to clock.tick()\n     *\n     * @param {string} str\n     * @returns {number}\n     */function parseTime(str){if(!str){return 0;}const strings=str.split(\":\");const l=strings.length;let i=l;let ms=0;let parsed;if(l>3||!/^(\\d\\d:){0,2}\\d\\d?$/.test(str)){throw new Error(\"tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits\");}while(i--){parsed=parseInt(strings[i],10);if(parsed>=60){throw new Error(`Invalid time ${str}`);}ms+=parsed*Math.pow(60,l-i-1);}return ms*1000;}/**\n     * Get the decimal part of the millisecond value as nanoseconds\n     *\n     * @param {number} msFloat the number of milliseconds\n     * @returns {number} an integer number of nanoseconds in the range [0,1e6)\n     *\n     * Example: nanoRemainer(123.456789) -> 456789\n     */function nanoRemainder(msFloat){const modulo=1e6;const remainder=msFloat*1e6%modulo;const positiveRemainder=remainder<0?remainder+modulo:remainder;return Math.floor(positiveRemainder);}/**\n     * Used to grok the `now` parameter to createClock.\n     *\n     * @param {Date|number} epoch the system time\n     * @returns {number}\n     */function getEpoch(epoch){if(!epoch){return 0;}if(typeof epoch.getTime===\"function\"){return epoch.getTime();}if(typeof epoch===\"number\"){return epoch;}throw new TypeError(\"now should be milliseconds since UNIX epoch\");}/**\n     * @param {number} from\n     * @param {number} to\n     * @param {Timer} timer\n     * @returns {boolean}\n     */function inRange(from,to,timer){return timer&&timer.callAt>=from&&timer.callAt<=to;}/**\n     * @param {Clock} clock\n     * @param {Timer} job\n     */function getInfiniteLoopError(clock,job){const infiniteLoopError=new Error(`Aborting after running ${clock.loopLimit} timers, assuming an infinite loop!`);if(!job.error){return infiniteLoopError;}// pattern never matched in Node\nconst computedTargetPattern=/target\\.*[<|(|[].*?[>|\\]|)]\\s*/;let clockMethodPattern=new RegExp(String(Object.keys(clock).join(\"|\")));if(addTimerReturnsObject){// node.js environment\nclockMethodPattern=new RegExp(`\\\\s+at (Object\\\\.)?(?:${Object.keys(clock).join(\"|\")})\\\\s+`);}let matchedLineIndex=-1;job.error.stack.split(\"\\n\").some(function(line,i){// If we've matched a computed target line (e.g. setTimeout) then we\n// don't need to look any further. Return true to stop iterating.\nconst matchedComputedTarget=line.match(computedTargetPattern);/* istanbul ignore if */if(matchedComputedTarget){matchedLineIndex=i;return true;}// If we've matched a clock method line, then there may still be\n// others further down the trace. Return false to keep iterating.\nconst matchedClockMethod=line.match(clockMethodPattern);if(matchedClockMethod){matchedLineIndex=i;return false;}// If we haven't matched anything on this line, but we matched\n// previously and set the matched line index, then we can stop.\n// If we haven't matched previously, then we should keep iterating.\nreturn matchedLineIndex>=0;});const stack=`${infiniteLoopError}\\n${job.type||\"Microtask\"} - ${job.func.name||\"anonymous\"}\\n${job.error.stack.split(\"\\n\").slice(matchedLineIndex+1).join(\"\\n\")}`;try{Object.defineProperty(infiniteLoopError,\"stack\",{value:stack});}catch(e){// noop\n}return infiniteLoopError;}/**\n     * @param {Date} target\n     * @param {Date} source\n     * @returns {Date} the target after modifications\n     */function mirrorDateProperties(target,source){let prop;for(prop in source){if(source.hasOwnProperty(prop)){target[prop]=source[prop];}}// set special now implementation\nif(source.now){target.now=function now(){return target.clock.now;};}else{delete target.now;}// set special toSource implementation\nif(source.toSource){target.toSource=function toSource(){return source.toSource();};}else{delete target.toSource;}// set special toString implementation\ntarget.toString=function toString(){return source.toString();};target.prototype=source.prototype;target.parse=source.parse;target.UTC=source.UTC;target.prototype.toUTCString=source.prototype.toUTCString;target.isFake=true;return target;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction createDate(){/**\n         * @param {number} year\n         * @param {number} month\n         * @param {number} date\n         * @param {number} hour\n         * @param {number} minute\n         * @param {number} second\n         * @param {number} ms\n         * @returns {Date}\n         */function ClockDate(year,month,date,hour,minute,second,ms){// the Date constructor called as a function, ref Ecma-262 Edition 5.1, section 15.9.2.\n// This remains so in the 10th edition of 2019 as well.\nif(!(this instanceof ClockDate)){return new NativeDate(ClockDate.clock.now).toString();}// if Date is called as a constructor with 'new' keyword\n// Defensive and verbose to avoid potential harm in passing\n// explicit undefined when user does not pass argument\nswitch(arguments.length){case 0:return new NativeDate(ClockDate.clock.now);case 1:return new NativeDate(year);case 2:return new NativeDate(year,month);case 3:return new NativeDate(year,month,date);case 4:return new NativeDate(year,month,date,hour);case 5:return new NativeDate(year,month,date,hour,minute);case 6:return new NativeDate(year,month,date,hour,minute,second);default:return new NativeDate(year,month,date,hour,minute,second,ms);}}return mirrorDateProperties(ClockDate,NativeDate);}/**\n     * Mirror Intl by default on our fake implementation\n     *\n     * Most of the properties are the original native ones,\n     * but we need to take control of those that have a\n     * dependency on the current clock.\n     *\n     * @returns {object} the partly fake Intl implementation\n     */function createIntl(){const ClockIntl={};/*\n         * All properties of Intl are non-enumerable, so we need\n         * to do a bit of work to get them out.\n         */Object.getOwnPropertyNames(NativeIntl).forEach(property=>ClockIntl[property]=NativeIntl[property]);ClockIntl.DateTimeFormat=function(...args){const realFormatter=new NativeIntl.DateTimeFormat(...args);const formatter={};[\"formatRange\",\"formatRangeToParts\",\"resolvedOptions\"].forEach(method=>{formatter[method]=realFormatter[method].bind(realFormatter);});[\"format\",\"formatToParts\"].forEach(method=>{formatter[method]=function(date){return realFormatter[method](date||ClockIntl.clock.now);};});return formatter;};ClockIntl.DateTimeFormat.prototype=Object.create(NativeIntl.DateTimeFormat.prototype);ClockIntl.DateTimeFormat.supportedLocalesOf=NativeIntl.DateTimeFormat.supportedLocalesOf;return ClockIntl;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction enqueueJob(clock,job){// enqueues a microtick-deferred task - ecma262/#sec-enqueuejob\nif(!clock.jobs){clock.jobs=[];}clock.jobs.push(job);}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction runJobs(clock){// runs all microtick-deferred tasks - ecma262/#sec-runjobs\nif(!clock.jobs){return;}for(let i=0;i<clock.jobs.length;i++){const job=clock.jobs[i];job.func.apply(null,job.args);checkIsNearInfiniteLimit(clock,i);if(clock.loopLimit&&i>clock.loopLimit){throw getInfiniteLoopError(clock,job);}}resetIsNearInfiniteLimit();clock.jobs=[];}/**\n     * @param {Clock} clock\n     * @param {Timer} timer\n     * @returns {number} id of the created timer\n     */function addTimer(clock,timer){if(timer.func===undefined){throw new Error(\"Callback must be provided to timer calls\");}if(addTimerReturnsObject){// Node.js environment\nif(typeof timer.func!==\"function\"){throw new TypeError(`[ERR_INVALID_CALLBACK]: Callback must be a function. Received ${timer.func} of type ${typeof timer.func}`);}}if(isNearInfiniteLimit){timer.error=new Error();}timer.type=timer.immediate?\"Immediate\":\"Timeout\";if(timer.hasOwnProperty(\"delay\")){if(typeof timer.delay!==\"number\"){timer.delay=parseInt(timer.delay,10);}if(!isNumberFinite(timer.delay)){timer.delay=0;}timer.delay=timer.delay>maxTimeout?1:timer.delay;timer.delay=Math.max(0,timer.delay);}if(timer.hasOwnProperty(\"interval\")){timer.type=\"Interval\";timer.interval=timer.interval>maxTimeout?1:timer.interval;}if(timer.hasOwnProperty(\"animation\")){timer.type=\"AnimationFrame\";timer.animation=true;}if(timer.hasOwnProperty(\"idleCallback\")){timer.type=\"IdleCallback\";timer.idleCallback=true;}if(!clock.timers){clock.timers={};}timer.id=uniqueTimerId++;timer.createdAt=clock.now;timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0));clock.timers[timer.id]=timer;if(addTimerReturnsObject){const res={refed:true,ref:function(){this.refed=true;return res;},unref:function(){this.refed=false;return res;},hasRef:function(){return this.refed;},refresh:function(){timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0));// it _might_ have been removed, but if not the assignment is perfectly fine\nclock.timers[timer.id]=timer;return res;},[Symbol.toPrimitive]:function(){return timer.id;}};return res;}return timer.id;}/* eslint consistent-return: \"off\" */ /**\n     * Timer comparitor\n     *\n     * @param {Timer} a\n     * @param {Timer} b\n     * @returns {number}\n     */function compareTimers(a,b){// Sort first by absolute timing\nif(a.callAt<b.callAt){return-1;}if(a.callAt>b.callAt){return 1;}// Sort next by immediate, immediate timers take precedence\nif(a.immediate&&!b.immediate){return-1;}if(!a.immediate&&b.immediate){return 1;}// Sort next by creation time, earlier-created timers take precedence\nif(a.createdAt<b.createdAt){return-1;}if(a.createdAt>b.createdAt){return 1;}// Sort next by id, lower-id timers take precedence\nif(a.id<b.id){return-1;}if(a.id>b.id){return 1;}// As timer ids are unique, no fallback `0` is necessary\n}/**\n     * @param {Clock} clock\n     * @param {number} from\n     * @param {number} to\n     * @returns {Timer}\n     */function firstTimerInRange(clock,from,to){const timers=clock.timers;let timer=null;let id,isInRange;for(id in timers){if(timers.hasOwnProperty(id)){isInRange=inRange(from,to,timers[id]);if(isInRange&&(!timer||compareTimers(timer,timers[id])===1)){timer=timers[id];}}}return timer;}/**\n     * @param {Clock} clock\n     * @returns {Timer}\n     */function firstTimer(clock){const timers=clock.timers;let timer=null;let id;for(id in timers){if(timers.hasOwnProperty(id)){if(!timer||compareTimers(timer,timers[id])===1){timer=timers[id];}}}return timer;}/**\n     * @param {Clock} clock\n     * @returns {Timer}\n     */function lastTimer(clock){const timers=clock.timers;let timer=null;let id;for(id in timers){if(timers.hasOwnProperty(id)){if(!timer||compareTimers(timer,timers[id])===-1){timer=timers[id];}}}return timer;}/**\n     * @param {Clock} clock\n     * @param {Timer} timer\n     */function callTimer(clock,timer){if(typeof timer.interval===\"number\"){clock.timers[timer.id].callAt+=timer.interval;}else{delete clock.timers[timer.id];}if(typeof timer.func===\"function\"){timer.func.apply(null,timer.args);}else{/* eslint no-eval: \"off\" */const eval2=eval;(function(){eval2(timer.func);})();}}/**\n     * Gets clear handler name for a given timer type\n     *\n     * @param {string} ttype\n     */function getClearHandler(ttype){if(ttype===\"IdleCallback\"||ttype===\"AnimationFrame\"){return`cancel${ttype}`;}return`clear${ttype}`;}/**\n     * Gets schedule handler name for a given timer type\n     *\n     * @param {string} ttype\n     */function getScheduleHandler(ttype){if(ttype===\"IdleCallback\"||ttype===\"AnimationFrame\"){return`request${ttype}`;}return`set${ttype}`;}/**\n     * Creates an anonymous function to warn only once\n     */function createWarnOnce(){let calls=0;return function(msg){// eslint-disable-next-line\n!calls++&&console.warn(msg);};}const warnOnce=createWarnOnce();/**\n     * @param {Clock} clock\n     * @param {number} timerId\n     * @param {string} ttype\n     */function clearTimer(clock,timerId,ttype){if(!timerId){// null appears to be allowed in most browsers, and appears to be\n// relied upon by some libraries, like Bootstrap carousel\nreturn;}if(!clock.timers){clock.timers={};}// in Node, the ID is stored as the primitive value for `Timeout` objects\n// for `Immediate` objects, no ID exists, so it gets coerced to NaN\nconst id=Number(timerId);if(Number.isNaN(id)||id<idCounterStart){const handlerName=getClearHandler(ttype);if(clock.shouldClearNativeTimers===true){const nativeHandler=clock[`_${handlerName}`];return typeof nativeHandler===\"function\"?nativeHandler(timerId):undefined;}warnOnce(`FakeTimers: ${handlerName} was invoked to clear a native timer instead of one created by this library.`+\"\\nTo automatically clean-up native timers, use `shouldClearNativeTimers`.\");}if(clock.timers.hasOwnProperty(id)){// check that the ID matches a timer of the correct type\nconst timer=clock.timers[id];if(timer.type===ttype||timer.type===\"Timeout\"&&ttype===\"Interval\"||timer.type===\"Interval\"&&ttype===\"Timeout\"){delete clock.timers[id];}else{const clear=getClearHandler(ttype);const schedule=getScheduleHandler(timer.type);throw new Error(`Cannot clear timer: timer created with ${schedule}() but cleared with ${clear}()`);}}}/**\n     * @param {Clock} clock\n     * @param {Config} config\n     * @returns {Timer[]}\n     */function uninstall(clock,config){let method,i,l;const installedHrTime=\"_hrtime\";const installedNextTick=\"_nextTick\";for(i=0,l=clock.methods.length;i<l;i++){method=clock.methods[i];if(method===\"hrtime\"&&_global.process){_global.process.hrtime=clock[installedHrTime];}else if(method===\"nextTick\"&&_global.process){_global.process.nextTick=clock[installedNextTick];}else if(method===\"performance\"){const originalPerfDescriptor=Object.getOwnPropertyDescriptor(clock,`_${method}`);if(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(_global,method,originalPerfDescriptor);}else if(originalPerfDescriptor.configurable){_global[method]=clock[`_${method}`];}}else{if(_global[method]&&_global[method].hadOwnProperty){_global[method]=clock[`_${method}`];}else{try{delete _global[method];}catch(ignore){/* eslint no-empty: \"off\" */}}}if(clock.timersModuleMethods!==undefined){for(let j=0;j<clock.timersModuleMethods.length;j++){const entry=clock.timersModuleMethods[j];timersModule[entry.methodName]=entry.original;}}}if(config.shouldAdvanceTime===true){_global.clearInterval(clock.attachedInterval);}// Prevent multiple executions which will completely remove these props\nclock.methods=[];// return pending timers, to enable checking what timers remained on uninstall\nif(!clock.timers){return[];}return Object.keys(clock.timers).map(function mapper(key){return clock.timers[key];});}/**\n     * @param {object} target the target containing the method to replace\n     * @param {string} method the keyname of the method on the target\n     * @param {Clock} clock\n     */function hijackMethod(target,method,clock){clock[method].hadOwnProperty=Object.prototype.hasOwnProperty.call(target,method);clock[`_${method}`]=target[method];if(method===\"Date\"){const date=mirrorDateProperties(clock[method],target[method]);target[method]=date;}else if(method===\"Intl\"){target[method]=clock[method];}else if(method===\"performance\"){const originalPerfDescriptor=Object.getOwnPropertyDescriptor(target,method);// JSDOM has a read only performance field so we have to save/copy it differently\nif(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(clock,`_${method}`,originalPerfDescriptor);const perfDescriptor=Object.getOwnPropertyDescriptor(clock,method);Object.defineProperty(target,method,perfDescriptor);}else{target[method]=clock[method];}}else{target[method]=function(){return clock[method].apply(clock,arguments);};Object.defineProperties(target[method],Object.getOwnPropertyDescriptors(clock[method]));}target[method].clock=clock;}/**\n     * @param {Clock} clock\n     * @param {number} advanceTimeDelta\n     */function doIntervalTick(clock,advanceTimeDelta){clock.tick(advanceTimeDelta);}/**\n     * @typedef {object} Timers\n     * @property {setTimeout} setTimeout\n     * @property {clearTimeout} clearTimeout\n     * @property {setInterval} setInterval\n     * @property {clearInterval} clearInterval\n     * @property {Date} Date\n     * @property {Intl} Intl\n     * @property {SetImmediate=} setImmediate\n     * @property {function(NodeImmediate): void=} clearImmediate\n     * @property {function(number[]):number[]=} hrtime\n     * @property {NextTick=} nextTick\n     * @property {Performance=} performance\n     * @property {RequestAnimationFrame=} requestAnimationFrame\n     * @property {boolean=} queueMicrotask\n     * @property {function(number): void=} cancelAnimationFrame\n     * @property {RequestIdleCallback=} requestIdleCallback\n     * @property {function(number): void=} cancelIdleCallback\n     */ /** @type {Timers} */const timers={setTimeout:_global.setTimeout,clearTimeout:_global.clearTimeout,setInterval:_global.setInterval,clearInterval:_global.clearInterval,Date:_global.Date};if(setImmediatePresent){timers.setImmediate=_global.setImmediate;timers.clearImmediate=_global.clearImmediate;}if(hrtimePresent){timers.hrtime=_global.process.hrtime;}if(nextTickPresent){timers.nextTick=_global.process.nextTick;}if(performancePresent){timers.performance=_global.performance;}if(requestAnimationFramePresent){timers.requestAnimationFrame=_global.requestAnimationFrame;}if(queueMicrotaskPresent){timers.queueMicrotask=true;}if(cancelAnimationFramePresent){timers.cancelAnimationFrame=_global.cancelAnimationFrame;}if(requestIdleCallbackPresent){timers.requestIdleCallback=_global.requestIdleCallback;}if(cancelIdleCallbackPresent){timers.cancelIdleCallback=_global.cancelIdleCallback;}if(intlPresent){timers.Intl=_global.Intl;}const originalSetTimeout=_global.setImmediate||_global.setTimeout;/**\n     * @param {Date|number} [start] the system time - non-integer values are floored\n     * @param {number} [loopLimit] maximum number of timers that will be run when calling runAll()\n     * @returns {Clock}\n     */function createClock(start,loopLimit){// eslint-disable-next-line no-param-reassign\nstart=Math.floor(getEpoch(start));// eslint-disable-next-line no-param-reassign\nloopLimit=loopLimit||1000;let nanos=0;const adjustedSystemTime=[0,0];// [millis, nanoremainder]\nif(NativeDate===undefined){throw new Error(\"The global scope doesn't have a `Date` object\"+\" (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)\");}const clock={now:start,Date:createDate(),loopLimit:loopLimit};clock.Date.clock=clock;//eslint-disable-next-line jsdoc/require-jsdoc\nfunction getTimeToNextFrame(){return 16-(clock.now-start)%16;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction hrtime(prev){const millisSinceStart=clock.now-adjustedSystemTime[0]-start;const secsSinceStart=Math.floor(millisSinceStart/1000);const remainderInNanos=(millisSinceStart-secsSinceStart*1e3)*1e6+nanos-adjustedSystemTime[1];if(Array.isArray(prev)){if(prev[1]>1e9){throw new TypeError(\"Number of nanoseconds can't exceed a billion\");}const oldSecs=prev[0];let nanoDiff=remainderInNanos-prev[1];let secDiff=secsSinceStart-oldSecs;if(nanoDiff<0){nanoDiff+=1e9;secDiff-=1;}return[secDiff,nanoDiff];}return[secsSinceStart,remainderInNanos];}/**\n         * A high resolution timestamp in milliseconds.\n         *\n         * @typedef {number} DOMHighResTimeStamp\n         */ /**\n         * performance.now()\n         *\n         * @returns {DOMHighResTimeStamp}\n         */function fakePerformanceNow(){const hrt=hrtime();const millis=hrt[0]*1000+hrt[1]/1e6;return millis;}if(hrtimeBigintPresent){hrtime.bigint=function(){const parts=hrtime();return BigInt(parts[0])*BigInt(1e9)+BigInt(parts[1]);// eslint-disable-line\n};}if(intlPresent){clock.Intl=createIntl();clock.Intl.clock=clock;}clock.requestIdleCallback=function requestIdleCallback(func,timeout){let timeToNextIdlePeriod=0;if(clock.countTimers()>0){timeToNextIdlePeriod=50;// const for now\n}const result=addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:typeof timeout===\"undefined\"?timeToNextIdlePeriod:Math.min(timeout,timeToNextIdlePeriod),idleCallback:true});return Number(result);};clock.cancelIdleCallback=function cancelIdleCallback(timerId){return clearTimer(clock,timerId,\"IdleCallback\");};clock.setTimeout=function setTimeout(func,timeout){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout});};if(typeof _global.Promise!==\"undefined\"&&utilPromisify){clock.setTimeout[utilPromisify.custom]=function promisifiedSetTimeout(timeout,arg){return new _global.Promise(function setTimeoutExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],delay:timeout});});};}clock.clearTimeout=function clearTimeout(timerId){return clearTimer(clock,timerId,\"Timeout\");};clock.nextTick=function nextTick(func){return enqueueJob(clock,{func:func,args:Array.prototype.slice.call(arguments,1),error:isNearInfiniteLimit?new Error():null});};clock.queueMicrotask=function queueMicrotask(func){return clock.nextTick(func);// explicitly drop additional arguments\n};clock.setInterval=function setInterval(func,timeout){// eslint-disable-next-line no-param-reassign\ntimeout=parseInt(timeout,10);return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout,interval:timeout});};clock.clearInterval=function clearInterval(timerId){return clearTimer(clock,timerId,\"Interval\");};if(setImmediatePresent){clock.setImmediate=function setImmediate(func){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,1),immediate:true});};if(typeof _global.Promise!==\"undefined\"&&utilPromisify){clock.setImmediate[utilPromisify.custom]=function promisifiedSetImmediate(arg){return new _global.Promise(function setImmediateExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],immediate:true});});};}clock.clearImmediate=function clearImmediate(timerId){return clearTimer(clock,timerId,\"Immediate\");};}clock.countTimers=function countTimers(){return Object.keys(clock.timers||{}).length+(clock.jobs||[]).length;};clock.requestAnimationFrame=function requestAnimationFrame(func){const result=addTimer(clock,{func:func,delay:getTimeToNextFrame(),get args(){return[fakePerformanceNow()];},animation:true});return Number(result);};clock.cancelAnimationFrame=function cancelAnimationFrame(timerId){return clearTimer(clock,timerId,\"AnimationFrame\");};clock.runMicrotasks=function runMicrotasks(){runJobs(clock);};/**\n         * @param {number|string} tickValue milliseconds or a string parseable by parseTime\n         * @param {boolean} isAsync\n         * @param {Function} resolve\n         * @param {Function} reject\n         * @returns {number|undefined} will return the new `now` value or nothing for async\n         */function doTick(tickValue,isAsync,resolve,reject){const msFloat=typeof tickValue===\"number\"?tickValue:parseTime(tickValue);const ms=Math.floor(msFloat);const remainder=nanoRemainder(msFloat);let nanosTotal=nanos+remainder;let tickTo=clock.now+ms;if(msFloat<0){throw new TypeError(\"Negative ticks are not supported\");}// adjust for positive overflow\nif(nanosTotal>=1e6){tickTo+=1;nanosTotal-=1e6;}nanos=nanosTotal;let tickFrom=clock.now;let previous=clock.now;// ESLint fails to detect this correctly\n/* eslint-disable prefer-const */let timer,firstException,oldNow,nextPromiseTick,compensationCheck,postTimerCall;/* eslint-enable prefer-const */clock.duringTick=true;// perform microtasks\noldNow=clock.now;runJobs(clock);if(oldNow!==clock.now){// compensate for any setSystemTime() call during microtask callback\ntickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction doTickInner(){// perform each timer in the requested range\ntimer=firstTimerInRange(clock,tickFrom,tickTo);// eslint-disable-next-line no-unmodified-loop-condition\nwhile(timer&&tickFrom<=tickTo){if(clock.timers[timer.id]){tickFrom=timer.callAt;clock.now=timer.callAt;oldNow=clock.now;try{runJobs(clock);callTimer(clock,timer);}catch(e){firstException=firstException||e;}if(isAsync){// finish up after native setImmediate callback to allow\n// all native es6 promises to process their callbacks after\n// each timer fires.\noriginalSetTimeout(nextPromiseTick);return;}compensationCheck();}postTimerCall();}// perform process.nextTick()s again\noldNow=clock.now;runJobs(clock);if(oldNow!==clock.now){// compensate for any setSystemTime() call during process.nextTick() callback\ntickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;}clock.duringTick=false;// corner case: during runJobs new timers were scheduled which could be in the range [clock.now, tickTo]\ntimer=firstTimerInRange(clock,tickFrom,tickTo);if(timer){try{clock.tick(tickTo-clock.now);// do it all again - for the remainder of the requested range\n}catch(e){firstException=firstException||e;}}else{// no timers remaining in the requested range: move the clock all the way to the end\nclock.now=tickTo;// update nanos\nnanos=nanosTotal;}if(firstException){throw firstException;}if(isAsync){resolve(clock.now);}else{return clock.now;}}nextPromiseTick=isAsync&&function(){try{compensationCheck();postTimerCall();doTickInner();}catch(e){reject(e);}};compensationCheck=function(){// compensate for any setSystemTime() call during timer callback\nif(oldNow!==clock.now){tickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;previous+=clock.now-oldNow;}};postTimerCall=function(){timer=firstTimerInRange(clock,previous,tickTo);previous=tickFrom;};return doTickInner();}/**\n         * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n         * @returns {number} will return the new `now` value\n         */clock.tick=function tick(tickValue){return doTick(tickValue,false);};if(typeof _global.Promise!==\"undefined\"){/**\n             * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n             * @returns {Promise}\n             */clock.tickAsync=function tickAsync(tickValue){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{doTick(tickValue,true,resolve,reject);}catch(e){reject(e);}});});};}clock.next=function next(){runJobs(clock);const timer=firstTimer(clock);if(!timer){return clock.now;}clock.duringTick=true;try{clock.now=timer.callAt;callTimer(clock,timer);runJobs(clock);return clock.now;}finally{clock.duringTick=false;}};if(typeof _global.Promise!==\"undefined\"){clock.nextAsync=function nextAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{const timer=firstTimer(clock);if(!timer){resolve(clock.now);return;}let err;clock.duringTick=true;clock.now=timer.callAt;try{callTimer(clock,timer);}catch(e){err=e;}clock.duringTick=false;originalSetTimeout(function(){if(err){reject(err);}else{resolve(clock.now);}});}catch(e){reject(e);}});});};}clock.runAll=function runAll(){let numTimers,i;runJobs(clock);for(i=0;i<clock.loopLimit;i++){if(!clock.timers){resetIsNearInfiniteLimit();return clock.now;}numTimers=Object.keys(clock.timers).length;if(numTimers===0){resetIsNearInfiniteLimit();return clock.now;}clock.next();checkIsNearInfiniteLimit(clock,i);}const excessJob=firstTimer(clock);throw getInfiniteLoopError(clock,excessJob);};clock.runToFrame=function runToFrame(){return clock.tick(getTimeToNextFrame());};if(typeof _global.Promise!==\"undefined\"){clock.runAllAsync=function runAllAsync(){return new _global.Promise(function(resolve,reject){let i=0;/**\n                     *\n                     */function doRun(){originalSetTimeout(function(){try{runJobs(clock);let numTimers;if(i<clock.loopLimit){if(!clock.timers){resetIsNearInfiniteLimit();resolve(clock.now);return;}numTimers=Object.keys(clock.timers).length;if(numTimers===0){resetIsNearInfiniteLimit();resolve(clock.now);return;}clock.next();i++;doRun();checkIsNearInfiniteLimit(clock,i);return;}const excessJob=firstTimer(clock);reject(getInfiniteLoopError(clock,excessJob));}catch(e){reject(e);}});}doRun();});};}clock.runToLast=function runToLast(){const timer=lastTimer(clock);if(!timer){runJobs(clock);return clock.now;}return clock.tick(timer.callAt-clock.now);};if(typeof _global.Promise!==\"undefined\"){clock.runToLastAsync=function runToLastAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{const timer=lastTimer(clock);if(!timer){runJobs(clock);resolve(clock.now);}resolve(clock.tickAsync(timer.callAt-clock.now));}catch(e){reject(e);}});});};}clock.reset=function reset(){nanos=0;clock.timers={};clock.jobs=[];clock.now=start;};clock.setSystemTime=function setSystemTime(systemTime){// determine time difference\nconst newNow=getEpoch(systemTime);const difference=newNow-clock.now;let id,timer;adjustedSystemTime[0]=adjustedSystemTime[0]+difference;adjustedSystemTime[1]=adjustedSystemTime[1]+nanos;// update 'system clock'\nclock.now=newNow;nanos=0;// update timers and intervals to keep them stable\nfor(id in clock.timers){if(clock.timers.hasOwnProperty(id)){timer=clock.timers[id];timer.createdAt+=difference;timer.callAt+=difference;}}};/**\n         * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n         * @returns {number} will return the new `now` value\n         */clock.jump=function jump(tickValue){const msFloat=typeof tickValue===\"number\"?tickValue:parseTime(tickValue);const ms=Math.floor(msFloat);for(const timer of Object.values(clock.timers)){if(clock.now+ms>timer.callAt){timer.callAt=clock.now+ms;}}clock.tick(ms);};if(performancePresent){clock.performance=Object.create(null);clock.performance.now=fakePerformanceNow;}if(hrtimePresent){clock.hrtime=hrtime;}return clock;}/* eslint-disable complexity */ /**\n     * @param {Config=} [config] Optional config\n     * @returns {Clock}\n     */function install(config){if(arguments.length>1||config instanceof Date||Array.isArray(config)||typeof config===\"number\"){throw new TypeError(`FakeTimers.install called with ${String(config)} install requires an object parameter`);}if(_global.Date.isFake===true){// Timers are already faked; this is a problem.\n// Make the user reset timers before continuing.\nthrow new TypeError(\"Can't install fake timers twice on the same global object.\");}// eslint-disable-next-line no-param-reassign\nconfig=typeof config!==\"undefined\"?config:{};config.shouldAdvanceTime=config.shouldAdvanceTime||false;config.advanceTimeDelta=config.advanceTimeDelta||20;config.shouldClearNativeTimers=config.shouldClearNativeTimers||false;if(config.target){throw new TypeError(\"config.target is no longer supported. Use `withGlobal(target)` instead.\");}let i,l;const clock=createClock(config.now,config.loopLimit);clock.shouldClearNativeTimers=config.shouldClearNativeTimers;clock.uninstall=function(){return uninstall(clock,config);};clock.methods=config.toFake||[];if(clock.methods.length===0){// do not fake nextTick by default - GitHub#126\nclock.methods=Object.keys(timers).filter(function(key){return key!==\"nextTick\"&&key!==\"queueMicrotask\";});}if(config.shouldAdvanceTime===true){const intervalTick=doIntervalTick.bind(null,clock,config.advanceTimeDelta);const intervalId=_global.setInterval(intervalTick,config.advanceTimeDelta);clock.attachedInterval=intervalId;}if(clock.methods.includes(\"performance\")){const proto=(()=>{if(hasPerformanceConstructorPrototype){return _global.performance.constructor.prototype;}if(hasPerformancePrototype){return _global.Performance.prototype;}})();if(proto){Object.getOwnPropertyNames(proto).forEach(function(name){if(name!==\"now\"){clock.performance[name]=name.indexOf(\"getEntries\")===0?NOOP_ARRAY:NOOP;}});}else if((config.toFake||[]).includes(\"performance\")){// user explicitly tried to fake performance when not present\nthrow new ReferenceError(\"non-existent performance object cannot be faked\");}}if(_global===globalObject&&timersModule){clock.timersModuleMethods=[];}for(i=0,l=clock.methods.length;i<l;i++){const nameOfMethodToReplace=clock.methods[i];if(nameOfMethodToReplace===\"hrtime\"){if(_global.process&&typeof _global.process.hrtime===\"function\"){hijackMethod(_global.process,nameOfMethodToReplace,clock);}}else if(nameOfMethodToReplace===\"nextTick\"){if(_global.process&&typeof _global.process.nextTick===\"function\"){hijackMethod(_global.process,nameOfMethodToReplace,clock);}}else{hijackMethod(_global,nameOfMethodToReplace,clock);}if(clock.timersModuleMethods!==undefined&&timersModule[nameOfMethodToReplace]){const original=timersModule[nameOfMethodToReplace];clock.timersModuleMethods.push({methodName:nameOfMethodToReplace,original:original});timersModule[nameOfMethodToReplace]=_global[nameOfMethodToReplace];}}return clock;}/* eslint-enable complexity */return{timers:timers,createClock:createClock,install:install,withGlobal:withGlobal};}/**\n * @typedef {object} FakeTimers\n * @property {Timers} timers\n * @property {createClock} createClock\n * @property {Function} install\n * @property {withGlobal} withGlobal\n */ /* eslint-enable complexity */ /** @type {FakeTimers} */const defaultImplementation=withGlobal(globalObject);exports.timers=defaultImplementation.timers;exports.createClock=defaultImplementation.createClock;exports.install=defaultImplementation.install;exports.withGlobal=withGlobal;},{\"@sinonjs/commons\":49,\"timers\":178,\"util\":118}],63:[function(require,module,exports){\"use strict\";var ARRAY_TYPES=[Array,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];module.exports=ARRAY_TYPES;},{}],64:[function(require,module,exports){\"use strict\";var arrayProto=require(\"@sinonjs/commons\").prototypes.array;var deepEqual=require(\"./deep-equal\").use(createMatcher);// eslint-disable-line no-use-before-define\nvar every=require(\"@sinonjs/commons\").every;var functionName=require(\"@sinonjs/commons\").functionName;var get=require(\"lodash.get\");var iterableToString=require(\"./iterable-to-string\");var objectProto=require(\"@sinonjs/commons\").prototypes.object;var typeOf=require(\"@sinonjs/commons\").typeOf;var valueToString=require(\"@sinonjs/commons\").valueToString;var assertMatcher=require(\"./create-matcher/assert-matcher\");var assertMethodExists=require(\"./create-matcher/assert-method-exists\");var assertType=require(\"./create-matcher/assert-type\");var isIterable=require(\"./create-matcher/is-iterable\");var isMatcher=require(\"./create-matcher/is-matcher\");var matcherPrototype=require(\"./create-matcher/matcher-prototype\");var arrayIndexOf=arrayProto.indexOf;var some=arrayProto.some;var hasOwnProperty=objectProto.hasOwnProperty;var objectToString=objectProto.toString;var TYPE_MAP=require(\"./create-matcher/type-map\")(createMatcher);// eslint-disable-line no-use-before-define\n/**\n * Creates a matcher object for the passed expectation\n *\n * @alias module:samsam.createMatcher\n * @param {*} expectation An expecttation\n * @param {string} message A message for the expectation\n * @returns {object} A matcher object\n */function createMatcher(expectation,message){var m=Object.create(matcherPrototype);var type=typeOf(expectation);if(message!==undefined&&typeof message!==\"string\"){throw new TypeError(\"Message should be a string\");}if(arguments.length>2){throw new TypeError(`Expected 1 or 2 arguments, received ${arguments.length}`);}if(type in TYPE_MAP){TYPE_MAP[type](m,expectation,message);}else{m.test=function(actual){return deepEqual(actual,expectation);};}if(!m.message){m.message=`match(${valueToString(expectation)})`;}// ensure that nothing mutates the exported message value, ref https://github.com/sinonjs/sinon/issues/2502\nObject.defineProperty(m,\"message\",{configurable:false,writable:false,value:m.message});return m;}createMatcher.isMatcher=isMatcher;createMatcher.any=createMatcher(function(){return true;},\"any\");createMatcher.defined=createMatcher(function(actual){return actual!==null&&actual!==undefined;},\"defined\");createMatcher.truthy=createMatcher(function(actual){return Boolean(actual);},\"truthy\");createMatcher.falsy=createMatcher(function(actual){return!actual;},\"falsy\");createMatcher.same=function(expectation){return createMatcher(function(actual){return expectation===actual;},`same(${valueToString(expectation)})`);};createMatcher.in=function(arrayOfExpectations){if(typeOf(arrayOfExpectations)!==\"array\"){throw new TypeError(\"array expected\");}return createMatcher(function(actual){return some(arrayOfExpectations,function(expectation){return expectation===actual;});},`in(${valueToString(arrayOfExpectations)})`);};createMatcher.typeOf=function(type){assertType(type,\"string\",\"type\");return createMatcher(function(actual){return typeOf(actual)===type;},`typeOf(\"${type}\")`);};createMatcher.instanceOf=function(type){/* istanbul ignore if */if(typeof Symbol===\"undefined\"||typeof Symbol.hasInstance===\"undefined\"){assertType(type,\"function\",\"type\");}else{assertMethodExists(type,Symbol.hasInstance,\"type\",\"[Symbol.hasInstance]\");}return createMatcher(function(actual){return actual instanceof type;},`instanceOf(${functionName(type)||objectToString(type)})`);};/**\n * Creates a property matcher\n *\n * @private\n * @param {Function} propertyTest A function to test the property against a value\n * @param {string} messagePrefix A prefix to use for messages generated by the matcher\n * @returns {object} A matcher\n */function createPropertyMatcher(propertyTest,messagePrefix){return function(property,value){assertType(property,\"string\",\"property\");var onlyProperty=arguments.length===1;var message=`${messagePrefix}(\"${property}\"`;if(!onlyProperty){message+=`, ${valueToString(value)}`;}message+=\")\";return createMatcher(function(actual){if(actual===undefined||actual===null||!propertyTest(actual,property)){return false;}return onlyProperty||deepEqual(actual[property],value);},message);};}createMatcher.has=createPropertyMatcher(function(actual,property){if(typeof actual===\"object\"){return property in actual;}return actual[property]!==undefined;},\"has\");createMatcher.hasOwn=createPropertyMatcher(function(actual,property){return hasOwnProperty(actual,property);},\"hasOwn\");createMatcher.hasNested=function(property,value){assertType(property,\"string\",\"property\");var onlyProperty=arguments.length===1;var message=`hasNested(\"${property}\"`;if(!onlyProperty){message+=`, ${valueToString(value)}`;}message+=\")\";return createMatcher(function(actual){if(actual===undefined||actual===null||get(actual,property)===undefined){return false;}return onlyProperty||deepEqual(get(actual,property),value);},message);};var jsonParseResultTypes={null:true,boolean:true,number:true,string:true,object:true,array:true};createMatcher.json=function(value){if(!jsonParseResultTypes[typeOf(value)]){throw new TypeError(\"Value cannot be the result of JSON.parse\");}var message=`json(${JSON.stringify(value,null,\"  \")})`;return createMatcher(function(actual){var parsed;try{parsed=JSON.parse(actual);}catch(e){return false;}return deepEqual(parsed,value);},message);};createMatcher.every=function(predicate){assertMatcher(predicate);return createMatcher(function(actual){if(typeOf(actual)===\"object\"){return every(Object.keys(actual),function(key){return predicate.test(actual[key]);});}return isIterable(actual)&&every(actual,function(element){return predicate.test(element);});},`every(${predicate.message})`);};createMatcher.some=function(predicate){assertMatcher(predicate);return createMatcher(function(actual){if(typeOf(actual)===\"object\"){return!every(Object.keys(actual),function(key){return!predicate.test(actual[key]);});}return isIterable(actual)&&!every(actual,function(element){return!predicate.test(element);});},`some(${predicate.message})`);};createMatcher.array=createMatcher.typeOf(\"array\");createMatcher.array.deepEquals=function(expectation){return createMatcher(function(actual){// Comparing lengths is the fastest way to spot a difference before iterating through every item\nvar sameLength=actual.length===expectation.length;return typeOf(actual)===\"array\"&&sameLength&&every(actual,function(element,index){var expected=expectation[index];return typeOf(expected)===\"array\"&&typeOf(element)===\"array\"?createMatcher.array.deepEquals(expected).test(element):deepEqual(expected,element);});},`deepEquals([${iterableToString(expectation)}])`);};createMatcher.array.startsWith=function(expectation){return createMatcher(function(actual){return typeOf(actual)===\"array\"&&every(expectation,function(expectedElement,index){return actual[index]===expectedElement;});},`startsWith([${iterableToString(expectation)}])`);};createMatcher.array.endsWith=function(expectation){return createMatcher(function(actual){// This indicates the index in which we should start matching\nvar offset=actual.length-expectation.length;return typeOf(actual)===\"array\"&&every(expectation,function(expectedElement,index){return actual[offset+index]===expectedElement;});},`endsWith([${iterableToString(expectation)}])`);};createMatcher.array.contains=function(expectation){return createMatcher(function(actual){return typeOf(actual)===\"array\"&&every(expectation,function(expectedElement){return arrayIndexOf(actual,expectedElement)!==-1;});},`contains([${iterableToString(expectation)}])`);};createMatcher.map=createMatcher.typeOf(\"map\");createMatcher.map.deepEquals=function mapDeepEquals(expectation){return createMatcher(function(actual){// Comparing lengths is the fastest way to spot a difference before iterating through every item\nvar sameLength=actual.size===expectation.size;return typeOf(actual)===\"map\"&&sameLength&&every(actual,function(element,key){return expectation.has(key)&&expectation.get(key)===element;});},`deepEquals(Map[${iterableToString(expectation)}])`);};createMatcher.map.contains=function mapContains(expectation){return createMatcher(function(actual){return typeOf(actual)===\"map\"&&every(expectation,function(element,key){return actual.has(key)&&actual.get(key)===element;});},`contains(Map[${iterableToString(expectation)}])`);};createMatcher.set=createMatcher.typeOf(\"set\");createMatcher.set.deepEquals=function setDeepEquals(expectation){return createMatcher(function(actual){// Comparing lengths is the fastest way to spot a difference before iterating through every item\nvar sameLength=actual.size===expectation.size;return typeOf(actual)===\"set\"&&sameLength&&every(actual,function(element){return expectation.has(element);});},`deepEquals(Set[${iterableToString(expectation)}])`);};createMatcher.set.contains=function setContains(expectation){return createMatcher(function(actual){return typeOf(actual)===\"set\"&&every(expectation,function(element){return actual.has(element);});},`contains(Set[${iterableToString(expectation)}])`);};createMatcher.bool=createMatcher.typeOf(\"boolean\");createMatcher.number=createMatcher.typeOf(\"number\");createMatcher.string=createMatcher.typeOf(\"string\");createMatcher.object=createMatcher.typeOf(\"object\");createMatcher.func=createMatcher.typeOf(\"function\");createMatcher.regexp=createMatcher.typeOf(\"regexp\");createMatcher.date=createMatcher.typeOf(\"date\");createMatcher.symbol=createMatcher.typeOf(\"symbol\");module.exports=createMatcher;},{\"./create-matcher/assert-matcher\":65,\"./create-matcher/assert-method-exists\":66,\"./create-matcher/assert-type\":67,\"./create-matcher/is-iterable\":68,\"./create-matcher/is-matcher\":69,\"./create-matcher/matcher-prototype\":71,\"./create-matcher/type-map\":72,\"./deep-equal\":73,\"./iterable-to-string\":87,\"@sinonjs/commons\":96,\"lodash.get\":121}],65:[function(require,module,exports){\"use strict\";var isMatcher=require(\"./is-matcher\");/**\n * Throws a TypeError when `value` is not a matcher\n *\n * @private\n * @param {*} value The value to examine\n */function assertMatcher(value){if(!isMatcher(value)){throw new TypeError(\"Matcher expected\");}}module.exports=assertMatcher;},{\"./is-matcher\":69}],66:[function(require,module,exports){\"use strict\";/**\n * Throws a TypeError when expected method doesn't exist\n *\n * @private\n * @param {*} value A value to examine\n * @param {string} method The name of the method to look for\n * @param {name} name A name to use for the error message\n * @param {string} methodPath The name of the method to use for error messages\n * @throws {TypeError} When the method doesn't exist\n */function assertMethodExists(value,method,name,methodPath){if(value[method]===null||value[method]===undefined){throw new TypeError(`Expected ${name} to have method ${methodPath}`);}}module.exports=assertMethodExists;},{}],67:[function(require,module,exports){\"use strict\";var typeOf=require(\"@sinonjs/commons\").typeOf;/**\n * Ensures that value is of type\n *\n * @private\n * @param {*} value A value to examine\n * @param {string} type A basic JavaScript type to compare to, e.g. \"object\", \"string\"\n * @param {string} name A string to use for the error message\n * @throws {TypeError} If value is not of the expected type\n * @returns {undefined}\n */function assertType(value,type,name){var actual=typeOf(value);if(actual!==type){throw new TypeError(`Expected type of ${name} to be ${type}, but was ${actual}`);}}module.exports=assertType;},{\"@sinonjs/commons\":96}],68:[function(require,module,exports){\"use strict\";var typeOf=require(\"@sinonjs/commons\").typeOf;/**\n * Returns `true` for iterables\n *\n * @private\n * @param {*} value A value to examine\n * @returns {boolean} Returns `true` when `value` looks like an iterable\n */function isIterable(value){return Boolean(value)&&typeOf(value.forEach)===\"function\";}module.exports=isIterable;},{\"@sinonjs/commons\":96}],69:[function(require,module,exports){\"use strict\";var isPrototypeOf=require(\"@sinonjs/commons\").prototypes.object.isPrototypeOf;var matcherPrototype=require(\"./matcher-prototype\");/**\n * Returns `true` when `object` is a matcher\n *\n * @private\n * @param {*} object A value to examine\n * @returns {boolean} Returns `true` when `object` is a matcher\n */function isMatcher(object){return isPrototypeOf(matcherPrototype,object);}module.exports=isMatcher;},{\"./matcher-prototype\":71,\"@sinonjs/commons\":96}],70:[function(require,module,exports){\"use strict\";var every=require(\"@sinonjs/commons\").prototypes.array.every;var concat=require(\"@sinonjs/commons\").prototypes.array.concat;var typeOf=require(\"@sinonjs/commons\").typeOf;var deepEqualFactory=require(\"../deep-equal\").use;var isMatcher=require(\"./is-matcher\");var keys=Object.keys;var getOwnPropertySymbols=Object.getOwnPropertySymbols;/**\n * Matches `actual` with `expectation`\n *\n * @private\n * @param {*} actual A value to examine\n * @param {object} expectation An object with properties to match on\n * @param {object} matcher A matcher to use for comparison\n * @returns {boolean} Returns true when `actual` matches all properties in `expectation`\n */function matchObject(actual,expectation,matcher){var deepEqual=deepEqualFactory(matcher);if(actual===null||actual===undefined){return false;}var expectedKeys=keys(expectation);/* istanbul ignore else: cannot collect coverage for engine that doesn't support Symbol */if(typeOf(getOwnPropertySymbols)===\"function\"){expectedKeys=concat(expectedKeys,getOwnPropertySymbols(expectation));}return every(expectedKeys,function(key){var exp=expectation[key];var act=actual[key];if(isMatcher(exp)){if(!exp.test(act)){return false;}}else if(typeOf(exp)===\"object\"){if(!matchObject(act,exp,matcher)){return false;}}else if(!deepEqual(act,exp)){return false;}return true;});}module.exports=matchObject;},{\"../deep-equal\":73,\"./is-matcher\":69,\"@sinonjs/commons\":96}],71:[function(require,module,exports){\"use strict\";var matcherPrototype={toString:function(){return this.message;}};matcherPrototype.or=function(valueOrMatcher){var createMatcher=require(\"../create-matcher\");var isMatcher=createMatcher.isMatcher;if(!arguments.length){throw new TypeError(\"Matcher expected\");}var m2=isMatcher(valueOrMatcher)?valueOrMatcher:createMatcher(valueOrMatcher);var m1=this;var or=Object.create(matcherPrototype);or.test=function(actual){return m1.test(actual)||m2.test(actual);};or.message=`${m1.message}.or(${m2.message})`;return or;};matcherPrototype.and=function(valueOrMatcher){var createMatcher=require(\"../create-matcher\");var isMatcher=createMatcher.isMatcher;if(!arguments.length){throw new TypeError(\"Matcher expected\");}var m2=isMatcher(valueOrMatcher)?valueOrMatcher:createMatcher(valueOrMatcher);var m1=this;var and=Object.create(matcherPrototype);and.test=function(actual){return m1.test(actual)&&m2.test(actual);};and.message=`${m1.message}.and(${m2.message})`;return and;};module.exports=matcherPrototype;},{\"../create-matcher\":64}],72:[function(require,module,exports){\"use strict\";var functionName=require(\"@sinonjs/commons\").functionName;var join=require(\"@sinonjs/commons\").prototypes.array.join;var map=require(\"@sinonjs/commons\").prototypes.array.map;var stringIndexOf=require(\"@sinonjs/commons\").prototypes.string.indexOf;var valueToString=require(\"@sinonjs/commons\").valueToString;var matchObject=require(\"./match-object\");var createTypeMap=function(match){return{function:function(m,expectation,message){m.test=expectation;m.message=message||`match(${functionName(expectation)})`;},number:function(m,expectation){m.test=function(actual){// we need type coercion here\nreturn expectation==actual;// eslint-disable-line eqeqeq\n};},object:function(m,expectation){var array=[];if(typeof expectation.test===\"function\"){m.test=function(actual){return expectation.test(actual)===true;};m.message=`match(${functionName(expectation.test)})`;return m;}array=map(Object.keys(expectation),function(key){return`${key}: ${valueToString(expectation[key])}`;});m.test=function(actual){return matchObject(actual,expectation,match);};m.message=`match(${join(array,\", \")})`;return m;},regexp:function(m,expectation){m.test=function(actual){return typeof actual===\"string\"&&expectation.test(actual);};},string:function(m,expectation){m.test=function(actual){return typeof actual===\"string\"&&stringIndexOf(actual,expectation)!==-1;};m.message=`match(\"${expectation}\")`;}};};module.exports=createTypeMap;},{\"./match-object\":70,\"@sinonjs/commons\":96}],73:[function(require,module,exports){\"use strict\";var valueToString=require(\"@sinonjs/commons\").valueToString;var className=require(\"@sinonjs/commons\").className;var typeOf=require(\"@sinonjs/commons\").typeOf;var arrayProto=require(\"@sinonjs/commons\").prototypes.array;var objectProto=require(\"@sinonjs/commons\").prototypes.object;var mapForEach=require(\"@sinonjs/commons\").prototypes.map.forEach;var getClass=require(\"./get-class\");var identical=require(\"./identical\");var isArguments=require(\"./is-arguments\");var isArrayType=require(\"./is-array-type\");var isDate=require(\"./is-date\");var isElement=require(\"./is-element\");var isIterable=require(\"./is-iterable\");var isMap=require(\"./is-map\");var isNaN=require(\"./is-nan\");var isObject=require(\"./is-object\");var isSet=require(\"./is-set\");var isSubset=require(\"./is-subset\");var concat=arrayProto.concat;var every=arrayProto.every;var push=arrayProto.push;var getTime=Date.prototype.getTime;var hasOwnProperty=objectProto.hasOwnProperty;var indexOf=arrayProto.indexOf;var keys=Object.keys;var getOwnPropertySymbols=Object.getOwnPropertySymbols;/**\n * Deep equal comparison. Two values are \"deep equal\" when:\n *\n *   - They are equal, according to samsam.identical\n *   - They are both date objects representing the same time\n *   - They are both arrays containing elements that are all deepEqual\n *   - They are objects with the same set of properties, and each property\n *     in ``actual`` is deepEqual to the corresponding property in ``expectation``\n *\n * Supports cyclic objects.\n *\n * @alias module:samsam.deepEqual\n * @param {*} actual The object to examine\n * @param {*} expectation The object actual is expected to be equal to\n * @param {object} match A value to match on\n * @returns {boolean} Returns true when actual and expectation are considered equal\n */function deepEqualCyclic(actual,expectation,match){// used for cyclic comparison\n// contain already visited objects\nvar actualObjects=[];var expectationObjects=[];// contain pathes (position in the object structure)\n// of the already visited objects\n// indexes same as in objects arrays\nvar actualPaths=[];var expectationPaths=[];// contains combinations of already compared objects\n// in the manner: { \"$1['ref']$2['ref']\": true }\nvar compared={};// does the recursion for the deep equal check\n// eslint-disable-next-line complexity\nreturn function deepEqual(actualObj,expectationObj,actualPath,expectationPath){// If both are matchers they must be the same instance in order to be\n// considered equal If we didn't do that we would end up running one\n// matcher against the other\nif(match&&match.isMatcher(expectationObj)){if(match.isMatcher(actualObj)){return actualObj===expectationObj;}return expectationObj.test(actualObj);}var actualType=typeof actualObj;var expectationType=typeof expectationObj;if(actualObj===expectationObj||isNaN(actualObj)||isNaN(expectationObj)||actualObj===null||expectationObj===null||actualObj===undefined||expectationObj===undefined||actualType!==\"object\"||expectationType!==\"object\"){return identical(actualObj,expectationObj);}// Elements are only equal if identical(expected, actual)\nif(isElement(actualObj)||isElement(expectationObj)){return false;}var isActualDate=isDate(actualObj);var isExpectationDate=isDate(expectationObj);if(isActualDate||isExpectationDate){if(!isActualDate||!isExpectationDate||getTime.call(actualObj)!==getTime.call(expectationObj)){return false;}}if(actualObj instanceof RegExp&&expectationObj instanceof RegExp){if(valueToString(actualObj)!==valueToString(expectationObj)){return false;}}if(actualObj instanceof Promise&&expectationObj instanceof Promise){return actualObj===expectationObj;}if(actualObj instanceof Error&&expectationObj instanceof Error){return actualObj===expectationObj;}var actualClass=getClass(actualObj);var expectationClass=getClass(expectationObj);var actualKeys=keys(actualObj);var expectationKeys=keys(expectationObj);var actualName=className(actualObj);var expectationName=className(expectationObj);var expectationSymbols=typeOf(getOwnPropertySymbols)===\"function\"?getOwnPropertySymbols(expectationObj):/* istanbul ignore next: cannot collect coverage for engine that doesn't support Symbol */[];var expectationKeysAndSymbols=concat(expectationKeys,expectationSymbols);if(isArguments(actualObj)||isArguments(expectationObj)){if(actualObj.length!==expectationObj.length){return false;}}else{if(actualType!==expectationType||actualClass!==expectationClass||actualKeys.length!==expectationKeys.length||actualName&&expectationName&&actualName!==expectationName){return false;}}if(isSet(actualObj)||isSet(expectationObj)){if(!isSet(actualObj)||!isSet(expectationObj)||actualObj.size!==expectationObj.size){return false;}return isSubset(actualObj,expectationObj,deepEqual);}if(isMap(actualObj)||isMap(expectationObj)){if(!isMap(actualObj)||!isMap(expectationObj)||actualObj.size!==expectationObj.size){return false;}var mapsDeeplyEqual=true;mapForEach(actualObj,function(value,key){mapsDeeplyEqual=mapsDeeplyEqual&&deepEqualCyclic(value,expectationObj.get(key));});return mapsDeeplyEqual;}// jQuery objects have iteration protocols\n// see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n// But, they don't work well with the implementation concerning iterables below,\n// so we will detect them and use jQuery's own equality function\n/* istanbul ignore next -- this can only be tested in the `test-headless` script */if(actualObj.constructor&&actualObj.constructor.name===\"jQuery\"&&typeof actualObj.is===\"function\"){return actualObj.is(expectationObj);}var isActualNonArrayIterable=isIterable(actualObj)&&!isArrayType(actualObj)&&!isArguments(actualObj);var isExpectationNonArrayIterable=isIterable(expectationObj)&&!isArrayType(expectationObj)&&!isArguments(expectationObj);if(isActualNonArrayIterable||isExpectationNonArrayIterable){var actualArray=Array.from(actualObj);var expectationArray=Array.from(expectationObj);if(actualArray.length!==expectationArray.length){return false;}var arrayDeeplyEquals=true;every(actualArray,function(key){arrayDeeplyEquals=arrayDeeplyEquals&&deepEqualCyclic(actualArray[key],expectationArray[key]);});return arrayDeeplyEquals;}return every(expectationKeysAndSymbols,function(key){if(!hasOwnProperty(actualObj,key)){return false;}var actualValue=actualObj[key];var expectationValue=expectationObj[key];var actualObject=isObject(actualValue);var expectationObject=isObject(expectationValue);// determines, if the objects were already visited\n// (it's faster to check for isObject first, than to\n// get -1 from getIndex for non objects)\nvar actualIndex=actualObject?indexOf(actualObjects,actualValue):-1;var expectationIndex=expectationObject?indexOf(expectationObjects,expectationValue):-1;// determines the new paths of the objects\n// - for non cyclic objects the current path will be extended\n//   by current property name\n// - for cyclic objects the stored path is taken\nvar newActualPath=actualIndex!==-1?actualPaths[actualIndex]:`${actualPath}[${JSON.stringify(key)}]`;var newExpectationPath=expectationIndex!==-1?expectationPaths[expectationIndex]:`${expectationPath}[${JSON.stringify(key)}]`;var combinedPath=newActualPath+newExpectationPath;// stop recursion if current objects are already compared\nif(compared[combinedPath]){return true;}// remember the current objects and their paths\nif(actualIndex===-1&&actualObject){push(actualObjects,actualValue);push(actualPaths,newActualPath);}if(expectationIndex===-1&&expectationObject){push(expectationObjects,expectationValue);push(expectationPaths,newExpectationPath);}// remember that the current objects are already compared\nif(actualObject&&expectationObject){compared[combinedPath]=true;}// End of cyclic logic\n// neither actualValue nor expectationValue is a cycle\n// continue with next level\nreturn deepEqual(actualValue,expectationValue,newActualPath,newExpectationPath);});}(actual,expectation,\"$1\",\"$2\");}deepEqualCyclic.use=function(match){return function deepEqual(a,b){return deepEqualCyclic(a,b,match);};};module.exports=deepEqualCyclic;},{\"./get-class\":74,\"./identical\":75,\"./is-arguments\":76,\"./is-array-type\":77,\"./is-date\":78,\"./is-element\":79,\"./is-iterable\":80,\"./is-map\":81,\"./is-nan\":82,\"./is-object\":84,\"./is-set\":85,\"./is-subset\":86,\"@sinonjs/commons\":96}],74:[function(require,module,exports){\"use strict\";var toString=require(\"@sinonjs/commons\").prototypes.object.toString;/**\n * Returns the internal `Class` by calling `Object.prototype.toString`\n * with the provided value as `this`. Return value is a `String`, naming the\n * internal class, e.g. \"Array\"\n *\n * @private\n * @param  {*} value - Any value\n * @returns {string} - A string representation of the `Class` of `value`\n */function getClass(value){return toString(value).split(/[ \\]]/)[1];}module.exports=getClass;},{\"@sinonjs/commons\":96}],75:[function(require,module,exports){\"use strict\";var isNaN=require(\"./is-nan\");var isNegZero=require(\"./is-neg-zero\");/**\n * Strict equality check according to EcmaScript Harmony's `egal`.\n *\n * **From the Harmony wiki:**\n * > An `egal` function simply makes available the internal `SameValue` function\n * > from section 9.12 of the ES5 spec. If two values are egal, then they are not\n * > observably distinguishable.\n *\n * `identical` returns `true` when `===` is `true`, except for `-0` and\n * `+0`, where it returns `false`. Additionally, it returns `true` when\n * `NaN` is compared to itself.\n *\n * @alias module:samsam.identical\n * @param {*} obj1 The first value to compare\n * @param {*} obj2 The second value to compare\n * @returns {boolean} Returns `true` when the objects are *egal*, `false` otherwise\n */function identical(obj1,obj2){if(obj1===obj2||isNaN(obj1)&&isNaN(obj2)){return obj1!==0||isNegZero(obj1)===isNegZero(obj2);}return false;}module.exports=identical;},{\"./is-nan\":82,\"./is-neg-zero\":83}],76:[function(require,module,exports){\"use strict\";var getClass=require(\"./get-class\");/**\n * Returns `true` when `object` is an `arguments` object, `false` otherwise\n *\n * @alias module:samsam.isArguments\n * @param  {*}  object - The object to examine\n * @returns {boolean} `true` when `object` is an `arguments` object\n */function isArguments(object){return getClass(object)===\"Arguments\";}module.exports=isArguments;},{\"./get-class\":74}],77:[function(require,module,exports){\"use strict\";var functionName=require(\"@sinonjs/commons\").functionName;var indexOf=require(\"@sinonjs/commons\").prototypes.array.indexOf;var map=require(\"@sinonjs/commons\").prototypes.array.map;var ARRAY_TYPES=require(\"./array-types\");var type=require(\"type-detect\");/**\n * Returns `true` when `object` is an array type, `false` otherwise\n *\n * @param  {*}  object - The object to examine\n * @returns {boolean} `true` when `object` is an array type\n * @private\n */function isArrayType(object){return indexOf(map(ARRAY_TYPES,functionName),type(object))!==-1;}module.exports=isArrayType;},{\"./array-types\":63,\"@sinonjs/commons\":96,\"type-detect\":179}],78:[function(require,module,exports){\"use strict\";/**\n * Returns `true` when `value` is an instance of Date\n *\n * @private\n * @param  {Date}  value The value to examine\n * @returns {boolean}     `true` when `value` is an instance of Date\n */function isDate(value){return value instanceof Date;}module.exports=isDate;},{}],79:[function(require,module,exports){\"use strict\";var div=typeof document!==\"undefined\"&&document.createElement(\"div\");/**\n * Returns `true` when `object` is a DOM element node.\n *\n * Unlike Underscore.js/lodash, this function will return `false` if `object`\n * is an *element-like* object, i.e. a regular object with a `nodeType`\n * property that holds the value `1`.\n *\n * @alias module:samsam.isElement\n * @param {object} object The object to examine\n * @returns {boolean} Returns `true` for DOM element nodes\n */function isElement(object){if(!object||object.nodeType!==1||!div){return false;}try{object.appendChild(div);object.removeChild(div);}catch(e){return false;}return true;}module.exports=isElement;},{}],80:[function(require,module,exports){\"use strict\";/**\n * Returns `true` when the argument is an iterable, `false` otherwise\n *\n * @alias module:samsam.isIterable\n * @param  {*}  val - A value to examine\n * @returns {boolean} Returns `true` when the argument is an iterable, `false` otherwise\n */function isIterable(val){// checks for null and undefined\nif(typeof val!==\"object\"){return false;}return typeof val[Symbol.iterator]===\"function\";}module.exports=isIterable;},{}],81:[function(require,module,exports){\"use strict\";/**\n * Returns `true` when `value` is a Map\n *\n * @param {*} value A value to examine\n * @returns {boolean} `true` when `value` is an instance of `Map`, `false` otherwise\n * @private\n */function isMap(value){return typeof Map!==\"undefined\"&&value instanceof Map;}module.exports=isMap;},{}],82:[function(require,module,exports){\"use strict\";/**\n * Compares a `value` to `NaN`\n *\n * @private\n * @param {*} value A value to examine\n * @returns {boolean} Returns `true` when `value` is `NaN`\n */function isNaN(value){// Unlike global `isNaN`, this function avoids type coercion\n// `typeof` check avoids IE host object issues, hat tip to\n// lodash\n// eslint-disable-next-line no-self-compare\nreturn typeof value===\"number\"&&value!==value;}module.exports=isNaN;},{}],83:[function(require,module,exports){\"use strict\";/**\n * Returns `true` when `value` is `-0`\n *\n * @alias module:samsam.isNegZero\n * @param {*} value A value to examine\n * @returns {boolean} Returns `true` when `value` is `-0`\n */function isNegZero(value){return value===0&&1/value===-Infinity;}module.exports=isNegZero;},{}],84:[function(require,module,exports){\"use strict\";/**\n * Returns `true` when the value is a regular Object and not a specialized Object\n *\n * This helps speed up deepEqual cyclic checks\n *\n * The premise is that only Objects are stored in the visited array.\n * So if this function returns false, we don't have to do the\n * expensive operation of searching for the value in the the array of already\n * visited objects\n *\n * @private\n * @param  {object}   value The object to examine\n * @returns {boolean}       `true` when the object is a non-specialised object\n */function isObject(value){return typeof value===\"object\"&&value!==null&&// none of these are collection objects, so we can return false\n!(value instanceof Boolean)&&!(value instanceof Date)&&!(value instanceof Error)&&!(value instanceof Number)&&!(value instanceof RegExp)&&!(value instanceof String);}module.exports=isObject;},{}],85:[function(require,module,exports){\"use strict\";/**\n * Returns `true` when the argument is an instance of Set, `false` otherwise\n *\n * @alias module:samsam.isSet\n * @param  {*}  val - A value to examine\n * @returns {boolean} Returns `true` when the argument is an instance of Set, `false` otherwise\n */function isSet(val){return typeof Set!==\"undefined\"&&val instanceof Set||false;}module.exports=isSet;},{}],86:[function(require,module,exports){\"use strict\";var forEach=require(\"@sinonjs/commons\").prototypes.set.forEach;/**\n * Returns `true` when `s1` is a subset of `s2`, `false` otherwise\n *\n * @private\n * @param  {Array|Set}  s1      The target value\n * @param  {Array|Set}  s2      The containing value\n * @param  {Function}  compare A comparison function, should return `true` when\n *                             values are considered equal\n * @returns {boolean} Returns `true` when `s1` is a subset of `s2`, `false`` otherwise\n */function isSubset(s1,s2,compare){var allContained=true;forEach(s1,function(v1){var includes=false;forEach(s2,function(v2){if(compare(v2,v1)){includes=true;}});allContained=allContained&&includes;});return allContained;}module.exports=isSubset;},{\"@sinonjs/commons\":96}],87:[function(require,module,exports){\"use strict\";var slice=require(\"@sinonjs/commons\").prototypes.string.slice;var typeOf=require(\"@sinonjs/commons\").typeOf;var valueToString=require(\"@sinonjs/commons\").valueToString;/**\n * Creates a string represenation of an iterable object\n *\n * @private\n * @param   {object} obj The iterable object to stringify\n * @returns {string}     A string representation\n */function iterableToString(obj){if(typeOf(obj)===\"map\"){return mapToString(obj);}return genericIterableToString(obj);}/**\n * Creates a string representation of a Map\n *\n * @private\n * @param   {Map} map    The map to stringify\n * @returns {string}     A string representation\n */function mapToString(map){var representation=\"\";// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\nmap.forEach(function(value,key){representation+=`[${stringify(key)},${stringify(value)}],`;});representation=slice(representation,0,-1);return representation;}/**\n * Create a string represenation for an iterable\n *\n * @private\n * @param   {object} iterable The iterable to stringify\n * @returns {string}          A string representation\n */function genericIterableToString(iterable){var representation=\"\";// eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\niterable.forEach(function(value){representation+=`${stringify(value)},`;});representation=slice(representation,0,-1);return representation;}/**\n * Creates a string representation of the passed `item`\n *\n * @private\n * @param  {object} item The item to stringify\n * @returns {string}      A string representation of `item`\n */function stringify(item){return typeof item===\"string\"?`'${item}'`:valueToString(item);}module.exports=iterableToString;},{\"@sinonjs/commons\":96}],88:[function(require,module,exports){\"use strict\";var valueToString=require(\"@sinonjs/commons\").valueToString;var indexOf=require(\"@sinonjs/commons\").prototypes.string.indexOf;var forEach=require(\"@sinonjs/commons\").prototypes.array.forEach;var type=require(\"type-detect\");var engineCanCompareMaps=typeof Array.from===\"function\";var deepEqual=require(\"./deep-equal\").use(match);// eslint-disable-line no-use-before-define\nvar isArrayType=require(\"./is-array-type\");var isSubset=require(\"./is-subset\");var createMatcher=require(\"./create-matcher\");/**\n * Returns true when `array` contains all of `subset` as defined by the `compare`\n * argument\n *\n * @param  {Array} array   An array to search for a subset\n * @param  {Array} subset  The subset to find in the array\n * @param  {Function} compare A comparison function\n * @returns {boolean}         [description]\n * @private\n */function arrayContains(array,subset,compare){if(subset.length===0){return true;}var i,l,j,k;for(i=0,l=array.length;i<l;++i){if(compare(array[i],subset[0])){for(j=0,k=subset.length;j<k;++j){if(i+j>=l){return false;}if(!compare(array[i+j],subset[j])){return false;}}return true;}}return false;}/* eslint-disable complexity */ /**\n * Matches an object with a matcher (or value)\n *\n * @alias module:samsam.match\n * @param {object} object The object candidate to match\n * @param {object} matcherOrValue A matcher or value to match against\n * @returns {boolean} true when `object` matches `matcherOrValue`\n */function match(object,matcherOrValue){if(matcherOrValue&&typeof matcherOrValue.test===\"function\"){return matcherOrValue.test(object);}switch(type(matcherOrValue)){case\"bigint\":case\"boolean\":case\"number\":case\"symbol\":return matcherOrValue===object;case\"function\":return matcherOrValue(object)===true;case\"string\":var notNull=typeof object===\"string\"||Boolean(object);return notNull&&indexOf(valueToString(object).toLowerCase(),matcherOrValue.toLowerCase())>=0;case\"null\":return object===null;case\"undefined\":return typeof object===\"undefined\";case\"Date\":/* istanbul ignore else */if(type(object)===\"Date\"){return object.getTime()===matcherOrValue.getTime();}/* istanbul ignore next: this is basically the rest of the function, which is covered */break;case\"Array\":case\"Int8Array\":case\"Uint8Array\":case\"Uint8ClampedArray\":case\"Int16Array\":case\"Uint16Array\":case\"Int32Array\":case\"Uint32Array\":case\"Float32Array\":case\"Float64Array\":return isArrayType(matcherOrValue)&&arrayContains(object,matcherOrValue,match);case\"Map\":/* istanbul ignore next: this is covered by a test, that is only run in IE, but we collect coverage information in node*/if(!engineCanCompareMaps){throw new Error(\"The JavaScript engine does not support Array.from and cannot reliably do value comparison of Map instances\");}return type(object)===\"Map\"&&arrayContains(Array.from(object),Array.from(matcherOrValue),match);default:break;}switch(type(object)){case\"null\":return false;case\"Set\":return isSubset(matcherOrValue,object,match);default:break;}/* istanbul ignore else */if(matcherOrValue&&typeof matcherOrValue===\"object\"){if(matcherOrValue===object){return true;}if(typeof object!==\"object\"){return false;}var prop;// eslint-disable-next-line guard-for-in\nfor(prop in matcherOrValue){var value=object[prop];if(typeof value===\"undefined\"&&typeof object.getAttribute===\"function\"){value=object.getAttribute(prop);}if(matcherOrValue[prop]===null||typeof matcherOrValue[prop]===\"undefined\"){if(value!==matcherOrValue[prop]){return false;}}else if(typeof value===\"undefined\"||!deepEqual(value,matcherOrValue[prop])){return false;}}return true;}/* istanbul ignore next */throw new Error(\"Matcher was an unknown or unsupported type\");}/* eslint-enable complexity */forEach(Object.keys(createMatcher),function(key){match[key]=createMatcher[key];});module.exports=match;},{\"./create-matcher\":64,\"./deep-equal\":73,\"./is-array-type\":77,\"./is-subset\":86,\"@sinonjs/commons\":96,\"type-detect\":179}],89:[function(require,module,exports){\"use strict\";/**\n * @module samsam\n */var identical=require(\"./identical\");var isArguments=require(\"./is-arguments\");var isElement=require(\"./is-element\");var isNegZero=require(\"./is-neg-zero\");var isSet=require(\"./is-set\");var isMap=require(\"./is-map\");var match=require(\"./match\");var deepEqualCyclic=require(\"./deep-equal\").use(match);var createMatcher=require(\"./create-matcher\");module.exports={createMatcher:createMatcher,deepEqual:deepEqualCyclic,identical:identical,isArguments:isArguments,isElement:isElement,isMap:isMap,isNegZero:isNegZero,isSet:isSet,match:match};},{\"./create-matcher\":64,\"./deep-equal\":73,\"./identical\":75,\"./is-arguments\":76,\"./is-element\":79,\"./is-map\":81,\"./is-neg-zero\":83,\"./is-set\":85,\"./match\":88}],90:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments);},{\"./prototypes/array\":98,\"dup\":43}],91:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments);},{\"./function-name\":94,\"dup\":44}],92:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments);},{\"dup\":45}],93:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments);},{\"dup\":46}],94:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments);},{\"dup\":47}],95:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments);},{\"dup\":48}],96:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments);},{\"./called-in-order\":90,\"./class-name\":91,\"./deprecated\":92,\"./every\":93,\"./function-name\":94,\"./global\":95,\"./order-by-first-call\":97,\"./prototypes\":101,\"./type-of\":107,\"./value-to-string\":108,\"dup\":49}],97:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments);},{\"./prototypes/array\":98,\"dup\":50}],98:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments);},{\"./copy-prototype-methods\":99,\"dup\":51}],99:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments);},{\"./throws-on-proto\":106,\"dup\":52}],100:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments);},{\"./copy-prototype-methods\":99,\"dup\":53}],101:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments);},{\"./array\":98,\"./function\":100,\"./map\":102,\"./object\":103,\"./set\":104,\"./string\":105,\"dup\":54}],102:[function(require,module,exports){arguments[4][55][0].apply(exports,arguments);},{\"./copy-prototype-methods\":99,\"dup\":55}],103:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments);},{\"./copy-prototype-methods\":99,\"dup\":56}],104:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments);},{\"./copy-prototype-methods\":99,\"dup\":57}],105:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments);},{\"./copy-prototype-methods\":99,\"dup\":58}],106:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments);},{\"dup\":59}],107:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments);},{\"dup\":60,\"type-detect\":179}],108:[function(require,module,exports){arguments[4][61][0].apply(exports,arguments);},{\"dup\":61}],109:[function(require,module,exports){// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\nvar encoding=require(\"./lib/encoding.js\");module.exports={TextEncoder:encoding.TextEncoder,TextDecoder:encoding.TextDecoder};},{\"./lib/encoding.js\":111}],110:[function(require,module,exports){(function(global){'use strict';if(typeof module!==\"undefined\"&&module.exports){module.exports=global;}global[\"encoding-indexes\"]={\"big5\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,170000,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14000,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132000,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22000,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21000,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,30000,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23000,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32000,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36000,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26000,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37000,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39000,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38000,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28000,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35000,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27000,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34000,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25000,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24000,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,40000,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],\"euc-kr\":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46000,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48000,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49000,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,50000,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51000,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45000,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47000,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52000,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55000,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53000,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54000,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32000,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37000,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36000,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26000,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21000,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39000,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,30000,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64000,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27000,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"gb18030\":[19970,19972,19973,19974,19983,19986,19991,19999,20000,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22000,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24000,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29000,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59000,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31000,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25000,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32000,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,30000,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35000,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36000,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21000,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34000,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28000,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37000,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23000,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38000,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27000,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33000,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26000,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39000,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,40000,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58000,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],\"gb18030-ranges\":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189000,65536]],\"jis0208\":[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21000,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39000,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32000,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,30000,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26000,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36000,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27000,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34000,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38000,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"jis0212\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25000,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37000,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"ibm866\":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],\"iso-8859-2\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],\"iso-8859-3\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],\"iso-8859-4\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],\"iso-8859-5\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],\"iso-8859-6\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],\"iso-8859-7\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],\"iso-8859-8\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],\"iso-8859-10\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],\"iso-8859-13\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],\"iso-8859-14\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],\"iso-8859-15\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],\"iso-8859-16\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],\"koi8-r\":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],\"koi8-u\":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],\"macintosh\":[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],\"windows-874\":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],\"windows-1250\":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],\"windows-1251\":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],\"windows-1252\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],\"windows-1253\":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],\"windows-1254\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],\"windows-1255\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],\"windows-1256\":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],\"windows-1257\":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],\"windows-1258\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],\"x-mac-cyrillic\":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]};// For strict environments where `this` inside the global scope\n// is `undefined`, take a pure object instead\n})(this||{});},{}],111:[function(require,module,exports){// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n/**\n * @fileoverview Global |this| required for resolving indexes in node.\n * @suppress {globalThis}\n */(function(global){'use strict';// If we're in node require encoding-indexes and attach it to the global.\nif(typeof module!==\"undefined\"&&module.exports&&!global[\"encoding-indexes\"]){global[\"encoding-indexes\"]=require(\"./encoding-indexes.js\")[\"encoding-indexes\"];}//\n// Utilities\n//\n/**\n   * @param {number} a The number to test.\n   * @param {number} min The minimum value in the range, inclusive.\n   * @param {number} max The maximum value in the range, inclusive.\n   * @return {boolean} True if a >= min and a <= max.\n   */function inRange(a,min,max){return min<=a&&a<=max;}/**\n   * @param {!Array.<*>} array The array to check.\n   * @param {*} item The item to look for in the array.\n   * @return {boolean} True if the item appears in the array.\n   */function includes(array,item){return array.indexOf(item)!==-1;}var floor=Math.floor;/**\n   * @param {*} o\n   * @return {Object}\n   */function ToDictionary(o){if(o===undefined)return{};if(o===Object(o))return o;throw TypeError('Could not convert argument to dictionary');}/**\n   * @param {string} string Input string of UTF-16 code units.\n   * @return {!Array.<number>} Code points.\n   */function stringToCodePoints(string){// https://heycam.github.io/webidl/#dfn-obtain-unicode\n// 1. Let S be the DOMString value.\nvar s=String(string);// 2. Let n be the length of S.\nvar n=s.length;// 3. Initialize i to 0.\nvar i=0;// 4. Initialize U to be an empty sequence of Unicode characters.\nvar u=[];// 5. While i < n:\nwhile(i<n){// 1. Let c be the code unit in S at index i.\nvar c=s.charCodeAt(i);// 2. Depending on the value of c:\n// c < 0xD800 or c > 0xDFFF\nif(c<0xD800||c>0xDFFF){// Append to U the Unicode character with code point c.\nu.push(c);}// 0xDC00 ≤ c ≤ 0xDFFF\nelse if(0xDC00<=c&&c<=0xDFFF){// Append to U a U+FFFD REPLACEMENT CHARACTER.\nu.push(0xFFFD);}// 0xD800 ≤ c ≤ 0xDBFF\nelse if(0xD800<=c&&c<=0xDBFF){// 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n// CHARACTER.\nif(i===n-1){u.push(0xFFFD);}// 2. Otherwise, i < n−1:\nelse{// 1. Let d be the code unit in S at index i+1.\nvar d=s.charCodeAt(i+1);// 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\nif(0xDC00<=d&&d<=0xDFFF){// 1. Let a be c & 0x3FF.\nvar a=c&0x3FF;// 2. Let b be d & 0x3FF.\nvar b=d&0x3FF;// 3. Append to U the Unicode character with code point\n// 2^16+2^10*a+b.\nu.push(0x10000+(a<<10)+b);// 4. Set i to i+1.\ni+=1;}// 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n// U+FFFD REPLACEMENT CHARACTER.\nelse{u.push(0xFFFD);}}}// 3. Set i to i+1.\ni+=1;}// 6. Return U.\nreturn u;}/**\n   * @param {!Array.<number>} code_points Array of code points.\n   * @return {string} string String of UTF-16 code units.\n   */function codePointsToString(code_points){var s='';for(var i=0;i<code_points.length;++i){var cp=code_points[i];if(cp<=0xFFFF){s+=String.fromCharCode(cp);}else{cp-=0x10000;s+=String.fromCharCode((cp>>10)+0xD800,(cp&0x3FF)+0xDC00);}}return s;}//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n//\n// 4. Terminology\n//\n/**\n   * An ASCII byte is a byte in the range 0x00 to 0x7F, inclusive.\n   * @param {number} a The number to test.\n   * @return {boolean} True if a is in the range 0x00 to 0x7F, inclusive.\n   */function isASCIIByte(a){return 0x00<=a&&a<=0x7F;}/**\n   * An ASCII code point is a code point in the range U+0000 to\n   * U+007F, inclusive.\n   */var isASCIICodePoint=isASCIIByte;/**\n   * End-of-stream is a special token that signifies no more tokens\n   * are in the stream.\n   * @const\n   */var end_of_stream=-1;/**\n   * A stream represents an ordered sequence of tokens.\n   *\n   * @constructor\n   * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide\n   * the stream.\n   */function Stream(tokens){/** @type {!Array.<number>} */this.tokens=[].slice.call(tokens);// Reversed as push/pop is more efficient than shift/unshift.\nthis.tokens.reverse();}Stream.prototype={/**\n     * @return {boolean} True if end-of-stream has been hit.\n     */endOfStream:function(){return!this.tokens.length;},/**\n     * When a token is read from a stream, the first token in the\n     * stream must be returned and subsequently removed, and\n     * end-of-stream must be returned otherwise.\n     *\n     * @return {number} Get the next token from the stream, or\n     * end_of_stream.\n     */read:function(){if(!this.tokens.length)return end_of_stream;return this.tokens.pop();},/**\n     * When one or more tokens are prepended to a stream, those tokens\n     * must be inserted, in given order, before the first token in the\n     * stream.\n     *\n     * @param {(number|!Array.<number>)} token The token(s) to prepend to the\n     * stream.\n     */prepend:function(token){if(Array.isArray(token)){var tokens=/**@type {!Array.<number>}*/token;while(tokens.length)this.tokens.push(tokens.pop());}else{this.tokens.push(token);}},/**\n     * When one or more tokens are pushed to a stream, those tokens\n     * must be inserted, in given order, after the last token in the\n     * stream.\n     *\n     * @param {(number|!Array.<number>)} token The tokens(s) to push to the\n     * stream.\n     */push:function(token){if(Array.isArray(token)){var tokens=/**@type {!Array.<number>}*/token;while(tokens.length)this.tokens.unshift(tokens.shift());}else{this.tokens.unshift(token);}}};//\n// 5. Encodings\n//\n// 5.1 Encoders and decoders\n/** @const */var finished=-1;/**\n   * @param {boolean} fatal If true, decoding errors raise an exception.\n   * @param {number=} opt_code_point Override the standard fallback code point.\n   * @return {number} The code point to insert on a decoding error.\n   */function decoderError(fatal,opt_code_point){if(fatal)throw TypeError('Decoder error');return opt_code_point||0xFFFD;}/**\n   * @param {number} code_point The code point that could not be encoded.\n   * @return {number} Always throws, no value is actually returned.\n   */function encoderError(code_point){throw TypeError('The code point '+code_point+' could not be encoded.');}/** @interface */function Decoder(){}Decoder.prototype={/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point, or |finished|.\n     */handler:function(stream,bite){}};/** @interface */function Encoder(){}Encoder.prototype={/**\n     * @param {Stream} stream The stream of code points being encoded.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n     */handler:function(stream,code_point){}};// 5.2 Names and labels\n// TODO: Define @typedef for Encoding: {name:string,labels:Array.<string>}\n// https://github.com/google/closure-compiler/issues/247\n/**\n   * @param {string} label The encoding label.\n   * @return {?{name:string,labels:Array.<string>}}\n   */function getEncoding(label){// 1. Remove any leading and trailing ASCII whitespace from label.\nlabel=String(label).trim().toLowerCase();// 2. If label is an ASCII case-insensitive match for any of the\n// labels listed in the table below, return the corresponding\n// encoding, and failure otherwise.\nif(Object.prototype.hasOwnProperty.call(label_to_encoding,label)){return label_to_encoding[label];}return null;}/**\n   * Encodings table: https://encoding.spec.whatwg.org/encodings.json\n   * @const\n   * @type {!Array.<{\n   *          heading: string,\n   *          encodings: Array.<{name:string,labels:Array.<string>}>\n   *        }>}\n   */var encodings=[{\"encodings\":[{\"labels\":[\"unicode-1-1-utf-8\",\"utf-8\",\"utf8\"],\"name\":\"UTF-8\"}],\"heading\":\"The Encoding\"},{\"encodings\":[{\"labels\":[\"866\",\"cp866\",\"csibm866\",\"ibm866\"],\"name\":\"IBM866\"},{\"labels\":[\"csisolatin2\",\"iso-8859-2\",\"iso-ir-101\",\"iso8859-2\",\"iso88592\",\"iso_8859-2\",\"iso_8859-2:1987\",\"l2\",\"latin2\"],\"name\":\"ISO-8859-2\"},{\"labels\":[\"csisolatin3\",\"iso-8859-3\",\"iso-ir-109\",\"iso8859-3\",\"iso88593\",\"iso_8859-3\",\"iso_8859-3:1988\",\"l3\",\"latin3\"],\"name\":\"ISO-8859-3\"},{\"labels\":[\"csisolatin4\",\"iso-8859-4\",\"iso-ir-110\",\"iso8859-4\",\"iso88594\",\"iso_8859-4\",\"iso_8859-4:1988\",\"l4\",\"latin4\"],\"name\":\"ISO-8859-4\"},{\"labels\":[\"csisolatincyrillic\",\"cyrillic\",\"iso-8859-5\",\"iso-ir-144\",\"iso8859-5\",\"iso88595\",\"iso_8859-5\",\"iso_8859-5:1988\"],\"name\":\"ISO-8859-5\"},{\"labels\":[\"arabic\",\"asmo-708\",\"csiso88596e\",\"csiso88596i\",\"csisolatinarabic\",\"ecma-114\",\"iso-8859-6\",\"iso-8859-6-e\",\"iso-8859-6-i\",\"iso-ir-127\",\"iso8859-6\",\"iso88596\",\"iso_8859-6\",\"iso_8859-6:1987\"],\"name\":\"ISO-8859-6\"},{\"labels\":[\"csisolatingreek\",\"ecma-118\",\"elot_928\",\"greek\",\"greek8\",\"iso-8859-7\",\"iso-ir-126\",\"iso8859-7\",\"iso88597\",\"iso_8859-7\",\"iso_8859-7:1987\",\"sun_eu_greek\"],\"name\":\"ISO-8859-7\"},{\"labels\":[\"csiso88598e\",\"csisolatinhebrew\",\"hebrew\",\"iso-8859-8\",\"iso-8859-8-e\",\"iso-ir-138\",\"iso8859-8\",\"iso88598\",\"iso_8859-8\",\"iso_8859-8:1988\",\"visual\"],\"name\":\"ISO-8859-8\"},{\"labels\":[\"csiso88598i\",\"iso-8859-8-i\",\"logical\"],\"name\":\"ISO-8859-8-I\"},{\"labels\":[\"csisolatin6\",\"iso-8859-10\",\"iso-ir-157\",\"iso8859-10\",\"iso885910\",\"l6\",\"latin6\"],\"name\":\"ISO-8859-10\"},{\"labels\":[\"iso-8859-13\",\"iso8859-13\",\"iso885913\"],\"name\":\"ISO-8859-13\"},{\"labels\":[\"iso-8859-14\",\"iso8859-14\",\"iso885914\"],\"name\":\"ISO-8859-14\"},{\"labels\":[\"csisolatin9\",\"iso-8859-15\",\"iso8859-15\",\"iso885915\",\"iso_8859-15\",\"l9\"],\"name\":\"ISO-8859-15\"},{\"labels\":[\"iso-8859-16\"],\"name\":\"ISO-8859-16\"},{\"labels\":[\"cskoi8r\",\"koi\",\"koi8\",\"koi8-r\",\"koi8_r\"],\"name\":\"KOI8-R\"},{\"labels\":[\"koi8-ru\",\"koi8-u\"],\"name\":\"KOI8-U\"},{\"labels\":[\"csmacintosh\",\"mac\",\"macintosh\",\"x-mac-roman\"],\"name\":\"macintosh\"},{\"labels\":[\"dos-874\",\"iso-8859-11\",\"iso8859-11\",\"iso885911\",\"tis-620\",\"windows-874\"],\"name\":\"windows-874\"},{\"labels\":[\"cp1250\",\"windows-1250\",\"x-cp1250\"],\"name\":\"windows-1250\"},{\"labels\":[\"cp1251\",\"windows-1251\",\"x-cp1251\"],\"name\":\"windows-1251\"},{\"labels\":[\"ansi_x3.4-1968\",\"ascii\",\"cp1252\",\"cp819\",\"csisolatin1\",\"ibm819\",\"iso-8859-1\",\"iso-ir-100\",\"iso8859-1\",\"iso88591\",\"iso_8859-1\",\"iso_8859-1:1987\",\"l1\",\"latin1\",\"us-ascii\",\"windows-1252\",\"x-cp1252\"],\"name\":\"windows-1252\"},{\"labels\":[\"cp1253\",\"windows-1253\",\"x-cp1253\"],\"name\":\"windows-1253\"},{\"labels\":[\"cp1254\",\"csisolatin5\",\"iso-8859-9\",\"iso-ir-148\",\"iso8859-9\",\"iso88599\",\"iso_8859-9\",\"iso_8859-9:1989\",\"l5\",\"latin5\",\"windows-1254\",\"x-cp1254\"],\"name\":\"windows-1254\"},{\"labels\":[\"cp1255\",\"windows-1255\",\"x-cp1255\"],\"name\":\"windows-1255\"},{\"labels\":[\"cp1256\",\"windows-1256\",\"x-cp1256\"],\"name\":\"windows-1256\"},{\"labels\":[\"cp1257\",\"windows-1257\",\"x-cp1257\"],\"name\":\"windows-1257\"},{\"labels\":[\"cp1258\",\"windows-1258\",\"x-cp1258\"],\"name\":\"windows-1258\"},{\"labels\":[\"x-mac-cyrillic\",\"x-mac-ukrainian\"],\"name\":\"x-mac-cyrillic\"}],\"heading\":\"Legacy single-byte encodings\"},{\"encodings\":[{\"labels\":[\"chinese\",\"csgb2312\",\"csiso58gb231280\",\"gb2312\",\"gb_2312\",\"gb_2312-80\",\"gbk\",\"iso-ir-58\",\"x-gbk\"],\"name\":\"GBK\"},{\"labels\":[\"gb18030\"],\"name\":\"gb18030\"}],\"heading\":\"Legacy multi-byte Chinese (simplified) encodings\"},{\"encodings\":[{\"labels\":[\"big5\",\"big5-hkscs\",\"cn-big5\",\"csbig5\",\"x-x-big5\"],\"name\":\"Big5\"}],\"heading\":\"Legacy multi-byte Chinese (traditional) encodings\"},{\"encodings\":[{\"labels\":[\"cseucpkdfmtjapanese\",\"euc-jp\",\"x-euc-jp\"],\"name\":\"EUC-JP\"},{\"labels\":[\"csiso2022jp\",\"iso-2022-jp\"],\"name\":\"ISO-2022-JP\"},{\"labels\":[\"csshiftjis\",\"ms932\",\"ms_kanji\",\"shift-jis\",\"shift_jis\",\"sjis\",\"windows-31j\",\"x-sjis\"],\"name\":\"Shift_JIS\"}],\"heading\":\"Legacy multi-byte Japanese encodings\"},{\"encodings\":[{\"labels\":[\"cseuckr\",\"csksc56011987\",\"euc-kr\",\"iso-ir-149\",\"korean\",\"ks_c_5601-1987\",\"ks_c_5601-1989\",\"ksc5601\",\"ksc_5601\",\"windows-949\"],\"name\":\"EUC-KR\"}],\"heading\":\"Legacy multi-byte Korean encodings\"},{\"encodings\":[{\"labels\":[\"csiso2022kr\",\"hz-gb-2312\",\"iso-2022-cn\",\"iso-2022-cn-ext\",\"iso-2022-kr\"],\"name\":\"replacement\"},{\"labels\":[\"utf-16be\"],\"name\":\"UTF-16BE\"},{\"labels\":[\"utf-16\",\"utf-16le\"],\"name\":\"UTF-16LE\"},{\"labels\":[\"x-user-defined\"],\"name\":\"x-user-defined\"}],\"heading\":\"Legacy miscellaneous encodings\"}];// Label to encoding registry.\n/** @type {Object.<string,{name:string,labels:Array.<string>}>} */var label_to_encoding={};encodings.forEach(function(category){category.encodings.forEach(function(encoding){encoding.labels.forEach(function(label){label_to_encoding[label]=encoding;});});});// Registry of of encoder/decoder factories, by encoding name.\n/** @type {Object.<string, function({fatal:boolean}): Encoder>} */var encoders={};/** @type {Object.<string, function({fatal:boolean}): Decoder>} */var decoders={};//\n// 6. Indexes\n//\n/**\n   * @param {number} pointer The |pointer| to search for.\n   * @param {(!Array.<?number>|undefined)} index The |index| to search within.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in |index|.\n   */function indexCodePointFor(pointer,index){if(!index)return null;return index[pointer]||null;}/**\n   * @param {number} code_point The |code point| to search for.\n   * @param {!Array.<?number>} index The |index| to search within.\n   * @return {?number} The first pointer corresponding to |code point| in\n   *     |index|, or null if |code point| is not in |index|.\n   */function indexPointerFor(code_point,index){var pointer=index.indexOf(code_point);return pointer===-1?null:pointer;}/**\n   * @param {string} name Name of the index.\n   * @return {(!Array.<number>|!Array.<Array.<number>>)}\n   *  */function index(name){if(!('encoding-indexes'in global)){throw Error(\"Indexes missing.\"+\" Did you forget to include encoding-indexes.js first?\");}return global['encoding-indexes'][name];}/**\n   * @param {number} pointer The |pointer| to search for in the gb18030 index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the gb18030 index.\n   */function indexGB18030RangesCodePointFor(pointer){// 1. If pointer is greater than 39419 and less than 189000, or\n// pointer is greater than 1237575, return null.\nif(pointer>39419&&pointer<189000||pointer>1237575)return null;// 2. If pointer is 7457, return code point U+E7C7.\nif(pointer===7457)return 0xE7C7;// 3. Let offset be the last pointer in index gb18030 ranges that\n// is equal to or less than pointer and let code point offset be\n// its corresponding code point.\nvar offset=0;var code_point_offset=0;var idx=index('gb18030-ranges');var i;for(i=0;i<idx.length;++i){/** @type {!Array.<number>} */var entry=idx[i];if(entry[0]<=pointer){offset=entry[0];code_point_offset=entry[1];}else{break;}}// 4. Return a code point whose value is code point offset +\n// pointer − offset.\nreturn code_point_offset+pointer-offset;}/**\n   * @param {number} code_point The |code point| to locate in the gb18030 index.\n   * @return {number} The first pointer corresponding to |code point| in the\n   *     gb18030 index.\n   */function indexGB18030RangesPointerFor(code_point){// 1. If code point is U+E7C7, return pointer 7457.\nif(code_point===0xE7C7)return 7457;// 2. Let offset be the last code point in index gb18030 ranges\n// that is equal to or less than code point and let pointer offset\n// be its corresponding pointer.\nvar offset=0;var pointer_offset=0;var idx=index('gb18030-ranges');var i;for(i=0;i<idx.length;++i){/** @type {!Array.<number>} */var entry=idx[i];if(entry[1]<=code_point){offset=entry[1];pointer_offset=entry[0];}else{break;}}// 3. Return a pointer whose value is pointer offset + code point\n// − offset.\nreturn pointer_offset+code_point-offset;}/**\n   * @param {number} code_point The |code_point| to search for in the Shift_JIS\n   *     index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the Shift_JIS index.\n   */function indexShiftJISPointerFor(code_point){// 1. Let index be index jis0208 excluding all entries whose\n// pointer is in the range 8272 to 8835, inclusive.\nshift_jis_index=shift_jis_index||index('jis0208').map(function(code_point,pointer){return inRange(pointer,8272,8835)?null:code_point;});var index_=shift_jis_index;// 2. Return the index pointer for code point in index.\nreturn index_.indexOf(code_point);}var shift_jis_index;/**\n   * @param {number} code_point The |code_point| to search for in the big5\n   *     index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the big5 index.\n   */function indexBig5PointerFor(code_point){// 1. Let index be index Big5 excluding all entries whose pointer\nbig5_index_no_hkscs=big5_index_no_hkscs||index('big5').map(function(code_point,pointer){return pointer<(0xA1-0x81)*157?null:code_point;});var index_=big5_index_no_hkscs;// 2. If code point is U+2550, U+255E, U+2561, U+256A, U+5341, or\n// U+5345, return the last pointer corresponding to code point in\n// index.\nif(code_point===0x2550||code_point===0x255E||code_point===0x2561||code_point===0x256A||code_point===0x5341||code_point===0x5345){return index_.lastIndexOf(code_point);}// 3. Return the index pointer for code point in index.\nreturn indexPointerFor(code_point,index_);}var big5_index_no_hkscs;//\n// 8. API\n//\n/** @const */var DEFAULT_ENCODING='utf-8';// 8.1 Interface TextDecoder\n/**\n   * @constructor\n   * @param {string=} label The label of the encoding;\n   *     defaults to 'utf-8'.\n   * @param {Object=} options\n   */function TextDecoder(label,options){// Web IDL conventions\nif(!(this instanceof TextDecoder))throw TypeError('Called as a function. Did you forget \\'new\\'?');label=label!==undefined?String(label):DEFAULT_ENCODING;options=ToDictionary(options);// A TextDecoder object has an associated encoding, decoder,\n// stream, ignore BOM flag (initially unset), BOM seen flag\n// (initially unset), error mode (initially replacement), and do\n// not flush flag (initially unset).\n/** @private */this._encoding=null;/** @private @type {?Decoder} */this._decoder=null;/** @private @type {boolean} */this._ignoreBOM=false;/** @private @type {boolean} */this._BOMseen=false;/** @private @type {string} */this._error_mode='replacement';/** @private @type {boolean} */this._do_not_flush=false;// 1. Let encoding be the result of getting an encoding from\n// label.\nvar encoding=getEncoding(label);// 2. If encoding is failure or replacement, throw a RangeError.\nif(encoding===null||encoding.name==='replacement')throw RangeError('Unknown encoding: '+label);if(!decoders[encoding.name]){throw Error('Decoder not present.'+' Did you forget to include encoding-indexes.js first?');}// 3. Let dec be a new TextDecoder object.\nvar dec=this;// 4. Set dec's encoding to encoding.\ndec._encoding=encoding;// 5. If options's fatal member is true, set dec's error mode to\n// fatal.\nif(Boolean(options['fatal']))dec._error_mode='fatal';// 6. If options's ignoreBOM member is true, set dec's ignore BOM\n// flag.\nif(Boolean(options['ignoreBOM']))dec._ignoreBOM=true;// For pre-ES5 runtimes:\nif(!Object.defineProperty){this.encoding=dec._encoding.name.toLowerCase();this.fatal=dec._error_mode==='fatal';this.ignoreBOM=dec._ignoreBOM;}// 7. Return dec.\nreturn dec;}if(Object.defineProperty){// The encoding attribute's getter must return encoding's name.\nObject.defineProperty(TextDecoder.prototype,'encoding',{/** @this {TextDecoder} */get:function(){return this._encoding.name.toLowerCase();}});// The fatal attribute's getter must return true if error mode\n// is fatal, and false otherwise.\nObject.defineProperty(TextDecoder.prototype,'fatal',{/** @this {TextDecoder} */get:function(){return this._error_mode==='fatal';}});// The ignoreBOM attribute's getter must return true if ignore\n// BOM flag is set, and false otherwise.\nObject.defineProperty(TextDecoder.prototype,'ignoreBOM',{/** @this {TextDecoder} */get:function(){return this._ignoreBOM;}});}/**\n   * @param {BufferSource=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */TextDecoder.prototype.decode=function decode(input,options){var bytes;if(typeof input==='object'&&input instanceof ArrayBuffer){bytes=new Uint8Array(input);}else if(typeof input==='object'&&'buffer'in input&&input.buffer instanceof ArrayBuffer){bytes=new Uint8Array(input.buffer,input.byteOffset,input.byteLength);}else{bytes=new Uint8Array(0);}options=ToDictionary(options);// 1. If the do not flush flag is unset, set decoder to a new\n// encoding's decoder, set stream to a new stream, and unset the\n// BOM seen flag.\nif(!this._do_not_flush){this._decoder=decoders[this._encoding.name]({fatal:this._error_mode==='fatal'});this._BOMseen=false;}// 2. If options's stream is true, set the do not flush flag, and\n// unset the do not flush flag otherwise.\nthis._do_not_flush=Boolean(options['stream']);// 3. If input is given, push a copy of input to stream.\n// TODO: Align with spec algorithm - maintain stream on instance.\nvar input_stream=new Stream(bytes);// 4. Let output be a new stream.\nvar output=[];/** @type {?(number|!Array.<number>)} */var result;// 5. While true:\nwhile(true){// 1. Let token be the result of reading from stream.\nvar token=input_stream.read();// 2. If token is end-of-stream and the do not flush flag is\n// set, return output, serialized.\n// TODO: Align with spec algorithm.\nif(token===end_of_stream)break;// 3. Otherwise, run these subsubsteps:\n// 1. Let result be the result of processing token for decoder,\n// stream, output, and error mode.\nresult=this._decoder.handler(input_stream,token);// 2. If result is finished, return output, serialized.\nif(result===finished)break;if(result!==null){if(Array.isArray(result))output.push.apply(output,/**@type {!Array.<number>}*/result);else output.push(result);}// 3. Otherwise, if result is error, throw a TypeError.\n// (Thrown in handler)\n// 4. Otherwise, do nothing.\n}// TODO: Align with spec algorithm.\nif(!this._do_not_flush){do{result=this._decoder.handler(input_stream,input_stream.read());if(result===finished)break;if(result===null)continue;if(Array.isArray(result))output.push.apply(output,/**@type {!Array.<number>}*/result);else output.push(result);}while(!input_stream.endOfStream());this._decoder=null;}// A TextDecoder object also has an associated serialize stream\n// algorithm...\n/**\n     * @param {!Array.<number>} stream\n     * @return {string}\n     * @this {TextDecoder}\n     */function serializeStream(stream){// 1. Let token be the result of reading from stream.\n// (Done in-place on array, rather than as a stream)\n// 2. If encoding is UTF-8, UTF-16BE, or UTF-16LE, and ignore\n// BOM flag and BOM seen flag are unset, run these subsubsteps:\nif(includes(['UTF-8','UTF-16LE','UTF-16BE'],this._encoding.name)&&!this._ignoreBOM&&!this._BOMseen){if(stream.length>0&&stream[0]===0xFEFF){// 1. If token is U+FEFF, set BOM seen flag.\nthis._BOMseen=true;stream.shift();}else if(stream.length>0){// 2. Otherwise, if token is not end-of-stream, set BOM seen\n// flag and append token to stream.\nthis._BOMseen=true;}else{// 3. Otherwise, if token is not end-of-stream, append token\n// to output.\n// (no-op)\n}}// 4. Otherwise, return output.\nreturn codePointsToString(stream);}return serializeStream.call(this,output);};// 8.2 Interface TextEncoder\n/**\n   * @constructor\n   * @param {string=} label The label of the encoding. NONSTANDARD.\n   * @param {Object=} options NONSTANDARD.\n   */function TextEncoder(label,options){// Web IDL conventions\nif(!(this instanceof TextEncoder))throw TypeError('Called as a function. Did you forget \\'new\\'?');options=ToDictionary(options);// A TextEncoder object has an associated encoding and encoder.\n/** @private */this._encoding=null;/** @private @type {?Encoder} */this._encoder=null;// Non-standard\n/** @private @type {boolean} */this._do_not_flush=false;/** @private @type {string} */this._fatal=Boolean(options['fatal'])?'fatal':'replacement';// 1. Let enc be a new TextEncoder object.\nvar enc=this;// 2. Set enc's encoding to UTF-8's encoder.\nif(Boolean(options['NONSTANDARD_allowLegacyEncoding'])){// NONSTANDARD behavior.\nlabel=label!==undefined?String(label):DEFAULT_ENCODING;var encoding=getEncoding(label);if(encoding===null||encoding.name==='replacement')throw RangeError('Unknown encoding: '+label);if(!encoders[encoding.name]){throw Error('Encoder not present.'+' Did you forget to include encoding-indexes.js first?');}enc._encoding=encoding;}else{// Standard behavior.\nenc._encoding=getEncoding('utf-8');if(label!==undefined&&'console'in global){console.warn('TextEncoder constructor called with encoding label, '+'which is ignored.');}}// For pre-ES5 runtimes:\nif(!Object.defineProperty)this.encoding=enc._encoding.name.toLowerCase();// 3. Return enc.\nreturn enc;}if(Object.defineProperty){// The encoding attribute's getter must return encoding's name.\nObject.defineProperty(TextEncoder.prototype,'encoding',{/** @this {TextEncoder} */get:function(){return this._encoding.name.toLowerCase();}});}/**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {!Uint8Array} Encoded bytes, as a Uint8Array.\n   */TextEncoder.prototype.encode=function encode(opt_string,options){opt_string=opt_string===undefined?'':String(opt_string);options=ToDictionary(options);// NOTE: This option is nonstandard. None of the encodings\n// permitted for encoding (i.e. UTF-8, UTF-16) are stateful when\n// the input is a USVString so streaming is not necessary.\nif(!this._do_not_flush)this._encoder=encoders[this._encoding.name]({fatal:this._fatal==='fatal'});this._do_not_flush=Boolean(options['stream']);// 1. Convert input to a stream.\nvar input=new Stream(stringToCodePoints(opt_string));// 2. Let output be a new stream\nvar output=[];/** @type {?(number|!Array.<number>)} */var result;// 3. While true, run these substeps:\nwhile(true){// 1. Let token be the result of reading from input.\nvar token=input.read();if(token===end_of_stream)break;// 2. Let result be the result of processing token for encoder,\n// input, output.\nresult=this._encoder.handler(input,token);if(result===finished)break;if(Array.isArray(result))output.push.apply(output,/**@type {!Array.<number>}*/result);else output.push(result);}// TODO: Align with spec algorithm.\nif(!this._do_not_flush){while(true){result=this._encoder.handler(input,input.read());if(result===finished)break;if(Array.isArray(result))output.push.apply(output,/**@type {!Array.<number>}*/result);else output.push(result);}this._encoder=null;}// 3. If result is finished, convert output into a byte sequence,\n// and then return a Uint8Array object wrapping an ArrayBuffer\n// containing output.\nreturn new Uint8Array(output);};//\n// 9. The encoding\n//\n// 9.1 utf-8\n// 9.1.1 utf-8 decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function UTF8Decoder(options){var fatal=options.fatal;// utf-8's decoder's has an associated utf-8 code point, utf-8\n// bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n// lower boundary (initially 0x80), and a utf-8 upper boundary\n// (initially 0xBF).\nvar/** @type {number} */utf8_code_point=0,/** @type {number} */utf8_bytes_seen=0,/** @type {number} */utf8_bytes_needed=0,/** @type {number} */utf8_lower_boundary=0x80,/** @type {number} */utf8_upper_boundary=0xBF;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n// set utf-8 bytes needed to 0 and return error.\nif(bite===end_of_stream&&utf8_bytes_needed!==0){utf8_bytes_needed=0;return decoderError(fatal);}// 2. If byte is end-of-stream, return finished.\nif(bite===end_of_stream)return finished;// 3. If utf-8 bytes needed is 0, based on byte:\nif(utf8_bytes_needed===0){// 0x00 to 0x7F\nif(inRange(bite,0x00,0x7F)){// Return a code point whose value is byte.\nreturn bite;}// 0xC2 to 0xDF\nelse if(inRange(bite,0xC2,0xDF)){// 1. Set utf-8 bytes needed to 1.\nutf8_bytes_needed=1;// 2. Set UTF-8 code point to byte & 0x1F.\nutf8_code_point=bite&0x1F;}// 0xE0 to 0xEF\nelse if(inRange(bite,0xE0,0xEF)){// 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\nif(bite===0xE0)utf8_lower_boundary=0xA0;// 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\nif(bite===0xED)utf8_upper_boundary=0x9F;// 3. Set utf-8 bytes needed to 2.\nutf8_bytes_needed=2;// 4. Set UTF-8 code point to byte & 0xF.\nutf8_code_point=bite&0xF;}// 0xF0 to 0xF4\nelse if(inRange(bite,0xF0,0xF4)){// 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\nif(bite===0xF0)utf8_lower_boundary=0x90;// 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\nif(bite===0xF4)utf8_upper_boundary=0x8F;// 3. Set utf-8 bytes needed to 3.\nutf8_bytes_needed=3;// 4. Set UTF-8 code point to byte & 0x7.\nutf8_code_point=bite&0x7;}// Otherwise\nelse{// Return error.\nreturn decoderError(fatal);}// Return continue.\nreturn null;}// 4. If byte is not in the range utf-8 lower boundary to utf-8\n// upper boundary, inclusive, run these substeps:\nif(!inRange(bite,utf8_lower_boundary,utf8_upper_boundary)){// 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n// bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n// utf-8 upper boundary to 0xBF.\nutf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0;utf8_lower_boundary=0x80;utf8_upper_boundary=0xBF;// 2. Prepend byte to stream.\nstream.prepend(bite);// 3. Return error.\nreturn decoderError(fatal);}// 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n// to 0xBF.\nutf8_lower_boundary=0x80;utf8_upper_boundary=0xBF;// 6. Set UTF-8 code point to (UTF-8 code point << 6) | (byte &\n// 0x3F)\nutf8_code_point=utf8_code_point<<6|bite&0x3F;// 7. Increase utf-8 bytes seen by one.\nutf8_bytes_seen+=1;// 8. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n// continue.\nif(utf8_bytes_seen!==utf8_bytes_needed)return null;// 9. Let code point be utf-8 code point.\nvar code_point=utf8_code_point;// 10. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n// seen to 0.\nutf8_code_point=utf8_bytes_needed=utf8_bytes_seen=0;// 11. Return a code point whose value is code point.\nreturn code_point;};}// 9.1.2 utf-8 encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function UTF8Encoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. Set count and offset based on the range code point is in:\nvar count,offset;// U+0080 to U+07FF, inclusive:\nif(inRange(code_point,0x0080,0x07FF)){// 1 and 0xC0\ncount=1;offset=0xC0;}// U+0800 to U+FFFF, inclusive:\nelse if(inRange(code_point,0x0800,0xFFFF)){// 2 and 0xE0\ncount=2;offset=0xE0;}// U+10000 to U+10FFFF, inclusive:\nelse if(inRange(code_point,0x10000,0x10FFFF)){// 3 and 0xF0\ncount=3;offset=0xF0;}// 4. Let bytes be a byte sequence whose first byte is (code\n// point >> (6 × count)) + offset.\nvar bytes=[(code_point>>6*count)+offset];// 5. Run these substeps while count is greater than 0:\nwhile(count>0){// 1. Set temp to code point >> (6 × (count − 1)).\nvar temp=code_point>>6*(count-1);// 2. Append to bytes 0x80 | (temp & 0x3F).\nbytes.push(0x80|temp&0x3F);// 3. Decrease count by one.\ncount-=1;}// 6. Return bytes bytes, in order.\nreturn bytes;};}/** @param {{fatal: boolean}} options */encoders['UTF-8']=function(options){return new UTF8Encoder(options);};/** @param {{fatal: boolean}} options */decoders['UTF-8']=function(options){return new UTF8Decoder(options);};//\n// 10. Legacy single-byte encodings\n//\n// 10.1 single-byte decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {!Array.<number>} index The encoding index.\n   * @param {{fatal: boolean}} options\n   */function SingleByteDecoder(index,options){var fatal=options.fatal;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream, return finished.\nif(bite===end_of_stream)return finished;// 2. If byte is an ASCII byte, return a code point whose value\n// is byte.\nif(isASCIIByte(bite))return bite;// 3. Let code point be the index code point for byte − 0x80 in\n// index single-byte.\nvar code_point=index[bite-0x80];// 4. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 5. Return a code point whose value is code point.\nreturn code_point;};}// 10.2 single-byte encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {!Array.<?number>} index The encoding index.\n   * @param {{fatal: boolean}} options\n   */function SingleByteEncoder(index,options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. Let pointer be the index pointer for code point in index\n// single-byte.\nvar pointer=indexPointerFor(code_point,index);// 4. If pointer is null, return error with code point.\nif(pointer===null)encoderError(code_point);// 5. Return a byte whose value is pointer + 0x80.\nreturn pointer+0x80;};}(function(){if(!('encoding-indexes'in global))return;encodings.forEach(function(category){if(category.heading!=='Legacy single-byte encodings')return;category.encodings.forEach(function(encoding){var name=encoding.name;var idx=index(name.toLowerCase());/** @param {{fatal: boolean}} options */decoders[name]=function(options){return new SingleByteDecoder(idx,options);};/** @param {{fatal: boolean}} options */encoders[name]=function(options){return new SingleByteEncoder(idx,options);};});});})();//\n// 11. Legacy multi-byte Chinese (simplified) encodings\n//\n// 11.1 gbk\n// 11.1.1 gbk decoder\n// gbk's decoder is gb18030's decoder.\n/** @param {{fatal: boolean}} options */decoders['GBK']=function(options){return new GB18030Decoder(options);};// 11.1.2 gbk encoder\n// gbk's encoder is gb18030's encoder with its gbk flag set.\n/** @param {{fatal: boolean}} options */encoders['GBK']=function(options){return new GB18030Encoder(options,true);};// 11.2 gb18030\n// 11.2.1 gb18030 decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function GB18030Decoder(options){var fatal=options.fatal;// gb18030's decoder has an associated gb18030 first, gb18030\n// second, and gb18030 third (all initially 0x00).\nvar/** @type {number} */gb18030_first=0x00,/** @type {number} */gb18030_second=0x00,/** @type {number} */gb18030_third=0x00;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and gb18030 first, gb18030\n// second, and gb18030 third are 0x00, return finished.\nif(bite===end_of_stream&&gb18030_first===0x00&&gb18030_second===0x00&&gb18030_third===0x00){return finished;}// 2. If byte is end-of-stream, and gb18030 first, gb18030\n// second, or gb18030 third is not 0x00, set gb18030 first,\n// gb18030 second, and gb18030 third to 0x00, and return error.\nif(bite===end_of_stream&&(gb18030_first!==0x00||gb18030_second!==0x00||gb18030_third!==0x00)){gb18030_first=0x00;gb18030_second=0x00;gb18030_third=0x00;decoderError(fatal);}var code_point;// 3. If gb18030 third is not 0x00, run these substeps:\nif(gb18030_third!==0x00){// 1. Let code point be null.\ncode_point=null;// 2. If byte is in the range 0x30 to 0x39, inclusive, set\n// code point to the index gb18030 ranges code point for\n// (((gb18030 first − 0x81) × 10 + gb18030 second − 0x30) ×\n// 126 + gb18030 third − 0x81) × 10 + byte − 0x30.\nif(inRange(bite,0x30,0x39)){code_point=indexGB18030RangesCodePointFor((((gb18030_first-0x81)*10+gb18030_second-0x30)*126+gb18030_third-0x81)*10+bite-0x30);}// 3. Let buffer be a byte sequence consisting of gb18030\n// second, gb18030 third, and byte, in order.\nvar buffer=[gb18030_second,gb18030_third,bite];// 4. Set gb18030 first, gb18030 second, and gb18030 third to\n// 0x00.\ngb18030_first=0x00;gb18030_second=0x00;gb18030_third=0x00;// 5. If code point is null, prepend buffer to stream and\n// return error.\nif(code_point===null){stream.prepend(buffer);return decoderError(fatal);}// 6. Return a code point whose value is code point.\nreturn code_point;}// 4. If gb18030 second is not 0x00, run these substeps:\nif(gb18030_second!==0x00){// 1. If byte is in the range 0x81 to 0xFE, inclusive, set\n// gb18030 third to byte and return continue.\nif(inRange(bite,0x81,0xFE)){gb18030_third=bite;return null;}// 2. Prepend gb18030 second followed by byte to stream, set\n// gb18030 first and gb18030 second to 0x00, and return error.\nstream.prepend([gb18030_second,bite]);gb18030_first=0x00;gb18030_second=0x00;return decoderError(fatal);}// 5. If gb18030 first is not 0x00, run these substeps:\nif(gb18030_first!==0x00){// 1. If byte is in the range 0x30 to 0x39, inclusive, set\n// gb18030 second to byte and return continue.\nif(inRange(bite,0x30,0x39)){gb18030_second=bite;return null;}// 2. Let lead be gb18030 first, let pointer be null, and set\n// gb18030 first to 0x00.\nvar lead=gb18030_first;var pointer=null;gb18030_first=0x00;// 3. Let offset be 0x40 if byte is less than 0x7F and 0x41\n// otherwise.\nvar offset=bite<0x7F?0x40:0x41;// 4. If byte is in the range 0x40 to 0x7E, inclusive, or 0x80\n// to 0xFE, inclusive, set pointer to (lead − 0x81) × 190 +\n// (byte − offset).\nif(inRange(bite,0x40,0x7E)||inRange(bite,0x80,0xFE))pointer=(lead-0x81)*190+(bite-offset);// 5. Let code point be null if pointer is null and the index\n// code point for pointer in index gb18030 otherwise.\ncode_point=pointer===null?null:indexCodePointFor(pointer,index('gb18030'));// 6. If code point is null and byte is an ASCII byte, prepend\n// byte to stream.\nif(code_point===null&&isASCIIByte(bite))stream.prepend(bite);// 7. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 8. Return a code point whose value is code point.\nreturn code_point;}// 6. If byte is an ASCII byte, return a code point whose value\n// is byte.\nif(isASCIIByte(bite))return bite;// 7. If byte is 0x80, return code point U+20AC.\nif(bite===0x80)return 0x20AC;// 8. If byte is in the range 0x81 to 0xFE, inclusive, set\n// gb18030 first to byte and return continue.\nif(inRange(bite,0x81,0xFE)){gb18030_first=bite;return null;}// 9. Return error.\nreturn decoderError(fatal);};}// 11.2.2 gb18030 encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   * @param {boolean=} gbk_flag\n   */function GB18030Encoder(options,gbk_flag){var fatal=options.fatal;// gb18030's decoder has an associated gbk flag (initially unset).\n/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. If code point is U+E5E5, return error with code point.\nif(code_point===0xE5E5)return encoderError(code_point);// 4. If the gbk flag is set and code point is U+20AC, return\n// byte 0x80.\nif(gbk_flag&&code_point===0x20AC)return 0x80;// 5. Let pointer be the index pointer for code point in index\n// gb18030.\nvar pointer=indexPointerFor(code_point,index('gb18030'));// 6. If pointer is not null, run these substeps:\nif(pointer!==null){// 1. Let lead be floor(pointer / 190) + 0x81.\nvar lead=floor(pointer/190)+0x81;// 2. Let trail be pointer % 190.\nvar trail=pointer%190;// 3. Let offset be 0x40 if trail is less than 0x3F and 0x41 otherwise.\nvar offset=trail<0x3F?0x40:0x41;// 4. Return two bytes whose values are lead and trail + offset.\nreturn[lead,trail+offset];}// 7. If gbk flag is set, return error with code point.\nif(gbk_flag)return encoderError(code_point);// 8. Set pointer to the index gb18030 ranges pointer for code\n// point.\npointer=indexGB18030RangesPointerFor(code_point);// 9. Let byte1 be floor(pointer / 10 / 126 / 10).\nvar byte1=floor(pointer/10/126/10);// 10. Set pointer to pointer − byte1 × 10 × 126 × 10.\npointer=pointer-byte1*10*126*10;// 11. Let byte2 be floor(pointer / 10 / 126).\nvar byte2=floor(pointer/10/126);// 12. Set pointer to pointer − byte2 × 10 × 126.\npointer=pointer-byte2*10*126;// 13. Let byte3 be floor(pointer / 10).\nvar byte3=floor(pointer/10);// 14. Let byte4 be pointer − byte3 × 10.\nvar byte4=pointer-byte3*10;// 15. Return four bytes whose values are byte1 + 0x81, byte2 +\n// 0x30, byte3 + 0x81, byte4 + 0x30.\nreturn[byte1+0x81,byte2+0x30,byte3+0x81,byte4+0x30];};}/** @param {{fatal: boolean}} options */encoders['gb18030']=function(options){return new GB18030Encoder(options);};/** @param {{fatal: boolean}} options */decoders['gb18030']=function(options){return new GB18030Decoder(options);};//\n// 12. Legacy multi-byte Chinese (traditional) encodings\n//\n// 12.1 Big5\n// 12.1.1 Big5 decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function Big5Decoder(options){var fatal=options.fatal;// Big5's decoder has an associated Big5 lead (initially 0x00).\nvar/** @type {number} */Big5_lead=0x00;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and Big5 lead is not 0x00, set\n// Big5 lead to 0x00 and return error.\nif(bite===end_of_stream&&Big5_lead!==0x00){Big5_lead=0x00;return decoderError(fatal);}// 2. If byte is end-of-stream and Big5 lead is 0x00, return\n// finished.\nif(bite===end_of_stream&&Big5_lead===0x00)return finished;// 3. If Big5 lead is not 0x00, let lead be Big5 lead, let\n// pointer be null, set Big5 lead to 0x00, and then run these\n// substeps:\nif(Big5_lead!==0x00){var lead=Big5_lead;var pointer=null;Big5_lead=0x00;// 1. Let offset be 0x40 if byte is less than 0x7F and 0x62\n// otherwise.\nvar offset=bite<0x7F?0x40:0x62;// 2. If byte is in the range 0x40 to 0x7E, inclusive, or 0xA1\n// to 0xFE, inclusive, set pointer to (lead − 0x81) × 157 +\n// (byte − offset).\nif(inRange(bite,0x40,0x7E)||inRange(bite,0xA1,0xFE))pointer=(lead-0x81)*157+(bite-offset);// 3. If there is a row in the table below whose first column\n// is pointer, return the two code points listed in its second\n// column\n// Pointer | Code points\n// --------+--------------\n// 1133    | U+00CA U+0304\n// 1135    | U+00CA U+030C\n// 1164    | U+00EA U+0304\n// 1166    | U+00EA U+030C\nswitch(pointer){case 1133:return[0x00CA,0x0304];case 1135:return[0x00CA,0x030C];case 1164:return[0x00EA,0x0304];case 1166:return[0x00EA,0x030C];}// 4. Let code point be null if pointer is null and the index\n// code point for pointer in index Big5 otherwise.\nvar code_point=pointer===null?null:indexCodePointFor(pointer,index('big5'));// 5. If code point is null and byte is an ASCII byte, prepend\n// byte to stream.\nif(code_point===null&&isASCIIByte(bite))stream.prepend(bite);// 6. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 7. Return a code point whose value is code point.\nreturn code_point;}// 4. If byte is an ASCII byte, return a code point whose value\n// is byte.\nif(isASCIIByte(bite))return bite;// 5. If byte is in the range 0x81 to 0xFE, inclusive, set Big5\n// lead to byte and return continue.\nif(inRange(bite,0x81,0xFE)){Big5_lead=bite;return null;}// 6. Return error.\nreturn decoderError(fatal);};}// 12.1.2 Big5 encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function Big5Encoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. Let pointer be the index Big5 pointer for code point.\nvar pointer=indexBig5PointerFor(code_point);// 4. If pointer is null, return error with code point.\nif(pointer===null)return encoderError(code_point);// 5. Let lead be floor(pointer / 157) + 0x81.\nvar lead=floor(pointer/157)+0x81;// 6. If lead is less than 0xA1, return error with code point.\nif(lead<0xA1)return encoderError(code_point);// 7. Let trail be pointer % 157.\nvar trail=pointer%157;// 8. Let offset be 0x40 if trail is less than 0x3F and 0x62\n// otherwise.\nvar offset=trail<0x3F?0x40:0x62;// Return two bytes whose values are lead and trail + offset.\nreturn[lead,trail+offset];};}/** @param {{fatal: boolean}} options */encoders['Big5']=function(options){return new Big5Encoder(options);};/** @param {{fatal: boolean}} options */decoders['Big5']=function(options){return new Big5Decoder(options);};//\n// 13. Legacy multi-byte Japanese encodings\n//\n// 13.1 euc-jp\n// 13.1.1 euc-jp decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function EUCJPDecoder(options){var fatal=options.fatal;// euc-jp's decoder has an associated euc-jp jis0212 flag\n// (initially unset) and euc-jp lead (initially 0x00).\nvar/** @type {boolean} */eucjp_jis0212_flag=false,/** @type {number} */eucjp_lead=0x00;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and euc-jp lead is not 0x00, set\n// euc-jp lead to 0x00, and return error.\nif(bite===end_of_stream&&eucjp_lead!==0x00){eucjp_lead=0x00;return decoderError(fatal);}// 2. If byte is end-of-stream and euc-jp lead is 0x00, return\n// finished.\nif(bite===end_of_stream&&eucjp_lead===0x00)return finished;// 3. If euc-jp lead is 0x8E and byte is in the range 0xA1 to\n// 0xDF, inclusive, set euc-jp lead to 0x00 and return a code\n// point whose value is 0xFF61 − 0xA1 + byte.\nif(eucjp_lead===0x8E&&inRange(bite,0xA1,0xDF)){eucjp_lead=0x00;return 0xFF61-0xA1+bite;}// 4. If euc-jp lead is 0x8F and byte is in the range 0xA1 to\n// 0xFE, inclusive, set the euc-jp jis0212 flag, set euc-jp lead\n// to byte, and return continue.\nif(eucjp_lead===0x8F&&inRange(bite,0xA1,0xFE)){eucjp_jis0212_flag=true;eucjp_lead=bite;return null;}// 5. If euc-jp lead is not 0x00, let lead be euc-jp lead, set\n// euc-jp lead to 0x00, and run these substeps:\nif(eucjp_lead!==0x00){var lead=eucjp_lead;eucjp_lead=0x00;// 1. Let code point be null.\nvar code_point=null;// 2. If lead and byte are both in the range 0xA1 to 0xFE,\n// inclusive, set code point to the index code point for (lead\n// − 0xA1) × 94 + byte − 0xA1 in index jis0208 if the euc-jp\n// jis0212 flag is unset and in index jis0212 otherwise.\nif(inRange(lead,0xA1,0xFE)&&inRange(bite,0xA1,0xFE)){code_point=indexCodePointFor((lead-0xA1)*94+(bite-0xA1),index(!eucjp_jis0212_flag?'jis0208':'jis0212'));}// 3. Unset the euc-jp jis0212 flag.\neucjp_jis0212_flag=false;// 4. If byte is not in the range 0xA1 to 0xFE, inclusive,\n// prepend byte to stream.\nif(!inRange(bite,0xA1,0xFE))stream.prepend(bite);// 5. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 6. Return a code point whose value is code point.\nreturn code_point;}// 6. If byte is an ASCII byte, return a code point whose value\n// is byte.\nif(isASCIIByte(bite))return bite;// 7. If byte is 0x8E, 0x8F, or in the range 0xA1 to 0xFE,\n// inclusive, set euc-jp lead to byte and return continue.\nif(bite===0x8E||bite===0x8F||inRange(bite,0xA1,0xFE)){eucjp_lead=bite;return null;}// 8. Return error.\nreturn decoderError(fatal);};}// 13.1.2 euc-jp encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function EUCJPEncoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. If code point is U+00A5, return byte 0x5C.\nif(code_point===0x00A5)return 0x5C;// 4. If code point is U+203E, return byte 0x7E.\nif(code_point===0x203E)return 0x7E;// 5. If code point is in the range U+FF61 to U+FF9F, inclusive,\n// return two bytes whose values are 0x8E and code point −\n// 0xFF61 + 0xA1.\nif(inRange(code_point,0xFF61,0xFF9F))return[0x8E,code_point-0xFF61+0xA1];// 6. If code point is U+2212, set it to U+FF0D.\nif(code_point===0x2212)code_point=0xFF0D;// 7. Let pointer be the index pointer for code point in index\n// jis0208.\nvar pointer=indexPointerFor(code_point,index('jis0208'));// 8. If pointer is null, return error with code point.\nif(pointer===null)return encoderError(code_point);// 9. Let lead be floor(pointer / 94) + 0xA1.\nvar lead=floor(pointer/94)+0xA1;// 10. Let trail be pointer % 94 + 0xA1.\nvar trail=pointer%94+0xA1;// 11. Return two bytes whose values are lead and trail.\nreturn[lead,trail];};}/** @param {{fatal: boolean}} options */encoders['EUC-JP']=function(options){return new EUCJPEncoder(options);};/** @param {{fatal: boolean}} options */decoders['EUC-JP']=function(options){return new EUCJPDecoder(options);};// 13.2 iso-2022-jp\n// 13.2.1 iso-2022-jp decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function ISO2022JPDecoder(options){var fatal=options.fatal;/** @enum */var states={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6};// iso-2022-jp's decoder has an associated iso-2022-jp decoder\n// state (initially ASCII), iso-2022-jp decoder output state\n// (initially ASCII), iso-2022-jp lead (initially 0x00), and\n// iso-2022-jp output flag (initially unset).\nvar/** @type {number} */iso2022jp_decoder_state=states.ASCII,/** @type {number} */iso2022jp_decoder_output_state=states.ASCII,/** @type {number} */iso2022jp_lead=0x00,/** @type {boolean} */iso2022jp_output_flag=false;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// switching on iso-2022-jp decoder state:\nswitch(iso2022jp_decoder_state){default:case states.ASCII:// ASCII\n// Based on byte:\n// 0x1B\nif(bite===0x1B){// Set iso-2022-jp decoder state to escape start and return\n// continue.\niso2022jp_decoder_state=states.EscapeStart;return null;}// 0x00 to 0x7F, excluding 0x0E, 0x0F, and 0x1B\nif(inRange(bite,0x00,0x7F)&&bite!==0x0E&&bite!==0x0F&&bite!==0x1B){// Unset the iso-2022-jp output flag and return a code point\n// whose value is byte.\niso2022jp_output_flag=false;return bite;}// end-of-stream\nif(bite===end_of_stream){// Return finished.\nreturn finished;}// Otherwise\n// Unset the iso-2022-jp output flag and return error.\niso2022jp_output_flag=false;return decoderError(fatal);case states.Roman:// Roman\n// Based on byte:\n// 0x1B\nif(bite===0x1B){// Set iso-2022-jp decoder state to escape start and return\n// continue.\niso2022jp_decoder_state=states.EscapeStart;return null;}// 0x5C\nif(bite===0x5C){// Unset the iso-2022-jp output flag and return code point\n// U+00A5.\niso2022jp_output_flag=false;return 0x00A5;}// 0x7E\nif(bite===0x7E){// Unset the iso-2022-jp output flag and return code point\n// U+203E.\niso2022jp_output_flag=false;return 0x203E;}// 0x00 to 0x7F, excluding 0x0E, 0x0F, 0x1B, 0x5C, and 0x7E\nif(inRange(bite,0x00,0x7F)&&bite!==0x0E&&bite!==0x0F&&bite!==0x1B&&bite!==0x5C&&bite!==0x7E){// Unset the iso-2022-jp output flag and return a code point\n// whose value is byte.\niso2022jp_output_flag=false;return bite;}// end-of-stream\nif(bite===end_of_stream){// Return finished.\nreturn finished;}// Otherwise\n// Unset the iso-2022-jp output flag and return error.\niso2022jp_output_flag=false;return decoderError(fatal);case states.Katakana:// Katakana\n// Based on byte:\n// 0x1B\nif(bite===0x1B){// Set iso-2022-jp decoder state to escape start and return\n// continue.\niso2022jp_decoder_state=states.EscapeStart;return null;}// 0x21 to 0x5F\nif(inRange(bite,0x21,0x5F)){// Unset the iso-2022-jp output flag and return a code point\n// whose value is 0xFF61 − 0x21 + byte.\niso2022jp_output_flag=false;return 0xFF61-0x21+bite;}// end-of-stream\nif(bite===end_of_stream){// Return finished.\nreturn finished;}// Otherwise\n// Unset the iso-2022-jp output flag and return error.\niso2022jp_output_flag=false;return decoderError(fatal);case states.LeadByte:// Lead byte\n// Based on byte:\n// 0x1B\nif(bite===0x1B){// Set iso-2022-jp decoder state to escape start and return\n// continue.\niso2022jp_decoder_state=states.EscapeStart;return null;}// 0x21 to 0x7E\nif(inRange(bite,0x21,0x7E)){// Unset the iso-2022-jp output flag, set iso-2022-jp lead\n// to byte, iso-2022-jp decoder state to trail byte, and\n// return continue.\niso2022jp_output_flag=false;iso2022jp_lead=bite;iso2022jp_decoder_state=states.TrailByte;return null;}// end-of-stream\nif(bite===end_of_stream){// Return finished.\nreturn finished;}// Otherwise\n// Unset the iso-2022-jp output flag and return error.\niso2022jp_output_flag=false;return decoderError(fatal);case states.TrailByte:// Trail byte\n// Based on byte:\n// 0x1B\nif(bite===0x1B){// Set iso-2022-jp decoder state to escape start and return\n// continue.\niso2022jp_decoder_state=states.EscapeStart;return decoderError(fatal);}// 0x21 to 0x7E\nif(inRange(bite,0x21,0x7E)){// 1. Set the iso-2022-jp decoder state to lead byte.\niso2022jp_decoder_state=states.LeadByte;// 2. Let pointer be (iso-2022-jp lead − 0x21) × 94 + byte − 0x21.\nvar pointer=(iso2022jp_lead-0x21)*94+bite-0x21;// 3. Let code point be the index code point for pointer in\n// index jis0208.\nvar code_point=indexCodePointFor(pointer,index('jis0208'));// 4. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 5. Return a code point whose value is code point.\nreturn code_point;}// end-of-stream\nif(bite===end_of_stream){// Set the iso-2022-jp decoder state to lead byte, prepend\n// byte to stream, and return error.\niso2022jp_decoder_state=states.LeadByte;stream.prepend(bite);return decoderError(fatal);}// Otherwise\n// Set iso-2022-jp decoder state to lead byte and return\n// error.\niso2022jp_decoder_state=states.LeadByte;return decoderError(fatal);case states.EscapeStart:// Escape start\n// 1. If byte is either 0x24 or 0x28, set iso-2022-jp lead to\n// byte, iso-2022-jp decoder state to escape, and return\n// continue.\nif(bite===0x24||bite===0x28){iso2022jp_lead=bite;iso2022jp_decoder_state=states.Escape;return null;}// 2. Prepend byte to stream.\nstream.prepend(bite);// 3. Unset the iso-2022-jp output flag, set iso-2022-jp\n// decoder state to iso-2022-jp decoder output state, and\n// return error.\niso2022jp_output_flag=false;iso2022jp_decoder_state=iso2022jp_decoder_output_state;return decoderError(fatal);case states.Escape:// Escape\n// 1. Let lead be iso-2022-jp lead and set iso-2022-jp lead to\n// 0x00.\nvar lead=iso2022jp_lead;iso2022jp_lead=0x00;// 2. Let state be null.\nvar state=null;// 3. If lead is 0x28 and byte is 0x42, set state to ASCII.\nif(lead===0x28&&bite===0x42)state=states.ASCII;// 4. If lead is 0x28 and byte is 0x4A, set state to Roman.\nif(lead===0x28&&bite===0x4A)state=states.Roman;// 5. If lead is 0x28 and byte is 0x49, set state to Katakana.\nif(lead===0x28&&bite===0x49)state=states.Katakana;// 6. If lead is 0x24 and byte is either 0x40 or 0x42, set\n// state to lead byte.\nif(lead===0x24&&(bite===0x40||bite===0x42))state=states.LeadByte;// 7. If state is non-null, run these substeps:\nif(state!==null){// 1. Set iso-2022-jp decoder state and iso-2022-jp decoder\n// output state to states.\niso2022jp_decoder_state=iso2022jp_decoder_state=state;// 2. Let output flag be the iso-2022-jp output flag.\nvar output_flag=iso2022jp_output_flag;// 3. Set the iso-2022-jp output flag.\niso2022jp_output_flag=true;// 4. Return continue, if output flag is unset, and error\n// otherwise.\nreturn!output_flag?null:decoderError(fatal);}// 8. Prepend lead and byte to stream.\nstream.prepend([lead,bite]);// 9. Unset the iso-2022-jp output flag, set iso-2022-jp\n// decoder state to iso-2022-jp decoder output state and\n// return error.\niso2022jp_output_flag=false;iso2022jp_decoder_state=iso2022jp_decoder_output_state;return decoderError(fatal);}};}// 13.2.2 iso-2022-jp encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function ISO2022JPEncoder(options){var fatal=options.fatal;// iso-2022-jp's encoder has an associated iso-2022-jp encoder\n// state which is one of ASCII, Roman, and jis0208 (initially\n// ASCII).\n/** @enum */var states={ASCII:0,Roman:1,jis0208:2};var/** @type {number} */iso2022jp_state=states.ASCII;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream and iso-2022-jp encoder\n// state is not ASCII, prepend code point to stream, set\n// iso-2022-jp encoder state to ASCII, and return three bytes\n// 0x1B 0x28 0x42.\nif(code_point===end_of_stream&&iso2022jp_state!==states.ASCII){stream.prepend(code_point);iso2022jp_state=states.ASCII;return[0x1B,0x28,0x42];}// 2. If code point is end-of-stream and iso-2022-jp encoder\n// state is ASCII, return finished.\nif(code_point===end_of_stream&&iso2022jp_state===states.ASCII)return finished;// 3. If ISO-2022-JP encoder state is ASCII or Roman, and code\n// point is U+000E, U+000F, or U+001B, return error with U+FFFD.\nif((iso2022jp_state===states.ASCII||iso2022jp_state===states.Roman)&&(code_point===0x000E||code_point===0x000F||code_point===0x001B)){return encoderError(0xFFFD);}// 4. If iso-2022-jp encoder state is ASCII and code point is an\n// ASCII code point, return a byte whose value is code point.\nif(iso2022jp_state===states.ASCII&&isASCIICodePoint(code_point))return code_point;// 5. If iso-2022-jp encoder state is Roman and code point is an\n// ASCII code point, excluding U+005C and U+007E, or is U+00A5\n// or U+203E, run these substeps:\nif(iso2022jp_state===states.Roman&&(isASCIICodePoint(code_point)&&code_point!==0x005C&&code_point!==0x007E||code_point==0x00A5||code_point==0x203E)){// 1. If code point is an ASCII code point, return a byte\n// whose value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 2. If code point is U+00A5, return byte 0x5C.\nif(code_point===0x00A5)return 0x5C;// 3. If code point is U+203E, return byte 0x7E.\nif(code_point===0x203E)return 0x7E;}// 6. If code point is an ASCII code point, and iso-2022-jp\n// encoder state is not ASCII, prepend code point to stream, set\n// iso-2022-jp encoder state to ASCII, and return three bytes\n// 0x1B 0x28 0x42.\nif(isASCIICodePoint(code_point)&&iso2022jp_state!==states.ASCII){stream.prepend(code_point);iso2022jp_state=states.ASCII;return[0x1B,0x28,0x42];}// 7. If code point is either U+00A5 or U+203E, and iso-2022-jp\n// encoder state is not Roman, prepend code point to stream, set\n// iso-2022-jp encoder state to Roman, and return three bytes\n// 0x1B 0x28 0x4A.\nif((code_point===0x00A5||code_point===0x203E)&&iso2022jp_state!==states.Roman){stream.prepend(code_point);iso2022jp_state=states.Roman;return[0x1B,0x28,0x4A];}// 8. If code point is U+2212, set it to U+FF0D.\nif(code_point===0x2212)code_point=0xFF0D;// 9. Let pointer be the index pointer for code point in index\n// jis0208.\nvar pointer=indexPointerFor(code_point,index('jis0208'));// 10. If pointer is null, return error with code point.\nif(pointer===null)return encoderError(code_point);// 11. If iso-2022-jp encoder state is not jis0208, prepend code\n// point to stream, set iso-2022-jp encoder state to jis0208,\n// and return three bytes 0x1B 0x24 0x42.\nif(iso2022jp_state!==states.jis0208){stream.prepend(code_point);iso2022jp_state=states.jis0208;return[0x1B,0x24,0x42];}// 12. Let lead be floor(pointer / 94) + 0x21.\nvar lead=floor(pointer/94)+0x21;// 13. Let trail be pointer % 94 + 0x21.\nvar trail=pointer%94+0x21;// 14. Return two bytes whose values are lead and trail.\nreturn[lead,trail];};}/** @param {{fatal: boolean}} options */encoders['ISO-2022-JP']=function(options){return new ISO2022JPEncoder(options);};/** @param {{fatal: boolean}} options */decoders['ISO-2022-JP']=function(options){return new ISO2022JPDecoder(options);};// 13.3 Shift_JIS\n// 13.3.1 Shift_JIS decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function ShiftJISDecoder(options){var fatal=options.fatal;// Shift_JIS's decoder has an associated Shift_JIS lead (initially\n// 0x00).\nvar/** @type {number} */Shift_JIS_lead=0x00;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and Shift_JIS lead is not 0x00,\n// set Shift_JIS lead to 0x00 and return error.\nif(bite===end_of_stream&&Shift_JIS_lead!==0x00){Shift_JIS_lead=0x00;return decoderError(fatal);}// 2. If byte is end-of-stream and Shift_JIS lead is 0x00,\n// return finished.\nif(bite===end_of_stream&&Shift_JIS_lead===0x00)return finished;// 3. If Shift_JIS lead is not 0x00, let lead be Shift_JIS lead,\n// let pointer be null, set Shift_JIS lead to 0x00, and then run\n// these substeps:\nif(Shift_JIS_lead!==0x00){var lead=Shift_JIS_lead;var pointer=null;Shift_JIS_lead=0x00;// 1. Let offset be 0x40, if byte is less than 0x7F, and 0x41\n// otherwise.\nvar offset=bite<0x7F?0x40:0x41;// 2. Let lead offset be 0x81, if lead is less than 0xA0, and\n// 0xC1 otherwise.\nvar lead_offset=lead<0xA0?0x81:0xC1;// 3. If byte is in the range 0x40 to 0x7E, inclusive, or 0x80\n// to 0xFC, inclusive, set pointer to (lead − lead offset) ×\n// 188 + byte − offset.\nif(inRange(bite,0x40,0x7E)||inRange(bite,0x80,0xFC))pointer=(lead-lead_offset)*188+bite-offset;// 4. If pointer is in the range 8836 to 10715, inclusive,\n// return a code point whose value is 0xE000 − 8836 + pointer.\nif(inRange(pointer,8836,10715))return 0xE000-8836+pointer;// 5. Let code point be null, if pointer is null, and the\n// index code point for pointer in index jis0208 otherwise.\nvar code_point=pointer===null?null:indexCodePointFor(pointer,index('jis0208'));// 6. If code point is null and byte is an ASCII byte, prepend\n// byte to stream.\nif(code_point===null&&isASCIIByte(bite))stream.prepend(bite);// 7. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 8. Return a code point whose value is code point.\nreturn code_point;}// 4. If byte is an ASCII byte or 0x80, return a code point\n// whose value is byte.\nif(isASCIIByte(bite)||bite===0x80)return bite;// 5. If byte is in the range 0xA1 to 0xDF, inclusive, return a\n// code point whose value is 0xFF61 − 0xA1 + byte.\nif(inRange(bite,0xA1,0xDF))return 0xFF61-0xA1+bite;// 6. If byte is in the range 0x81 to 0x9F, inclusive, or 0xE0\n// to 0xFC, inclusive, set Shift_JIS lead to byte and return\n// continue.\nif(inRange(bite,0x81,0x9F)||inRange(bite,0xE0,0xFC)){Shift_JIS_lead=bite;return null;}// 7. Return error.\nreturn decoderError(fatal);};}// 13.3.2 Shift_JIS encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function ShiftJISEncoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point or U+0080, return a\n// byte whose value is code point.\nif(isASCIICodePoint(code_point)||code_point===0x0080)return code_point;// 3. If code point is U+00A5, return byte 0x5C.\nif(code_point===0x00A5)return 0x5C;// 4. If code point is U+203E, return byte 0x7E.\nif(code_point===0x203E)return 0x7E;// 5. If code point is in the range U+FF61 to U+FF9F, inclusive,\n// return a byte whose value is code point − 0xFF61 + 0xA1.\nif(inRange(code_point,0xFF61,0xFF9F))return code_point-0xFF61+0xA1;// 6. If code point is U+2212, set it to U+FF0D.\nif(code_point===0x2212)code_point=0xFF0D;// 7. Let pointer be the index Shift_JIS pointer for code point.\nvar pointer=indexShiftJISPointerFor(code_point);// 8. If pointer is null, return error with code point.\nif(pointer===null)return encoderError(code_point);// 9. Let lead be floor(pointer / 188).\nvar lead=floor(pointer/188);// 10. Let lead offset be 0x81, if lead is less than 0x1F, and\n// 0xC1 otherwise.\nvar lead_offset=lead<0x1F?0x81:0xC1;// 11. Let trail be pointer % 188.\nvar trail=pointer%188;// 12. Let offset be 0x40, if trail is less than 0x3F, and 0x41\n// otherwise.\nvar offset=trail<0x3F?0x40:0x41;// 13. Return two bytes whose values are lead + lead offset and\n// trail + offset.\nreturn[lead+lead_offset,trail+offset];};}/** @param {{fatal: boolean}} options */encoders['Shift_JIS']=function(options){return new ShiftJISEncoder(options);};/** @param {{fatal: boolean}} options */decoders['Shift_JIS']=function(options){return new ShiftJISDecoder(options);};//\n// 14. Legacy multi-byte Korean encodings\n//\n// 14.1 euc-kr\n// 14.1.1 euc-kr decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function EUCKRDecoder(options){var fatal=options.fatal;// euc-kr's decoder has an associated euc-kr lead (initially 0x00).\nvar/** @type {number} */euckr_lead=0x00;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and euc-kr lead is not 0x00, set\n// euc-kr lead to 0x00 and return error.\nif(bite===end_of_stream&&euckr_lead!==0){euckr_lead=0x00;return decoderError(fatal);}// 2. If byte is end-of-stream and euc-kr lead is 0x00, return\n// finished.\nif(bite===end_of_stream&&euckr_lead===0)return finished;// 3. If euc-kr lead is not 0x00, let lead be euc-kr lead, let\n// pointer be null, set euc-kr lead to 0x00, and then run these\n// substeps:\nif(euckr_lead!==0x00){var lead=euckr_lead;var pointer=null;euckr_lead=0x00;// 1. If byte is in the range 0x41 to 0xFE, inclusive, set\n// pointer to (lead − 0x81) × 190 + (byte − 0x41).\nif(inRange(bite,0x41,0xFE))pointer=(lead-0x81)*190+(bite-0x41);// 2. Let code point be null, if pointer is null, and the\n// index code point for pointer in index euc-kr otherwise.\nvar code_point=pointer===null?null:indexCodePointFor(pointer,index('euc-kr'));// 3. If code point is null and byte is an ASCII byte, prepend\n// byte to stream.\nif(pointer===null&&isASCIIByte(bite))stream.prepend(bite);// 4. If code point is null, return error.\nif(code_point===null)return decoderError(fatal);// 5. Return a code point whose value is code point.\nreturn code_point;}// 4. If byte is an ASCII byte, return a code point whose value\n// is byte.\nif(isASCIIByte(bite))return bite;// 5. If byte is in the range 0x81 to 0xFE, inclusive, set\n// euc-kr lead to byte and return continue.\nif(inRange(bite,0x81,0xFE)){euckr_lead=bite;return null;}// 6. Return error.\nreturn decoderError(fatal);};}// 14.1.2 euc-kr encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function EUCKREncoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. Let pointer be the index pointer for code point in index\n// euc-kr.\nvar pointer=indexPointerFor(code_point,index('euc-kr'));// 4. If pointer is null, return error with code point.\nif(pointer===null)return encoderError(code_point);// 5. Let lead be floor(pointer / 190) + 0x81.\nvar lead=floor(pointer/190)+0x81;// 6. Let trail be pointer % 190 + 0x41.\nvar trail=pointer%190+0x41;// 7. Return two bytes whose values are lead and trail.\nreturn[lead,trail];};}/** @param {{fatal: boolean}} options */encoders['EUC-KR']=function(options){return new EUCKREncoder(options);};/** @param {{fatal: boolean}} options */decoders['EUC-KR']=function(options){return new EUCKRDecoder(options);};//\n// 15. Legacy miscellaneous encodings\n//\n// 15.1 replacement\n// Not needed - API throws RangeError\n// 15.2 Common infrastructure for utf-16be and utf-16le\n/**\n   * @param {number} code_unit\n   * @param {boolean} utf16be\n   * @return {!Array.<number>} bytes\n   */function convertCodeUnitToBytes(code_unit,utf16be){// 1. Let byte1 be code unit >> 8.\nvar byte1=code_unit>>8;// 2. Let byte2 be code unit & 0x00FF.\nvar byte2=code_unit&0x00FF;// 3. Then return the bytes in order:\n// utf-16be flag is set: byte1, then byte2.\nif(utf16be)return[byte1,byte2];// utf-16be flag is unset: byte2, then byte1.\nreturn[byte2,byte1];}// 15.2.1 shared utf-16 decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {boolean} utf16_be True if big-endian, false if little-endian.\n   * @param {{fatal: boolean}} options\n   */function UTF16Decoder(utf16_be,options){var fatal=options.fatal;var/** @type {?number} */utf16_lead_byte=null,/** @type {?number} */utf16_lead_surrogate=null;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream and either utf-16 lead byte or\n// utf-16 lead surrogate is not null, set utf-16 lead byte and\n// utf-16 lead surrogate to null, and return error.\nif(bite===end_of_stream&&(utf16_lead_byte!==null||utf16_lead_surrogate!==null)){return decoderError(fatal);}// 2. If byte is end-of-stream and utf-16 lead byte and utf-16\n// lead surrogate are null, return finished.\nif(bite===end_of_stream&&utf16_lead_byte===null&&utf16_lead_surrogate===null){return finished;}// 3. If utf-16 lead byte is null, set utf-16 lead byte to byte\n// and return continue.\nif(utf16_lead_byte===null){utf16_lead_byte=bite;return null;}// 4. Let code unit be the result of:\nvar code_unit;if(utf16_be){// utf-16be decoder flag is set\n//   (utf-16 lead byte << 8) + byte.\ncode_unit=(utf16_lead_byte<<8)+bite;}else{// utf-16be decoder flag is unset\n//   (byte << 8) + utf-16 lead byte.\ncode_unit=(bite<<8)+utf16_lead_byte;}// Then set utf-16 lead byte to null.\nutf16_lead_byte=null;// 5. If utf-16 lead surrogate is not null, let lead surrogate\n// be utf-16 lead surrogate, set utf-16 lead surrogate to null,\n// and then run these substeps:\nif(utf16_lead_surrogate!==null){var lead_surrogate=utf16_lead_surrogate;utf16_lead_surrogate=null;// 1. If code unit is in the range U+DC00 to U+DFFF,\n// inclusive, return a code point whose value is 0x10000 +\n// ((lead surrogate − 0xD800) << 10) + (code unit − 0xDC00).\nif(inRange(code_unit,0xDC00,0xDFFF)){return 0x10000+(lead_surrogate-0xD800)*0x400+(code_unit-0xDC00);}// 2. Prepend the sequence resulting of converting code unit\n// to bytes using utf-16be decoder flag to stream and return\n// error.\nstream.prepend(convertCodeUnitToBytes(code_unit,utf16_be));return decoderError(fatal);}// 6. If code unit is in the range U+D800 to U+DBFF, inclusive,\n// set utf-16 lead surrogate to code unit and return continue.\nif(inRange(code_unit,0xD800,0xDBFF)){utf16_lead_surrogate=code_unit;return null;}// 7. If code unit is in the range U+DC00 to U+DFFF, inclusive,\n// return error.\nif(inRange(code_unit,0xDC00,0xDFFF))return decoderError(fatal);// 8. Return code point code unit.\nreturn code_unit;};}// 15.2.2 shared utf-16 encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {boolean} utf16_be True if big-endian, false if little-endian.\n   * @param {{fatal: boolean}} options\n   */function UTF16Encoder(utf16_be,options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1. If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is in the range U+0000 to U+FFFF, inclusive,\n// return the sequence resulting of converting code point to\n// bytes using utf-16be encoder flag.\nif(inRange(code_point,0x0000,0xFFFF))return convertCodeUnitToBytes(code_point,utf16_be);// 3. Let lead be ((code point − 0x10000) >> 10) + 0xD800,\n// converted to bytes using utf-16be encoder flag.\nvar lead=convertCodeUnitToBytes((code_point-0x10000>>10)+0xD800,utf16_be);// 4. Let trail be ((code point − 0x10000) & 0x3FF) + 0xDC00,\n// converted to bytes using utf-16be encoder flag.\nvar trail=convertCodeUnitToBytes((code_point-0x10000&0x3FF)+0xDC00,utf16_be);// 5. Return a byte sequence of lead followed by trail.\nreturn lead.concat(trail);};}// 15.3 utf-16be\n// 15.3.1 utf-16be decoder\n/** @param {{fatal: boolean}} options */encoders['UTF-16BE']=function(options){return new UTF16Encoder(true,options);};// 15.3.2 utf-16be encoder\n/** @param {{fatal: boolean}} options */decoders['UTF-16BE']=function(options){return new UTF16Decoder(true,options);};// 15.4 utf-16le\n// 15.4.1 utf-16le decoder\n/** @param {{fatal: boolean}} options */encoders['UTF-16LE']=function(options){return new UTF16Encoder(false,options);};// 15.4.2 utf-16le encoder\n/** @param {{fatal: boolean}} options */decoders['UTF-16LE']=function(options){return new UTF16Decoder(false,options);};// 15.5 x-user-defined\n// 15.5.1 x-user-defined decoder\n/**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */function XUserDefinedDecoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */this.handler=function(stream,bite){// 1. If byte is end-of-stream, return finished.\nif(bite===end_of_stream)return finished;// 2. If byte is an ASCII byte, return a code point whose value\n// is byte.\nif(isASCIIByte(bite))return bite;// 3. Return a code point whose value is 0xF780 + byte − 0x80.\nreturn 0xF780+bite-0x80;};}// 15.5.2 x-user-defined encoder\n/**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */function XUserDefinedEncoder(options){var fatal=options.fatal;/**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */this.handler=function(stream,code_point){// 1.If code point is end-of-stream, return finished.\nif(code_point===end_of_stream)return finished;// 2. If code point is an ASCII code point, return a byte whose\n// value is code point.\nif(isASCIICodePoint(code_point))return code_point;// 3. If code point is in the range U+F780 to U+F7FF, inclusive,\n// return a byte whose value is code point − 0xF780 + 0x80.\nif(inRange(code_point,0xF780,0xF7FF))return code_point-0xF780+0x80;// 4. Return error with code point.\nreturn encoderError(code_point);};}/** @param {{fatal: boolean}} options */encoders['x-user-defined']=function(options){return new XUserDefinedEncoder(options);};/** @param {{fatal: boolean}} options */decoders['x-user-defined']=function(options){return new XUserDefinedDecoder(options);};if(!global['TextEncoder'])global['TextEncoder']=TextEncoder;if(!global['TextDecoder'])global['TextDecoder']=TextDecoder;if(typeof module!==\"undefined\"&&module.exports){module.exports={TextEncoder:global['TextEncoder'],TextDecoder:global['TextDecoder'],EncodingIndexes:global[\"encoding-indexes\"]};}// For strict environments where `this` inside the global scope\n// is `undefined`, take a pure object instead\n})(this||{});},{\"./encoding-indexes.js\":110}],112:[function(require,module,exports){'use strict';var objectAssign=require('object-assign');// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */function compare(a,b){if(a===b){return 0;}var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y){return-1;}if(y<x){return 1;}return 0;}function isBuffer(b){if(global.Buffer&&typeof global.Buffer.isBuffer==='function'){return global.Buffer.isBuffer(b);}return!!(b!=null&&b._isBuffer);}// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar util=require('util/');var hasOwn=Object.prototype.hasOwnProperty;var pSlice=Array.prototype.slice;var functionsHaveNames=function(){return function foo(){}.name==='foo';}();function pToString(obj){return Object.prototype.toString.call(obj);}function isView(arrbuf){if(isBuffer(arrbuf)){return false;}if(typeof global.ArrayBuffer!=='function'){return false;}if(typeof ArrayBuffer.isView==='function'){return ArrayBuffer.isView(arrbuf);}if(!arrbuf){return false;}if(arrbuf instanceof DataView){return true;}if(arrbuf.buffer&&arrbuf.buffer instanceof ArrayBuffer){return true;}return false;}// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\nvar assert=module.exports=ok;// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\nvar regex=/\\s*function\\s+([^\\(\\s]*)\\s*/;// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func){if(!util.isFunction(func)){return;}if(functionsHaveNames){return func.name;}var str=func.toString();var match=str.match(regex);return match&&match[1];}assert.AssertionError=function AssertionError(options){this.name='AssertionError';this.actual=options.actual;this.expected=options.expected;this.operator=options.operator;if(options.message){this.message=options.message;this.generatedMessage=false;}else{this.message=getMessage(this);this.generatedMessage=true;}var stackStartFunction=options.stackStartFunction||fail;if(Error.captureStackTrace){Error.captureStackTrace(this,stackStartFunction);}else{// non v8 browsers so we can have a stacktrace\nvar err=new Error();if(err.stack){var out=err.stack;// try to strip useless frames\nvar fn_name=getName(stackStartFunction);var idx=out.indexOf('\\n'+fn_name);if(idx>=0){// once we have located the function frame\n// we need to strip out everything before it (and its line)\nvar next_line=out.indexOf('\\n',idx+1);out=out.substring(next_line+1);}this.stack=out;}}};// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError,Error);function truncate(s,n){if(typeof s==='string'){return s.length<n?s:s.slice(0,n);}else{return s;}}function inspect(something){if(functionsHaveNames||!util.isFunction(something)){return util.inspect(something);}var rawname=getName(something);var name=rawname?': '+rawname:'';return'[Function'+name+']';}function getMessage(self){return truncate(inspect(self.actual),128)+' '+self.operator+' '+truncate(inspect(self.expected),128);}// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\nfunction fail(actual,expected,message,operator,stackStartFunction){throw new assert.AssertionError({message:message,actual:actual,expected:expected,operator:operator,stackStartFunction:stackStartFunction});}// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail=fail;// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\nfunction ok(value,message){if(!value)fail(value,true,message,'==',assert.ok);}assert.ok=ok;// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal=function equal(actual,expected,message){if(actual!=expected)fail(actual,expected,message,'==',assert.equal);};// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual=function notEqual(actual,expected,message){if(actual==expected){fail(actual,expected,message,'!=',assert.notEqual);}};// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual=function deepEqual(actual,expected,message){if(!_deepEqual(actual,expected,false)){fail(actual,expected,message,'deepEqual',assert.deepEqual);}};assert.deepStrictEqual=function deepStrictEqual(actual,expected,message){if(!_deepEqual(actual,expected,true)){fail(actual,expected,message,'deepStrictEqual',assert.deepStrictEqual);}};function _deepEqual(actual,expected,strict,memos){// 7.1. All identical values are equivalent, as determined by ===.\nif(actual===expected){return true;}else if(isBuffer(actual)&&isBuffer(expected)){return compare(actual,expected)===0;// 7.2. If the expected value is a Date object, the actual value is\n// equivalent if it is also a Date object that refers to the same time.\n}else if(util.isDate(actual)&&util.isDate(expected)){return actual.getTime()===expected.getTime();// 7.3 If the expected value is a RegExp object, the actual value is\n// equivalent if it is also a RegExp object with the same source and\n// properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n}else if(util.isRegExp(actual)&&util.isRegExp(expected)){return actual.source===expected.source&&actual.global===expected.global&&actual.multiline===expected.multiline&&actual.lastIndex===expected.lastIndex&&actual.ignoreCase===expected.ignoreCase;// 7.4. Other pairs that do not both pass typeof value == 'object',\n// equivalence is determined by ==.\n}else if((actual===null||typeof actual!=='object')&&(expected===null||typeof expected!=='object')){return strict?actual===expected:actual==expected;// If both values are instances of typed arrays, wrap their underlying\n// ArrayBuffers in a Buffer each to increase performance\n// This optimization requires the arrays to have the same type as checked by\n// Object.prototype.toString (aka pToString). Never perform binary\n// comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n// bit patterns are not identical.\n}else if(isView(actual)&&isView(expected)&&pToString(actual)===pToString(expected)&&!(actual instanceof Float32Array||actual instanceof Float64Array)){return compare(new Uint8Array(actual.buffer),new Uint8Array(expected.buffer))===0;// 7.5 For all other Object pairs, including Array objects, equivalence is\n// determined by having the same number of owned properties (as verified\n// with Object.prototype.hasOwnProperty.call), the same set of keys\n// (although not necessarily the same order), equivalent values for every\n// corresponding key, and an identical 'prototype' property. Note: this\n// accounts for both named and indexed properties on Arrays.\n}else if(isBuffer(actual)!==isBuffer(expected)){return false;}else{memos=memos||{actual:[],expected:[]};var actualIndex=memos.actual.indexOf(actual);if(actualIndex!==-1){if(actualIndex===memos.expected.indexOf(expected)){return true;}}memos.actual.push(actual);memos.expected.push(expected);return objEquiv(actual,expected,strict,memos);}}function isArguments(object){return Object.prototype.toString.call(object)=='[object Arguments]';}function objEquiv(a,b,strict,actualVisitedObjects){if(a===null||a===undefined||b===null||b===undefined)return false;// if one is a primitive, the other must be same\nif(util.isPrimitive(a)||util.isPrimitive(b))return a===b;if(strict&&Object.getPrototypeOf(a)!==Object.getPrototypeOf(b))return false;var aIsArgs=isArguments(a);var bIsArgs=isArguments(b);if(aIsArgs&&!bIsArgs||!aIsArgs&&bIsArgs)return false;if(aIsArgs){a=pSlice.call(a);b=pSlice.call(b);return _deepEqual(a,b,strict);}var ka=objectKeys(a);var kb=objectKeys(b);var key,i;// having the same number of owned properties (keys incorporates\n// hasOwnProperty)\nif(ka.length!==kb.length)return false;//the same set of keys (although not necessarily the same order),\nka.sort();kb.sort();//~~~cheap key test\nfor(i=ka.length-1;i>=0;i--){if(ka[i]!==kb[i])return false;}//equivalent values for every corresponding key, and\n//~~~possibly expensive deep test\nfor(i=ka.length-1;i>=0;i--){key=ka[i];if(!_deepEqual(a[key],b[key],strict,actualVisitedObjects))return false;}return true;}// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual=function notDeepEqual(actual,expected,message){if(_deepEqual(actual,expected,false)){fail(actual,expected,message,'notDeepEqual',assert.notDeepEqual);}};assert.notDeepStrictEqual=notDeepStrictEqual;function notDeepStrictEqual(actual,expected,message){if(_deepEqual(actual,expected,true)){fail(actual,expected,message,'notDeepStrictEqual',notDeepStrictEqual);}}// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual=function strictEqual(actual,expected,message){if(actual!==expected){fail(actual,expected,message,'===',assert.strictEqual);}};// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual=function notStrictEqual(actual,expected,message){if(actual===expected){fail(actual,expected,message,'!==',assert.notStrictEqual);}};function expectedException(actual,expected){if(!actual||!expected){return false;}if(Object.prototype.toString.call(expected)=='[object RegExp]'){return expected.test(actual);}try{if(actual instanceof expected){return true;}}catch(e){// Ignore.  The instanceof check doesn't work for arrow functions.\n}if(Error.isPrototypeOf(expected)){return false;}return expected.call({},actual)===true;}function _tryBlock(block){var error;try{block();}catch(e){error=e;}return error;}function _throws(shouldThrow,block,expected,message){var actual;if(typeof block!=='function'){throw new TypeError('\"block\" argument must be a function');}if(typeof expected==='string'){message=expected;expected=null;}actual=_tryBlock(block);message=(expected&&expected.name?' ('+expected.name+').':'.')+(message?' '+message:'.');if(shouldThrow&&!actual){fail(actual,expected,'Missing expected exception'+message);}var userProvidedMessage=typeof message==='string';var isUnwantedException=!shouldThrow&&util.isError(actual);var isUnexpectedException=!shouldThrow&&actual&&!expected;if(isUnwantedException&&userProvidedMessage&&expectedException(actual,expected)||isUnexpectedException){fail(actual,expected,'Got unwanted exception'+message);}if(shouldThrow&&actual&&expected&&!expectedException(actual,expected)||!shouldThrow&&actual){throw actual;}}// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws=function(block,/*optional*/error,/*optional*/message){_throws(true,block,error,message);};// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow=function(block,/*optional*/error,/*optional*/message){_throws(false,block,error,message);};assert.ifError=function(err){if(err)throw err;};// Expose a strict only variant of assert\nfunction strict(value,message){if(!value)fail(value,true,message,'==',strict);}assert.strict=objectAssign(strict,assert,{equal:assert.strictEqual,deepEqual:assert.deepStrictEqual,notEqual:assert.notStrictEqual,notDeepEqual:assert.notDeepStrictEqual});assert.strict.strict=assert.strict;var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj){if(hasOwn.call(obj,key))keys.push(key);}return keys;};},{\"object-assign\":173,\"util/\":115}],113:[function(require,module,exports){if(typeof Object.create==='function'){// implementation from standard node.js 'util' module\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});};}else{// old school shim for old browsers\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;};}},{}],114:[function(require,module,exports){module.exports=function isBuffer(arg){return arg&&typeof arg==='object'&&typeof arg.copy==='function'&&typeof arg.fill==='function'&&typeof arg.readUInt8==='function';};},{}],115:[function(require,module,exports){// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar formatRegExp=/%[sdj%]/g;exports.format=function(f){if(!isString(f)){var objects=[];for(var i=0;i<arguments.length;i++){objects.push(inspect(arguments[i]));}return objects.join(' ');}var i=1;var args=arguments;var len=args.length;var str=String(f).replace(formatRegExp,function(x){if(x==='%%')return'%';if(i>=len)return x;switch(x){case'%s':return String(args[i++]);case'%d':return Number(args[i++]);case'%j':try{return JSON.stringify(args[i++]);}catch(_){return'[Circular]';}default:return x;}});for(var x=args[i];i<len;x=args[++i]){if(isNull(x)||!isObject(x)){str+=' '+x;}else{str+=' '+inspect(x);}}return str;};// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate=function(fn,msg){// Allow for deprecating things in the process of starting up.\nif(isUndefined(global.process)){return function(){return exports.deprecate(fn,msg).apply(this,arguments);};}if(process.noDeprecation===true){return fn;}var warned=false;function deprecated(){if(!warned){if(process.throwDeprecation){throw new Error(msg);}else if(process.traceDeprecation){console.trace(msg);}else{console.error(msg);}warned=true;}return fn.apply(this,arguments);}return deprecated;};var debugs={};var debugEnviron;exports.debuglog=function(set){if(isUndefined(debugEnviron))debugEnviron=process.env.NODE_DEBUG||'';set=set.toUpperCase();if(!debugs[set]){if(new RegExp('\\\\b'+set+'\\\\b','i').test(debugEnviron)){var pid=process.pid;debugs[set]=function(){var msg=exports.format.apply(exports,arguments);console.error('%s %d: %s',set,pid,msg);};}else{debugs[set]=function(){};}}return debugs[set];};/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */ /* legacy: obj, showHidden, depth, colors*/function inspect(obj,opts){// default options\nvar ctx={seen:[],stylize:stylizeNoColor};// legacy...\nif(arguments.length>=3)ctx.depth=arguments[2];if(arguments.length>=4)ctx.colors=arguments[3];if(isBoolean(opts)){// legacy...\nctx.showHidden=opts;}else if(opts){// got an \"options\" object\nexports._extend(ctx,opts);}// set default options\nif(isUndefined(ctx.showHidden))ctx.showHidden=false;if(isUndefined(ctx.depth))ctx.depth=2;if(isUndefined(ctx.colors))ctx.colors=false;if(isUndefined(ctx.customInspect))ctx.customInspect=true;if(ctx.colors)ctx.stylize=stylizeWithColor;return formatValue(ctx,obj,ctx.depth);}exports.inspect=inspect;// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors={'bold':[1,22],'italic':[3,23],'underline':[4,24],'inverse':[7,27],'white':[37,39],'grey':[90,39],'black':[30,39],'blue':[34,39],'cyan':[36,39],'green':[32,39],'magenta':[35,39],'red':[31,39],'yellow':[33,39]};// Don't use 'blue' not visible on cmd.exe\ninspect.styles={'special':'cyan','number':'yellow','boolean':'yellow','undefined':'grey','null':'bold','string':'green','date':'magenta',// \"name\": intentionally not styling\n'regexp':'red'};function stylizeWithColor(str,styleType){var style=inspect.styles[styleType];if(style){return'\\u001b['+inspect.colors[style][0]+'m'+str+'\\u001b['+inspect.colors[style][1]+'m';}else{return str;}}function stylizeNoColor(str,styleType){return str;}function arrayToHash(array){var hash={};array.forEach(function(val,idx){hash[val]=true;});return hash;}function formatValue(ctx,value,recurseTimes){// Provide a hook for user-specified inspect functions.\n// Check that value is an object with an inspect function on it\nif(ctx.customInspect&&value&&isFunction(value.inspect)&&// Filter out the util module, it's inspect function is special\nvalue.inspect!==exports.inspect&&// Also filter out any prototype objects using the circular check.\n!(value.constructor&&value.constructor.prototype===value)){var ret=value.inspect(recurseTimes,ctx);if(!isString(ret)){ret=formatValue(ctx,ret,recurseTimes);}return ret;}// Primitive types cannot have properties\nvar primitive=formatPrimitive(ctx,value);if(primitive){return primitive;}// Look up the keys of the object.\nvar keys=Object.keys(value);var visibleKeys=arrayToHash(keys);if(ctx.showHidden){keys=Object.getOwnPropertyNames(value);}// IE doesn't make error fields non-enumerable\n// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\nif(isError(value)&&(keys.indexOf('message')>=0||keys.indexOf('description')>=0)){return formatError(value);}// Some type of object without properties can be shortcutted.\nif(keys.length===0){if(isFunction(value)){var name=value.name?': '+value.name:'';return ctx.stylize('[Function'+name+']','special');}if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}if(isDate(value)){return ctx.stylize(Date.prototype.toString.call(value),'date');}if(isError(value)){return formatError(value);}}var base='',array=false,braces=['{','}'];// Make Array say that they are Array\nif(isArray(value)){array=true;braces=['[',']'];}// Make functions say that they are functions\nif(isFunction(value)){var n=value.name?': '+value.name:'';base=' [Function'+n+']';}// Make RegExps say that they are RegExps\nif(isRegExp(value)){base=' '+RegExp.prototype.toString.call(value);}// Make dates with properties first say the date\nif(isDate(value)){base=' '+Date.prototype.toUTCString.call(value);}// Make error with message first say the error\nif(isError(value)){base=' '+formatError(value);}if(keys.length===0&&(!array||value.length==0)){return braces[0]+base+braces[1];}if(recurseTimes<0){if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else{return ctx.stylize('[Object]','special');}}ctx.seen.push(value);var output;if(array){output=formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else{output=keys.map(function(key){return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}ctx.seen.pop();return reduceToSingleString(output,base,braces);}function formatPrimitive(ctx,value){if(isUndefined(value))return ctx.stylize('undefined','undefined');if(isString(value)){var simple='\\''+JSON.stringify(value).replace(/^\"|\"$/g,'').replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+'\\'';return ctx.stylize(simple,'string');}if(isNumber(value))return ctx.stylize(''+value,'number');if(isBoolean(value))return ctx.stylize(''+value,'boolean');// For some reason typeof null is \"object\", so special case here.\nif(isNull(value))return ctx.stylize('null','null');}function formatError(value){return'['+Error.prototype.toString.call(value)+']';}function formatArray(ctx,value,recurseTimes,visibleKeys,keys){var output=[];for(var i=0,l=value.length;i<l;++i){if(hasOwnProperty(value,String(i))){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,String(i),true));}else{output.push('');}}keys.forEach(function(key){if(!key.match(/^\\d+$/)){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,key,true));}});return output;}function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){var name,str,desc;desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};if(desc.get){if(desc.set){str=ctx.stylize('[Getter/Setter]','special');}else{str=ctx.stylize('[Getter]','special');}}else{if(desc.set){str=ctx.stylize('[Setter]','special');}}if(!hasOwnProperty(visibleKeys,key)){name='['+key+']';}if(!str){if(ctx.seen.indexOf(desc.value)<0){if(isNull(recurseTimes)){str=formatValue(ctx,desc.value,null);}else{str=formatValue(ctx,desc.value,recurseTimes-1);}if(str.indexOf('\\n')>-1){if(array){str=str.split('\\n').map(function(line){return'  '+line;}).join('\\n').substr(2);}else{str='\\n'+str.split('\\n').map(function(line){return'   '+line;}).join('\\n');}}}else{str=ctx.stylize('[Circular]','special');}}if(isUndefined(name)){if(array&&key.match(/^\\d+$/)){return str;}name=JSON.stringify(''+key);if(name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){name=name.substr(1,name.length-2);name=ctx.stylize(name,'name');}else{name=name.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\");name=ctx.stylize(name,'string');}}return name+': '+str;}function reduceToSingleString(output,base,braces){var numLinesEst=0;var length=output.reduce(function(prev,cur){numLinesEst++;if(cur.indexOf('\\n')>=0)numLinesEst++;return prev+cur.replace(/\\u001b\\[\\d\\d?m/g,'').length+1;},0);if(length>60){return braces[0]+(base===''?'':base+'\\n ')+' '+output.join(',\\n  ')+' '+braces[1];}return braces[0]+base+' '+output.join(', ')+' '+braces[1];}// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar){return Array.isArray(ar);}exports.isArray=isArray;function isBoolean(arg){return typeof arg==='boolean';}exports.isBoolean=isBoolean;function isNull(arg){return arg===null;}exports.isNull=isNull;function isNullOrUndefined(arg){return arg==null;}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(arg){return typeof arg==='number';}exports.isNumber=isNumber;function isString(arg){return typeof arg==='string';}exports.isString=isString;function isSymbol(arg){return typeof arg==='symbol';}exports.isSymbol=isSymbol;function isUndefined(arg){return arg===void 0;}exports.isUndefined=isUndefined;function isRegExp(re){return isObject(re)&&objectToString(re)==='[object RegExp]';}exports.isRegExp=isRegExp;function isObject(arg){return typeof arg==='object'&&arg!==null;}exports.isObject=isObject;function isDate(d){return isObject(d)&&objectToString(d)==='[object Date]';}exports.isDate=isDate;function isError(e){return isObject(e)&&(objectToString(e)==='[object Error]'||e instanceof Error);}exports.isError=isError;function isFunction(arg){return typeof arg==='function';}exports.isFunction=isFunction;function isPrimitive(arg){return arg===null||typeof arg==='boolean'||typeof arg==='number'||typeof arg==='string'||typeof arg==='symbol'||// ES6 symbol\ntypeof arg==='undefined';}exports.isPrimitive=isPrimitive;exports.isBuffer=require('./support/isBuffer');function objectToString(o){return Object.prototype.toString.call(o);}function pad(n){return n<10?'0'+n.toString(10):n.toString(10);}var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];// 26 Feb 16:19:34\nfunction timestamp(){var d=new Date();var time=[pad(d.getHours()),pad(d.getMinutes()),pad(d.getSeconds())].join(':');return[d.getDate(),months[d.getMonth()],time].join(' ');}// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log=function(){console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));};/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */exports.inherits=require('inherits');exports._extend=function(origin,add){// Don't do anything if add isn't an object\nif(!add||!isObject(add))return origin;var keys=Object.keys(add);var i=keys.length;while(i--){origin[keys[i]]=add[keys[i]];}return origin;};function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}},{\"./support/isBuffer\":114,\"inherits\":113}],116:[function(require,module,exports){arguments[4][113][0].apply(exports,arguments);},{\"dup\":113}],117:[function(require,module,exports){arguments[4][114][0].apply(exports,arguments);},{\"dup\":114}],118:[function(require,module,exports){arguments[4][115][0].apply(exports,arguments);},{\"./support/isBuffer\":117,\"dup\":115,\"inherits\":116}],119:[function(require,module,exports){/*!\n\n diff v5.1.0\n\nSoftware License Agreement (BSD License)\n\nCopyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Kevin Decker nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n@license\n*/(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):(global=global||self,factory(global.Diff={}));})(this,function(exports){'use strict';function Diff(){}Diff.prototype={diff:function diff(oldString,newString){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var callback=options.callback;if(typeof options==='function'){callback=options;options={};}this.options=options;var self=this;function done(value){if(callback){setTimeout(function(){callback(undefined,value);},0);return true;}else{return value;}}// Allow subclasses to massage the input prior to running\noldString=this.castInput(oldString);newString=this.castInput(newString);oldString=this.removeEmpty(this.tokenize(oldString));newString=this.removeEmpty(this.tokenize(newString));var newLen=newString.length,oldLen=oldString.length;var editLength=1;var maxEditLength=newLen+oldLen;if(options.maxEditLength){maxEditLength=Math.min(maxEditLength,options.maxEditLength);}var bestPath=[{newPos:-1,components:[]}];// Seed editLength = 0, i.e. the content starts with the same values\nvar oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen){// Identity per the equality and tokenizer\nreturn done([{value:this.join(newString),count:newString.length}]);}// Main worker method. checks all permutations of a given edit length for acceptance.\nfunction execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=void 0;var addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;if(addPath){// No one else is going to attempt to use this value, clear it\nbestPath[diagonalPath-1]=undefined;}var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&0<=_oldPos&&_oldPos<oldLen;if(!canAdd&&!canRemove){// If this path is a terminal then prune\nbestPath[diagonalPath]=undefined;continue;}// Select the diagonal that we want to branch from. We select the prior\n// path whose position in the new string is the farthest from the origin\n// and does not pass the bounds of the diff graph\nif(!canAdd||canRemove&&addPath.newPos<removePath.newPos){basePath=clonePath(removePath);self.pushComponent(basePath.components,undefined,true);}else{basePath=addPath;// No need to clone, we've pulled it from the list\nbasePath.newPos++;self.pushComponent(basePath.components,true,undefined);}_oldPos=self.extractCommon(basePath,newString,oldString,diagonalPath);// If we have hit the end of both strings, then we are done\nif(basePath.newPos+1>=newLen&&_oldPos+1>=oldLen){return done(buildValues(self,basePath.components,newString,oldString,self.useLongestToken));}else{// Otherwise track this path as a potential candidate and continue.\nbestPath[diagonalPath]=basePath;}}editLength++;}// Performs the length of edit iteration. Is a bit fugly as this has to support the\n// sync and async mode which is never fun. Loops over execEditLength until a value\n// is produced, or until the edit length exceeds options.maxEditLength (if given),\n// in which case it will return undefined.\nif(callback){(function exec(){setTimeout(function(){if(editLength>maxEditLength){return callback();}if(!execEditLength()){exec();}},0);})();}else{while(editLength<=maxEditLength){var ret=execEditLength();if(ret){return ret;}}}},pushComponent:function pushComponent(components,added,removed){var last=components[components.length-1];if(last&&last.added===added&&last.removed===removed){// We need to clone here as the component clone operation is just\n// as shallow array clone\ncomponents[components.length-1]={count:last.count+1,added:added,removed:removed};}else{components.push({count:1,added:added,removed:removed});}},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath){var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;while(newPos+1<newLen&&oldPos+1<oldLen&&this.equals(newString[newPos+1],oldString[oldPos+1])){newPos++;oldPos++;commonCount++;}if(commonCount){basePath.components.push({count:commonCount});}basePath.newPos=newPos;return oldPos;},equals:function equals(left,right){if(this.options.comparator){return this.options.comparator(left,right);}else{return left===right||this.options.ignoreCase&&left.toLowerCase()===right.toLowerCase();}},removeEmpty:function removeEmpty(array){var ret=[];for(var i=0;i<array.length;i++){if(array[i]){ret.push(array[i]);}}return ret;},castInput:function castInput(value){return value;},tokenize:function tokenize(value){return value.split('');},join:function join(chars){return chars.join('');}};function buildValues(diff,components,newString,oldString,useLongestToken){var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;for(;componentPos<componentLen;componentPos++){var component=components[componentPos];if(!component.removed){if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value;});component.value=diff.join(value);}else{component.value=diff.join(newString.slice(newPos,newPos+component.count));}newPos+=component.count;// Common case\nif(!component.added){oldPos+=component.count;}}else{component.value=diff.join(oldString.slice(oldPos,oldPos+component.count));oldPos+=component.count;// Reverse add and remove so removes are output first to match common convention\n// The diffing algorithm is tied to add then remove output and this is the simplest\n// route to get the desired output with minimal overhead.\nif(componentPos&&components[componentPos-1].added){var tmp=components[componentPos-1];components[componentPos-1]=components[componentPos];components[componentPos]=tmp;}}}// Special case handle for when one terminal is ignored (i.e. whitespace).\n// For this case we merge the terminal into the prior string and drop the change.\n// This is only available for string mode.\nvar lastComponent=components[componentLen-1];if(componentLen>1&&typeof lastComponent.value==='string'&&(lastComponent.added||lastComponent.removed)&&diff.equals('',lastComponent.value)){components[componentLen-2].value+=lastComponent.value;components.pop();}return components;}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)};}var characterDiff=new Diff();function diffChars(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options);}function generateOptions(options,defaults){if(typeof options==='function'){defaults.callback=options;}else if(options){for(var name in options){/* istanbul ignore else */if(options.hasOwnProperty(name)){defaults[name]=options[name];}}}return defaults;}//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nvar extendedWordChars=/^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;var reWhitespace=/\\S/;var wordDiff=new Diff();wordDiff.equals=function(left,right){if(this.options.ignoreCase){left=left.toLowerCase();right=right.toLowerCase();}return left===right||this.options.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right);};wordDiff.tokenize=function(value){// All whitespace symbols except newline group into one token, each newline - in separate token\nvar tokens=value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/);// Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\nfor(var i=0;i<tokens.length-1;i++){// If we have an empty string in the next field and we have only word chars before and after, merge\nif(!tokens[i+1]&&tokens[i+2]&&extendedWordChars.test(tokens[i])&&extendedWordChars.test(tokens[i+2])){tokens[i]+=tokens[i+2];tokens.splice(i+1,2);i--;}}return tokens;};function diffWords(oldStr,newStr,options){options=generateOptions(options,{ignoreWhitespace:true});return wordDiff.diff(oldStr,newStr,options);}function diffWordsWithSpace(oldStr,newStr,options){return wordDiff.diff(oldStr,newStr,options);}var lineDiff=new Diff();lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\\n|\\r\\n)/);// Ignore the final empty token that occurs if the string ends with a new line\nif(!linesAndNewlines[linesAndNewlines.length-1]){linesAndNewlines.pop();}// Merge the content and line separators into single tokens\nfor(var i=0;i<linesAndNewlines.length;i++){var line=linesAndNewlines[i];if(i%2&&!this.options.newlineIsToken){retLines[retLines.length-1]+=line;}else{if(this.options.ignoreWhitespace){line=line.trim();}retLines.push(line);}}return retLines;};function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback);}function diffTrimmedLines(oldStr,newStr,callback){var options=generateOptions(callback,{ignoreWhitespace:true});return lineDiff.diff(oldStr,newStr,options);}var sentenceDiff=new Diff();sentenceDiff.tokenize=function(value){return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);};function diffSentences(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback);}var cssDiff=new Diff();cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\\s+)/);};function diffCss(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback);}function _typeof(obj){\"@babel/helpers - typeof\";if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function(obj){return typeof obj;};}else{_typeof=function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread();}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr);}function _iterableToArray(iter){if(typeof Symbol!==\"undefined\"&&Symbol.iterator in Object(iter))return Array.from(iter);}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var objectPrototypeToString=Object.prototype.toString;var jsonDiff=new Diff();// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken=true;jsonDiff.tokenize=lineDiff.tokenize;jsonDiff.castInput=function(value){var _this$options=this.options,undefinedReplacement=_this$options.undefinedReplacement,_this$options$stringi=_this$options.stringifyReplacer,stringifyReplacer=_this$options$stringi===void 0?function(k,v){return typeof v==='undefined'?undefinedReplacement:v;}:_this$options$stringi;return typeof value==='string'?value:JSON.stringify(canonicalize(value,null,null,stringifyReplacer),stringifyReplacer,'  ');};jsonDiff.equals=function(left,right){return Diff.prototype.equals.call(jsonDiff,left.replace(/,([\\r\\n])/g,'$1'),right.replace(/,([\\r\\n])/g,'$1'));};function diffJson(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options);}// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nfunction canonicalize(obj,stack,replacementStack,replacer,key){stack=stack||[];replacementStack=replacementStack||[];if(replacer){obj=replacer(key,obj);}var i;for(i=0;i<stack.length;i+=1){if(stack[i]===obj){return replacementStack[i];}}var canonicalizedObj;if('[object Array]'===objectPrototypeToString.call(obj)){stack.push(obj);canonicalizedObj=new Array(obj.length);replacementStack.push(canonicalizedObj);for(i=0;i<obj.length;i+=1){canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack,replacer,key);}stack.pop();replacementStack.pop();return canonicalizedObj;}if(obj&&obj.toJSON){obj=obj.toJSON();}if(_typeof(obj)==='object'&&obj!==null){stack.push(obj);canonicalizedObj={};replacementStack.push(canonicalizedObj);var sortedKeys=[],_key;for(_key in obj){/* istanbul ignore else */if(obj.hasOwnProperty(_key)){sortedKeys.push(_key);}}sortedKeys.sort();for(i=0;i<sortedKeys.length;i+=1){_key=sortedKeys[i];canonicalizedObj[_key]=canonicalize(obj[_key],stack,replacementStack,replacer,_key);}stack.pop();replacementStack.pop();}else{canonicalizedObj=obj;}return canonicalizedObj;}var arrayDiff=new Diff();arrayDiff.tokenize=function(value){return value.slice();};arrayDiff.join=arrayDiff.removeEmpty=function(value){return value;};function diffArrays(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback);}function parsePatch(uniDiff){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var diffstr=uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),delimiters=uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],list=[],i=0;function parseIndex(){var index={};list.push(index);// Parse diff metadata\nwhile(i<diffstr.length){var line=diffstr[i];// File header found, end parsing diff metadata\nif(/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)){break;}// Diff index\nvar header=/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);if(header){index.index=header[1];}i++;}// Parse file headers if they are defined. Unified diff requires them, but\n// there's no technical issues to have an isolated hunk without file header\nparseFileHeader(index);parseFileHeader(index);// Parse hunks\nindex.hunks=[];while(i<diffstr.length){var _line=diffstr[i];if(/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)){break;}else if(/^@@/.test(_line)){index.hunks.push(parseHunk());}else if(_line&&options.strict){// Ignore unexpected content unless in strict mode\nthrow new Error('Unknown line '+(i+1)+' '+JSON.stringify(_line));}else{i++;}}}// Parses the --- and +++ headers, if none are found, no lines\n// are consumed.\nfunction parseFileHeader(index){var fileHeader=/^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);if(fileHeader){var keyPrefix=fileHeader[1]==='---'?'old':'new';var data=fileHeader[2].split('\\t',2);var fileName=data[0].replace(/\\\\\\\\/g,'\\\\');if(/^\".*\"$/.test(fileName)){fileName=fileName.substr(1,fileName.length-2);}index[keyPrefix+'FileName']=fileName;index[keyPrefix+'Header']=(data[1]||'').trim();i++;}}// Parses a hunk\n// This assumes that we are at the start of a hunk.\nfunction parseHunk(){var chunkHeaderIndex=i,chunkHeaderLine=diffstr[i++],chunkHeader=chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);var hunk={oldStart:+chunkHeader[1],oldLines:typeof chunkHeader[2]==='undefined'?1:+chunkHeader[2],newStart:+chunkHeader[3],newLines:typeof chunkHeader[4]==='undefined'?1:+chunkHeader[4],lines:[],linedelimiters:[]};// Unified Diff Format quirk: If the chunk size is 0,\n// the first number is one lower than one would expect.\n// https://www.artima.com/weblogs/viewpost.jsp?thread=164293\nif(hunk.oldLines===0){hunk.oldStart+=1;}if(hunk.newLines===0){hunk.newStart+=1;}var addCount=0,removeCount=0;for(;i<diffstr.length;i++){// Lines starting with '---' could be mistaken for the \"remove line\" operation\n// But they could be the header for the next file. Therefore prune such cases out.\nif(diffstr[i].indexOf('--- ')===0&&i+2<diffstr.length&&diffstr[i+1].indexOf('+++ ')===0&&diffstr[i+2].indexOf('@@')===0){break;}var operation=diffstr[i].length==0&&i!=diffstr.length-1?' ':diffstr[i][0];if(operation==='+'||operation==='-'||operation===' '||operation==='\\\\'){hunk.lines.push(diffstr[i]);hunk.linedelimiters.push(delimiters[i]||'\\n');if(operation==='+'){addCount++;}else if(operation==='-'){removeCount++;}else if(operation===' '){addCount++;removeCount++;}}else{break;}}// Handle the empty block count case\nif(!addCount&&hunk.newLines===1){hunk.newLines=0;}if(!removeCount&&hunk.oldLines===1){hunk.oldLines=0;}// Perform optional sanity checking\nif(options.strict){if(addCount!==hunk.newLines){throw new Error('Added line count did not match for hunk at line '+(chunkHeaderIndex+1));}if(removeCount!==hunk.oldLines){throw new Error('Removed line count did not match for hunk at line '+(chunkHeaderIndex+1));}}return hunk;}while(i<diffstr.length){parseIndex();}return list;}// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator(start,minLine,maxLine){var wantForward=true,backwardExhausted=false,forwardExhausted=false,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){if(backwardExhausted){localOffset++;}else{wantForward=false;}// Check if trying to fit beyond text length, and if not, check it fits\n// after offset location (or desired location on first iteration)\nif(start+localOffset<=maxLine){return localOffset;}forwardExhausted=true;}if(!backwardExhausted){if(!forwardExhausted){wantForward=true;}// Check if trying to fit before text beginning, and if not, check it fits\n// before offset location\nif(minLine<=start-localOffset){return-localOffset++;}backwardExhausted=true;return iterator();}// We tried to fit hunk before text beginning and beyond text length, then\n// hunk can't fit on the text. Return undefined\n};}function applyPatch(source,uniDiff){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof uniDiff==='string'){uniDiff=parsePatch(uniDiff);}if(Array.isArray(uniDiff)){if(uniDiff.length>1){throw new Error('applyPatch only works with a single input.');}uniDiff=uniDiff[0];}// Apply the diff to the input\nvar lines=source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),delimiters=source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,line,operation,patchContent){return line===patchContent;},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0,offset=0,removeEOFNL,addEOFNL;/**\n     * Checks if the hunk exactly fits on the provided location\n     */function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=line.length>0?line[0]:' ',content=line.length>0?line.substr(1):line;if(operation===' '||operation==='-'){// Context sanity check\nif(!compareLine(toPos+1,lines[toPos],operation,content)){errorCount++;if(errorCount>fuzzFactor){return false;}}toPos++;}}return true;}// Search best fit offsets for each hunk based on the previous ones\nfor(var i=0;i<hunks.length;i++){var hunk=hunks[i],maxLine=lines.length-hunk.oldLines,localOffset=0,toPos=offset+hunk.oldStart-1;var iterator=distanceIterator(toPos,minLine,maxLine);for(;localOffset!==undefined;localOffset=iterator()){if(hunkFits(hunk,toPos+localOffset)){hunk.offset=offset+=localOffset;break;}}if(localOffset===undefined){return false;}// Set lower text limit to end of the current hunk, so next ones don't try\n// to fit over already patched text\nminLine=hunk.offset+hunk.oldStart+hunk.oldLines;}// Apply patch hunks\nvar diffOffset=0;for(var _i=0;_i<hunks.length;_i++){var _hunk=hunks[_i],_toPos=_hunk.oldStart+_hunk.offset+diffOffset-1;diffOffset+=_hunk.newLines-_hunk.oldLines;for(var j=0;j<_hunk.lines.length;j++){var line=_hunk.lines[j],operation=line.length>0?line[0]:' ',content=line.length>0?line.substr(1):line,delimiter=_hunk.linedelimiters[j];if(operation===' '){_toPos++;}else if(operation==='-'){lines.splice(_toPos,1);delimiters.splice(_toPos,1);/* istanbul ignore else */}else if(operation==='+'){lines.splice(_toPos,0,content);delimiters.splice(_toPos,0,delimiter);_toPos++;}else if(operation==='\\\\'){var previousOperation=_hunk.lines[j-1]?_hunk.lines[j-1][0]:null;if(previousOperation==='+'){removeEOFNL=true;}else if(previousOperation==='-'){addEOFNL=true;}}}}// Handle EOFNL insertion/removal\nif(removeEOFNL){while(!lines[lines.length-1]){lines.pop();delimiters.pop();}}else if(addEOFNL){lines.push('');delimiters.push('\\n');}for(var _k=0;_k<lines.length-1;_k++){lines[_k]=lines[_k]+delimiters[_k];}return lines.join('');}// Wrapper that supports multiple file patches via callbacks.\nfunction applyPatches(uniDiff,options){if(typeof uniDiff==='string'){uniDiff=parsePatch(uniDiff);}var currentIndex=0;function processIndex(){var index=uniDiff[currentIndex++];if(!index){return options.complete();}options.loadFile(index,function(err,data){if(err){return options.complete(err);}var updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,function(err){if(err){return options.complete(err);}processIndex();});});}processIndex();}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){if(!options){options={};}if(typeof options.context==='undefined'){options.context=4;}var diff=diffLines(oldStr,newStr,options);if(!diff){return;}diff.push({value:'',lines:[]});// Append an empty value to make cleanup easier\nfunction contextLines(lines){return lines.map(function(entry){return' '+entry;});}var hunks=[];var oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1;var _loop=function _loop(i){var current=diff[i],lines=current.lines||current.value.replace(/\\n$/,'').split('\\n');current.lines=lines;if(current.added||current.removed){var _curRange;// If we have previous context, start with that\nif(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine;newRangeStart=newLine;if(prev){curRange=options.context>0?contextLines(prev.lines.slice(-options.context)):[];oldRangeStart-=curRange.length;newRangeStart-=curRange.length;}}// Output our changes\n(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?'+':'-')+entry;})));// Track the updated file position\nif(current.added){newLine+=lines.length;}else{oldLine+=lines.length;}}else{// Identical context lines. Track line changes\nif(oldRangeStart){// Close out any changes that have been output (or join overlapping)\nif(lines.length<=options.context*2&&i<diff.length-2){var _curRange2;// Overlapping\n(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)));}else{var _curRange3;// end the range and output\nvar contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){// EOF is inside this hunk\nvar oldEOFNewline=/\\n$/.test(oldStr);var newEOFNewline=/\\n$/.test(newStr);var noNlBeforeAdds=lines.length==0&&curRange.length>hunk.oldLines;if(!oldEOFNewline&&noNlBeforeAdds&&oldStr.length>0){// special case: old has no eol and no trailing context; no-nl can end up before adds\n// however, if the old file is empty, do not output the no-nl line\ncurRange.splice(hunk.oldLines,0,'\\\\ No newline at end of file');}if(!oldEOFNewline&&!noNlBeforeAdds||!newEOFNewline){curRange.push('\\\\ No newline at end of file');}}hunks.push(hunk);oldRangeStart=0;newRangeStart=0;curRange=[];}}oldLine+=lines.length;newLine+=lines.length;}};for(var i=0;i<diff.length;i++){_loop(i);}return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks};}function formatPatch(diff){var ret=[];if(diff.oldFileName==diff.newFileName){ret.push('Index: '+diff.oldFileName);}ret.push('===================================================================');ret.push('--- '+diff.oldFileName+(typeof diff.oldHeader==='undefined'?'':'\\t'+diff.oldHeader));ret.push('+++ '+diff.newFileName+(typeof diff.newHeader==='undefined'?'':'\\t'+diff.newHeader));for(var i=0;i<diff.hunks.length;i++){var hunk=diff.hunks[i];// Unified Diff Format quirk: If the chunk size is 0,\n// the first number is one lower than one would expect.\n// https://www.artima.com/weblogs/viewpost.jsp?thread=164293\nif(hunk.oldLines===0){hunk.oldStart-=1;}if(hunk.newLines===0){hunk.newStart-=1;}ret.push('@@ -'+hunk.oldStart+','+hunk.oldLines+' +'+hunk.newStart+','+hunk.newLines+' @@');ret.push.apply(ret,hunk.lines);}return ret.join('\\n')+'\\n';}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){return formatPatch(structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options));}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options);}function arrayEqual(a,b){if(a.length!==b.length){return false;}return arrayStartsWith(a,b);}function arrayStartsWith(array,start){if(start.length>array.length){return false;}for(var i=0;i<start.length;i++){if(start[i]!==array[i]){return false;}}return true;}function calcLineCount(hunk){var _calcOldNewLineCount=calcOldNewLineCount(hunk.lines),oldLines=_calcOldNewLineCount.oldLines,newLines=_calcOldNewLineCount.newLines;if(oldLines!==undefined){hunk.oldLines=oldLines;}else{delete hunk.oldLines;}if(newLines!==undefined){hunk.newLines=newLines;}else{delete hunk.newLines;}}function merge(mine,theirs,base){mine=loadPatch(mine,base);theirs=loadPatch(theirs,base);var ret={};// For index we just let it pass through as it doesn't have any necessary meaning.\n// Leaving sanity checks on this to the API consumer that may know more about the\n// meaning in their own context.\nif(mine.index||theirs.index){ret.index=mine.index||theirs.index;}if(mine.newFileName||theirs.newFileName){if(!fileNameChanged(mine)){// No header or no change in ours, use theirs (and ours if theirs does not exist)\nret.oldFileName=theirs.oldFileName||mine.oldFileName;ret.newFileName=theirs.newFileName||mine.newFileName;ret.oldHeader=theirs.oldHeader||mine.oldHeader;ret.newHeader=theirs.newHeader||mine.newHeader;}else if(!fileNameChanged(theirs)){// No header or no change in theirs, use ours\nret.oldFileName=mine.oldFileName;ret.newFileName=mine.newFileName;ret.oldHeader=mine.oldHeader;ret.newHeader=mine.newHeader;}else{// Both changed... figure it out\nret.oldFileName=selectField(ret,mine.oldFileName,theirs.oldFileName);ret.newFileName=selectField(ret,mine.newFileName,theirs.newFileName);ret.oldHeader=selectField(ret,mine.oldHeader,theirs.oldHeader);ret.newHeader=selectField(ret,mine.newHeader,theirs.newHeader);}}ret.hunks=[];var mineIndex=0,theirsIndex=0,mineOffset=0,theirsOffset=0;while(mineIndex<mine.hunks.length||theirsIndex<theirs.hunks.length){var mineCurrent=mine.hunks[mineIndex]||{oldStart:Infinity},theirsCurrent=theirs.hunks[theirsIndex]||{oldStart:Infinity};if(hunkBefore(mineCurrent,theirsCurrent)){// This patch does not overlap with any of the others, yay.\nret.hunks.push(cloneHunk(mineCurrent,mineOffset));mineIndex++;theirsOffset+=mineCurrent.newLines-mineCurrent.oldLines;}else if(hunkBefore(theirsCurrent,mineCurrent)){// This patch does not overlap with any of the others, yay.\nret.hunks.push(cloneHunk(theirsCurrent,theirsOffset));theirsIndex++;mineOffset+=theirsCurrent.newLines-theirsCurrent.oldLines;}else{// Overlap, merge as best we can\nvar mergedHunk={oldStart:Math.min(mineCurrent.oldStart,theirsCurrent.oldStart),oldLines:0,newStart:Math.min(mineCurrent.newStart+mineOffset,theirsCurrent.oldStart+theirsOffset),newLines:0,lines:[]};mergeLines(mergedHunk,mineCurrent.oldStart,mineCurrent.lines,theirsCurrent.oldStart,theirsCurrent.lines);theirsIndex++;mineIndex++;ret.hunks.push(mergedHunk);}}return ret;}function loadPatch(param,base){if(typeof param==='string'){if(/^@@/m.test(param)||/^Index:/m.test(param)){return parsePatch(param)[0];}if(!base){throw new Error('Must provide a base reference or pass in a patch');}return structuredPatch(undefined,undefined,base,param);}return param;}function fileNameChanged(patch){return patch.newFileName&&patch.newFileName!==patch.oldFileName;}function selectField(index,mine,theirs){if(mine===theirs){return mine;}else{index.conflict=true;return{mine:mine,theirs:theirs};}}function hunkBefore(test,check){return test.oldStart<check.oldStart&&test.oldStart+test.oldLines<check.oldStart;}function cloneHunk(hunk,offset){return{oldStart:hunk.oldStart,oldLines:hunk.oldLines,newStart:hunk.newStart+offset,newLines:hunk.newLines,lines:hunk.lines};}function mergeLines(hunk,mineOffset,mineLines,theirOffset,theirLines){// This will generally result in a conflicted hunk, but there are cases where the context\n// is the only overlap where we can successfully merge the content here.\nvar mine={offset:mineOffset,lines:mineLines,index:0},their={offset:theirOffset,lines:theirLines,index:0};// Handle any leading content\ninsertLeading(hunk,mine,their);insertLeading(hunk,their,mine);// Now in the overlap content. Scan through and select the best changes from each.\nwhile(mine.index<mine.lines.length&&their.index<their.lines.length){var mineCurrent=mine.lines[mine.index],theirCurrent=their.lines[their.index];if((mineCurrent[0]==='-'||mineCurrent[0]==='+')&&(theirCurrent[0]==='-'||theirCurrent[0]==='+')){// Both modified ...\nmutualChange(hunk,mine,their);}else if(mineCurrent[0]==='+'&&theirCurrent[0]===' '){var _hunk$lines;// Mine inserted\n(_hunk$lines=hunk.lines).push.apply(_hunk$lines,_toConsumableArray(collectChange(mine)));}else if(theirCurrent[0]==='+'&&mineCurrent[0]===' '){var _hunk$lines2;// Theirs inserted\n(_hunk$lines2=hunk.lines).push.apply(_hunk$lines2,_toConsumableArray(collectChange(their)));}else if(mineCurrent[0]==='-'&&theirCurrent[0]===' '){// Mine removed or edited\nremoval(hunk,mine,their);}else if(theirCurrent[0]==='-'&&mineCurrent[0]===' '){// Their removed or edited\nremoval(hunk,their,mine,true);}else if(mineCurrent===theirCurrent){// Context identity\nhunk.lines.push(mineCurrent);mine.index++;their.index++;}else{// Context mismatch\nconflict(hunk,collectChange(mine),collectChange(their));}}// Now push anything that may be remaining\ninsertTrailing(hunk,mine);insertTrailing(hunk,their);calcLineCount(hunk);}function mutualChange(hunk,mine,their){var myChanges=collectChange(mine),theirChanges=collectChange(their);if(allRemoves(myChanges)&&allRemoves(theirChanges)){// Special case for remove changes that are supersets of one another\nif(arrayStartsWith(myChanges,theirChanges)&&skipRemoveSuperset(their,myChanges,myChanges.length-theirChanges.length)){var _hunk$lines3;(_hunk$lines3=hunk.lines).push.apply(_hunk$lines3,_toConsumableArray(myChanges));return;}else if(arrayStartsWith(theirChanges,myChanges)&&skipRemoveSuperset(mine,theirChanges,theirChanges.length-myChanges.length)){var _hunk$lines4;(_hunk$lines4=hunk.lines).push.apply(_hunk$lines4,_toConsumableArray(theirChanges));return;}}else if(arrayEqual(myChanges,theirChanges)){var _hunk$lines5;(_hunk$lines5=hunk.lines).push.apply(_hunk$lines5,_toConsumableArray(myChanges));return;}conflict(hunk,myChanges,theirChanges);}function removal(hunk,mine,their,swap){var myChanges=collectChange(mine),theirChanges=collectContext(their,myChanges);if(theirChanges.merged){var _hunk$lines6;(_hunk$lines6=hunk.lines).push.apply(_hunk$lines6,_toConsumableArray(theirChanges.merged));}else{conflict(hunk,swap?theirChanges:myChanges,swap?myChanges:theirChanges);}}function conflict(hunk,mine,their){hunk.conflict=true;hunk.lines.push({conflict:true,mine:mine,theirs:their});}function insertLeading(hunk,insert,their){while(insert.offset<their.offset&&insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);insert.offset++;}}function insertTrailing(hunk,insert){while(insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);}}function collectChange(state){var ret=[],operation=state.lines[state.index][0];while(state.index<state.lines.length){var line=state.lines[state.index];// Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\nif(operation==='-'&&line[0]==='+'){operation='+';}if(operation===line[0]){ret.push(line);state.index++;}else{break;}}return ret;}function collectContext(state,matchChanges){var changes=[],merged=[],matchIndex=0,contextChanges=false,conflicted=false;while(matchIndex<matchChanges.length&&state.index<state.lines.length){var change=state.lines[state.index],match=matchChanges[matchIndex];// Once we've hit our add, then we are done\nif(match[0]==='+'){break;}contextChanges=contextChanges||change[0]!==' ';merged.push(match);matchIndex++;// Consume any additions in the other block as a conflict to attempt\n// to pull in the remaining context after this\nif(change[0]==='+'){conflicted=true;while(change[0]==='+'){changes.push(change);change=state.lines[++state.index];}}if(match.substr(1)===change.substr(1)){changes.push(change);state.index++;}else{conflicted=true;}}if((matchChanges[matchIndex]||'')[0]==='+'&&contextChanges){conflicted=true;}if(conflicted){return changes;}while(matchIndex<matchChanges.length){merged.push(matchChanges[matchIndex++]);}return{merged:merged,changes:changes};}function allRemoves(changes){return changes.reduce(function(prev,change){return prev&&change[0]==='-';},true);}function skipRemoveSuperset(state,removeChanges,delta){for(var i=0;i<delta;i++){var changeContent=removeChanges[removeChanges.length-delta+i].substr(1);if(state.lines[state.index+i]!==' '+changeContent){return false;}}state.index+=delta;return true;}function calcOldNewLineCount(lines){var oldLines=0;var newLines=0;lines.forEach(function(line){if(typeof line!=='string'){var myCount=calcOldNewLineCount(line.mine);var theirCount=calcOldNewLineCount(line.theirs);if(oldLines!==undefined){if(myCount.oldLines===theirCount.oldLines){oldLines+=myCount.oldLines;}else{oldLines=undefined;}}if(newLines!==undefined){if(myCount.newLines===theirCount.newLines){newLines+=myCount.newLines;}else{newLines=undefined;}}}else{if(newLines!==undefined&&(line[0]==='+'||line[0]===' ')){newLines++;}if(oldLines!==undefined&&(line[0]==='-'||line[0]===' ')){oldLines++;}}});return{oldLines:oldLines,newLines:newLines};}// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes){var ret=[],change,operation;for(var i=0;i<changes.length;i++){change=changes[i];if(change.added){operation=1;}else if(change.removed){operation=-1;}else{operation=0;}ret.push([operation,change.value]);}return ret;}function convertChangesToXML(changes){var ret=[];for(var i=0;i<changes.length;i++){var change=changes[i];if(change.added){ret.push('<ins>');}else if(change.removed){ret.push('<del>');}ret.push(escapeHTML(change.value));if(change.added){ret.push('</ins>');}else if(change.removed){ret.push('</del>');}}return ret.join('');}function escapeHTML(s){var n=s;n=n.replace(/&/g,'&amp;');n=n.replace(/</g,'&lt;');n=n.replace(/>/g,'&gt;');n=n.replace(/\"/g,'&quot;');return n;}exports.Diff=Diff;exports.applyPatch=applyPatch;exports.applyPatches=applyPatches;exports.canonicalize=canonicalize;exports.convertChangesToDMP=convertChangesToDMP;exports.convertChangesToXML=convertChangesToXML;exports.createPatch=createPatch;exports.createTwoFilesPatch=createTwoFilesPatch;exports.diffArrays=diffArrays;exports.diffChars=diffChars;exports.diffCss=diffCss;exports.diffJson=diffJson;exports.diffLines=diffLines;exports.diffSentences=diffSentences;exports.diffTrimmedLines=diffTrimmedLines;exports.diffWords=diffWords;exports.diffWordsWithSpace=diffWordsWithSpace;exports.merge=merge;exports.parsePatch=parsePatch;exports.structuredPatch=structuredPatch;Object.defineProperty(exports,'__esModule',{value:true});});},{}],120:[function(require,module,exports){module.exports=extend;/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/function extend(/* [deep], obj1, obj2, [objn] */){var args=[].slice.call(arguments);var deep=false;if(typeof args[0]=='boolean'){deep=args.shift();}var result=args[0];if(isUnextendable(result)){throw new Error('extendee must be an object');}var extenders=args.slice(1);var len=extenders.length;for(var i=0;i<len;i++){var extender=extenders[i];for(var key in extender){if(Object.prototype.hasOwnProperty.call(extender,key)){var value=extender[key];if(deep&&isCloneable(value)){var base=Array.isArray(value)?[]:{};result[key]=extend(true,Object.prototype.hasOwnProperty.call(result,key)&&!isUnextendable(result[key])?result[key]:base,value);}else{result[key]=value;}}}}return result;}function isCloneable(obj){return Array.isArray(obj)||{}.toString.call(obj)=='[object Object]';}function isUnextendable(val){return!val||typeof val!='object'&&typeof val!='function';}},{}],121:[function(require,module,exports){/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ /** Used as the `TypeError` message for \"Functions\" methods. */var FUNC_ERROR_TEXT='Expected a function';/** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__';/** Used as references for various `Number` constants. */var INFINITY=1/0;/** `Object#toString` result references. */var funcTag='[object Function]',genTag='[object GeneratorFunction]',symbolTag='[object Symbol]';/** Used to match property names within property paths. */var reIsDeepProp=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,reIsPlainProp=/^\\w*$/,reLeadingDot=/^\\./,rePropName=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */var reRegExpChar=/[\\\\^$.*+?()[\\]{}|]/g;/** Used to match backslashes in property paths. */var reEscapeChar=/\\\\(\\\\)?/g;/** Used to detect host constructors (Safari). */var reIsHostCtor=/^\\[object .+?Constructor\\]$/;/** Detect free variable `global` from Node.js. */var freeGlobal=typeof global=='object'&&global&&global.Object===Object&&global;/** Detect free variable `self`. */var freeSelf=typeof self=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */function getValue(object,key){return object==null?undefined:object[key];}/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */function isHostObject(value){// Many host objects are `Object` objects that can coerce to strings\n// despite having improperly defined `toString` methods.\nvar result=false;if(value!=null&&typeof value.toString!='function'){try{result=!!(value+'');}catch(e){}}return result;}/** Used for built-in method references. */var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;/** Used to detect overreaching core-js shims. */var coreJsData=root['__core-js_shared__'];/** Used to detect methods masquerading as native. */var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();/** Used to resolve the decompiled source of functions. */var funcToString=funcProto.toString;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */var objectToString=objectProto.toString;/** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,'$1.*?')+'$');/** Built-in value references. */var Symbol=root.Symbol,splice=arrayProto.splice;/* Built-in method references that are verified to be native. */var Map=getNative(root,'Map'),nativeCreate=getNative(Object,'create');/** Used to convert symbols to primitives and strings. */var symbolProto=Symbol?Symbol.prototype:undefined,symbolToString=symbolProto?symbolProto.toString:undefined;/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */function Hash(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};}/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */function hashDelete(key){return this.has(key)&&delete this.__data__[key];}/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result;}return hasOwnProperty.call(data,key)?data[key]:undefined;}/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);}/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */function hashSet(key,value){var data=this.__data__;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this;}// Add methods to `Hash`.\nHash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */function ListCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */function listCacheClear(){this.__data__=[];}/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else{splice.call(data,index,1);}return true;}/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1];}/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){data.push([key,value]);}else{data[index][1]=value;}return this;}// Add methods to `ListCache`.\nListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */function MapCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */function mapCacheClear(){this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */function mapCacheDelete(key){return getMapData(this,key)['delete'](key);}/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */function mapCacheGet(key){return getMapData(this,key).get(key);}/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */function mapCacheHas(key){return getMapData(this,key).has(key);}/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */function mapCacheSet(key,value){getMapData(this,key).set(key,value);return this;}// Add methods to `MapCache`.\nMapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return-1;}/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */function baseGet(object,path){path=isKey(path,object)?[path]:castPath(path);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined;}/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)||isHostObject(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */function baseToString(value){// Exit early for strings to avoid a performance hit in some environments.\nif(typeof value=='string'){return value;}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */function castPath(value){return isArray(value)?value:stringToPath(value);}/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined;}/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value;if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */function isKeyable(value){var type=typeof value;return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */function isMasked(func){return!!maskSrcKey&&maskSrcKey in func;}/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */var stringToPath=memoize(function(string){string=toString(string);var result=[];if(reLeadingDot.test(string)){result.push('');}string.replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,'$1'):number||match);});return result;});/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return'';}/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */function memoize(func,resolver){if(typeof func!='function'||resolver&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result);return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}// Assign cache to `_.memoize`.\nmemoize.Cache=MapCache;/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */function eq(value,other){return value===other||value!==value&&other!==other;}/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */var isArray=Array.isArray;/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */function isFunction(value){// The use of `Object#toString` avoids issues with the `typeof` operator\n// in Safari 8-9 which returns 'object' for typed array and other constructors.\nvar tag=isObject(value)?objectToString.call(value):'';return tag==funcTag||tag==genTag;}/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */function isObject(value){var type=typeof value;return!!value&&(type=='object'||type=='function');}/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */function isObjectLike(value){return!!value&&typeof value=='object';}/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */function isSymbol(value){return typeof value=='symbol'||isObjectLike(value)&&objectToString.call(value)==symbolTag;}/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */function toString(value){return value==null?'':baseToString(value);}/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result;}module.exports=get;},{}],122:[function(require,module,exports){\"use strict\";// cache a reference to setTimeout, so that our reference won't be stubbed out\n// when using fake timers and errors will still get logged\n// https://github.com/cjohansen/Sinon.JS/issues/381\nvar realSetTimeout=setTimeout;function configureLogger(config){// eslint-disable-next-line no-param-reassign\nconfig=config||{};// Function which prints errors.\nif(!config.hasOwnProperty(\"logger\")){// eslint-disable-next-line no-empty-function\nconfig.logger=function(){};}// When set to true, any errors logged will be thrown immediately;\n// If set to false, the errors will be thrown in separate execution frame.\nif(!config.hasOwnProperty(\"useImmediateExceptions\")){config.useImmediateExceptions=true;}// wrap realSetTimeout with something we can stub in tests\nif(!config.hasOwnProperty(\"setTimeout\")){config.setTimeout=realSetTimeout;}return function logError(label,e){var msg=`${label} threw exception: `;var err={name:e.name||label,message:e.message||e.toString(),stack:e.stack};function throwLoggedError(){err.message=msg+err.message;throw err;}config.logger(`${msg}[${err.name}] ${err.message}`);if(err.stack){config.logger(err.stack);}if(config.useImmediateExceptions){throwLoggedError();}else{config.setTimeout(throwLoggedError,0);}};}module.exports=configureLogger;},{}],123:[function(require,module,exports){\"use strict\";var Event=require(\"./event\");function CustomEvent(type,customData,target){this.initEvent(type,false,false,target);this.detail=customData.detail||null;}CustomEvent.prototype=new Event();CustomEvent.prototype.constructor=CustomEvent;module.exports=CustomEvent;},{\"./event\":125}],124:[function(require,module,exports){\"use strict\";function flattenOptions(options){if(options!==Object(options)){return{capture:Boolean(options),once:false,passive:false};}return{capture:Boolean(options.capture),once:Boolean(options.once),passive:Boolean(options.passive)};}function not(fn){return function(){return!fn.apply(this,arguments);};}function hasListenerFilter(listener,capture){return function(listenerSpec){return listenerSpec.capture===capture&&listenerSpec.listener===listener;};}var EventTarget={// https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener\naddEventListener:function addEventListener(event,listener,providedOptions){// 3. Let capture, passive, and once be the result of flattening more options.\n// Flatten property before executing step 2,\n// feture detection is usually based on registering handler with options object,\n// that has getter defined\n// addEventListener(\"load\", () => {}, {\n//    get once() { supportsOnce = true; }\n// });\nvar options=flattenOptions(providedOptions);// 2. If callback is null, then return.\nif(listener===null||listener===undefined){return;}this.eventListeners=this.eventListeners||{};this.eventListeners[event]=this.eventListeners[event]||[];// 4. If context object’s associated list of event listener\n//    does not contain an event listener whose type is type,\n//    callback is callback, and capture is capture, then append\n//    a new event listener to it, whose type is type, callback is\n//    callback, capture is capture, passive is passive, and once is once.\nif(!this.eventListeners[event].some(hasListenerFilter(listener,options.capture))){this.eventListeners[event].push({listener:listener,capture:options.capture,once:options.once});}},// https://dom.spec.whatwg.org/#dom-eventtarget-removeeventlistener\nremoveEventListener:function removeEventListener(event,listener,providedOptions){if(!this.eventListeners||!this.eventListeners[event]){return;}// 2. Let capture be the result of flattening options.\nvar options=flattenOptions(providedOptions);// 3. If there is an event listener in the associated list of\n//    event listeners whose type is type, callback is callback,\n//    and capture is capture, then set that event listener’s\n//    removed to true and remove it from the associated list of event listeners.\nthis.eventListeners[event]=this.eventListeners[event].filter(not(hasListenerFilter(listener,options.capture)));},dispatchEvent:function dispatchEvent(event){if(!this.eventListeners||!this.eventListeners[event.type]){return Boolean(event.defaultPrevented);}var self=this;var type=event.type;var listeners=self.eventListeners[type];// Remove listeners, that should be dispatched once\n// before running dispatch loop to avoid nested dispatch issues\nself.eventListeners[type]=listeners.filter(function(listenerSpec){return!listenerSpec.once;});listeners.forEach(function(listenerSpec){var listener=listenerSpec.listener;if(typeof listener===\"function\"){listener.call(self,event);}else{listener.handleEvent(event);}});return Boolean(event.defaultPrevented);}};module.exports=EventTarget;},{}],125:[function(require,module,exports){\"use strict\";function Event(type,bubbles,cancelable,target){this.initEvent(type,bubbles,cancelable,target);}Event.prototype={initEvent:function(type,bubbles,cancelable,target){this.type=type;this.bubbles=bubbles;this.cancelable=cancelable;this.target=target;this.currentTarget=target;},// eslint-disable-next-line no-empty-function\nstopPropagation:function(){},preventDefault:function(){this.defaultPrevented=true;}};module.exports=Event;},{}],126:[function(require,module,exports){\"use strict\";module.exports={Event:require(\"./event\"),ProgressEvent:require(\"./progress-event\"),CustomEvent:require(\"./custom-event\"),EventTarget:require(\"./event-target\")};},{\"./custom-event\":123,\"./event\":125,\"./event-target\":124,\"./progress-event\":127}],127:[function(require,module,exports){\"use strict\";var Event=require(\"./event\");function ProgressEvent(type,progressEventRaw,target){this.initEvent(type,false,false,target);this.loaded=typeof progressEventRaw.loaded===\"number\"?progressEventRaw.loaded:null;this.total=typeof progressEventRaw.total===\"number\"?progressEventRaw.total:null;this.lengthComputable=Boolean(progressEventRaw.total);}ProgressEvent.prototype=new Event();ProgressEvent.prototype.constructor=ProgressEvent;module.exports=ProgressEvent;},{\"./event\":125}],128:[function(require,module,exports){\"use strict\";var FakeTimers=require(\"@sinonjs/fake-timers\");var fakeServer=require(\"./index\");// eslint-disable-next-line no-empty-function\nfunction Server(){}Server.prototype=fakeServer;var fakeServerWithClock=new Server();fakeServerWithClock.addRequest=function addRequest(xhr){if(xhr.async){if(typeof setTimeout.clock===\"object\"){this.clock=setTimeout.clock;}else{this.clock=FakeTimers.install();this.resetClock=true;}if(!this.longestTimeout){var clockSetTimeout=this.clock.setTimeout;var clockSetInterval=this.clock.setInterval;var server=this;this.clock.setTimeout=function(fn,timeout){server.longestTimeout=Math.max(timeout,server.longestTimeout||0);return clockSetTimeout.apply(this,arguments);};this.clock.setInterval=function(fn,timeout){server.longestTimeout=Math.max(timeout,server.longestTimeout||0);return clockSetInterval.apply(this,arguments);};}}return fakeServer.addRequest.call(this,xhr);};fakeServerWithClock.respond=function respond(){var returnVal=fakeServer.respond.apply(this,arguments);if(this.clock){this.clock.tick(this.longestTimeout||0);this.longestTimeout=0;if(this.resetClock){this.clock.uninstall();this.resetClock=false;}}return returnVal;};fakeServerWithClock.restore=function restore(){if(this.clock){this.clock.uninstall();}return fakeServer.restore.apply(this,arguments);};module.exports=fakeServerWithClock;},{\"./index\":129,\"@sinonjs/fake-timers\":172}],129:[function(require,module,exports){\"use strict\";var fakeXhr=require(\"../fake-xhr\");var push=[].push;var log=require(\"./log\");var configureLogError=require(\"../configure-logger\");var pathToRegexp=require(\"path-to-regexp\");var supportsArrayBuffer=typeof ArrayBuffer!==\"undefined\";function responseArray(handler){var response=handler;if(Object.prototype.toString.call(handler)!==\"[object Array]\"){response=[200,{},handler];}if(typeof response[2]!==\"string\"){if(!supportsArrayBuffer){throw new TypeError(`Fake server response body should be a string, but was ${typeof response[2]}`);}else if(!(response[2]instanceof ArrayBuffer)){throw new TypeError(`Fake server response body should be a string or ArrayBuffer, but was ${typeof response[2]}`);}}return response;}function getDefaultWindowLocation(){var winloc={hostname:\"localhost\",port:process.env.PORT||80,protocol:\"http:\"};winloc.host=winloc.hostname+(String(winloc.port)===\"80\"?\"\":`:${winloc.port}`);return winloc;}function getWindowLocation(){if(typeof window===\"undefined\"){// Fallback\nreturn getDefaultWindowLocation();}if(typeof window.location!==\"undefined\"){// Browsers place location on window\nreturn window.location;}if(typeof window.window!==\"undefined\"&&typeof window.window.location!==\"undefined\"){// React Native on Android places location on window.window\nreturn window.window.location;}return getDefaultWindowLocation();}function matchOne(response,reqMethod,reqUrl){var rmeth=response.method;var matchMethod=!rmeth||rmeth.toLowerCase()===reqMethod.toLowerCase();var url=response.url;var matchUrl=!url||url===reqUrl||typeof url.test===\"function\"&&url.test(reqUrl)||typeof url===\"function\"&&url(reqUrl)===true;return matchMethod&&matchUrl;}function match(response,request){var wloc=getWindowLocation();var rCurrLoc=new RegExp(`^${wloc.protocol}//${wloc.host}/`);var requestUrl=request.url;if(!/^https?:\\/\\//.test(requestUrl)||rCurrLoc.test(requestUrl)){requestUrl=requestUrl.replace(rCurrLoc,\"/\");}if(matchOne(response,this.getHTTPMethod(request),requestUrl)){if(typeof response.response===\"function\"){var ru=response.url;var args=[request].concat(ru&&typeof ru.exec===\"function\"?ru.exec(requestUrl).slice(1):[]);return response.response.apply(response,args);}return true;}return false;}function incrementRequestCount(){var count=++this.requestCount;this.requested=true;this.requestedOnce=count===1;this.requestedTwice=count===2;this.requestedThrice=count===3;this.firstRequest=this.getRequest(0);this.secondRequest=this.getRequest(1);this.thirdRequest=this.getRequest(2);this.lastRequest=this.getRequest(count-1);}var fakeServer={create:function(config){var server=Object.create(this);server.configure(config);this.xhr=fakeXhr.useFakeXMLHttpRequest();server.requests=[];server.requestCount=0;server.queue=[];server.responses=[];this.xhr.onCreate=function(xhrObj){xhrObj.unsafeHeadersEnabled=function(){return!(server.unsafeHeadersEnabled===false);};server.addRequest(xhrObj);};return server;},configure:function(config){var self=this;var allowlist={autoRespond:true,autoRespondAfter:true,respondImmediately:true,fakeHTTPMethods:true,logger:true,unsafeHeadersEnabled:true};// eslint-disable-next-line no-param-reassign\nconfig=config||{};Object.keys(config).forEach(function(setting){if(setting in allowlist){self[setting]=config[setting];}});self.logError=configureLogError(config);},addRequest:function addRequest(xhrObj){var server=this;push.call(this.requests,xhrObj);incrementRequestCount.call(this);xhrObj.onSend=function(){server.handleRequest(this);if(server.respondImmediately){server.respond();}else if(server.autoRespond&&!server.responding){setTimeout(function(){server.responding=false;server.respond();},server.autoRespondAfter||10);server.responding=true;}};},getHTTPMethod:function getHTTPMethod(request){if(this.fakeHTTPMethods&&/post/i.test(request.method)){var matches=(request.requestBody||\"\").match(/_method=([^\\b;]+)/);return matches?matches[1]:request.method;}return request.method;},handleRequest:function handleRequest(xhr){if(xhr.async){push.call(this.queue,xhr);}else{this.processRequest(xhr);}},logger:function(){// no-op; override via configure()\n},logError:configureLogError({}),log:log,respondWith:function respondWith(method,url,body){if(arguments.length===1&&typeof method!==\"function\"){this.response=responseArray(method);return;}if(arguments.length===1){// eslint-disable-next-line no-param-reassign\nbody=method;// eslint-disable-next-line no-param-reassign\nurl=method=null;}if(arguments.length===2){// eslint-disable-next-line no-param-reassign\nbody=url;// eslint-disable-next-line no-param-reassign\nurl=method;// eslint-disable-next-line no-param-reassign\nmethod=null;}// Escape port number to prevent \"named\" parameters in 'path-to-regexp' module\nif(typeof url===\"string\"&&url!==\"\"&&/:[0-9]+\\//.test(url)){var m=url.match(/^(https?:\\/\\/.*?):([0-9]+\\/.*)$/);// eslint-disable-next-line no-param-reassign\nurl=`${m[1]}\\\\:${m[2]}`;}push.call(this.responses,{method:method,url:typeof url===\"string\"&&url!==\"\"?pathToRegexp(url):url,response:typeof body===\"function\"?body:responseArray(body)});},respond:function respond(){if(arguments.length>0){this.respondWith.apply(this,arguments);}var queue=this.queue||[];var requests=queue.splice(0,queue.length);var self=this;requests.forEach(function(request){self.processRequest(request);});},respondAll:function respondAll(){if(this.respondImmediately){return;}this.queue=this.requests.slice(0);var request;while(request=this.queue.shift()){this.processRequest(request);}},processRequest:function processRequest(request){try{if(request.aborted){return;}var response=this.response||[404,{},\"\"];if(this.responses){for(var l=this.responses.length,i=l-1;i>=0;i--){if(match.call(this,this.responses[i],request)){response=this.responses[i].response;break;}}}if(request.readyState!==4){this.log(response,request);request.respond(response[0],response[1],response[2]);}}catch(e){this.logError(\"Fake server request processing\",e);}},restore:function restore(){return this.xhr.restore&&this.xhr.restore.apply(this.xhr,arguments);},getRequest:function getRequest(index){return this.requests[index]||null;},reset:function reset(){this.resetBehavior();this.resetHistory();},resetBehavior:function resetBehavior(){this.responses.length=this.queue.length=0;},resetHistory:function resetHistory(){this.requests.length=this.requestCount=0;this.requestedOnce=this.requestedTwice=this.requestedThrice=this.requested=false;this.firstRequest=this.secondRequest=this.thirdRequest=this.lastRequest=null;}};module.exports=fakeServer;},{\"../configure-logger\":122,\"../fake-xhr\":132,\"./log\":130,\"path-to-regexp\":174}],130:[function(require,module,exports){\"use strict\";var inspect=require(\"util\").inspect;function log(response,request){var str;str=`Request:\\n${inspect(request)}\\n\\n`;str+=`Response:\\n${inspect(response)}\\n\\n`;/* istanbul ignore else: when this.logger is not a function, it can't be called */if(typeof this.logger===\"function\"){this.logger(str);}}module.exports=log;},{\"util\":118}],131:[function(require,module,exports){\"use strict\";exports.isSupported=function(){try{return Boolean(new Blob());}catch(e){return false;}}();},{}],132:[function(require,module,exports){\"use strict\";var GlobalTextEncoder=typeof TextEncoder!==\"undefined\"?TextEncoder:require(\"@sinonjs/text-encoding\").TextEncoder;var globalObject=require(\"@sinonjs/commons\").global;var configureLogError=require(\"../configure-logger\");var sinonEvent=require(\"../event\");var extend=require(\"just-extend\");var supportsProgress=typeof ProgressEvent!==\"undefined\";var supportsCustomEvent=typeof CustomEvent!==\"undefined\";var supportsFormData=typeof FormData!==\"undefined\";var supportsArrayBuffer=typeof ArrayBuffer!==\"undefined\";var supportsBlob=require(\"./blob\").isSupported;function getWorkingXHR(globalScope){var supportsXHR=typeof globalScope.XMLHttpRequest!==\"undefined\";if(supportsXHR){return globalScope.XMLHttpRequest;}var supportsActiveX=typeof globalScope.ActiveXObject!==\"undefined\";if(supportsActiveX){return function(){return new globalScope.ActiveXObject(\"MSXML2.XMLHTTP.3.0\");};}return false;}// Ref: https://fetch.spec.whatwg.org/#forbidden-header-name\nvar unsafeHeaders={\"Accept-Charset\":true,\"Access-Control-Request-Headers\":true,\"Access-Control-Request-Method\":true,\"Accept-Encoding\":true,Connection:true,\"Content-Length\":true,Cookie:true,Cookie2:true,\"Content-Transfer-Encoding\":true,Date:true,DNT:true,Expect:true,Host:true,\"Keep-Alive\":true,Origin:true,Referer:true,TE:true,Trailer:true,\"Transfer-Encoding\":true,Upgrade:true,\"User-Agent\":true,Via:true};function EventTargetHandler(){var self=this;var events=[\"loadstart\",\"progress\",\"abort\",\"error\",\"load\",\"timeout\",\"loadend\"];function addEventListener(eventName){self.addEventListener(eventName,function(event){var listener=self[`on${eventName}`];if(listener&&typeof listener===\"function\"){listener.call(this,event);}});}events.forEach(addEventListener);}EventTargetHandler.prototype=sinonEvent.EventTarget;function normalizeHeaderValue(value){// Ref: https://fetch.spec.whatwg.org/#http-whitespace-bytes\n/*eslint no-control-regex: \"off\"*/return value.replace(/^[\\x09\\x0A\\x0D\\x20]+|[\\x09\\x0A\\x0D\\x20]+$/g,\"\");}function getHeader(headers,header){var foundHeader=Object.keys(headers).filter(function(h){return h.toLowerCase()===header.toLowerCase();});return foundHeader[0]||null;}function excludeSetCookie2Header(header){return!/^Set-Cookie2?$/i.test(header);}function verifyResponseBodyType(body,responseType){var error=null;var isString=typeof body===\"string\";if(responseType===\"arraybuffer\"){if(!isString&&!(body instanceof ArrayBuffer)){error=new Error(`Attempted to respond to fake XMLHttpRequest with ${body}, which is not a string or ArrayBuffer.`);error.name=\"InvalidBodyException\";}}else if(responseType===\"blob\"){if(!isString&&!(body instanceof ArrayBuffer)&&supportsBlob&&!(body instanceof Blob)){error=new Error(`Attempted to respond to fake XMLHttpRequest with ${body}, which is not a string, ArrayBuffer, or Blob.`);error.name=\"InvalidBodyException\";}}else if(!isString){error=new Error(`Attempted to respond to fake XMLHttpRequest with ${body}, which is not a string.`);error.name=\"InvalidBodyException\";}if(error){throw error;}}function convertToArrayBuffer(body,encoding){if(body instanceof ArrayBuffer){return body;}return new GlobalTextEncoder(encoding||\"utf-8\").encode(body).buffer;}function isXmlContentType(contentType){return!contentType||/(text\\/xml)|(application\\/xml)|(\\+xml)/.test(contentType);}function clearResponse(xhr){if(xhr.responseType===\"\"||xhr.responseType===\"text\"){xhr.response=xhr.responseText=\"\";}else{xhr.response=xhr.responseText=null;}xhr.responseXML=null;}function fakeXMLHttpRequestFor(globalScope){var isReactNative=globalScope.navigator&&globalScope.navigator.product===\"ReactNative\";var sinonXhr={XMLHttpRequest:globalScope.XMLHttpRequest};sinonXhr.GlobalXMLHttpRequest=globalScope.XMLHttpRequest;sinonXhr.GlobalActiveXObject=globalScope.ActiveXObject;sinonXhr.supportsActiveX=typeof sinonXhr.GlobalActiveXObject!==\"undefined\";sinonXhr.supportsXHR=typeof sinonXhr.GlobalXMLHttpRequest!==\"undefined\";sinonXhr.workingXHR=getWorkingXHR(globalScope);sinonXhr.supportsTimeout=sinonXhr.supportsXHR&&\"timeout\"in new sinonXhr.GlobalXMLHttpRequest();sinonXhr.supportsCORS=isReactNative||sinonXhr.supportsXHR&&\"withCredentials\"in new sinonXhr.GlobalXMLHttpRequest();// Note that for FakeXMLHttpRequest to work pre ES5\n// we lose some of the alignment with the spec.\n// To ensure as close a match as possible,\n// set responseType before calling open, send or respond;\nfunction FakeXMLHttpRequest(config){EventTargetHandler.call(this);this.readyState=FakeXMLHttpRequest.UNSENT;this.requestHeaders={};this.requestBody=null;this.status=0;this.statusText=\"\";this.upload=new EventTargetHandler();this.responseType=\"\";this.response=\"\";this.logError=configureLogError(config);if(sinonXhr.supportsTimeout){this.timeout=0;}if(sinonXhr.supportsCORS){this.withCredentials=false;}if(typeof FakeXMLHttpRequest.onCreate===\"function\"){FakeXMLHttpRequest.onCreate(this);}}function verifyState(xhr){if(xhr.readyState!==FakeXMLHttpRequest.OPENED){throw new Error(\"INVALID_STATE_ERR\");}if(xhr.sendFlag){throw new Error(\"INVALID_STATE_ERR\");}}// largest arity in XHR is 5 - XHR#open\nvar apply=function(obj,method,args){switch(args.length){case 0:return obj[method]();case 1:return obj[method](args[0]);case 2:return obj[method](args[0],args[1]);case 3:return obj[method](args[0],args[1],args[2]);case 4:return obj[method](args[0],args[1],args[2],args[3]);case 5:return obj[method](args[0],args[1],args[2],args[3],args[4]);default:throw new Error(\"Unhandled case\");}};FakeXMLHttpRequest.filters=[];FakeXMLHttpRequest.addFilter=function addFilter(fn){this.filters.push(fn);};FakeXMLHttpRequest.defake=function defake(fakeXhr,xhrArgs){var xhr=new sinonXhr.workingXHR();// eslint-disable-line new-cap\n[\"open\",\"setRequestHeader\",\"abort\",\"getResponseHeader\",\"getAllResponseHeaders\",\"addEventListener\",\"overrideMimeType\",\"removeEventListener\"].forEach(function(method){fakeXhr[method]=function(){return apply(xhr,method,arguments);};});fakeXhr.send=function(){// Ref: https://xhr.spec.whatwg.org/#the-responsetype-attribute\nif(xhr.responseType!==fakeXhr.responseType){xhr.responseType=fakeXhr.responseType;}return apply(xhr,\"send\",arguments);};var copyAttrs=function(args){args.forEach(function(attr){fakeXhr[attr]=xhr[attr];});};var stateChangeStart=function(){fakeXhr.readyState=xhr.readyState;if(xhr.readyState>=FakeXMLHttpRequest.HEADERS_RECEIVED){copyAttrs([\"status\",\"statusText\"]);}if(xhr.readyState>=FakeXMLHttpRequest.LOADING){copyAttrs([\"response\"]);if(xhr.responseType===\"\"||xhr.responseType===\"text\"){copyAttrs([\"responseText\"]);}}if(xhr.readyState===FakeXMLHttpRequest.DONE&&(xhr.responseType===\"\"||xhr.responseType===\"document\")){copyAttrs([\"responseXML\"]);}};var stateChangeEnd=function(){if(fakeXhr.onreadystatechange){// eslint-disable-next-line no-useless-call\nfakeXhr.onreadystatechange.call(fakeXhr,{target:fakeXhr,currentTarget:fakeXhr});}};var stateChange=function stateChange(){stateChangeStart();stateChangeEnd();};if(xhr.addEventListener){xhr.addEventListener(\"readystatechange\",stateChangeStart);Object.keys(fakeXhr.eventListeners).forEach(function(event){/*eslint-disable no-loop-func*/fakeXhr.eventListeners[event].forEach(function(handler){xhr.addEventListener(event,handler.listener,{capture:handler.capture,once:handler.once});});/*eslint-enable no-loop-func*/});xhr.addEventListener(\"readystatechange\",stateChangeEnd);}else{xhr.onreadystatechange=stateChange;}apply(xhr,\"open\",xhrArgs);};FakeXMLHttpRequest.useFilters=false;function verifyRequestOpened(xhr){if(xhr.readyState!==FakeXMLHttpRequest.OPENED){const errorMessage=xhr.readyState===FakeXMLHttpRequest.UNSENT?\"INVALID_STATE_ERR - you might be trying to set the request state for a request that has already been aborted, it is recommended to check 'readyState' first...\":`INVALID_STATE_ERR - ${xhr.readyState}`;throw new Error(errorMessage);}}function verifyRequestSent(xhr){if(xhr.readyState===FakeXMLHttpRequest.DONE){throw new Error(\"Request done\");}}function verifyHeadersReceived(xhr){if(xhr.async&&xhr.readyState!==FakeXMLHttpRequest.HEADERS_RECEIVED){throw new Error(\"No headers received\");}}function convertResponseBody(responseType,contentType,body){if(responseType===\"\"||responseType===\"text\"){return body;}else if(supportsArrayBuffer&&responseType===\"arraybuffer\"){return convertToArrayBuffer(body);}else if(responseType===\"json\"){try{return JSON.parse(body);}catch(e){// Return parsing failure as null\nreturn null;}}else if(supportsBlob&&responseType===\"blob\"){if(body instanceof Blob){return body;}var blobOptions={};if(contentType){blobOptions.type=contentType;}return new Blob([convertToArrayBuffer(body)],blobOptions);}else if(responseType===\"document\"){if(isXmlContentType(contentType)){return FakeXMLHttpRequest.parseXML(body);}return null;}throw new Error(`Invalid responseType ${responseType}`);}/**\n     * Steps to follow when there is an error, according to:\n     * https://xhr.spec.whatwg.org/#request-error-steps\n     */function requestErrorSteps(xhr){clearResponse(xhr);xhr.errorFlag=true;xhr.requestHeaders={};xhr.responseHeaders={};if(xhr.readyState!==FakeXMLHttpRequest.UNSENT&&xhr.sendFlag&&xhr.readyState!==FakeXMLHttpRequest.DONE){xhr.readyStateChange(FakeXMLHttpRequest.DONE);xhr.sendFlag=false;}}FakeXMLHttpRequest.parseXML=function parseXML(text){// Treat empty string as parsing failure\nif(text!==\"\"){try{if(typeof DOMParser!==\"undefined\"){var parser=new DOMParser();var parsererrorNS=\"\";try{var parsererrors=parser.parseFromString(\"INVALID\",\"text/xml\").getElementsByTagName(\"parsererror\");if(parsererrors.length){parsererrorNS=parsererrors[0].namespaceURI;}}catch(e){// passing invalid XML makes IE11 throw\n// so no namespace needs to be determined\n}var result;try{result=parser.parseFromString(text,\"text/xml\");}catch(err){return null;}return result.getElementsByTagNameNS(parsererrorNS,\"parsererror\").length?null:result;}var xmlDoc=new window.ActiveXObject(\"Microsoft.XMLDOM\");xmlDoc.async=\"false\";xmlDoc.loadXML(text);return xmlDoc.parseError.errorCode!==0?null:xmlDoc;}catch(e){// Unable to parse XML - no biggie\n}}return null;};FakeXMLHttpRequest.statusCodes={100:\"Continue\",101:\"Switching Protocols\",200:\"OK\",201:\"Created\",202:\"Accepted\",203:\"Non-Authoritative Information\",204:\"No Content\",205:\"Reset Content\",206:\"Partial Content\",207:\"Multi-Status\",300:\"Multiple Choice\",301:\"Moved Permanently\",302:\"Found\",303:\"See Other\",304:\"Not Modified\",305:\"Use Proxy\",307:\"Temporary Redirect\",400:\"Bad Request\",401:\"Unauthorized\",402:\"Payment Required\",403:\"Forbidden\",404:\"Not Found\",405:\"Method Not Allowed\",406:\"Not Acceptable\",407:\"Proxy Authentication Required\",408:\"Request Timeout\",409:\"Conflict\",410:\"Gone\",411:\"Length Required\",412:\"Precondition Failed\",413:\"Request Entity Too Large\",414:\"Request-URI Too Long\",415:\"Unsupported Media Type\",416:\"Requested Range Not Satisfiable\",417:\"Expectation Failed\",422:\"Unprocessable Entity\",500:\"Internal Server Error\",501:\"Not Implemented\",502:\"Bad Gateway\",503:\"Service Unavailable\",504:\"Gateway Timeout\",505:\"HTTP Version Not Supported\"};extend(FakeXMLHttpRequest.prototype,sinonEvent.EventTarget,{async:true,open:function open(method,url,async,username,password){this.method=method;this.url=url;this.async=typeof async===\"boolean\"?async:true;this.username=username;this.password=password;clearResponse(this);this.requestHeaders={};this.sendFlag=false;if(FakeXMLHttpRequest.useFilters===true){var xhrArgs=arguments;var defake=FakeXMLHttpRequest.filters.some(function(filter){return filter.apply(this,xhrArgs);});if(defake){FakeXMLHttpRequest.defake(this,arguments);return;}}this.readyStateChange(FakeXMLHttpRequest.OPENED);},readyStateChange:function readyStateChange(state){this.readyState=state;var readyStateChangeEvent=new sinonEvent.Event(\"readystatechange\",false,false,this);if(typeof this.onreadystatechange===\"function\"){try{this.onreadystatechange(readyStateChangeEvent);}catch(e){this.logError(\"Fake XHR onreadystatechange handler\",e);}}if(this.readyState!==FakeXMLHttpRequest.DONE){this.dispatchEvent(readyStateChangeEvent);}else{var event,progress;if(this.timedOut||this.aborted||this.status===0){progress={loaded:0,total:0};event=this.timedOut&&\"timeout\"||this.aborted&&\"abort\"||\"error\";}else{progress={loaded:100,total:100};event=\"load\";}if(supportsProgress){this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\",progress,this));this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event,progress,this));this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\",progress,this));}this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\",progress,this));this.dispatchEvent(new sinonEvent.ProgressEvent(event,progress,this));this.dispatchEvent(readyStateChangeEvent);this.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\",progress,this));}},// Ref https://xhr.spec.whatwg.org/#the-setrequestheader()-method\nsetRequestHeader:function setRequestHeader(header,value){if(typeof value!==\"string\"){throw new TypeError(`By RFC7230, section 3.2.4, header values should be strings. Got ${typeof value}`);}verifyState(this);var checkUnsafeHeaders=true;if(typeof this.unsafeHeadersEnabled===\"function\"){checkUnsafeHeaders=this.unsafeHeadersEnabled();}if(checkUnsafeHeaders&&(getHeader(unsafeHeaders,header)!==null||/^(Sec-|Proxy-)/i.test(header))){throw new Error(// eslint-disable-next-line quotes\n`Refused to set unsafe header \"${header}\"`);}// eslint-disable-next-line no-param-reassign\nvalue=normalizeHeaderValue(value);var existingHeader=getHeader(this.requestHeaders,header);if(existingHeader){this.requestHeaders[existingHeader]+=`, ${value}`;}else{this.requestHeaders[header]=value;}},setStatus:function setStatus(status){var sanitizedStatus=typeof status===\"number\"?status:200;verifyRequestOpened(this);this.status=sanitizedStatus;this.statusText=FakeXMLHttpRequest.statusCodes[sanitizedStatus];},// Helps testing\nsetResponseHeaders:function setResponseHeaders(headers){verifyRequestOpened(this);var responseHeaders=this.responseHeaders={};Object.keys(headers).forEach(function(header){responseHeaders[header]=headers[header];});if(this.async){this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);}else{this.readyState=FakeXMLHttpRequest.HEADERS_RECEIVED;}},// Currently treats ALL data as a DOMString (i.e. no Document)\nsend:function send(data){verifyState(this);if(!/^(head)$/i.test(this.method)){var contentType=getHeader(this.requestHeaders,\"Content-Type\");if(this.requestHeaders[contentType]){var value=this.requestHeaders[contentType].split(\";\");this.requestHeaders[contentType]=`${value[0]};charset=utf-8`;}else if(supportsFormData&&!(data instanceof FormData)){this.requestHeaders[\"Content-Type\"]=\"text/plain;charset=utf-8\";}this.requestBody=data;}this.errorFlag=false;this.sendFlag=this.async;clearResponse(this);if(typeof this.onSend===\"function\"){this.onSend(this);}// Only listen if setInterval and Date are a stubbed.\nif(sinonXhr.supportsTimeout&&typeof setInterval.clock===\"object\"&&typeof Date.clock===\"object\"){var initiatedTime=Date.now();var self=this;// Listen to any possible tick by fake timers and check to see if timeout has\n// been exceeded. It's important to note that timeout can be changed while a request\n// is in flight, so we must check anytime the end user forces a clock tick to make\n// sure timeout hasn't changed.\n// https://xhr.spec.whatwg.org/#dfnReturnLink-2\nvar clearIntervalId=setInterval(function(){// Check if the readyState has been reset or is done. If this is the case, there\n// should be no timeout. This will also prevent aborted requests and\n// fakeServerWithClock from triggering unnecessary responses.\nif(self.readyState===FakeXMLHttpRequest.UNSENT||self.readyState===FakeXMLHttpRequest.DONE){clearInterval(clearIntervalId);}else if(typeof self.timeout===\"number\"&&self.timeout>0){if(Date.now()>=initiatedTime+self.timeout){self.triggerTimeout();clearInterval(clearIntervalId);}}},1);}this.dispatchEvent(new sinonEvent.Event(\"loadstart\",false,false,this));},abort:function abort(){this.aborted=true;requestErrorSteps(this);this.readyState=FakeXMLHttpRequest.UNSENT;},error:function(){clearResponse(this);this.errorFlag=true;this.requestHeaders={};this.responseHeaders={};this.readyStateChange(FakeXMLHttpRequest.DONE);},triggerTimeout:function triggerTimeout(){if(sinonXhr.supportsTimeout){this.timedOut=true;requestErrorSteps(this);}},getResponseHeader:function getResponseHeader(header){if(this.readyState<FakeXMLHttpRequest.HEADERS_RECEIVED){return null;}if(/^Set-Cookie2?$/i.test(header)){return null;}// eslint-disable-next-line no-param-reassign\nheader=getHeader(this.responseHeaders,header);return this.responseHeaders[header]||null;},getAllResponseHeaders:function getAllResponseHeaders(){if(this.readyState<FakeXMLHttpRequest.HEADERS_RECEIVED){return\"\";}var responseHeaders=this.responseHeaders;var headers=Object.keys(responseHeaders).filter(excludeSetCookie2Header).reduce(function(prev,header){var value=responseHeaders[header];return`${prev}${header}: ${value}\\r\\n`;},\"\");return headers;},setResponseBody:function setResponseBody(body){verifyRequestSent(this);verifyHeadersReceived(this);verifyResponseBodyType(body,this.responseType);var contentType=this.overriddenMimeType||this.getResponseHeader(\"Content-Type\");var isTextResponse=this.responseType===\"\"||this.responseType===\"text\";clearResponse(this);if(this.async){var chunkSize=this.chunkSize||10;var index=0;do{this.readyStateChange(FakeXMLHttpRequest.LOADING);if(isTextResponse){this.responseText=this.response+=body.substring(index,index+chunkSize);}index+=chunkSize;}while(index<body.length);}this.response=convertResponseBody(this.responseType,contentType,body);if(isTextResponse){this.responseText=this.response;}if(this.responseType===\"document\"){this.responseXML=this.response;}else if(this.responseType===\"\"&&isXmlContentType(contentType)){this.responseXML=FakeXMLHttpRequest.parseXML(this.responseText);}this.readyStateChange(FakeXMLHttpRequest.DONE);},respond:function respond(status,headers,body){this.responseURL=this.url;this.setStatus(status);this.setResponseHeaders(headers||{});this.setResponseBody(body||\"\");},uploadProgress:function uploadProgress(progressEventRaw){if(supportsProgress){this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\",progressEventRaw,this.upload));}},downloadProgress:function downloadProgress(progressEventRaw){if(supportsProgress){this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\",progressEventRaw,this));}},uploadError:function uploadError(error){if(supportsCustomEvent){this.upload.dispatchEvent(new sinonEvent.CustomEvent(\"error\",{detail:error}));}},overrideMimeType:function overrideMimeType(type){if(this.readyState>=FakeXMLHttpRequest.LOADING){throw new Error(\"INVALID_STATE_ERR\");}this.overriddenMimeType=type;}});var states={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4};extend(FakeXMLHttpRequest,states);extend(FakeXMLHttpRequest.prototype,states);function useFakeXMLHttpRequest(){FakeXMLHttpRequest.restore=function restore(keepOnCreate){if(sinonXhr.supportsXHR){globalScope.XMLHttpRequest=sinonXhr.GlobalXMLHttpRequest;}if(sinonXhr.supportsActiveX){globalScope.ActiveXObject=sinonXhr.GlobalActiveXObject;}delete FakeXMLHttpRequest.restore;if(keepOnCreate!==true){delete FakeXMLHttpRequest.onCreate;}};if(sinonXhr.supportsXHR){globalScope.XMLHttpRequest=FakeXMLHttpRequest;}if(sinonXhr.supportsActiveX){globalScope.ActiveXObject=function ActiveXObject(objId){if(objId===\"Microsoft.XMLHTTP\"||/^Msxml2\\.XMLHTTP/i.test(objId)){return new FakeXMLHttpRequest();}return new sinonXhr.GlobalActiveXObject(objId);};}return FakeXMLHttpRequest;}return{xhr:sinonXhr,FakeXMLHttpRequest:FakeXMLHttpRequest,useFakeXMLHttpRequest:useFakeXMLHttpRequest};}module.exports=extend(fakeXMLHttpRequestFor(globalObject),{fakeXMLHttpRequestFor:fakeXMLHttpRequestFor});},{\"../configure-logger\":122,\"../event\":126,\"./blob\":131,\"@sinonjs/commons\":140,\"@sinonjs/text-encoding\":109,\"just-extend\":120}],133:[function(require,module,exports){\"use strict\";module.exports={fakeServer:require(\"./fake-server\"),fakeServerWithClock:require(\"./fake-server/fake-server-with-clock\"),fakeXhr:require(\"./fake-xhr\")};},{\"./fake-server\":129,\"./fake-server/fake-server-with-clock\":128,\"./fake-xhr\":132}],134:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments);},{\"./prototypes/array\":142,\"dup\":43}],135:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments);},{\"./function-name\":138,\"dup\":44}],136:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments);},{\"dup\":45}],137:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments);},{\"dup\":46}],138:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments);},{\"dup\":47}],139:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments);},{\"dup\":48}],140:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments);},{\"./called-in-order\":134,\"./class-name\":135,\"./deprecated\":136,\"./every\":137,\"./function-name\":138,\"./global\":139,\"./order-by-first-call\":141,\"./prototypes\":145,\"./type-of\":151,\"./value-to-string\":152,\"dup\":49}],141:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments);},{\"./prototypes/array\":142,\"dup\":50}],142:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments);},{\"./copy-prototype-methods\":143,\"dup\":51}],143:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments);},{\"./throws-on-proto\":150,\"dup\":52}],144:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments);},{\"./copy-prototype-methods\":143,\"dup\":53}],145:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments);},{\"./array\":142,\"./function\":144,\"./map\":146,\"./object\":147,\"./set\":148,\"./string\":149,\"dup\":54}],146:[function(require,module,exports){arguments[4][55][0].apply(exports,arguments);},{\"./copy-prototype-methods\":143,\"dup\":55}],147:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments);},{\"./copy-prototype-methods\":143,\"dup\":56}],148:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments);},{\"./copy-prototype-methods\":143,\"dup\":57}],149:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments);},{\"./copy-prototype-methods\":143,\"dup\":58}],150:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments);},{\"dup\":59}],151:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments);},{\"dup\":60,\"type-detect\":179}],152:[function(require,module,exports){arguments[4][61][0].apply(exports,arguments);},{\"dup\":61}],153:[function(require,module,exports){arguments[4][43][0].apply(exports,arguments);},{\"./prototypes/array\":161,\"dup\":43}],154:[function(require,module,exports){arguments[4][44][0].apply(exports,arguments);},{\"./function-name\":157,\"dup\":44}],155:[function(require,module,exports){arguments[4][45][0].apply(exports,arguments);},{\"dup\":45}],156:[function(require,module,exports){arguments[4][46][0].apply(exports,arguments);},{\"dup\":46}],157:[function(require,module,exports){arguments[4][47][0].apply(exports,arguments);},{\"dup\":47}],158:[function(require,module,exports){arguments[4][48][0].apply(exports,arguments);},{\"dup\":48}],159:[function(require,module,exports){arguments[4][49][0].apply(exports,arguments);},{\"./called-in-order\":153,\"./class-name\":154,\"./deprecated\":155,\"./every\":156,\"./function-name\":157,\"./global\":158,\"./order-by-first-call\":160,\"./prototypes\":164,\"./type-of\":170,\"./value-to-string\":171,\"dup\":49}],160:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments);},{\"./prototypes/array\":161,\"dup\":50}],161:[function(require,module,exports){arguments[4][51][0].apply(exports,arguments);},{\"./copy-prototype-methods\":162,\"dup\":51}],162:[function(require,module,exports){arguments[4][52][0].apply(exports,arguments);},{\"./throws-on-proto\":169,\"dup\":52}],163:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments);},{\"./copy-prototype-methods\":162,\"dup\":53}],164:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments);},{\"./array\":161,\"./function\":163,\"./map\":165,\"./object\":166,\"./set\":167,\"./string\":168,\"dup\":54}],165:[function(require,module,exports){arguments[4][55][0].apply(exports,arguments);},{\"./copy-prototype-methods\":162,\"dup\":55}],166:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments);},{\"./copy-prototype-methods\":162,\"dup\":56}],167:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments);},{\"./copy-prototype-methods\":162,\"dup\":57}],168:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments);},{\"./copy-prototype-methods\":162,\"dup\":58}],169:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments);},{\"dup\":59}],170:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments);},{\"dup\":60,\"type-detect\":179}],171:[function(require,module,exports){arguments[4][61][0].apply(exports,arguments);},{\"dup\":61}],172:[function(require,module,exports){\"use strict\";const globalObject=require(\"@sinonjs/commons\").global;/**\n * @typedef {object} IdleDeadline\n * @property {boolean} didTimeout - whether or not the callback was called before reaching the optional timeout\n * @property {function():number} timeRemaining - a floating-point value providing an estimate of the number of milliseconds remaining in the current idle period\n */ /**\n * Queues a function to be called during a browser's idle periods\n *\n * @callback RequestIdleCallback\n * @param {function(IdleDeadline)} callback\n * @param {{timeout: number}} options - an options object\n * @returns {number} the id\n */ /**\n * @callback NextTick\n * @param {VoidVarArgsFunc} callback - the callback to run\n * @param {...*} arguments - optional arguments to call the callback with\n * @returns {void}\n */ /**\n * @callback SetImmediate\n * @param {VoidVarArgsFunc} callback - the callback to run\n * @param {...*} arguments - optional arguments to call the callback with\n * @returns {NodeImmediate}\n */ /**\n * @callback VoidVarArgsFunc\n * @param {...*} callback - the callback to run\n * @returns {void}\n */ /**\n * @typedef RequestAnimationFrame\n * @property {function(number):void} requestAnimationFrame\n * @returns {number} - the id\n */ /**\n * @typedef Performance\n * @property {function(): number} now\n */ /* eslint-disable jsdoc/require-property-description */ /**\n * @typedef {object} Clock\n * @property {number} now - the current time\n * @property {Date} Date - the Date constructor\n * @property {number} loopLimit - the maximum number of timers before assuming an infinite loop\n * @property {RequestIdleCallback} requestIdleCallback\n * @property {function(number):void} cancelIdleCallback\n * @property {setTimeout} setTimeout\n * @property {clearTimeout} clearTimeout\n * @property {NextTick} nextTick\n * @property {queueMicrotask} queueMicrotask\n * @property {setInterval} setInterval\n * @property {clearInterval} clearInterval\n * @property {SetImmediate} setImmediate\n * @property {function(NodeImmediate):void} clearImmediate\n * @property {function():number} countTimers\n * @property {RequestAnimationFrame} requestAnimationFrame\n * @property {function(number):void} cancelAnimationFrame\n * @property {function():void} runMicrotasks\n * @property {function(string | number): number} tick\n * @property {function(string | number): Promise<number>} tickAsync\n * @property {function(): number} next\n * @property {function(): Promise<number>} nextAsync\n * @property {function(): number} runAll\n * @property {function(): number} runToFrame\n * @property {function(): Promise<number>} runAllAsync\n * @property {function(): number} runToLast\n * @property {function(): Promise<number>} runToLastAsync\n * @property {function(): void} reset\n * @property {function(number | Date): void} setSystemTime\n * @property {function(number): void} jump\n * @property {Performance} performance\n * @property {function(number[]): number[]} hrtime - process.hrtime (legacy)\n * @property {function(): void} uninstall Uninstall the clock.\n * @property {Function[]} methods - the methods that are faked\n * @property {boolean} [shouldClearNativeTimers] inherited from config\n */ /* eslint-enable jsdoc/require-property-description */ /**\n * Configuration object for the `install` method.\n *\n * @typedef {object} Config\n * @property {number|Date} [now] a number (in milliseconds) or a Date object (default epoch)\n * @property {string[]} [toFake] names of the methods that should be faked.\n * @property {number} [loopLimit] the maximum number of timers that will be run when calling runAll()\n * @property {boolean} [shouldAdvanceTime] tells FakeTimers to increment mocked time automatically (default false)\n * @property {number} [advanceTimeDelta] increment mocked time every <<advanceTimeDelta>> ms (default: 20ms)\n * @property {boolean} [shouldClearNativeTimers] forwards clear timer calls to native functions if they are not fakes (default: false)\n */ /* eslint-disable jsdoc/require-property-description */ /**\n * The internal structure to describe a scheduled fake timer\n *\n * @typedef {object} Timer\n * @property {Function} func\n * @property {*[]} args\n * @property {number} delay\n * @property {number} callAt\n * @property {number} createdAt\n * @property {boolean} immediate\n * @property {number} id\n * @property {Error} [error]\n */ /**\n * A Node timer\n *\n * @typedef {object} NodeImmediate\n * @property {function(): boolean} hasRef\n * @property {function(): NodeImmediate} ref\n * @property {function(): NodeImmediate} unref\n */ /* eslint-enable jsdoc/require-property-description */ /* eslint-disable complexity */ /**\n * Mocks available features in the specified global namespace.\n *\n * @param {*} _global Namespace to mock (e.g. `window`)\n * @returns {FakeTimers}\n */function withGlobal(_global){const userAgent=_global.navigator&&_global.navigator.userAgent;const isRunningInIE=userAgent&&userAgent.indexOf(\"MSIE \")>-1;const maxTimeout=Math.pow(2,31)-1;//see https://heycam.github.io/webidl/#abstract-opdef-converttoint\nconst idCounterStart=1e12;// arbitrarily large number to avoid collisions with native timer IDs\nconst NOOP=function(){return undefined;};const NOOP_ARRAY=function(){return[];};const timeoutResult=_global.setTimeout(NOOP,0);const addTimerReturnsObject=typeof timeoutResult===\"object\";const hrtimePresent=_global.process&&typeof _global.process.hrtime===\"function\";const hrtimeBigintPresent=hrtimePresent&&typeof _global.process.hrtime.bigint===\"function\";const nextTickPresent=_global.process&&typeof _global.process.nextTick===\"function\";const utilPromisify=_global.process&&require(\"util\").promisify;const performancePresent=_global.performance&&typeof _global.performance.now===\"function\";const hasPerformancePrototype=_global.Performance&&(typeof _global.Performance).match(/^(function|object)$/);const hasPerformanceConstructorPrototype=_global.performance&&_global.performance.constructor&&_global.performance.constructor.prototype;const queueMicrotaskPresent=_global.hasOwnProperty(\"queueMicrotask\");const requestAnimationFramePresent=_global.requestAnimationFrame&&typeof _global.requestAnimationFrame===\"function\";const cancelAnimationFramePresent=_global.cancelAnimationFrame&&typeof _global.cancelAnimationFrame===\"function\";const requestIdleCallbackPresent=_global.requestIdleCallback&&typeof _global.requestIdleCallback===\"function\";const cancelIdleCallbackPresent=_global.cancelIdleCallback&&typeof _global.cancelIdleCallback===\"function\";const setImmediatePresent=_global.setImmediate&&typeof _global.setImmediate===\"function\";// Make properties writable in IE, as per\n// https://www.adequatelygood.com/Replacing-setTimeout-Globally.html\n/* eslint-disable no-self-assign */if(isRunningInIE){_global.setTimeout=_global.setTimeout;_global.clearTimeout=_global.clearTimeout;_global.setInterval=_global.setInterval;_global.clearInterval=_global.clearInterval;_global.Date=_global.Date;}// setImmediate is not a standard function\n// avoid adding the prop to the window object if not present\nif(setImmediatePresent){_global.setImmediate=_global.setImmediate;_global.clearImmediate=_global.clearImmediate;}/* eslint-enable no-self-assign */_global.clearTimeout(timeoutResult);const NativeDate=_global.Date;let uniqueTimerId=idCounterStart;/**\n     * @param {number} num\n     * @returns {boolean}\n     */function isNumberFinite(num){if(Number.isFinite){return Number.isFinite(num);}return isFinite(num);}let isNearInfiniteLimit=false;/**\n     * @param {Clock} clock\n     * @param {number} i\n     */function checkIsNearInfiniteLimit(clock,i){if(clock.loopLimit&&i===clock.loopLimit-1){isNearInfiniteLimit=true;}}/**\n     *\n     */function resetIsNearInfiniteLimit(){isNearInfiniteLimit=false;}/**\n     * Parse strings like \"01:10:00\" (meaning 1 hour, 10 minutes, 0 seconds) into\n     * number of milliseconds. This is used to support human-readable strings passed\n     * to clock.tick()\n     *\n     * @param {string} str\n     * @returns {number}\n     */function parseTime(str){if(!str){return 0;}const strings=str.split(\":\");const l=strings.length;let i=l;let ms=0;let parsed;if(l>3||!/^(\\d\\d:){0,2}\\d\\d?$/.test(str)){throw new Error(\"tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits\");}while(i--){parsed=parseInt(strings[i],10);if(parsed>=60){throw new Error(`Invalid time ${str}`);}ms+=parsed*Math.pow(60,l-i-1);}return ms*1000;}/**\n     * Get the decimal part of the millisecond value as nanoseconds\n     *\n     * @param {number} msFloat the number of milliseconds\n     * @returns {number} an integer number of nanoseconds in the range [0,1e6)\n     *\n     * Example: nanoRemainer(123.456789) -> 456789\n     */function nanoRemainder(msFloat){const modulo=1e6;const remainder=msFloat*1e6%modulo;const positiveRemainder=remainder<0?remainder+modulo:remainder;return Math.floor(positiveRemainder);}/**\n     * Used to grok the `now` parameter to createClock.\n     *\n     * @param {Date|number} epoch the system time\n     * @returns {number}\n     */function getEpoch(epoch){if(!epoch){return 0;}if(typeof epoch.getTime===\"function\"){return epoch.getTime();}if(typeof epoch===\"number\"){return epoch;}throw new TypeError(\"now should be milliseconds since UNIX epoch\");}/**\n     * @param {number} from\n     * @param {number} to\n     * @param {Timer} timer\n     * @returns {boolean}\n     */function inRange(from,to,timer){return timer&&timer.callAt>=from&&timer.callAt<=to;}/**\n     * @param {Clock} clock\n     * @param {Timer} job\n     */function getInfiniteLoopError(clock,job){const infiniteLoopError=new Error(`Aborting after running ${clock.loopLimit} timers, assuming an infinite loop!`);if(!job.error){return infiniteLoopError;}// pattern never matched in Node\nconst computedTargetPattern=/target\\.*[<|(|[].*?[>|\\]|)]\\s*/;let clockMethodPattern=new RegExp(String(Object.keys(clock).join(\"|\")));if(addTimerReturnsObject){// node.js environment\nclockMethodPattern=new RegExp(`\\\\s+at (Object\\\\.)?(?:${Object.keys(clock).join(\"|\")})\\\\s+`);}let matchedLineIndex=-1;job.error.stack.split(\"\\n\").some(function(line,i){// If we've matched a computed target line (e.g. setTimeout) then we\n// don't need to look any further. Return true to stop iterating.\nconst matchedComputedTarget=line.match(computedTargetPattern);/* istanbul ignore if */if(matchedComputedTarget){matchedLineIndex=i;return true;}// If we've matched a clock method line, then there may still be\n// others further down the trace. Return false to keep iterating.\nconst matchedClockMethod=line.match(clockMethodPattern);if(matchedClockMethod){matchedLineIndex=i;return false;}// If we haven't matched anything on this line, but we matched\n// previously and set the matched line index, then we can stop.\n// If we haven't matched previously, then we should keep iterating.\nreturn matchedLineIndex>=0;});const stack=`${infiniteLoopError}\\n${job.type||\"Microtask\"} - ${job.func.name||\"anonymous\"}\\n${job.error.stack.split(\"\\n\").slice(matchedLineIndex+1).join(\"\\n\")}`;try{Object.defineProperty(infiniteLoopError,\"stack\",{value:stack});}catch(e){// noop\n}return infiniteLoopError;}/**\n     * @param {Date} target\n     * @param {Date} source\n     * @returns {Date} the target after modifications\n     */function mirrorDateProperties(target,source){let prop;for(prop in source){if(source.hasOwnProperty(prop)){target[prop]=source[prop];}}// set special now implementation\nif(source.now){target.now=function now(){return target.clock.now;};}else{delete target.now;}// set special toSource implementation\nif(source.toSource){target.toSource=function toSource(){return source.toSource();};}else{delete target.toSource;}// set special toString implementation\ntarget.toString=function toString(){return source.toString();};target.prototype=source.prototype;target.parse=source.parse;target.UTC=source.UTC;target.prototype.toUTCString=source.prototype.toUTCString;target.isFake=true;return target;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction createDate(){/**\n         * @param {number} year\n         * @param {number} month\n         * @param {number} date\n         * @param {number} hour\n         * @param {number} minute\n         * @param {number} second\n         * @param {number} ms\n         * @returns {Date}\n         */function ClockDate(year,month,date,hour,minute,second,ms){// the Date constructor called as a function, ref Ecma-262 Edition 5.1, section 15.9.2.\n// This remains so in the 10th edition of 2019 as well.\nif(!(this instanceof ClockDate)){return new NativeDate(ClockDate.clock.now).toString();}// if Date is called as a constructor with 'new' keyword\n// Defensive and verbose to avoid potential harm in passing\n// explicit undefined when user does not pass argument\nswitch(arguments.length){case 0:return new NativeDate(ClockDate.clock.now);case 1:return new NativeDate(year);case 2:return new NativeDate(year,month);case 3:return new NativeDate(year,month,date);case 4:return new NativeDate(year,month,date,hour);case 5:return new NativeDate(year,month,date,hour,minute);case 6:return new NativeDate(year,month,date,hour,minute,second);default:return new NativeDate(year,month,date,hour,minute,second,ms);}}return mirrorDateProperties(ClockDate,NativeDate);}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction enqueueJob(clock,job){// enqueues a microtick-deferred task - ecma262/#sec-enqueuejob\nif(!clock.jobs){clock.jobs=[];}clock.jobs.push(job);}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction runJobs(clock){// runs all microtick-deferred tasks - ecma262/#sec-runjobs\nif(!clock.jobs){return;}for(let i=0;i<clock.jobs.length;i++){const job=clock.jobs[i];job.func.apply(null,job.args);checkIsNearInfiniteLimit(clock,i);if(clock.loopLimit&&i>clock.loopLimit){throw getInfiniteLoopError(clock,job);}}resetIsNearInfiniteLimit();clock.jobs=[];}/**\n     * @param {Clock} clock\n     * @param {Timer} timer\n     * @returns {number} id of the created timer\n     */function addTimer(clock,timer){if(timer.func===undefined){throw new Error(\"Callback must be provided to timer calls\");}if(addTimerReturnsObject){// Node.js environment\nif(typeof timer.func!==\"function\"){throw new TypeError(`[ERR_INVALID_CALLBACK]: Callback must be a function. Received ${timer.func} of type ${typeof timer.func}`);}}if(isNearInfiniteLimit){timer.error=new Error();}timer.type=timer.immediate?\"Immediate\":\"Timeout\";if(timer.hasOwnProperty(\"delay\")){if(typeof timer.delay!==\"number\"){timer.delay=parseInt(timer.delay,10);}if(!isNumberFinite(timer.delay)){timer.delay=0;}timer.delay=timer.delay>maxTimeout?1:timer.delay;timer.delay=Math.max(0,timer.delay);}if(timer.hasOwnProperty(\"interval\")){timer.type=\"Interval\";timer.interval=timer.interval>maxTimeout?1:timer.interval;}if(timer.hasOwnProperty(\"animation\")){timer.type=\"AnimationFrame\";timer.animation=true;}if(timer.hasOwnProperty(\"idleCallback\")){timer.type=\"IdleCallback\";timer.idleCallback=true;}if(!clock.timers){clock.timers={};}timer.id=uniqueTimerId++;timer.createdAt=clock.now;timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0));clock.timers[timer.id]=timer;if(addTimerReturnsObject){const res={refed:true,ref:function(){this.refed=true;return res;},unref:function(){this.refed=false;return res;},hasRef:function(){return this.refed;},refresh:function(){timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0));// it _might_ have been removed, but if not the assignment is perfectly fine\nclock.timers[timer.id]=timer;return res;},[Symbol.toPrimitive]:function(){return timer.id;}};return res;}return timer.id;}/* eslint consistent-return: \"off\" */ /**\n     * Timer comparitor\n     *\n     * @param {Timer} a\n     * @param {Timer} b\n     * @returns {number}\n     */function compareTimers(a,b){// Sort first by absolute timing\nif(a.callAt<b.callAt){return-1;}if(a.callAt>b.callAt){return 1;}// Sort next by immediate, immediate timers take precedence\nif(a.immediate&&!b.immediate){return-1;}if(!a.immediate&&b.immediate){return 1;}// Sort next by creation time, earlier-created timers take precedence\nif(a.createdAt<b.createdAt){return-1;}if(a.createdAt>b.createdAt){return 1;}// Sort next by id, lower-id timers take precedence\nif(a.id<b.id){return-1;}if(a.id>b.id){return 1;}// As timer ids are unique, no fallback `0` is necessary\n}/**\n     * @param {Clock} clock\n     * @param {number} from\n     * @param {number} to\n     * @returns {Timer}\n     */function firstTimerInRange(clock,from,to){const timers=clock.timers;let timer=null;let id,isInRange;for(id in timers){if(timers.hasOwnProperty(id)){isInRange=inRange(from,to,timers[id]);if(isInRange&&(!timer||compareTimers(timer,timers[id])===1)){timer=timers[id];}}}return timer;}/**\n     * @param {Clock} clock\n     * @returns {Timer}\n     */function firstTimer(clock){const timers=clock.timers;let timer=null;let id;for(id in timers){if(timers.hasOwnProperty(id)){if(!timer||compareTimers(timer,timers[id])===1){timer=timers[id];}}}return timer;}/**\n     * @param {Clock} clock\n     * @returns {Timer}\n     */function lastTimer(clock){const timers=clock.timers;let timer=null;let id;for(id in timers){if(timers.hasOwnProperty(id)){if(!timer||compareTimers(timer,timers[id])===-1){timer=timers[id];}}}return timer;}/**\n     * @param {Clock} clock\n     * @param {Timer} timer\n     */function callTimer(clock,timer){if(typeof timer.interval===\"number\"){clock.timers[timer.id].callAt+=timer.interval;}else{delete clock.timers[timer.id];}if(typeof timer.func===\"function\"){timer.func.apply(null,timer.args);}else{/* eslint no-eval: \"off\" */const eval2=eval;(function(){eval2(timer.func);})();}}/**\n     * Gets clear handler name for a given timer type\n     *\n     * @param {string} ttype\n     */function getClearHandler(ttype){if(ttype===\"IdleCallback\"||ttype===\"AnimationFrame\"){return`cancel${ttype}`;}return`clear${ttype}`;}/**\n     * Gets schedule handler name for a given timer type\n     *\n     * @param {string} ttype\n     */function getScheduleHandler(ttype){if(ttype===\"IdleCallback\"||ttype===\"AnimationFrame\"){return`request${ttype}`;}return`set${ttype}`;}/**\n     * Creates an anonymous function to warn only once\n     */function createWarnOnce(){let calls=0;return function(msg){// eslint-disable-next-line\n!calls++&&console.warn(msg);};}const warnOnce=createWarnOnce();/**\n     * @param {Clock} clock\n     * @param {number} timerId\n     * @param {string} ttype\n     */function clearTimer(clock,timerId,ttype){if(!timerId){// null appears to be allowed in most browsers, and appears to be\n// relied upon by some libraries, like Bootstrap carousel\nreturn;}if(!clock.timers){clock.timers={};}// in Node, the ID is stored as the primitive value for `Timeout` objects\n// for `Immediate` objects, no ID exists, so it gets coerced to NaN\nconst id=Number(timerId);if(Number.isNaN(id)||id<idCounterStart){const handlerName=getClearHandler(ttype);if(clock.shouldClearNativeTimers===true){const nativeHandler=clock[`_${handlerName}`];return typeof nativeHandler===\"function\"?nativeHandler(timerId):undefined;}warnOnce(`FakeTimers: ${handlerName} was invoked to clear a native timer instead of one created by this library.`+\"\\nTo automatically clean-up native timers, use `shouldClearNativeTimers`.\");}if(clock.timers.hasOwnProperty(id)){// check that the ID matches a timer of the correct type\nconst timer=clock.timers[id];if(timer.type===ttype||timer.type===\"Timeout\"&&ttype===\"Interval\"||timer.type===\"Interval\"&&ttype===\"Timeout\"){delete clock.timers[id];}else{const clear=getClearHandler(ttype);const schedule=getScheduleHandler(timer.type);throw new Error(`Cannot clear timer: timer created with ${schedule}() but cleared with ${clear}()`);}}}/**\n     * @param {Clock} clock\n     * @param {Config} config\n     * @returns {Timer[]}\n     */function uninstall(clock,config){let method,i,l;const installedHrTime=\"_hrtime\";const installedNextTick=\"_nextTick\";for(i=0,l=clock.methods.length;i<l;i++){method=clock.methods[i];if(method===\"hrtime\"&&_global.process){_global.process.hrtime=clock[installedHrTime];}else if(method===\"nextTick\"&&_global.process){_global.process.nextTick=clock[installedNextTick];}else if(method===\"performance\"){const originalPerfDescriptor=Object.getOwnPropertyDescriptor(clock,`_${method}`);if(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(_global,method,originalPerfDescriptor);}else if(originalPerfDescriptor.configurable){_global[method]=clock[`_${method}`];}}else{if(_global[method]&&_global[method].hadOwnProperty){_global[method]=clock[`_${method}`];}else{try{delete _global[method];}catch(ignore){/* eslint no-empty: \"off\" */}}}}if(config.shouldAdvanceTime===true){_global.clearInterval(clock.attachedInterval);}// Prevent multiple executions which will completely remove these props\nclock.methods=[];// return pending timers, to enable checking what timers remained on uninstall\nif(!clock.timers){return[];}return Object.keys(clock.timers).map(function mapper(key){return clock.timers[key];});}/**\n     * @param {object} target the target containing the method to replace\n     * @param {string} method the keyname of the method on the target\n     * @param {Clock} clock\n     */function hijackMethod(target,method,clock){clock[method].hadOwnProperty=Object.prototype.hasOwnProperty.call(target,method);clock[`_${method}`]=target[method];if(method===\"Date\"){const date=mirrorDateProperties(clock[method],target[method]);target[method]=date;}else if(method===\"performance\"){const originalPerfDescriptor=Object.getOwnPropertyDescriptor(target,method);// JSDOM has a read only performance field so we have to save/copy it differently\nif(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(clock,`_${method}`,originalPerfDescriptor);const perfDescriptor=Object.getOwnPropertyDescriptor(clock,method);Object.defineProperty(target,method,perfDescriptor);}else{target[method]=clock[method];}}else{target[method]=function(){return clock[method].apply(clock,arguments);};Object.defineProperties(target[method],Object.getOwnPropertyDescriptors(clock[method]));}target[method].clock=clock;}/**\n     * @param {Clock} clock\n     * @param {number} advanceTimeDelta\n     */function doIntervalTick(clock,advanceTimeDelta){clock.tick(advanceTimeDelta);}/**\n     * @typedef {object} Timers\n     * @property {setTimeout} setTimeout\n     * @property {clearTimeout} clearTimeout\n     * @property {setInterval} setInterval\n     * @property {clearInterval} clearInterval\n     * @property {Date} Date\n     * @property {SetImmediate=} setImmediate\n     * @property {function(NodeImmediate): void=} clearImmediate\n     * @property {function(number[]):number[]=} hrtime\n     * @property {NextTick=} nextTick\n     * @property {Performance=} performance\n     * @property {RequestAnimationFrame=} requestAnimationFrame\n     * @property {boolean=} queueMicrotask\n     * @property {function(number): void=} cancelAnimationFrame\n     * @property {RequestIdleCallback=} requestIdleCallback\n     * @property {function(number): void=} cancelIdleCallback\n     */ /** @type {Timers} */const timers={setTimeout:_global.setTimeout,clearTimeout:_global.clearTimeout,setInterval:_global.setInterval,clearInterval:_global.clearInterval,Date:_global.Date};if(setImmediatePresent){timers.setImmediate=_global.setImmediate;timers.clearImmediate=_global.clearImmediate;}if(hrtimePresent){timers.hrtime=_global.process.hrtime;}if(nextTickPresent){timers.nextTick=_global.process.nextTick;}if(performancePresent){timers.performance=_global.performance;}if(requestAnimationFramePresent){timers.requestAnimationFrame=_global.requestAnimationFrame;}if(queueMicrotaskPresent){timers.queueMicrotask=true;}if(cancelAnimationFramePresent){timers.cancelAnimationFrame=_global.cancelAnimationFrame;}if(requestIdleCallbackPresent){timers.requestIdleCallback=_global.requestIdleCallback;}if(cancelIdleCallbackPresent){timers.cancelIdleCallback=_global.cancelIdleCallback;}const originalSetTimeout=_global.setImmediate||_global.setTimeout;/**\n     * @param {Date|number} [start] the system time - non-integer values are floored\n     * @param {number} [loopLimit] maximum number of timers that will be run when calling runAll()\n     * @returns {Clock}\n     */function createClock(start,loopLimit){// eslint-disable-next-line no-param-reassign\nstart=Math.floor(getEpoch(start));// eslint-disable-next-line no-param-reassign\nloopLimit=loopLimit||1000;let nanos=0;const adjustedSystemTime=[0,0];// [millis, nanoremainder]\nif(NativeDate===undefined){throw new Error(\"The global scope doesn't have a `Date` object\"+\" (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)\");}const clock={now:start,Date:createDate(),loopLimit:loopLimit};clock.Date.clock=clock;//eslint-disable-next-line jsdoc/require-jsdoc\nfunction getTimeToNextFrame(){return 16-(clock.now-start)%16;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction hrtime(prev){const millisSinceStart=clock.now-adjustedSystemTime[0]-start;const secsSinceStart=Math.floor(millisSinceStart/1000);const remainderInNanos=(millisSinceStart-secsSinceStart*1e3)*1e6+nanos-adjustedSystemTime[1];if(Array.isArray(prev)){if(prev[1]>1e9){throw new TypeError(\"Number of nanoseconds can't exceed a billion\");}const oldSecs=prev[0];let nanoDiff=remainderInNanos-prev[1];let secDiff=secsSinceStart-oldSecs;if(nanoDiff<0){nanoDiff+=1e9;secDiff-=1;}return[secDiff,nanoDiff];}return[secsSinceStart,remainderInNanos];}function fakePerformanceNow(){const hrt=hrtime();const millis=hrt[0]*1000+hrt[1]/1e6;return millis;}if(hrtimeBigintPresent){hrtime.bigint=function(){const parts=hrtime();return BigInt(parts[0])*BigInt(1e9)+BigInt(parts[1]);// eslint-disable-line\n};}clock.requestIdleCallback=function requestIdleCallback(func,timeout){let timeToNextIdlePeriod=0;if(clock.countTimers()>0){timeToNextIdlePeriod=50;// const for now\n}const result=addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:typeof timeout===\"undefined\"?timeToNextIdlePeriod:Math.min(timeout,timeToNextIdlePeriod),idleCallback:true});return Number(result);};clock.cancelIdleCallback=function cancelIdleCallback(timerId){return clearTimer(clock,timerId,\"IdleCallback\");};clock.setTimeout=function setTimeout(func,timeout){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout});};if(typeof _global.Promise!==\"undefined\"&&utilPromisify){clock.setTimeout[utilPromisify.custom]=function promisifiedSetTimeout(timeout,arg){return new _global.Promise(function setTimeoutExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],delay:timeout});});};}clock.clearTimeout=function clearTimeout(timerId){return clearTimer(clock,timerId,\"Timeout\");};clock.nextTick=function nextTick(func){return enqueueJob(clock,{func:func,args:Array.prototype.slice.call(arguments,1),error:isNearInfiniteLimit?new Error():null});};clock.queueMicrotask=function queueMicrotask(func){return clock.nextTick(func);// explicitly drop additional arguments\n};clock.setInterval=function setInterval(func,timeout){// eslint-disable-next-line no-param-reassign\ntimeout=parseInt(timeout,10);return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,2),delay:timeout,interval:timeout});};clock.clearInterval=function clearInterval(timerId){return clearTimer(clock,timerId,\"Interval\");};if(setImmediatePresent){clock.setImmediate=function setImmediate(func){return addTimer(clock,{func:func,args:Array.prototype.slice.call(arguments,1),immediate:true});};if(typeof _global.Promise!==\"undefined\"&&utilPromisify){clock.setImmediate[utilPromisify.custom]=function promisifiedSetImmediate(arg){return new _global.Promise(function setImmediateExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],immediate:true});});};}clock.clearImmediate=function clearImmediate(timerId){return clearTimer(clock,timerId,\"Immediate\");};}clock.countTimers=function countTimers(){return Object.keys(clock.timers||{}).length+(clock.jobs||[]).length;};clock.requestAnimationFrame=function requestAnimationFrame(func){const result=addTimer(clock,{func:func,delay:getTimeToNextFrame(),get args(){return[fakePerformanceNow()];},animation:true});return Number(result);};clock.cancelAnimationFrame=function cancelAnimationFrame(timerId){return clearTimer(clock,timerId,\"AnimationFrame\");};clock.runMicrotasks=function runMicrotasks(){runJobs(clock);};/**\n         * @param {number|string} tickValue milliseconds or a string parseable by parseTime\n         * @param {boolean} isAsync\n         * @param {Function} resolve\n         * @param {Function} reject\n         * @returns {number|undefined} will return the new `now` value or nothing for async\n         */function doTick(tickValue,isAsync,resolve,reject){const msFloat=typeof tickValue===\"number\"?tickValue:parseTime(tickValue);const ms=Math.floor(msFloat);const remainder=nanoRemainder(msFloat);let nanosTotal=nanos+remainder;let tickTo=clock.now+ms;if(msFloat<0){throw new TypeError(\"Negative ticks are not supported\");}// adjust for positive overflow\nif(nanosTotal>=1e6){tickTo+=1;nanosTotal-=1e6;}nanos=nanosTotal;let tickFrom=clock.now;let previous=clock.now;// ESLint fails to detect this correctly\n/* eslint-disable prefer-const */let timer,firstException,oldNow,nextPromiseTick,compensationCheck,postTimerCall;/* eslint-enable prefer-const */clock.duringTick=true;// perform microtasks\noldNow=clock.now;runJobs(clock);if(oldNow!==clock.now){// compensate for any setSystemTime() call during microtask callback\ntickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;}//eslint-disable-next-line jsdoc/require-jsdoc\nfunction doTickInner(){// perform each timer in the requested range\ntimer=firstTimerInRange(clock,tickFrom,tickTo);// eslint-disable-next-line no-unmodified-loop-condition\nwhile(timer&&tickFrom<=tickTo){if(clock.timers[timer.id]){tickFrom=timer.callAt;clock.now=timer.callAt;oldNow=clock.now;try{runJobs(clock);callTimer(clock,timer);}catch(e){firstException=firstException||e;}if(isAsync){// finish up after native setImmediate callback to allow\n// all native es6 promises to process their callbacks after\n// each timer fires.\noriginalSetTimeout(nextPromiseTick);return;}compensationCheck();}postTimerCall();}// perform process.nextTick()s again\noldNow=clock.now;runJobs(clock);if(oldNow!==clock.now){// compensate for any setSystemTime() call during process.nextTick() callback\ntickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;}clock.duringTick=false;// corner case: during runJobs new timers were scheduled which could be in the range [clock.now, tickTo]\ntimer=firstTimerInRange(clock,tickFrom,tickTo);if(timer){try{clock.tick(tickTo-clock.now);// do it all again - for the remainder of the requested range\n}catch(e){firstException=firstException||e;}}else{// no timers remaining in the requested range: move the clock all the way to the end\nclock.now=tickTo;// update nanos\nnanos=nanosTotal;}if(firstException){throw firstException;}if(isAsync){resolve(clock.now);}else{return clock.now;}}nextPromiseTick=isAsync&&function(){try{compensationCheck();postTimerCall();doTickInner();}catch(e){reject(e);}};compensationCheck=function(){// compensate for any setSystemTime() call during timer callback\nif(oldNow!==clock.now){tickFrom+=clock.now-oldNow;tickTo+=clock.now-oldNow;previous+=clock.now-oldNow;}};postTimerCall=function(){timer=firstTimerInRange(clock,previous,tickTo);previous=tickFrom;};return doTickInner();}/**\n         * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n         * @returns {number} will return the new `now` value\n         */clock.tick=function tick(tickValue){return doTick(tickValue,false);};if(typeof _global.Promise!==\"undefined\"){/**\n             * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n             * @returns {Promise}\n             */clock.tickAsync=function tickAsync(tickValue){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{doTick(tickValue,true,resolve,reject);}catch(e){reject(e);}});});};}clock.next=function next(){runJobs(clock);const timer=firstTimer(clock);if(!timer){return clock.now;}clock.duringTick=true;try{clock.now=timer.callAt;callTimer(clock,timer);runJobs(clock);return clock.now;}finally{clock.duringTick=false;}};if(typeof _global.Promise!==\"undefined\"){clock.nextAsync=function nextAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{const timer=firstTimer(clock);if(!timer){resolve(clock.now);return;}let err;clock.duringTick=true;clock.now=timer.callAt;try{callTimer(clock,timer);}catch(e){err=e;}clock.duringTick=false;originalSetTimeout(function(){if(err){reject(err);}else{resolve(clock.now);}});}catch(e){reject(e);}});});};}clock.runAll=function runAll(){let numTimers,i;runJobs(clock);for(i=0;i<clock.loopLimit;i++){if(!clock.timers){resetIsNearInfiniteLimit();return clock.now;}numTimers=Object.keys(clock.timers).length;if(numTimers===0){resetIsNearInfiniteLimit();return clock.now;}clock.next();checkIsNearInfiniteLimit(clock,i);}const excessJob=firstTimer(clock);throw getInfiniteLoopError(clock,excessJob);};clock.runToFrame=function runToFrame(){return clock.tick(getTimeToNextFrame());};if(typeof _global.Promise!==\"undefined\"){clock.runAllAsync=function runAllAsync(){return new _global.Promise(function(resolve,reject){let i=0;/**\n                     *\n                     */function doRun(){originalSetTimeout(function(){try{let numTimers;if(i<clock.loopLimit){if(!clock.timers){resetIsNearInfiniteLimit();resolve(clock.now);return;}numTimers=Object.keys(clock.timers).length;if(numTimers===0){resetIsNearInfiniteLimit();resolve(clock.now);return;}clock.next();i++;doRun();checkIsNearInfiniteLimit(clock,i);return;}const excessJob=firstTimer(clock);reject(getInfiniteLoopError(clock,excessJob));}catch(e){reject(e);}});}doRun();});};}clock.runToLast=function runToLast(){const timer=lastTimer(clock);if(!timer){runJobs(clock);return clock.now;}return clock.tick(timer.callAt-clock.now);};if(typeof _global.Promise!==\"undefined\"){clock.runToLastAsync=function runToLastAsync(){return new _global.Promise(function(resolve,reject){originalSetTimeout(function(){try{const timer=lastTimer(clock);if(!timer){resolve(clock.now);}resolve(clock.tickAsync(timer.callAt-clock.now));}catch(e){reject(e);}});});};}clock.reset=function reset(){nanos=0;clock.timers={};clock.jobs=[];clock.now=start;};clock.setSystemTime=function setSystemTime(systemTime){// determine time difference\nconst newNow=getEpoch(systemTime);const difference=newNow-clock.now;let id,timer;adjustedSystemTime[0]=adjustedSystemTime[0]+difference;adjustedSystemTime[1]=adjustedSystemTime[1]+nanos;// update 'system clock'\nclock.now=newNow;nanos=0;// update timers and intervals to keep them stable\nfor(id in clock.timers){if(clock.timers.hasOwnProperty(id)){timer=clock.timers[id];timer.createdAt+=difference;timer.callAt+=difference;}}};/**\n         * @param {string|number} tickValue number of milliseconds or a human-readable value like \"01:11:15\"\n         * @returns {number} will return the new `now` value\n         */clock.jump=function jump(tickValue){const msFloat=typeof tickValue===\"number\"?tickValue:parseTime(tickValue);const ms=Math.floor(msFloat);for(const timer of Object.values(clock.timers)){if(clock.now+ms>timer.callAt){timer.callAt=clock.now+ms;}}clock.tick(ms);};if(performancePresent){clock.performance=Object.create(null);clock.performance.now=fakePerformanceNow;}if(hrtimePresent){clock.hrtime=hrtime;}return clock;}/* eslint-disable complexity */ /**\n     * @param {Config=} [config] Optional config\n     * @returns {Clock}\n     */function install(config){if(arguments.length>1||config instanceof Date||Array.isArray(config)||typeof config===\"number\"){throw new TypeError(`FakeTimers.install called with ${String(config)} install requires an object parameter`);}if(_global.Date.isFake===true){// Timers are already faked; this is a problem.\n// Make the user reset timers before continuing.\nthrow new TypeError(\"Can't install fake timers twice on the same global object.\");}// eslint-disable-next-line no-param-reassign\nconfig=typeof config!==\"undefined\"?config:{};config.shouldAdvanceTime=config.shouldAdvanceTime||false;config.advanceTimeDelta=config.advanceTimeDelta||20;config.shouldClearNativeTimers=config.shouldClearNativeTimers||false;if(config.target){throw new TypeError(\"config.target is no longer supported. Use `withGlobal(target)` instead.\");}let i,l;const clock=createClock(config.now,config.loopLimit);clock.shouldClearNativeTimers=config.shouldClearNativeTimers;clock.uninstall=function(){return uninstall(clock,config);};clock.methods=config.toFake||[];if(clock.methods.length===0){// do not fake nextTick by default - GitHub#126\nclock.methods=Object.keys(timers).filter(function(key){return key!==\"nextTick\"&&key!==\"queueMicrotask\";});}if(config.shouldAdvanceTime===true){const intervalTick=doIntervalTick.bind(null,clock,config.advanceTimeDelta);const intervalId=_global.setInterval(intervalTick,config.advanceTimeDelta);clock.attachedInterval=intervalId;}if(clock.methods.includes(\"performance\")){const proto=(()=>{if(hasPerformancePrototype){return _global.Performance.prototype;}if(hasPerformanceConstructorPrototype){return _global.performance.constructor.prototype;}})();if(proto){Object.getOwnPropertyNames(proto).forEach(function(name){if(name!==\"now\"){clock.performance[name]=name.indexOf(\"getEntries\")===0?NOOP_ARRAY:NOOP;}});}else if((config.toFake||[]).includes(\"performance\")){// user explicitly tried to fake performance when not present\nthrow new ReferenceError(\"non-existent performance object cannot be faked\");}}for(i=0,l=clock.methods.length;i<l;i++){const nameOfMethodToReplace=clock.methods[i];if(nameOfMethodToReplace===\"hrtime\"){if(_global.process&&typeof _global.process.hrtime===\"function\"){hijackMethod(_global.process,nameOfMethodToReplace,clock);}}else if(nameOfMethodToReplace===\"nextTick\"){if(_global.process&&typeof _global.process.nextTick===\"function\"){hijackMethod(_global.process,nameOfMethodToReplace,clock);}}else{hijackMethod(_global,nameOfMethodToReplace,clock);}}return clock;}/* eslint-enable complexity */return{timers:timers,createClock:createClock,install:install,withGlobal:withGlobal};}/**\n * @typedef {object} FakeTimers\n * @property {Timers} timers\n * @property {createClock} createClock\n * @property {Function} install\n * @property {withGlobal} withGlobal\n */ /* eslint-enable complexity */ /** @type {FakeTimers} */const defaultImplementation=withGlobal(globalObject);exports.timers=defaultImplementation.timers;exports.createClock=defaultImplementation.createClock;exports.install=defaultImplementation.install;exports.withGlobal=withGlobal;},{\"@sinonjs/commons\":159,\"util\":118}],173:[function(require,module,exports){/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/'use strict';/* eslint-disable no-unused-vars */var getOwnPropertySymbols=Object.getOwnPropertySymbols;var hasOwnProperty=Object.prototype.hasOwnProperty;var propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(val){if(val===null||val===undefined){throw new TypeError('Object.assign cannot be called with null or undefined');}return Object(val);}function shouldUseNative(){try{if(!Object.assign){return false;}// Detect buggy property enumeration order in older V8 versions.\n// https://bugs.chromium.org/p/v8/issues/detail?id=4118\nvar test1=new String('abc');// eslint-disable-line no-new-wrappers\ntest1[5]='de';if(Object.getOwnPropertyNames(test1)[0]==='5'){return false;}// https://bugs.chromium.org/p/v8/issues/detail?id=3056\nvar test2={};for(var i=0;i<10;i++){test2['_'+String.fromCharCode(i)]=i;}var order2=Object.getOwnPropertyNames(test2).map(function(n){return test2[n];});if(order2.join('')!=='0123456789'){return false;}// https://bugs.chromium.org/p/v8/issues/detail?id=3056\nvar test3={};'abcdefghijklmnopqrst'.split('').forEach(function(letter){test3[letter]=letter;});if(Object.keys(Object.assign({},test3)).join('')!=='abcdefghijklmnopqrst'){return false;}return true;}catch(err){// We don't expect any of the above to throw, but better to be safe.\nreturn false;}}module.exports=shouldUseNative()?Object.assign:function(target,source){var from;var to=toObject(target);var symbols;for(var s=1;s<arguments.length;s++){from=Object(arguments[s]);for(var key in from){if(hasOwnProperty.call(from,key)){to[key]=from[key];}}if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++){if(propIsEnumerable.call(from,symbols[i])){to[symbols[i]]=from[symbols[i]];}}}}return to;};},{}],174:[function(require,module,exports){var isarray=require('isarray');/**\n * Expose `pathToRegexp`.\n */module.exports=pathToRegexp;module.exports.parse=parse;module.exports.compile=compile;module.exports.tokensToFunction=tokensToFunction;module.exports.tokensToRegExp=tokensToRegExp;/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */var PATH_REGEXP=new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)',// Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'),'g');/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */function parse(str,options){var tokens=[];var key=0;var index=0;var path='';var defaultDelimiter=options&&options.delimiter||'/';var res;while((res=PATH_REGEXP.exec(str))!=null){var m=res[0];var escaped=res[1];var offset=res.index;path+=str.slice(index,offset);index=offset+m.length;// Ignore already escaped sequences.\nif(escaped){path+=escaped[1];continue;}var next=str[index];var prefix=res[2];var name=res[3];var capture=res[4];var group=res[5];var modifier=res[6];var asterisk=res[7];// Push the current path onto the tokens.\nif(path){tokens.push(path);path='';}var partial=prefix!=null&&next!=null&&next!==prefix;var repeat=modifier==='+'||modifier==='*';var optional=modifier==='?'||modifier==='*';var delimiter=res[2]||defaultDelimiter;var pattern=capture||group;tokens.push({name:name||key++,prefix:prefix||'',delimiter:delimiter,optional:optional,repeat:repeat,partial:partial,asterisk:!!asterisk,pattern:pattern?escapeGroup(pattern):asterisk?'.*':'[^'+escapeString(delimiter)+']+?'});}// Match any characters still remaining.\nif(index<str.length){path+=str.substr(index);}// If the path exists, push it onto the end.\nif(path){tokens.push(path);}return tokens;}/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */function compile(str,options){return tokensToFunction(parse(str,options),options);}/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */function encodeURIComponentPretty(str){return encodeURI(str).replace(/[\\/?#]/g,function(c){return'%'+c.charCodeAt(0).toString(16).toUpperCase();});}/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */function encodeAsterisk(str){return encodeURI(str).replace(/[?#]/g,function(c){return'%'+c.charCodeAt(0).toString(16).toUpperCase();});}/**\n * Expose a method for transforming tokens into the path function.\n */function tokensToFunction(tokens,options){// Compile all the tokens into regexps.\nvar matches=new Array(tokens.length);// Compile all the patterns before compilation.\nfor(var i=0;i<tokens.length;i++){if(typeof tokens[i]==='object'){matches[i]=new RegExp('^(?:'+tokens[i].pattern+')$',flags(options));}}return function(obj,opts){var path='';var data=obj||{};var options=opts||{};var encode=options.pretty?encodeURIComponentPretty:encodeURIComponent;for(var i=0;i<tokens.length;i++){var token=tokens[i];if(typeof token==='string'){path+=token;continue;}var value=data[token.name];var segment;if(value==null){if(token.optional){// Prepend partial segment prefixes.\nif(token.partial){path+=token.prefix;}continue;}else{throw new TypeError('Expected \"'+token.name+'\" to be defined');}}if(isarray(value)){if(!token.repeat){throw new TypeError('Expected \"'+token.name+'\" to not repeat, but received `'+JSON.stringify(value)+'`');}if(value.length===0){if(token.optional){continue;}else{throw new TypeError('Expected \"'+token.name+'\" to not be empty');}}for(var j=0;j<value.length;j++){segment=encode(value[j]);if(!matches[i].test(segment)){throw new TypeError('Expected all \"'+token.name+'\" to match \"'+token.pattern+'\", but received `'+JSON.stringify(segment)+'`');}path+=(j===0?token.prefix:token.delimiter)+segment;}continue;}segment=token.asterisk?encodeAsterisk(value):encode(value);if(!matches[i].test(segment)){throw new TypeError('Expected \"'+token.name+'\" to match \"'+token.pattern+'\", but received \"'+segment+'\"');}path+=token.prefix+segment;}return path;};}/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */function escapeString(str){return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g,'\\\\$1');}/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */function escapeGroup(group){return group.replace(/([=!:$\\/()])/g,'\\\\$1');}/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */function attachKeys(re,keys){re.keys=keys;return re;}/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */function flags(options){return options&&options.sensitive?'':'i';}/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */function regexpToRegexp(path,keys){// Use a negative lookahead to match only capturing groups.\nvar groups=path.source.match(/\\((?!\\?)/g);if(groups){for(var i=0;i<groups.length;i++){keys.push({name:i,prefix:null,delimiter:null,optional:false,repeat:false,partial:false,asterisk:false,pattern:null});}}return attachKeys(path,keys);}/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */function arrayToRegexp(path,keys,options){var parts=[];for(var i=0;i<path.length;i++){parts.push(pathToRegexp(path[i],keys,options).source);}var regexp=new RegExp('(?:'+parts.join('|')+')',flags(options));return attachKeys(regexp,keys);}/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */function stringToRegexp(path,keys,options){return tokensToRegExp(parse(path,options),keys,options);}/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */function tokensToRegExp(tokens,keys,options){if(!isarray(keys)){options=/** @type {!Object} */keys||options;keys=[];}options=options||{};var strict=options.strict;var end=options.end!==false;var route='';// Iterate over the tokens and create our regexp string.\nfor(var i=0;i<tokens.length;i++){var token=tokens[i];if(typeof token==='string'){route+=escapeString(token);}else{var prefix=escapeString(token.prefix);var capture='(?:'+token.pattern+')';keys.push(token);if(token.repeat){capture+='(?:'+prefix+capture+')*';}if(token.optional){if(!token.partial){capture='(?:'+prefix+'('+capture+'))?';}else{capture=prefix+'('+capture+')?';}}else{capture=prefix+'('+capture+')';}route+=capture;}}var delimiter=escapeString(options.delimiter||'/');var endsWithDelimiter=route.slice(-delimiter.length)===delimiter;// In non-strict mode we allow a slash at the end of match. If the path to\n// match already ends with a slash, we remove it for consistency. The slash\n// is valid at the end of a path match, not in the middle. This is important\n// in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\nif(!strict){route=(endsWithDelimiter?route.slice(0,-delimiter.length):route)+'(?:'+delimiter+'(?=$))?';}if(end){route+='$';}else{// In non-ending mode, we need the capturing groups to match as much as\n// possible by using a positive lookahead to the end or next path segment.\nroute+=strict&&endsWithDelimiter?'':'(?='+delimiter+'|$)';}return attachKeys(new RegExp('^'+route,flags(options)),keys);}/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */function pathToRegexp(path,keys,options){if(!isarray(keys)){options=/** @type {!Object} */keys||options;keys=[];}options=options||{};if(path instanceof RegExp){return regexpToRegexp(path,/** @type {!Array} */keys);}if(isarray(path)){return arrayToRegexp(/** @type {!Array} */path,/** @type {!Array} */keys,options);}return stringToRegexp(/** @type {string} */path,/** @type {!Array} */keys,options);}},{\"isarray\":175}],175:[function(require,module,exports){module.exports=Array.isArray||function(arr){return Object.prototype.toString.call(arr)=='[object Array]';};},{}],176:[function(require,module,exports){// shim for using process in browser\nvar process=module.exports={};// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations\nreturn setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined\nif((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\nreturn cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\nreturn cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations\nreturn clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined\nif((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\nreturn cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n// Some versions of I.E. have different rules for clearTimeout vs setTimeout\nreturn cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects\nfunction Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues\nprocess.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return'/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};},{}],177:[function(require,module,exports){'use strict';module.exports={stdout:false,stderr:false};},{}],178:[function(require,module,exports){var nextTick=require('process/browser.js').nextTick;var apply=Function.prototype.apply;var slice=Array.prototype.slice;var immediateIds={};var nextImmediateId=0;// DOM APIs, for completeness\nexports.setTimeout=function(){return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout);};exports.setInterval=function(){return new Timeout(apply.call(setInterval,window,arguments),clearInterval);};exports.clearTimeout=exports.clearInterval=function(timeout){timeout.close();};function Timeout(id,clearFn){this._id=id;this._clearFn=clearFn;}Timeout.prototype.unref=Timeout.prototype.ref=function(){};Timeout.prototype.close=function(){this._clearFn.call(window,this._id);};// Does not start the time, just sets up the members needed.\nexports.enroll=function(item,msecs){clearTimeout(item._idleTimeoutId);item._idleTimeout=msecs;};exports.unenroll=function(item){clearTimeout(item._idleTimeoutId);item._idleTimeout=-1;};exports._unrefActive=exports.active=function(item){clearTimeout(item._idleTimeoutId);var msecs=item._idleTimeout;if(msecs>=0){item._idleTimeoutId=setTimeout(function onTimeout(){if(item._onTimeout)item._onTimeout();},msecs);}};// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate=typeof setImmediate===\"function\"?setImmediate:function(fn){var id=nextImmediateId++;var args=arguments.length<2?false:slice.call(arguments,1);immediateIds[id]=true;nextTick(function onNextTick(){if(immediateIds[id]){// fn.call() is faster so we optimize for the common use-case\n// @see http://jsperf.com/call-apply-segu\nif(args){fn.apply(null,args);}else{fn.call(null);}// Prevent ids from leaking\nexports.clearImmediate(id);}});return id;};exports.clearImmediate=typeof clearImmediate===\"function\"?clearImmediate:function(id){delete immediateIds[id];};},{\"process/browser.js\":176}],179:[function(require,module,exports){(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):global.typeDetect=factory();})(this,function(){'use strict';/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */var promiseExists=typeof Promise==='function';/* eslint-disable no-undef */var globalObject=typeof self==='object'?self:global;// eslint-disable-line id-blacklist\nvar symbolExists=typeof Symbol!=='undefined';var mapExists=typeof Map!=='undefined';var setExists=typeof Set!=='undefined';var weakMapExists=typeof WeakMap!=='undefined';var weakSetExists=typeof WeakSet!=='undefined';var dataViewExists=typeof DataView!=='undefined';var symbolIteratorExists=symbolExists&&typeof Symbol.iterator!=='undefined';var symbolToStringTagExists=symbolExists&&typeof Symbol.toStringTag!=='undefined';var setEntriesExists=setExists&&typeof Set.prototype.entries==='function';var mapEntriesExists=mapExists&&typeof Map.prototype.entries==='function';var setIteratorPrototype=setEntriesExists&&Object.getPrototypeOf(new Set().entries());var mapIteratorPrototype=mapEntriesExists&&Object.getPrototypeOf(new Map().entries());var arrayIteratorExists=symbolIteratorExists&&typeof Array.prototype[Symbol.iterator]==='function';var arrayIteratorPrototype=arrayIteratorExists&&Object.getPrototypeOf([][Symbol.iterator]());var stringIteratorExists=symbolIteratorExists&&typeof String.prototype[Symbol.iterator]==='function';var stringIteratorPrototype=stringIteratorExists&&Object.getPrototypeOf(''[Symbol.iterator]());var toStringLeftSliceLength=8;var toStringRightSliceLength=-1;/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */function typeDetect(obj){/* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */var typeofObj=typeof obj;if(typeofObj!=='object'){return typeofObj;}/* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */if(obj===null){return'null';}/* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */if(obj===globalObject){return'global';}/* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */if(Array.isArray(obj)&&(symbolToStringTagExists===false||!(Symbol.toStringTag in obj))){return'Array';}// Not caching existence of `window` and related properties due to potential\n// for `window` to be unset before tests in quasi-browser environments.\nif(typeof window==='object'&&window!==null){/* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */if(typeof window.location==='object'&&obj===window.location){return'Location';}/* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */if(typeof window.document==='object'&&obj===window.document){return'Document';}if(typeof window.navigator==='object'){/* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */if(typeof window.navigator.mimeTypes==='object'&&obj===window.navigator.mimeTypes){return'MimeTypeArray';}/* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */if(typeof window.navigator.plugins==='object'&&obj===window.navigator.plugins){return'PluginArray';}}if((typeof window.HTMLElement==='function'||typeof window.HTMLElement==='object')&&obj instanceof window.HTMLElement){/* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */if(obj.tagName==='BLOCKQUOTE'){return'HTMLQuoteElement';}/* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */if(obj.tagName==='TD'){return'HTMLTableDataCellElement';}/* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */if(obj.tagName==='TH'){return'HTMLTableHeaderCellElement';}}}/* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */var stringTag=symbolToStringTagExists&&obj[Symbol.toStringTag];if(typeof stringTag==='string'){return stringTag;}var objPrototype=Object.getPrototypeOf(obj);/* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */if(objPrototype===RegExp.prototype){return'RegExp';}/* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */if(objPrototype===Date.prototype){return'Date';}/* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */if(promiseExists&&objPrototype===Promise.prototype){return'Promise';}/* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */if(setExists&&objPrototype===Set.prototype){return'Set';}/* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */if(mapExists&&objPrototype===Map.prototype){return'Map';}/* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */if(weakSetExists&&objPrototype===WeakSet.prototype){return'WeakSet';}/* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */if(weakMapExists&&objPrototype===WeakMap.prototype){return'WeakMap';}/* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */if(dataViewExists&&objPrototype===DataView.prototype){return'DataView';}/* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */if(mapExists&&objPrototype===mapIteratorPrototype){return'Map Iterator';}/* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */if(setExists&&objPrototype===setIteratorPrototype){return'Set Iterator';}/* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */if(arrayIteratorExists&&objPrototype===arrayIteratorPrototype){return'Array Iterator';}/* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */if(stringIteratorExists&&objPrototype===stringIteratorPrototype){return'String Iterator';}/* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */if(objPrototype===null){return'Object';}return Object.prototype.toString.call(obj).slice(toStringLeftSliceLength,toStringRightSliceLength);}return typeDetect;});},{}]},{},[2]);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sinon);const _leakThreshold=sinon.leakThreshold;const _assert=sinon.assert;const _serverPrototype=sinon.serverPrototype;const _getFakes=sinon.getFakes;const _createStubInstance=sinon.createStubInstance;const _inject=sinon.inject;const _mock=sinon.mock;const _reset=sinon.reset;const _resetBehavior=sinon.resetBehavior;const _resetHistory=sinon.resetHistory;const _restore=sinon.restore;const _restoreContext=sinon.restoreContext;const _replace=sinon.replace;const _define=sinon.define;const _replaceGetter=sinon.replaceGetter;const _replaceSetter=sinon.replaceSetter;const _spy=sinon.spy;const _stub=sinon.stub;const _fake=sinon.fake;const _useFakeTimers=sinon.useFakeTimers;const _verify=sinon.verify;const _verifyAndRestore=sinon.verifyAndRestore;const _useFakeServer=sinon.useFakeServer;const _useFakeXMLHttpRequest=sinon.useFakeXMLHttpRequest;const _usingPromise=sinon.usingPromise;const _createSandbox=sinon.createSandbox;const _match=sinon.match;const _restoreObject=sinon.restoreObject;const _expectation=sinon.expectation;const _defaultConfig=sinon.defaultConfig;const _timers=sinon.timers;const _xhr=sinon.xhr;const _FakeXMLHttpRequest=sinon.FakeXMLHttpRequest;const _fakeServer=sinon.fakeServer;const _fakeServerWithClock=sinon.fakeServerWithClock;const _createFakeServer=sinon.createFakeServer;const _createFakeServerWithClock=sinon.createFakeServerWithClock;const _addBehavior=sinon.addBehavior;const _promise=sinon.promise;\n\n//# sourceURL=webpack://__ember_auto_import__/../node_modules/sinon/pkg/sinon-esm.js?");

/***/ })

}]);