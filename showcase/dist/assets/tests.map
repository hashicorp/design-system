{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","showcase/tests/acceptance/components/hds/accordion-test.js","showcase/tests/acceptance/components/hds/alert-test.js","showcase/tests/acceptance/components/hds/app-footer-test.js","showcase/tests/acceptance/components/hds/app-header.js","showcase/tests/acceptance/components/hds/application-state-test.js","showcase/tests/acceptance/components/hds/badge-count-test.js","showcase/tests/acceptance/components/hds/badge-test.js","showcase/tests/acceptance/components/hds/breadcrumb-test.js","showcase/tests/acceptance/components/hds/button-set-test.js","showcase/tests/acceptance/components/hds/button-test.js","showcase/tests/acceptance/components/hds/card-test.js","showcase/tests/acceptance/components/hds/code-block-test.js","showcase/tests/acceptance/components/hds/dialog-primitive-test.js","showcase/tests/acceptance/components/hds/disclosure-primitive-test.js","showcase/tests/acceptance/components/hds/dismiss-button-test.js","showcase/tests/acceptance/components/hds/dropdown-test.js","showcase/tests/acceptance/components/hds/flyout-test.js","showcase/tests/acceptance/components/hds/form/checkbox-test.js","showcase/tests/acceptance/components/hds/form/primitives-test.js","showcase/tests/acceptance/components/hds/form/radio-card-test.js","showcase/tests/acceptance/components/hds/form/radio-test.js","showcase/tests/acceptance/components/hds/form/select-test.js","showcase/tests/acceptance/components/hds/form/super-select-test.js","showcase/tests/acceptance/components/hds/form/text-input-test.js","showcase/tests/acceptance/components/hds/form/textarea-test.js","showcase/tests/acceptance/components/hds/form/toggle-test.js","showcase/tests/acceptance/components/hds/icon-tile-test.js","showcase/tests/acceptance/components/hds/link/inline-test.js","showcase/tests/acceptance/components/hds/link/standalone-test.js","showcase/tests/acceptance/components/hds/modal-test.js","showcase/tests/acceptance/components/hds/page-header-test.js","showcase/tests/acceptance/components/hds/pagination-test.js","showcase/tests/acceptance/components/hds/reveal-test.js","showcase/tests/acceptance/components/hds/segmented-group-test.js","showcase/tests/acceptance/components/hds/separator-test.js","showcase/tests/acceptance/components/hds/side-nav-test.js","showcase/tests/acceptance/components/hds/stepper-test.js","showcase/tests/acceptance/components/hds/table-test.js","showcase/tests/acceptance/components/hds/tabs-test.js","showcase/tests/acceptance/components/hds/tag-test.js","showcase/tests/acceptance/components/hds/text-test.js","showcase/tests/acceptance/components/hds/toast-test.js","showcase/tests/acceptance/components/hds/tooltip-test.js","showcase/tests/acceptance/percy-test.js","showcase/tests/helpers/index.js","showcase/tests/integration/components/hds/accordion/index-test.js","showcase/tests/integration/components/hds/alert/index-test.js","showcase/tests/integration/components/hds/app-footer/copyright-test.js","showcase/tests/integration/components/hds/app-footer/index-test.js","showcase/tests/integration/components/hds/app-footer/item-test.js","showcase/tests/integration/components/hds/app-footer/legal-links-test.js","showcase/tests/integration/components/hds/app-footer/link-test.js","showcase/tests/integration/components/hds/app-footer/status-link-test.js","showcase/tests/integration/components/hds/app-frame/index-test.js","showcase/tests/integration/components/hds/app-header/home-link-test.js","showcase/tests/integration/components/hds/app-header/index-test.js","showcase/tests/integration/components/hds/application-state/body-test.js","showcase/tests/integration/components/hds/application-state/footer-test.js","showcase/tests/integration/components/hds/application-state/header-test.js","showcase/tests/integration/components/hds/application-state/index-test.js","showcase/tests/integration/components/hds/application-state/media-test.js","showcase/tests/integration/components/hds/badge-count/index-test.js","showcase/tests/integration/components/hds/badge/index-test.js","showcase/tests/integration/components/hds/breadcrumb/index-test.js","showcase/tests/integration/components/hds/breadcrumb/item-test.js","showcase/tests/integration/components/hds/breadcrumb/truncation-test.js","showcase/tests/integration/components/hds/button-set/index-test.js","showcase/tests/integration/components/hds/button/index-test.js","showcase/tests/integration/components/hds/card/container-test.js","showcase/tests/integration/components/hds/code-block/index-test.js","showcase/tests/integration/components/hds/copy/button/index-test.js","showcase/tests/integration/components/hds/copy/snippet/index-test.js","showcase/tests/integration/components/hds/dialog-primitive/body-test.js","showcase/tests/integration/components/hds/dialog-primitive/description-test.js","showcase/tests/integration/components/hds/dialog-primitive/footer-test.js","showcase/tests/integration/components/hds/dialog-primitive/header-test.js","showcase/tests/integration/components/hds/dialog-primitive/overlay-test.js","showcase/tests/integration/components/hds/dialog-primitive/wrapper-test.js","showcase/tests/integration/components/hds/disclosure-primitive/index-test.js","showcase/tests/integration/components/hds/dismiss-button/index-test.js","showcase/tests/integration/components/hds/dropdown/index-test.js","showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js","showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js","showcase/tests/integration/components/hds/dropdown/list-item/copy-item-test.js","showcase/tests/integration/components/hds/dropdown/list-item/description-test.js","showcase/tests/integration/components/hds/dropdown/list-item/generic-test.js","showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js","showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js","showcase/tests/integration/components/hds/dropdown/list-item/separator-test.js","showcase/tests/integration/components/hds/dropdown/list-item/title-test.js","showcase/tests/integration/components/hds/dropdown/toggle/button-test.js","showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js","showcase/tests/integration/components/hds/flight-icon/index-test.js","showcase/tests/integration/components/hds/flyout/index-test.js","showcase/tests/integration/components/hds/form/character-count/index-test.js","showcase/tests/integration/components/hds/form/checkbox/base-test.js","showcase/tests/integration/components/hds/form/checkbox/field-test.js","showcase/tests/integration/components/hds/form/checkbox/group-test.js","showcase/tests/integration/components/hds/form/error/index-test.js","showcase/tests/integration/components/hds/form/field/index-test.js","showcase/tests/integration/components/hds/form/fieldset/index-test.js","showcase/tests/integration/components/hds/form/file-input/base-test.js","showcase/tests/integration/components/hds/form/file-input/field-test.js","showcase/tests/integration/components/hds/form/helper-text/index-test.js","showcase/tests/integration/components/hds/form/label/index-test.js","showcase/tests/integration/components/hds/form/legend/index-test.js","showcase/tests/integration/components/hds/form/masked-input/base-test.js","showcase/tests/integration/components/hds/form/masked-input/field-test.js","showcase/tests/integration/components/hds/form/radio-card/group-test.js","showcase/tests/integration/components/hds/form/radio-card/index-test.js","showcase/tests/integration/components/hds/form/radio/base-test.js","showcase/tests/integration/components/hds/form/radio/field-test.js","showcase/tests/integration/components/hds/form/radio/group-test.js","showcase/tests/integration/components/hds/form/select/base-test.js","showcase/tests/integration/components/hds/form/select/field-test.js","showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js","showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js","showcase/tests/integration/components/hds/form/super-select/single/base-test.js","showcase/tests/integration/components/hds/form/super-select/single/field-test.js","showcase/tests/integration/components/hds/form/text-input/base-test.js","showcase/tests/integration/components/hds/form/text-input/field-test.js","showcase/tests/integration/components/hds/form/textarea/base-test.js","showcase/tests/integration/components/hds/form/textarea/field-test.js","showcase/tests/integration/components/hds/form/toggle/base-test.js","showcase/tests/integration/components/hds/form/toggle/field-test.js","showcase/tests/integration/components/hds/form/toggle/group-test.js","showcase/tests/integration/components/hds/form/visibility-toggle/index-test.js","showcase/tests/integration/components/hds/icon-tile/index-test.js","showcase/tests/integration/components/hds/icon/index-test.js","showcase/tests/integration/components/hds/interactive/index-test.js","showcase/tests/integration/components/hds/link/inline-test.js","showcase/tests/integration/components/hds/link/standalone-test.js","showcase/tests/integration/components/hds/menu-primitive/index-test.js","showcase/tests/integration/components/hds/modal/index-test.js","showcase/tests/integration/components/hds/page-header/index-test.js","showcase/tests/integration/components/hds/pagination/compact-test.js","showcase/tests/integration/components/hds/pagination/info-test.js","showcase/tests/integration/components/hds/pagination/nav/arrow-test.js","showcase/tests/integration/components/hds/pagination/nav/ellipsis-test.js","showcase/tests/integration/components/hds/pagination/nav/number-test.js","showcase/tests/integration/components/hds/pagination/numbered-test.js","showcase/tests/integration/components/hds/pagination/size-selector-test.js","showcase/tests/integration/components/hds/popover-primitive/index-test.js","showcase/tests/integration/components/hds/reveal/index-test.js","showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js","showcase/tests/integration/components/hds/rich-tooltip/index-test.js","showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js","showcase/tests/integration/components/hds/segmented-group/index-test.js","showcase/tests/integration/components/hds/separator/index-test.js","showcase/tests/integration/components/hds/side-nav/base-test.js","showcase/tests/integration/components/hds/side-nav/header/home-link-test.js","showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js","showcase/tests/integration/components/hds/side-nav/header/index-test.js","showcase/tests/integration/components/hds/side-nav/index-test.js","showcase/tests/integration/components/hds/side-nav/list/back-link-test.js","showcase/tests/integration/components/hds/side-nav/list/index-test.js","showcase/tests/integration/components/hds/side-nav/list/item-test.js","showcase/tests/integration/components/hds/side-nav/list/link-test.js","showcase/tests/integration/components/hds/side-nav/portal/index-test.js","showcase/tests/integration/components/hds/stepper/step-indicator-test.js","showcase/tests/integration/components/hds/stepper/task-indicator-test.js","showcase/tests/integration/components/hds/table/index-test.js","showcase/tests/integration/components/hds/table/td-test.js","showcase/tests/integration/components/hds/table/th-sort-test.js","showcase/tests/integration/components/hds/table/th-test.js","showcase/tests/integration/components/hds/table/tr-test.js","showcase/tests/integration/components/hds/tabs/index-test.js","showcase/tests/integration/components/hds/tag/index-test.js","showcase/tests/integration/components/hds/text/body-test.js","showcase/tests/integration/components/hds/text/code-test.js","showcase/tests/integration/components/hds/text/display-test.js","showcase/tests/integration/components/hds/text/index-test.js","showcase/tests/integration/components/hds/toast/index-test.js","showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js","showcase/tests/integration/components/hds/tooltip/tooltip-modifier-test.js","showcase/tests/integration/modifiers/hds-anchored-position-test.js","showcase/tests/integration/modifiers/hds-clipboard-test.js","showcase/tests/integration/modifiers/hds-register-event-test.js","showcase/tests/test-helper.js","showcase/tests/unit/components/hds/pagination/numbered-test.js","showcase/tests/unit/helpers/hds-link-to-models-test.js","showcase/tests/unit/helpers/hds-link-to-query-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"showcase/tests/acceptance/components/hds/accordion-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/accordion', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/accordion page passes automated a11y checks', async function (assert) {\n      const axeOptions = {\n        rules: {\n          'target-size': {\n            enabled: false,\n            selectors: [['.hds-accordion-item__button--size-small']]\n          }\n        }\n      };\n      await (0, _testHelpers.visit)('/components/accordion');\n      await (0, _testSupport.a11yAudit)(axeOptions);\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/alert-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/alert', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/alert page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/alert');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/app-footer-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Components | hds/app-footer', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/app-footer page passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/app-footer');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/app-header\", [\"qunit\", \"@ember/test-helpers\", \"dummy/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"dummy/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | components/app-header', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/app-header page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/app-header');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/application-state-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/application-state', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/application-state page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/application-state');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/badge-count-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/badge-count', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/badge-count passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/badge-count');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/badge-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/badge', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/badge passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/badge');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/breadcrumb-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/breadcrumb', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/breadcrumb passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/breadcrumb');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/button-set-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/button-set', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/button-set passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/button-set');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/button-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/button', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/button passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/button');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/card-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/card', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/card passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/card');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/code-block-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/code-block', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/code-block page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/code-block');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/dialog-primitive-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Utility | hds/dialog-primitive', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Utilities/hds/dialog-primitive page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/utilities/dialog-primitive');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/disclosure-primitive-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Utility | hds/disclosure-primitive', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Utilities/disclosure-primitive passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/utilities/disclosure-primitive');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/dismiss-button-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/dismiss-button', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/dismiss-button passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/utilities/dismiss-button');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/dropdown-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/dropdown', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.skip)('Components/dropdown passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/dropdown');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/flyout-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/flyout', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/flyout page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/flyout');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/checkbox-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/checkbox', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/checkbox page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/checkbox');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/primitives-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/primitives', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/primitives page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/base-elements');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/radio-card-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/radio card', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/radio-card page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/radio-card');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/radio-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/radio', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/radio passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/radio');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/select-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/select', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/select passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/select');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/super-select-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/super-select', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/super-select page passes automated a11y checks', async function (assert) {\n      let axeOptions = {\n        rules: {\n          // ARIA attribute is not allowed: aria-activedescendant\n          'aria-allowed-attr': {\n            enabled: false,\n            selectors: [['.ember-power-select-multiple-options']]\n          },\n          // Invalid ARIA attribute value: aria-activedescendant\n          'aria-valid-attr-value': {\n            enabled: false,\n            selectors: [['.ember-power-select-trigger']]\n          },\n          // ARIA role group is not allowed for given element\n          'aria-allowed-role': {\n            enabled: false,\n            selectors: [['.hds-form-super-select__option-group']]\n          }\n        }\n      };\n      await (0, _testHelpers.visit)('/components/form/super-select');\n      await (0, _testSupport.a11yAudit)(axeOptions);\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/text-input-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/text input', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/text-input passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/text-input');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/textarea-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/textarea', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/textarea passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/textarea');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/form/toggle-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/form/toggle', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('components/form/toggle passes a11y automated checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/form/toggle');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/icon-tile-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/icon-tile', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/icon-tile page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/icon-tile');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/link/inline-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/link/inline', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/link/inline page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/link/inline');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/link/standalone-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/link/standalone', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/link/standalone page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/link/standalone');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/modal-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/modal', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/modal page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/modal');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/page-header-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/page-header', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/page-header page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/page-header');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/pagination-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\"], function (_qunit, _testHelpers, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/pagination', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('interacting with the demo of a \"numbered\" pagination with routing', async function (assert) {\n      await (0, _testHelpers.visit)('/components/pagination');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination');\n      assert.dom('#demo2-numbered-with-routing .hds-table .hds-table__tbody .hds-table__tr').exists({\n        count: 5\n      });\n      await (0, _testHelpers.click)('#demo2-numbered-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-next');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPage_demo2=2&demoExtraParam=hello');\n      await (0, _testHelpers.click)('#demo2-numbered-with-routing .hds-pagination-nav__page-item:nth-child(4) a');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPage_demo2=4&demoExtraParam=hello');\n      await (0, _testHelpers.click)('#demo2-numbered-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-prev');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPage_demo2=3&demoExtraParam=hello');\n      await (0, _testHelpers.select)('#demo2-numbered-with-routing .hds-pagination .hds-pagination-size-selector select', '10');\n      assert.dom('#demo2-numbered-with-routing .hds-table .hds-table__tbody .hds-table__tr').exists({\n        count: 10\n      });\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPageSize_demo2=10&demoExtraParam=hello');\n      await (0, _testHelpers.click)('#demo2-numbered-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-next');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPageSize_demo2=10&currentPage_demo2=2&demoExtraParam=hello');\n    });\n    (0, _qunit.test)('interacting with the demo of a \"compact\" pagination with routing', async function (assert) {\n      await (0, _testHelpers.visit)('/components/pagination');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr').exists({\n        count: 5\n      });\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr .hds-table__td').hasText('1');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr:nth-child(5) .hds-table__td').hasText('5');\n\n      // CLICK \"NEXT\"\n      // ------------\n\n      await (0, _testHelpers.click)('#demo4-compact-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-next');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?demoExtraParam=hello&nextCursor_demo4=bmV4dF9fNg%3D%3D');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr').exists({\n        count: 5\n      });\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr .hds-table__td').hasText('6');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr:nth-child(5) .hds-table__td').hasText('10');\n\n      // CHANGE PAGE SIZE\n      // ----------------\n\n      await (0, _testHelpers.select)('#demo4-compact-with-routing .hds-pagination .hds-pagination-size-selector select', '10');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr').exists({\n        count: 10\n      });\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPageSize_demo4=10&demoExtraParam=hello&nextCursor_demo4=bmV4dF9fNg%3D%3D');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr .hds-table__td').hasText('6');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr:nth-child(10) .hds-table__td').hasText('15');\n\n      // CLICK \"NEXT\" + \"PREV\"\n      // ------------\n\n      await (0, _testHelpers.click)('#demo4-compact-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-next');\n      await (0, _testHelpers.click)('#demo4-compact-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-prev');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPageSize_demo4=10&demoExtraParam=hello&prevCursor_demo4=cHJldl9fMTY%3D');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr .hds-table__td').hasText('6');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr:nth-child(10) .hds-table__td').hasText('15');\n\n      // CLICK \"PREV\"\n      // ------------\n      // this is a special test to make sure that when the prev cursor is less than the page size the demo code still works (there was a bug before)\n\n      await (0, _testHelpers.click)('#demo4-compact-with-routing .hds-pagination .hds-pagination-nav__arrow--direction-prev');\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/components/pagination?currentPageSize_demo4=10&demoExtraParam=hello&prevCursor_demo4=cHJldl9fNg%3D%3D');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr')\n      // notice: even if the \"page size\" is 10, we see only 5 records because we are counting \"10 records before record #6\" and so only 5 records exist\n      .exists({\n        count: 5\n      });\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr .hds-table__td').hasText('1');\n      assert.dom('#demo4-compact-with-routing .hds-table .hds-table__tbody .hds-table__tr:nth-child(5) .hds-table__td').hasText('5');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/reveal-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/reveal', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/reveal page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/reveal');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/segmented-group-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/segmented-group', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/segmented-group page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/segmented-group');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/separator-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/separator', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/separator page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/separator');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/side-nav-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/side-nav', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/side-nav page passes a11y automated checks', async function (assert) {\n      let axeOptions = {\n        rules: {\n          listitem: {\n            enabled: false\n          },\n          'color-contrast': {\n            enabled: false,\n            selectors: [['.shw-placeholder']]\n          }\n        }\n      };\n      await (0, _testHelpers.visit)('/components/side-nav');\n      await (0, _testSupport.a11yAudit)(axeOptions);\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/stepper-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/stepper', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/stepper page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/stepper');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/table-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/table', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/table page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/table');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/tabs-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/tabs', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/tabs page passes a11y automated checks', async function (assert) {\n      let axeOptions = {\n        rules: {\n          listitem: {\n            enabled: false\n          },\n          'landmark-unique': {\n            enabled: false\n          }\n        }\n      };\n      await (0, _testHelpers.visit)('/components/tabs');\n      await (0, _testSupport.a11yAudit)(axeOptions);\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/tag-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/tag', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/tag page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/tag');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/text-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/text', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/text page passes automated a11y checks', async function (assert) {\n      let axeOptions = {\n        rules: {\n          'color-contrast': {\n            enabled: false\n          }\n        }\n      };\n      await (0, _testHelpers.visit)('/components/text');\n      await (0, _testSupport.a11yAudit)(axeOptions);\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/toast-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/toast', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/toast page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/toast');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/components/hds/tooltip-test\", [\"qunit\", \"@ember/test-helpers\", \"showcase/tests/helpers\", \"ember-a11y-testing/test-support\"], function (_qunit, _testHelpers, _helpers, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"showcase/tests/helpers\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Component | hds/tooltip', function (hooks) {\n    (0, _helpers.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Components/hds/tooltip page passes automated a11y checks', async function (assert) {\n      await (0, _testHelpers.visit)('/components/tooltip');\n      await (0, _testSupport.a11yAudit)();\n      assert.ok(true, 'a11y automation audit passed');\n    });\n  });\n});","define(\"showcase/tests/acceptance/percy-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\", \"@percy/ember\", \"showcase/config/environment\"], function (_qunit, _testHelpers, _emberQunit, _ember, _environment) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"ember-qunit\",0,\"@percy/ember\",0,\"showcase/config/environment\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Acceptance | Percy test', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    if (_environment.default.emberTryScenario) {\n      // eslint-disable-next-line no-console\n      console.log('Not running percy in ember-try');\n      return;\n    }\n    (0, _qunit.test)('Take percy snapshots', async function (assert) {\n      await (0, _testHelpers.visit)('/foundations/typography');\n      await (0, _ember.default)('Typography');\n      await (0, _testHelpers.visit)('/foundations/elevation');\n      await (0, _ember.default)('Elevation');\n      await (0, _testHelpers.visit)('/foundations/focus-ring');\n      await (0, _ember.default)('FocusRing');\n      await (0, _testHelpers.visit)('/components/accordion');\n      await (0, _ember.default)('Accordion');\n      await (0, _testHelpers.visit)('/components/alert');\n      await (0, _ember.default)('Alert');\n      await (0, _testHelpers.visit)('/components/app-footer');\n      await (0, _ember.default)('AppFooter');\n      await (0, _testHelpers.visit)('/components/app-header');\n      await (0, _ember.default)('AppHeader');\n      await (0, _testHelpers.visit)('/components/application-state');\n      await (0, _ember.default)('ApplicationState');\n      await (0, _testHelpers.visit)('/components/badge');\n      await (0, _ember.default)('Badge');\n      await (0, _testHelpers.visit)('components/badge-count');\n      await (0, _ember.default)('BadgeCount');\n      await (0, _testHelpers.visit)('/components/breadcrumb');\n      await (0, _ember.default)('Breadcrumb');\n      await (0, _testHelpers.visit)('/components/button');\n      await (0, _ember.default)('Button');\n      await (0, _testHelpers.visit)('/components/button-set');\n      await (0, _ember.default)('ButtonSet');\n      await (0, _testHelpers.visit)('/components/card');\n      await (0, _ember.default)('Card');\n      await (0, _testHelpers.visit)('/components/code-block');\n      await (0, _ember.default)('CodeBlock');\n      await (0, _testHelpers.visit)('/components/copy/button');\n      await (0, _ember.default)('CopyButton');\n      await (0, _testHelpers.visit)('/components/copy/snippet');\n      await (0, _ember.default)('CopySnippet');\n      await (0, _testHelpers.visit)('/components/dropdown');\n      await (0, _ember.default)('Dropdown');\n      await (0, _testHelpers.visit)('/components/flyout');\n      await (0, _ember.default)('Flyout');\n      await (0, _testHelpers.visit)('/components/form/base-elements');\n      await (0, _testHelpers.click)('button#dummy-toggle-highlight');\n      await (0, _ember.default)('Form - Base elements');\n      await (0, _testHelpers.visit)('/components/form/checkbox');\n      await (0, _ember.default)('Form - Checkbox');\n      await (0, _testHelpers.visit)('/components/form/file-input');\n      await (0, _ember.default)('Form - FileInput');\n      await (0, _testHelpers.visit)('/components/form/masked-input');\n      await (0, _ember.default)('Form - MaskedInput');\n      await (0, _testHelpers.visit)('/components/form/radio');\n      await (0, _ember.default)('Form - Radio');\n      await (0, _testHelpers.visit)('/components/form/radio-card');\n      await (0, _ember.default)('Form - RadioCard');\n      await (0, _testHelpers.visit)('/components/form/select');\n      await (0, _ember.default)('Form - Select');\n      await (0, _testHelpers.visit)('/components/form/super-select');\n      await (0, _ember.default)('Form - SuperSelect');\n      await (0, _testHelpers.visit)('/components/form/text-input');\n      await (0, _ember.default)('Form - TextInput');\n      await (0, _testHelpers.visit)('/components/form/textarea');\n      await (0, _ember.default)('Form - Textarea');\n      await (0, _testHelpers.visit)('/components/form/toggle');\n      await (0, _ember.default)('Form - Toggle');\n      await (0, _testHelpers.visit)('/components/icon');\n      await (0, _ember.default)('Icon');\n      await (0, _testHelpers.visit)('/components/icon-tile');\n      await (0, _ember.default)('IconTile');\n      await (0, _testHelpers.visit)('/components/link/inline');\n      await (0, _ember.default)('Link Inline');\n      await (0, _testHelpers.visit)('/components/link/standalone');\n      await (0, _ember.default)('Link Standalone');\n      await (0, _testHelpers.visit)('/components/modal');\n      await (0, _ember.default)('Modal');\n      await (0, _testHelpers.visit)('/components/page-header');\n      await (0, _ember.default)('PageHeader');\n      await (0, _testHelpers.visit)('/components/pagination');\n      await (0, _ember.default)('Pagination');\n      await (0, _testHelpers.visit)('/components/reveal');\n      await (0, _ember.default)('Reveal');\n      await (0, _testHelpers.visit)('/components/rich-tooltip');\n      await (0, _ember.default)('RichTooltip');\n      await (0, _testHelpers.visit)('/components/segmented-group');\n      await (0, _ember.default)('Segmented Group');\n      await (0, _testHelpers.visit)('/components/separator');\n      await (0, _ember.default)('Separator');\n      await (0, _testHelpers.visit)('/components/side-nav');\n      await (0, _ember.default)('SideNav');\n      await (0, _testHelpers.visit)('/components/stepper');\n      await (0, _ember.default)('Stepper');\n      await (0, _testHelpers.visit)('/components/table');\n      await (0, _ember.default)('Table');\n      await (0, _testHelpers.visit)('/components/tabs');\n      await (0, _ember.default)('Tabs');\n      await (0, _testHelpers.visit)('/components/tag');\n      await (0, _ember.default)('Tag');\n      await (0, _testHelpers.visit)('/components/text');\n      await (0, _ember.default)('Text');\n      await (0, _testHelpers.visit)('/components/toast');\n      await (0, _ember.default)('Toast');\n      await (0, _testHelpers.visit)('/components/tooltip');\n      await (0, _ember.default)('Tooltip');\n      await (0, _testHelpers.visit)('/layouts/app-frame');\n      await (0, _ember.default)('AppFrame');\n      await (0, _testHelpers.visit)('/overrides/power-select');\n      await (0, _ember.default)('PowerSelect');\n      await (0, _testHelpers.visit)('/utilities/dialog-primitive');\n      await (0, _ember.default)('DialogPrimitive');\n      await (0, _testHelpers.visit)('/utilities/dismiss-button');\n      await (0, _ember.default)('DismissButton');\n      await (0, _testHelpers.visit)('/utilities/popover-primitive');\n      await (0, _ember.default)('PopoverPrimitive');\n\n      // DO NOT REMOVE – PERCY SNAPSHOTS END\n\n      assert.ok(true);\n    });\n  });\n});","define(\"showcase/tests/helpers/index\", [\"exports\", \"ember-qunit\"], function (_exports, _emberQunit) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.setupApplicationTest = setupApplicationTest;\n  _exports.setupRenderingTest = setupRenderingTest;\n  _exports.setupTest = setupTest;\n  0; //eaimeta@70e063a35619d71f0,\"ember-qunit\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // This file exists to provide wrappers around ember-qunit's\n  // test setup functions. This way, you can easily extend the setup that is\n  // needed per test type.\n\n  function setupApplicationTest(hooks, options) {\n    (0, _emberQunit.setupApplicationTest)(hooks, options);\n\n    // Additional setup for application tests can be done here.\n    //\n    // For example, if you need an authenticated session for each\n    // application test, you could do:\n    //\n    // hooks.beforeEach(async function () {\n    //   await authenticateSession(); // ember-simple-auth\n    // });\n    //\n    // This is also a good place to call test setup functions coming\n    // from other addons:\n    //\n    // setupIntl(hooks); // ember-intl\n    // setupMirage(hooks); // ember-cli-mirage\n  }\n  function setupRenderingTest(hooks, options) {\n    (0, _emberQunit.setupRenderingTest)(hooks, options);\n\n    // Additional setup for rendering tests can be done here.\n  }\n  function setupTest(hooks, options) {\n    (0, _emberQunit.setupTest)(hooks, options);\n\n    // Additional setup for unit tests can be done here.\n  }\n});","define(\"showcase/tests/integration/components/hds/accordion/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/accordion/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Accordion id=\"test-accordion\" />\n      */\n      {\n        \"id\": \"xpBhWYj/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-accordion\\\"]],null,null]],[],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion').hasClass('hds-accordion');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in Accordion Items', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Accordion as |A|>\n              <A.Item>\n                <:toggle>Item one</:toggle>\n                <:content>Content one</:content>\n              </A.Item>\n              <A.Item>\n                <:toggle>Item two</:toggle>\n                <:content>Content two</:content>\n              </A.Item>\n            </Hds::Accordion>\n          \n      */\n      {\n        \"id\": \"85fLjCM5\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Content one\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item two\\\"]],[]],[[[1,\\\"Content two\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion .hds-accordion-item').exists({\n        count: 2\n      });\n    });\n    (0, _qunit.test)('it renders the passed in content in the Accordion Item', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Accordion as |A|>\n              <A.Item>\n                <:toggle><strong id=\"test-strong\">Item one</strong></:toggle>\n                <:content><em id=\"test-em\">Content one</em></:content>\n              </A.Item>\n            </Hds::Accordion>\n          \n      */\n      {\n        \"id\": \"IW12yRZ/\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[10,\\\"strong\\\"],[14,1,\\\"test-strong\\\"],[12],[1,\\\"Item one\\\"],[13]],[]],[[[10,\\\"em\\\"],[14,1,\\\"test-em\\\"],[12],[1,\\\"Content one\\\"],[13]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\"strong\\\",\\\":content\\\",\\\"em\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('#test-strong').exists().hasText('Item one');\n      assert.dom('#test-em').exists().hasText('Content one');\n    });\n    (0, _qunit.test)('it renders a div when the @titleTag argument is not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Accordion as |A|>\n              <A.Item>\n                <:toggle>Item one</:toggle>\n                <:content>Content one</:content>\n              </A.Item>\n            </Hds::Accordion>\n          \n      */\n      {\n        \"id\": \"22Ki1h2Y\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Content one\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion-item__toggle-content').hasTagName('div');\n    });\n    (0, _qunit.test)('it renders the custom title tag when the @titleTag argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Accordion @titleTag='h2' as |A|>\n              <A.Item>\n                <:toggle>Item one</:toggle>\n                <:content>Content one</:content>\n              </A.Item>\n            </Hds::Accordion>\n          \n      */\n      {\n        \"id\": \"qEUnyv9/\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@titleTag\\\"],[\\\"h2\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Content one\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion-item__toggle-content').hasTagName('h2');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size as the default if no @size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion id=\"test-accordion\" as |A|>\n                <A.Item>Item</A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"t0svpYNp\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-accordion\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Item\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion').hasClass('hds-accordion--size-medium');\n      assert.dom('#test-accordion .hds-accordion-item').hasClass('hds-accordion-item--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class depending on the @size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion id=\"test-accordion\" @size=\"large\" as |A|>\n                <A.Item>Item</A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"RwDWL0hs\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-accordion\\\"]],[[\\\"@size\\\"],[\\\"large\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Item\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion').hasClass('hds-accordion--size-large');\n      assert.dom('#test-accordion .hds-accordion-item').hasClass('hds-accordion-item--size-large');\n    });\n    (0, _qunit.test)('it should render different CSS size classes when different @size arguments are provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion id=\"test-accordion\" @size=\"large\" as |A|>\n                <A.Item id=\"test-accordion-item1\">Item 1</A.Item>\n                <A.Item id=\"test-accordion-item2\" @size=\"small\">Item 2</A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"rrOKU+gu\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-accordion\\\"]],[[\\\"@size\\\"],[\\\"large\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-accordion-item1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Item 1\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-accordion-item2\\\"]],[[\\\"@size\\\"],[\\\"small\\\"]],[[\\\"default\\\"],[[[[1,\\\"Item 2\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion-item1').hasClass('hds-accordion-item--size-large');\n      assert.dom('#test-accordion-item2').hasClass('hds-accordion-item--size-small');\n    });\n\n    // TYPE\n\n    (0, _qunit.test)('it should render the card type as the default if no @type is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion id=\"test-accordion\" as |A|>\n                <A.Item>Item</A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"t0svpYNp\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-accordion\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Item\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion').hasClass('hds-accordion--type-card');\n      assert.dom('#test-accordion .hds-accordion-item').hasClass('hds-accordion-item--type-card');\n    });\n    (0, _qunit.test)('it should render the correct CSS type class depending on the @type', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion id=\"test-accordion\" @type=\"flush\" as |A|>\n                <A.Item>Item</A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"c/Jaadw9\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-accordion\\\"]],[[\\\"@type\\\"],[\\\"flush\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Item\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion').hasClass('hds-accordion--type-flush');\n      assert.dom('#test-accordion .hds-accordion-item').hasClass('hds-accordion-item--type-flush');\n    });\n    (0, _qunit.test)('it should render different CSS type class when different @type arguments are provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion id=\"test-accordion\" @type=\"flush\" as |A|>\n                <A.Item id=\"test-accordion-item1\">Item 1</A.Item>\n                <A.Item id=\"test-accordion-item2\" @type=\"card\">Item 2</A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"lPeQS6jk\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-accordion\\\"]],[[\\\"@type\\\"],[\\\"flush\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-accordion-item1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Item 1\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-accordion-item2\\\"]],[[\\\"@type\\\"],[\\\"card\\\"]],[[\\\"default\\\"],[[[[1,\\\"Item 2\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-accordion-item1').hasClass('hds-accordion-item--type-flush');\n      assert.dom('#test-accordion-item2').hasClass('hds-accordion-item--type-card');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it displays the correct value for aria-expanded on the AccordionItem when closed vs open', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item>\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"9Tj6cD/R\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion-item__button').hasAttribute('aria-expanded', 'false');\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('.hds-accordion-item__button').hasAttribute('aria-expanded', 'true');\n    });\n    (0, _qunit.test)('the AccordionItem toggle button has an aria-controls attribute with a value matching the content id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item>\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"9Tj6cD/R\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('.hds-accordion-item__button').hasAttribute('aria-controls');\n      assert.dom('.hds-accordion-item__content').hasAttribute('id');\n      assert.strictEqual(this.element.querySelector('.hds-accordion-item__button').getAttribute('aria-controls'), this.element.querySelector('.hds-accordion-item__content').getAttribute('id'));\n    });\n    (0, _qunit.test)('the AccordionItem toggle has an aria-labelledby attribute set to the id of the toggle text by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item>\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"9Tj6cD/R\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion-item__button').hasAttribute('aria-labelledby');\n      assert.dom('.hds-accordion-item__button').doesNotHaveAttribute('aria-label');\n      assert.strictEqual(this.element.querySelector('.hds-accordion-item__toggle-content').getAttribute('id'), this.element.querySelector('.hds-accordion-item__button').getAttribute('aria-labelledby'));\n    });\n    (0, _qunit.test)('the AccordionItem toggle has an aria-label attribute when the argument is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item @ariaLabel=\"Custom toggle label\">\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"LkDmq11I\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,[[\\\"@ariaLabel\\\"],[\\\"Custom toggle label\\\"]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion-item__button').hasAttribute('aria-label', 'Custom toggle label');\n      assert.dom('.hds-accordion-item__button').doesNotHaveAttribute('aria-labelledby');\n    });\n\n    // OPTIONS\n\n    // isOpen\n\n    (0, _qunit.test)('it displays content initially when @isOpen is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item @isOpen={{true}}>\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"bAEhcHas\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,[[\\\"@isOpen\\\"],[true]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Test content is displayed\n      assert.dom('.hds-accordion-item__content').exists().hasText('Additional content');\n      // Test that content is hidden after the toggle is triggered\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('.hds-accordion-item__content').doesNotExist();\n    });\n\n    // containsInteractive\n    (0, _qunit.test)('it displays the correct variant when containsInteractive is set to false vs. true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item id=\"test-contains-interactive--false\">\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n                <A.Item @containsInteractive={{true}} id=\"test-contains-interactive--true\">\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"XDSqDUvQ\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-contains-interactive--false\\\"]],null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-contains-interactive--true\\\"]],[[\\\"@containsInteractive\\\"],[true]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-contains-interactive--false').hasClass('hds-accordion-item--does-not-contain-interactive');\n      assert.dom('#test-contains-interactive--true').hasClass('hds-accordion-item--contains-interactive');\n    });\n\n    // isStatic\n    (0, _qunit.test)('it does not show the toggle button when @isStatic is set to true, ', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion as |A|>\n                <A.Item @isStatic={{true}}>\n                  <:toggle>Item one</:toggle>\n                  <:content>Additional content</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"C5IpgVlg\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,[[\\\"@isStatic\\\"],[true]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-accordion-item--is-static').exists();\n      assert.dom('.hds-accordion-item__button').hasStyle({\n        visibility: 'hidden'\n      });\n    });\n\n    // forceState\n    (0, _qunit.test)('it displays the correct content based on @forceState', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Accordion @forceState={{this.forceState}} as |A|>\n                <A.Item @isOpen={{true}}>\n                  <:toggle>Item one</:toggle>\n                  <:content>Content one</:content>\n                </A.Item>\n                <A.Item @isOpen={{false}}>\n                  <:toggle>Item one</:toggle>\n                  <:content>Content two</:content>\n                </A.Item>\n              </Hds::Accordion>\n            \n      */\n      {\n        \"id\": \"9eLWkGpj\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@forceState\\\"],[[30,0,[\\\"forceState\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,[[\\\"@isOpen\\\"],[true]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Content one\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Item\\\"]],null,[[\\\"@isOpen\\\"],[false]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Content two\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"A\\\"],false,[\\\"hds/accordion\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // first item open at rendering\n      assert.dom('.hds-accordion-item__content').exists({\n        count: 1\n      }).containsText('Content one');\n\n      // all items open via forceState (external override to open)\n      this.set('forceState', 'open');\n      assert.dom('.hds-accordion-item__content').exists({\n        count: 2\n      });\n\n      // first item closed via toggle (internal override to close)\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('.hds-accordion-item__content').exists({\n        count: 1\n      }).containsText('Content two');\n\n      // all items closed via forceState (external override to close)\n      this.set('forceState', 'close');\n      assert.dom('.hds-accordion-item__content').doesNotExist();\n\n      // first item open via toggle  (internal override to open)\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('.hds-accordion-item__content').exists({\n        count: 1\n      }).containsText('Content one');\n    });\n\n    // close\n\n    (0, _qunit.test)('it should hide the content when an accordion item triggers `close`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Accordion::Item>\n              <:toggle>Item one</:toggle>\n              <:content as |c|>\n                <button type=\"button\" {{on \"click\" c.close}}>Close</button>\n              </:content>\n            </Hds::Accordion::Item>\n          \n      */\n      {\n        \"id\": \"xaS7El4V\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,4,\\\"button\\\"],[4,[38,4],[\\\"click\\\",[30,1,[\\\"close\\\"]]],null],[12],[1,\\\"Close\\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"c\\\"],false,[\\\"hds/accordion/item\\\",\\\":toggle\\\",\\\":content\\\",\\\"button\\\",\\\"on\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.dom('.hds-accordion-item__content').exists();\n      await (0, _testHelpers.click)('.hds-accordion-item__content button');\n      assert.dom('.hds-accordion-item__content').doesNotExist();\n      assert.dom('.hds-accordion-item__content button').doesNotExist();\n    });\n\n    // onClickToggle\n\n    (0, _qunit.test)('it should call onClickToggle function', async function (assert) {\n      let state = 'close';\n      this.set('onClickToggle', () => state = state === 'open' ? state = 'close' : state = 'open');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Accordion::Item @forceState={{this.state}} @onClickToggle={{this.onClickToggle}}>\n              <:toggle>Item one</:toggle>\n              <:content>Content one</:content>\n            </Hds::Accordion::Item>\n          \n      */\n      {\n        \"id\": \"3B4POjYi\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@forceState\\\",\\\"@onClickToggle\\\"],[[30,0,[\\\"state\\\"]],[30,0,[\\\"onClickToggle\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Item one\\\"]],[]],[[[1,\\\"Content one\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/accordion/item\\\",\\\":toggle\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/accordion/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // closed by default\n      assert.dom('.hds-accordion-item__content').doesNotExist();\n      // toggle to open\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.strictEqual(state, 'open');\n      assert.dom('.hds-accordion-item__content').exists();\n      // toggle to close\n      await (0, _testHelpers.click)('.hds-accordion-item__button');\n      assert.strictEqual(state, 'close');\n      assert.dom('.hds-accordion-item__content').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/alert/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/alert/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" id=\"test-alert\" />\n      */\n      {\n        \"id\": \"k7E8fxB8\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert').hasClass('hds-alert');\n    });\n\n    // TYPE\n\n    (0, _qunit.test)('it should render the correct CSS type class depending on the @type prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"page\" id=\"test-alert\" />\n      */\n      {\n        \"id\": \"MHIzbfTS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"page\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert').hasClass('hds-alert--type-page');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should render an icon by default depending on the type and color', async function (assert) {\n      // here we don't test all the possible combinations, only some of them as precaution\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" />\n      */\n      {\n        \"id\": \"4MuSaW4/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-info').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"compact\" />\n      */\n      {\n        \"id\": \"D2Td5UhA\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"compact\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-info-fill').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @color=\"highlight\" />\n      */\n      {\n        \"id\": \"V328iyQk\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@color\\\"],[\\\"inline\\\",\\\"highlight\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-info').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @color=\"success\" />\n      */\n      {\n        \"id\": \"rA7iOtlE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@color\\\"],[\\\"inline\\\",\\\"success\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-check-circle').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @color=\"warning\" />\n      */\n      {\n        \"id\": \"6ms+6uYb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@color\\\"],[\\\"inline\\\",\\\"warning\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-alert-triangle').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @color=\"critical\" />\n      */\n      {\n        \"id\": \"oWcvx5Nc\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@color\\\"],[\\\"inline\\\",\\\"critical\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-alert-diamond').exists();\n    });\n    (0, _qunit.test)('if an icon is declared, the icon should render in the component and override the default one', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @icon=\"clipboard-copy\" />\n      */\n      {\n        \"id\": \"PbNyvA5t\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@icon\\\"],[\\\"inline\\\",\\\"clipboard-copy\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-clipboard-copy').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"compact\" @icon=\"clipboard-copy\" />\n      */\n      {\n        \"id\": \"F/x3hzZw\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@icon\\\"],[\\\"compact\\\",\\\"clipboard-copy\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-clipboard-copy').exists();\n    });\n    (0, _qunit.test)('it should display no icon when @icon is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @icon={{false}} />\n      */\n      {\n        \"id\": \"gV4rF2UL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@icon\\\"],[\\\"inline\\\",false]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon').doesNotExist();\n    });\n\n    // TEXT (TITLE + DESCRIPTION)\n\n    (0, _qunit.test)('it should render the title when the \"title\" contextual component is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" as |A|><A.Title>This is the title</A.Title></Hds::Alert>\n      */\n      {\n        \"id\": \"vGluMWE4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the title\\\"]],[]]]]]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('This is the title');\n    });\n    (0, _qunit.test)('it should render the description when the \"description\" contextual component is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" as |A|><A.Description>This is the description</A.Description></Hds::Alert>\n      */\n      {\n        \"id\": \"FZp4NWev\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the description\\\"]],[]]]]]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).hasText('This is the description');\n    });\n    (0, _qunit.test)('it should render rich HTML when the \"description\" contextual component contains HTML tags', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" as |A|><A.Description>Hello <strong>strong</strong> and <em>em</em> and <code>code</code> and <a href='#'>link</a></A.Description></Hds::Alert>\n      */\n      {\n        \"id\": \"gorvevqM\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Hello \\\"],[10,\\\"strong\\\"],[12],[1,\\\"strong\\\"],[13],[1,\\\" and \\\"],[10,\\\"em\\\"],[12],[1,\\\"em\\\"],[13],[1,\\\" and \\\"],[10,\\\"code\\\"],[12],[1,\\\"code\\\"],[13],[1,\\\" and \\\"],[10,3],[14,6,\\\"#\\\"],[12],[1,\\\"link\\\"],[13]],[]]]]]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\",\\\"strong\\\",\\\"em\\\",\\\"code\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-alert__description strong').exists().hasText('strong');\n      assert.dom('.hds-alert__description em').exists().hasText('em');\n      assert.dom('.hds-alert__description code').exists().hasText('code');\n      assert.dom('.hds-alert__description a').exists().hasText('link');\n    });\n    (0, _qunit.test)('it should render a div when the @tag argument is not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Alert @type=\"inline\" as |A|>\n              <A.Title>This is the title</A.Title>\n            </Hds::Alert>\n      */\n      {\n        \"id\": \"NEQHs0kC\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the title\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-alert__title').hasTagName('div');\n    });\n    (0, _qunit.test)('it should render the custom title tag when the @tag argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Alert @type=\"inline\" as |A|>\n              <A.Title @tag=\"h2\">This is the title</A.Title>\n            </Hds::Alert>\n      */\n      {\n        \"id\": \"l7bSlN2P\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],null,[[\\\"@tag\\\"],[\\\"h2\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the title\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-alert__title').hasTagName('h2');\n    });\n\n    // ACTIONS\n\n    (0, _qunit.test)('it should render an Hds::Button component yielded to the \"actions\" container', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" aria-labelledby=\"test-alert-button\" id=\"test-alert\" as |A|><A.Button @text=\"I am a button\" @size=\"small\" @color=\"secondary\" id=\"test-alert-button\"/></Hds::Alert>\n      */\n      {\n        \"id\": \"KvbLZF+u\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-labelledby\\\",\\\"test-alert-button\\\"],[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Button\\\"]],[[24,1,\\\"test-alert-button\\\"]],[[\\\"@text\\\",\\\"@size\\\",\\\"@color\\\"],[\\\"I am a button\\\",\\\"small\\\",\\\"secondary\\\"]],null]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert .hds-alert__actions button').exists().hasClass('hds-button').hasClass('hds-button--size-small').hasClass('hds-button--color-secondary').hasText('I am a button');\n    });\n    (0, _qunit.test)('it should render an Hds::Link::Standalone component yielded to the \"actions\" container', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" aria-labelledby=\"test-alert-link\" id=\"test-alert\" as |A|><A.LinkStandalone @icon=\"plus\" @text=\"I am a link\" @href=\"#\" @size=\"small\" @color=\"secondary\" id=\"test-alert-link\" /></Hds::Alert>\n      */\n      {\n        \"id\": \"zKSBp6fX\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-labelledby\\\",\\\"test-alert-link\\\"],[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"LinkStandalone\\\"]],[[24,1,\\\"test-alert-link\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@href\\\",\\\"@size\\\",\\\"@color\\\"],[\\\"plus\\\",\\\"I am a link\\\",\\\"#\\\",\\\"small\\\",\\\"secondary\\\"]],null]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert .hds-alert__actions a').exists().hasClass('hds-link-standalone').hasClass('hds-link-standalone--size-small').hasClass('hds-link-standalone--color-secondary').hasText('I am a link');\n    });\n\n    // GENERIC\n\n    (0, _qunit.test)('it should render any content passed to the \"generic\" contextual component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" id=\"test-alert\" as |A|><A.Generic><pre>test</pre></A.Generic></Hds::Alert>\n      */\n      {\n        \"id\": \"KPi8z7dr\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Generic\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13]],[]]]]]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert .hds-alert__content pre').exists().hasText('test');\n    });\n\n    // DISMISS\n\n    (0, _qunit.test)('it should not render the \"dismiss\" button by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" />\n      */\n      {\n        \"id\": \"4MuSaW4/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"inline\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-alert__dismiss').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the \"dismiss\" button if a callback function is passed to the @onDismiss argument', async function (assert) {\n      this.set('NOOP', () => {});\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @onDismiss={{this.NOOP}} />\n      */\n      {\n        \"id\": \"vtNqv8BT\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@onDismiss\\\"],[\\\"inline\\\",[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-alert__dismiss').exists();\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct semantic tags and aria attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" id=\"test-alert\" />\n      */\n      {\n        \"id\": \"k7E8fxB8\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert').hasAttribute('role', 'alert');\n    });\n    (0, _qunit.test)('it should render with an `alertdialog` role and auto-generated `aria-labelledby` when title and actions are provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" id=\"test-alert\" as |A|><A.Title>This is the title</A.Title><A.Button @text=\"I am a button\" @size=\"small\" /></Hds::Alert>\n      */\n      {\n        \"id\": \"hsX0CCJo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the title\\\"]],[]]]]],[8,[30,1,[\\\"Button\\\"]],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"I am a button\\\",\\\"small\\\"]],null]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      let title = this.element.querySelector('#test-alert .hds-alert__title');\n      assert.dom('#test-alert').hasAttribute('role', 'alertdialog');\n      assert.dom('#test-alert').hasAttribute('aria-labelledby', title.id);\n    });\n    (0, _qunit.test)('it should render with an `alertdialog` role and auto-generated `aria-labelledby` when description and actions are provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" id=\"test-alert\" as |A|><A.Description>This is the title</A.Description><A.Button @text=\"I am a button\" @size=\"small\" /></Hds::Alert>\n      */\n      {\n        \"id\": \"EzmL0Spp\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the title\\\"]],[]]]]],[8,[30,1,[\\\"Button\\\"]],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"I am a button\\\",\\\"small\\\"]],null]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      let description = this.element.querySelector('#test-alert .hds-alert__description');\n      assert.dom('#test-alert').hasAttribute('role', 'alertdialog');\n      assert.dom('#test-alert').hasAttribute('aria-labelledby', description.id);\n    });\n    (0, _qunit.test)('it should render with an `alertdialog` role and `aria-labelledby` when title and actions are provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" id=\"test-alert\" as |A|><A.Title id=\"custom-id\">This is the title</A.Title><A.Button @text=\"I am a button\" @size=\"small\" /></Hds::Alert>\n      */\n      {\n        \"id\": \"5be2ZiRR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-alert\\\"]],[[\\\"@type\\\"],[\\\"inline\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Title\\\"]],[[24,1,\\\"custom-id\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"This is the title\\\"]],[]]]]],[8,[30,1,[\\\"Button\\\"]],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"I am a button\\\",\\\"small\\\"]],null]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-alert').hasAttribute('role', 'alertdialog');\n      assert.dom('#test-alert').hasAttribute('aria-labelledby', 'custom-id');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @type is provided', async function (assert) {\n      const errorMessage = '@type for \"Hds::Alert\" must be one of the following: page, inline, compact; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"foo\" />\n      */\n      {\n        \"id\": \"Tdn0EOAQ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if a \"compact\" alerts is rendered with @icon equal to false', async function (assert) {\n      const errorMessage = '@icon for \"Hds::Alert\" with @type \"compact\" is required';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"compact\" @icon={{false}} />\n      */\n      {\n        \"id\": \"uJ2b6FqW\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@icon\\\"],[\\\"compact\\\",false]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Alert\" must be one of the following: neutral, highlight, success, warning, critical; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Alert @type=\"inline\" @color=\"foo\" />\n      */\n      {\n        \"id\": \"Kt4QACtW\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@color\\\"],[\\\"inline\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/alert\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/alert/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-footer/copyright-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-footer/copyright', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const currentYear = new Date().getFullYear();\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter::Copyright id=\"test-copyright\" />\n      */\n      {\n        \"id\": \"NoggIFzd\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copyright\\\"]],null,null]],[],false,[\\\"hds/app-footer/copyright\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/copyright-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copyright').hasClass('hds-app-footer__copyright');\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it renders the copyright with the current year by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter::Copyright id=\"test-copyright\" />\n      */\n      {\n        \"id\": \"NoggIFzd\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copyright\\\"]],null,null]],[],false,[\\\"hds/app-footer/copyright\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/copyright-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copyright').includesText(currentYear);\n    });\n    (0, _qunit.test)('it renders the copyright with the passed in year value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter::Copyright id=\"test-copyright\" @year=\"1984\" />\n      */\n      {\n        \"id\": \"yncc6sFd\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copyright\\\"]],[[\\\"@year\\\"],[\\\"1984\\\"]],null]],[],false,[\\\"hds/app-footer/copyright\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/copyright-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copyright').includesText('1984');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-footer/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-footer/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter id=\"test-app-footer\" />\n      */\n      {\n        \"id\": \"se1vlQfj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-footer\\\"]],null,null]],[],false,[\\\"hds/app-footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-footer').hasClass('hds-app-footer');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the default content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter id=\"test-app-footer\"></Hds::AppFooter>\n      */\n      {\n        \"id\": \"4w5de3yK\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-footer\\\"]],null,[[\\\"default\\\"],[[[],[]]]]]],[],false,[\\\"hds/app-footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-app-footer__copyright').exists();\n    });\n    (0, _qunit.test)('it renders the passed in content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::AppFooter as |AF|>\n              <AF.ExtraBefore><span id=\"test-extra-before\">Before</span></AF.ExtraBefore>\n              <AF.Item id=\"test-custom-item\">Custom item</AF.Item>\n              <AF.Link @href=\"https://cloud.hashicorp.com\" id=\"test-custom-link\">\n                Custom link\n              </AF.Link>\n              <AF.StatusLink @status=\"operational\" id=\"test-status-link\" />\n              <AF.LegalLinks id=\"test-legal-links\" />\n              <AF.ExtraAfter><span id=\"test-extra-after\">After</span></AF.ExtraAfter>\n            </Hds::AppFooter>\n          \n      */\n      {\n        \"id\": \"PeMy+6VY\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ExtraBefore\\\"]],null,null,[[\\\"default\\\"],[[[[10,1],[14,1,\\\"test-extra-before\\\"],[12],[1,\\\"Before\\\"],[13]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-custom-item\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Custom item\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Link\\\"]],[[24,1,\\\"test-custom-link\\\"]],[[\\\"@href\\\"],[\\\"https://cloud.hashicorp.com\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Custom link\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"StatusLink\\\"]],[[24,1,\\\"test-status-link\\\"]],[[\\\"@status\\\"],[\\\"operational\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"LegalLinks\\\"]],[[24,1,\\\"test-legal-links\\\"]],null,null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ExtraAfter\\\"]],null,null,[[\\\"default\\\"],[[[[10,1],[14,1,\\\"test-extra-after\\\"],[12],[1,\\\"After\\\"],[13]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"AF\\\"],false,[\\\"hds/app-footer\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-extra-before').hasText('Before');\n      assert.dom('#test-custom-item').hasText('Custom item');\n      assert.dom('#test-custom-link').hasText('Custom link').hasAttribute('href', 'https://cloud.hashicorp.com');\n      assert.dom('#test-status-link').exists();\n      assert.dom('#test-legal-links').exists();\n      assert.dom('#test-extra-after').hasText('After');\n      assert.dom('.hds-app-footer__copyright').exists();\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it renders with the default \"light\" theme', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter id=\"test-app-footer\" />\n      */\n      {\n        \"id\": \"se1vlQfj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-footer\\\"]],null,null]],[],false,[\\\"hds/app-footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-footer').hasClass('hds-app-footer--theme-light');\n    });\n    (0, _qunit.test)('it renders with the passed in \"dark\" theme', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFooter id=\"test-app-footer\" @theme=\"dark\" />\n      */\n      {\n        \"id\": \"ZuPmsc3t\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-footer\\\"]],[[\\\"@theme\\\"],[\\\"dark\\\"]],null]],[],false,[\\\"hds/app-footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-footer').hasClass('hds-app-footer--theme-dark');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-footer/item-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-footer/item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::Item id=\"test-item\" /></ul>\n      */\n      {\n        \"id\": \"X/0l0aPu\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],[[24,1,\\\"test-item\\\"]],null,null],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-item').hasClass('hds-app-footer__list-item');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders text content yielded within the Item', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::Item id=\"test-item\">Custom item</Hds::AppFooter::Item></ul>\n      */\n      {\n        \"id\": \"LWyqbwgc\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],[[24,1,\\\"test-item\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Custom item\\\"]],[]]]]],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-item').hasText('Custom item');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-footer/legal-links-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-footer/legal-links', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::LegalLinks id=\"test-legal-links\" /></ul>\n      */\n      {\n        \"id\": \"g3LGMyoL\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],[[24,1,\\\"test-legal-links\\\"]],null,null],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/legal-links\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/legal-links-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-legal-links').hasClass('hds-app-footer__legal-links');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it contains the default links with default href values', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::LegalLinks id=\"test-legal-links\" /></ul>\n      */\n      {\n        \"id\": \"g3LGMyoL\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],[[24,1,\\\"test-legal-links\\\"]],null,null],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/legal-links\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/legal-links-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-legal-links li:nth-child(1) a').hasText('Support').hasAttribute('href', 'https://www.hashicorp.com/support');\n      assert.dom('#test-legal-links li:nth-child(2) a').hasText('Terms').hasAttribute('href', 'https://www.hashicorp.com/terms-of-service');\n      assert.dom('#test-legal-links li:nth-child(3) a').hasText('Privacy').hasAttribute('href', 'https://www.hashicorp.com/privacy');\n      assert.dom('#test-legal-links li:nth-child(4) a').hasText('Security').hasAttribute('href', 'https://www.hashicorp.com/security');\n      assert.dom('#test-legal-links li:nth-child(5) a').hasText('Accessibility').hasAttribute('href', 'https://www.hashicorp.com/accessibility');\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it uses the passed in custom href values', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <ul><Hds::AppFooter::LegalLinks \n              id=\"test-legal-links\"\n              @hrefForSupport=\"https://www.support.com\"\n              @hrefForTerms=\"https://www.terms.com\"\n              @hrefForPrivacy=\"https://www.privacy.com\"\n              @hrefForSecurity=\"https://www.security.com\"\n              @hrefForAccessibility=\"https://www.a11y.com\"\n            /></ul>\n          \n      */\n      {\n        \"id\": \"XoHscr9M\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"ul\\\"],[12],[8,[39,1],[[24,1,\\\"test-legal-links\\\"]],[[\\\"@hrefForSupport\\\",\\\"@hrefForTerms\\\",\\\"@hrefForPrivacy\\\",\\\"@hrefForSecurity\\\",\\\"@hrefForAccessibility\\\"],[\\\"https://www.support.com\\\",\\\"https://www.terms.com\\\",\\\"https://www.privacy.com\\\",\\\"https://www.security.com\\\",\\\"https://www.a11y.com\\\"]],null],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"ul\\\",\\\"hds/app-footer/legal-links\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/legal-links-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-legal-links li:nth-child(1) a').hasText('Support').hasAttribute('href', 'https://www.support.com');\n      assert.dom('#test-legal-links li:nth-child(2) a').hasText('Terms').hasAttribute('href', 'https://www.terms.com');\n      assert.dom('#test-legal-links li:nth-child(3) a').hasText('Privacy').hasAttribute('href', 'https://www.privacy.com');\n      assert.dom('#test-legal-links li:nth-child(4) a').hasText('Security').hasAttribute('href', 'https://www.security.com');\n      assert.dom('#test-legal-links li:nth-child(5) a').hasText('Accessibility').hasAttribute('href', 'https://www.a11y.com');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-footer/link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-footer/link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <ul>\n              <Hds::AppFooter::Link @href=\"https://cloud.hashicorp.com\" id=\"test-link\">\n                Custom link\n              </Hds::AppFooter::Link>\n            </ul>\n      */\n      {\n        \"id\": \"dHEsnf9L\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"ul\\\"],[12],[1,\\\"\\\\n        \\\"],[8,[39,1],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\"],[\\\"https://cloud.hashicorp.com\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Custom link\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-app-footer__link');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders text content yielded within the Link', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <ul>\n                <Hds::AppFooter::Link @href=\"https://cloud.hashicorp.com\" id=\"test-link\">\n                  Custom link\n                </Hds::AppFooter::Link>\n              </ul>\n      */\n      {\n        \"id\": \"3B2xjhMF\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[10,\\\"ul\\\"],[12],[1,\\\"\\\\n          \\\"],[8,[39,1],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\"],[\\\"https://cloud.hashicorp.com\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            Custom link\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasText('Custom link').hasAttribute('href', 'https://cloud.hashicorp.com');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-footer/status-link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-footer/status-link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::StatusLink @status=\"operational\" id=\"test-status-link\" /></ul>\n      */\n      {\n        \"id\": \"W3oYHqzf\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],[[24,1,\\\"test-status-link\\\"]],[[\\\"@status\\\"],[\\\"operational\\\"]],null],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/status-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/status-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-status-link').hasClass('hds-app-footer__status-link');\n    });\n\n    // OPTIONS\n\n    // status\n\n    (0, _qunit.test)('it should display text, icon, and icon color matching the passed in status', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul class=\"hds-app-footer hds-app-footer--theme-light\">\n              <Hds::AppFooter::StatusLink id=\"test-operational\" @status=\"operational\" />\n              <Hds::AppFooter::StatusLink id=\"test-degraded\" @status=\"degraded\" />\n              <Hds::AppFooter::StatusLink id=\"test-maintenance\" @status=\"maintenance\" />\n              <Hds::AppFooter::StatusLink id=\"test-outage\" @status=\"outage\" />\n            </ul>\n      */\n      {\n        \"id\": \"NU/wAXb8\",\n        \"block\": \"[[[10,\\\"ul\\\"],[14,0,\\\"hds-app-footer hds-app-footer--theme-light\\\"],[12],[1,\\\"\\\\n        \\\"],[8,[39,1],[[24,1,\\\"test-operational\\\"]],[[\\\"@status\\\"],[\\\"operational\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[39,1],[[24,1,\\\"test-degraded\\\"]],[[\\\"@status\\\"],[\\\"degraded\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[39,1],[[24,1,\\\"test-maintenance\\\"]],[[\\\"@status\\\"],[\\\"maintenance\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[39,1],[[24,1,\\\"test-outage\\\"]],[[\\\"@status\\\"],[\\\"outage\\\"]],null],[1,\\\"\\\\n      \\\"],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/status-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/status-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      // operational\n      assert.dom('#test-operational').hasText('System operational').hasClass('hds-app-footer__status-link--operational');\n      assert.dom('#test-operational .hds-icon-check-circle').hasStyle({\n        fill: 'rgb(0, 138, 34)'\n      });\n      // degraded\n      assert.dom('#test-degraded').hasText('System degraded').hasClass('hds-app-footer__status-link--degraded');\n      assert.dom('#test-degraded .hds-icon-alert-triangle').hasStyle({\n        fill: 'rgb(187, 90, 0)'\n      });\n      // maintenance\n      assert.dom('#test-maintenance').hasText('System maintenance').hasClass('hds-app-footer__status-link--maintenance');\n      assert.dom('#test-maintenance .hds-icon-alert-triangle').hasStyle({\n        fill: 'rgb(187, 90, 0)'\n      });\n      // outage\n      assert.dom('#test-outage').hasText('System outage').hasClass('hds-app-footer__status-link--outage');\n      assert.dom('#test-outage .hds-icon-x-circle').hasStyle({\n        fill: 'rgb(229, 34, 40)'\n      });\n    });\n\n    // text, statusIcon, statusIconColor\n\n    (0, _qunit.test)('it should display the custom text, icon color, and icon passed in', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <ul><Hds::AppFooter::StatusLink\n              @text=\"Waypoint\"\n              @statusIcon=\"waypoint\"\n              @statusIconColor=\"var(--token-color-waypoint-brand)\"\n            /></ul>\n          \n      */\n      {\n        \"id\": \"55O3qvOX\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"ul\\\"],[12],[8,[39,1],null,[[\\\"@text\\\",\\\"@statusIcon\\\",\\\"@statusIconColor\\\"],[\\\"Waypoint\\\",\\\"waypoint\\\",\\\"var(--token-color-waypoint-brand)\\\"]],null],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"ul\\\",\\\"hds/app-footer/status-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/status-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-app-footer__status-link').hasText('Waypoint');\n      assert.dom('.hds-app-footer__status-link .hds-icon').exists();\n      // .hasStyle({'--hds-app-footer-status-icon-color': 'var(--token-color-waypoint-brand)'})\n    });\n\n    // href\n\n    (0, _qunit.test)('it should use the passed in href for the link', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <ul><Hds::AppFooter::StatusLink @status=\"operational\" @href=\"https://www.hashicorp.com/custom-url\" /></ul>\n          \n      */\n      {\n        \"id\": \"k+ZH6hWE\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"ul\\\"],[12],[8,[39,1],null,[[\\\"@status\\\",\\\"@href\\\"],[\\\"operational\\\",\\\"https://www.hashicorp.com/custom-url\\\"]],null],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"ul\\\",\\\"hds/app-footer/status-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/status-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-app-footer__status-link').hasAttribute('href', 'https://www.hashicorp.com/custom-url');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if neither @text nor @status are provided', async function (assert) {\n      const errorMessage = 'Either @status or @text for \"Hds::AppFooter::StatusLink\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::StatusLink /></ul>\n      */\n      {\n        \"id\": \"H2SUyBiV\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],null,null,null],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/status-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/status-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @status is provided', async function (assert) {\n      const errorMessage = '@status for \"Hds::AppFooter\" must be one of the following: operational, degraded, maintenance, outage received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul><Hds::AppFooter::StatusLink @status=\"foo\" /></ul>\n      */\n      {\n        \"id\": \"zoaDBCm0\",\n        \"block\": \"[[[10,\\\"ul\\\"],[12],[8,[39,1],null,[[\\\"@status\\\"],[\\\"foo\\\"]],null],[13]],[],false,[\\\"ul\\\",\\\"hds/app-footer/status-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-footer/status-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-frame/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-frame/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppFrame id=\"test-app-frame\" />\n      */\n      {\n        \"id\": \"/peyF3pl\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-frame\\\"]],null,null]],[],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-frame').hasClass('hds-app-frame');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should yield the different content areas (and spreads attributes on them)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame id=\"test-app-frame\" data-test-app-frame as |Frame|>\n                <Frame.Header id=\"test-app-frame-header\" data-test-app-frame-header>\n                  header container\n                </Frame.Header>\n                <Frame.Sidebar id=\"test-app-frame-sidebar\" data-test-app-frame-sidebar>\n                  sidebar container\n                </Frame.Sidebar>\n                <Frame.Main id=\"test-app-frame-main\" data-test-app-frame-main>\n                  main container\n                </Frame.Main>\n                <Frame.Footer id=\"test-app-frame-footer\" data-test-app-frame-footer>\n                  footer container\n                </Frame.Footer>\n                <Frame.Modals id=\"test-app-frame-modals\" data-test-app-frame-modals>\n                  modals container\n                </Frame.Modals>\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"9IvWsE8f\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-app-frame\\\"],[24,\\\"data-test-app-frame\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Header\\\"]],[[24,1,\\\"test-app-frame-header\\\"],[24,\\\"data-test-app-frame-header\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            header container\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Sidebar\\\"]],[[24,1,\\\"test-app-frame-sidebar\\\"],[24,\\\"data-test-app-frame-sidebar\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            sidebar container\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Main\\\"]],[[24,1,\\\"test-app-frame-main\\\"],[24,\\\"data-test-app-frame-main\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            main container\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Footer\\\"]],[[24,1,\\\"test-app-frame-footer\\\"],[24,\\\"data-test-app-frame-footer\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            footer container\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Modals\\\"]],[[24,1,\\\"test-app-frame-modals\\\"],[24,\\\"data-test-app-frame-modals\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            modals container\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-frame[data-test-app-frame]').exists();\n\n      // Header\n\n      assert.dom('#test-app-frame-header[data-test-app-frame-header]').exists();\n      assert.dom('header.hds-app-frame__header').exists();\n      assert.dom('header.hds-app-frame__header').includesText('header container');\n\n      // Sidebar\n\n      assert.dom('#test-app-frame-sidebar[data-test-app-frame-sidebar]').exists();\n      assert.dom('aside.hds-app-frame__sidebar').exists();\n      assert.dom('aside.hds-app-frame__sidebar').includesText('sidebar container');\n\n      // Main\n\n      assert.dom('#test-app-frame-main[data-test-app-frame-main]').exists();\n      assert.dom('main.hds-app-frame__main').exists();\n      assert.dom('main.hds-app-frame__main').includesText('main container');\n\n      // Footer\n\n      assert.dom('#test-app-frame-footer[data-test-app-frame-footer]').exists();\n      assert.dom('footer.hds-app-frame__footer').exists();\n      assert.dom('footer.hds-app-frame__footer').includesText('footer container');\n\n      // Modals\n\n      assert.dom('#test-app-frame-modals[data-test-app-frame-modals]').exists();\n      assert.dom('div.hds-app-frame__modals').exists();\n      assert.dom('div.hds-app-frame__modals').includesText('modals container');\n    });\n\n    // OPTIONS\n\n    // hasHeader\n\n    (0, _qunit.test)('it should hide the header when @hasHeader is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame @hasHeader={{false}} as |Frame|>\n                <Frame.Header id=\"test-app-frame-header\" />\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"o9+OIWuI\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@hasHeader\\\"],[false]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Header\\\"]],[[24,1,\\\"test-app-frame-header\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-frame-header').doesNotExist();\n    });\n\n    // hasSidebar\n\n    (0, _qunit.test)('it should hide the sidebar when @hasSidebar is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame @hasSidebar={{false}} as |Frame|>\n                <Frame.Sidebar id=\"test-app-frame-sidebar\" />\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"6sxcTUhE\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@hasSidebar\\\"],[false]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Sidebar\\\"]],[[24,1,\\\"test-app-frame-sidebar\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-frame-sidebar').doesNotExist();\n    });\n\n    // hasFooter\n\n    (0, _qunit.test)('it should hide the sidebar when @hasFooter is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame @hasFooter={{false}} as |Frame|>\n                <Frame.Footer id=\"test-app-frame-footer\" />\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"PRy6s/Xq\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@hasFooter\\\"],[false]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Footer\\\"]],[[24,1,\\\"test-app-frame-footer\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-frame-sidebar').doesNotExist();\n    });\n\n    // hasModals\n\n    (0, _qunit.test)('it should hide the modals when @hasModals is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame @hasModals={{false}} as |Frame|>\n                <Frame.Modals id=\"test-app-frame-modals\" />\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"AbgJhKAG\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@hasModals\\\"],[false]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Modals\\\"]],[[24,1,\\\"test-app-frame-modals\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-frame-modals').doesNotExist();\n    });\n\n    // Main id\n    (0, _qunit.test)('it should have a default id of \"hds-main\" on the main container', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame as |Frame|>\n                <Frame.Main />\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"DWOU24JQ\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Main\\\"]],null,null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('main#hds-main').exists();\n    });\n    (0, _qunit.test)('it should allow a custom id for the main container to be passed in', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::AppFrame as |Frame|>\n                <Frame.Main id=\"test-main\" />\n              </Hds::AppFrame>\n          \n      */\n      {\n        \"id\": \"opsTUndf\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Main\\\"]],[[24,1,\\\"test-main\\\"]],null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Frame\\\"],false,[\\\"hds/app-frame\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-frame/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('main#test-main').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-header/home-link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-header/home-link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader::HomeLink @icon=\"hashicorp\" @ariaLabel=\"HashiCorp\" id=\"test-home-link\" />\n      */\n      {\n        \"id\": \"H7o8BcK4\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-home-link\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\"],[\\\"hashicorp\\\",\\\"HashiCorp\\\"]],null]],[],false,[\\\"hds/app-header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-home-link').hasClass('hds-app-header__home-link');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in args', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader::HomeLink @icon=\"hashicorp\" @ariaLabel=\"HashiCorp\" @href=\"https://www.hashicorp.com/\" id=\"test-home-link\" />\n      */\n      {\n        \"id\": \"3hleNkbR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-home-link\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\",\\\"@href\\\"],[\\\"hashicorp\\\",\\\"HashiCorp\\\",\\\"https://www.hashicorp.com/\\\"]],null]],[],false,[\\\"hds/app-header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-hashicorp').exists();\n      assert.dom('#test-home-link').hasAttribute('href', 'https://www.hashicorp.com/').hasAttribute('aria-label', 'HashiCorp');\n    });\n    (0, _qunit.test)('it renders the logo with a custom passed in color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader::HomeLink @icon=\"boundary\" @ariaLabel=\"Boundary\" @color=\"var(--token-color-boundary-brand)\" @href=\"#\" />\n      */\n      {\n        \"id\": \"7KKKnWlD\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@ariaLabel\\\",\\\"@color\\\",\\\"@href\\\"],[\\\"boundary\\\",\\\"Boundary\\\",\\\"var(--token-color-boundary-brand)\\\",\\\"#\\\"]],null]],[],false,[\\\"hds/app-header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-boundary').hasAttribute('fill', 'var(--token-color-boundary-brand)');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @ariaLabel is missing/has no value', async function (assert) {\n      const errorMessage = '@ariaLabel for \"Hds::AppHeader::HomeLink\" (\"Logo\") must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader::HomeLink @icon=\"hashicorp\" />\n      */\n      {\n        \"id\": \"gdM/W4Jx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"hashicorp\\\"]],null]],[],false,[\\\"hds/app-header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/app-header/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/app-header/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader id=\"test-app-header\" />\n      */\n      {\n        \"id\": \"BGrp+2N0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-header\\\"]],null,null]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-header').hasClass('hds-app-header');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders content passed into the globalActions and utilityActions named blocks', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::AppHeader>\n              <:logo>\n                <span id=\"test-global-item-before\">Global Item Before</span>\n              </:logo>\n              <:globalActions>\n                <span id=\"test-global-item-after\">Global Item After</span>\n              </:globalActions>\n              <:utilityActions>\n                <span id=\"test-utility-item\">Utility Item</span>\n              </:utilityActions>\n            </Hds::AppHeader>\n          \n      */\n      {\n        \"id\": \"IXbNtZdX\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"logo\\\",\\\"globalActions\\\",\\\"utilityActions\\\"],[[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-global-item-before\\\"],[12],[1,\\\"Global Item Before\\\"],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-global-item-after\\\"],[12],[1,\\\"Global Item After\\\"],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-utility-item\\\"],[12],[1,\\\"Utility Item\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/app-header\\\",\\\":logo\\\",\\\"span\\\",\\\":globalActions\\\",\\\":utilityActions\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-global-item-before').hasText('Global Item Before');\n      assert.dom('#test-global-item-after').hasText('Global Item After');\n      assert.dom('#test-utility-item').hasText('Utility Item');\n    });\n\n    // RESPONSIVENESS\n\n    (0, _qunit.test)('it is \"desktop\" by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader id=\"test-app-header\" />\n      */\n      {\n        \"id\": \"BGrp+2N0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-app-header\\\"]],null,null]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-header').hasClass('hds-app-header--is-desktop');\n    });\n    (0, _qunit.test)('it does not show a menu button on wide viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::AppHeader />\n          \n      */\n      {\n        \"id\": \"up/tgMXh\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-app-header__menu-button').doesNotExist();\n    });\n\n    // MOBILE\n\n    // Note: We set a high breakpoint to force the component to render as \"mobile\"\n\n    (0, _qunit.test)('it is \"mobile\" on narrow viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader id=\"test-app-header\" />\n          \n      */\n      {\n        \"id\": \"SPkfcj3X\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-app-header\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-header').hasClass('hds-app-header--is-mobile');\n    });\n    (0, _qunit.test)('it shows a menu button on narrow viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader />\n          \n      */\n      {\n        \"id\": \"J47zmj9Z\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-app-header__menu-button').exists();\n    });\n\n    // Mobile menu functionality\n    (0, _qunit.test)(`the actions do not display by default on narrow viewports`, async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader id=\"test-app-header\" />\n          \n      */\n      {\n        \"id\": \"SPkfcj3X\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-app-header\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-closed');\n    });\n    (0, _qunit.test)(`the actions show/hide when the menu button is pressed on narrow viewports`, async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader id=\"test-app-header\" />\n          \n      */\n      {\n        \"id\": \"SPkfcj3X\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-app-header\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-closed');\n      await (0, _testHelpers.click)('.hds-app-header__menu-button');\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-open');\n      await (0, _testHelpers.click)('.hds-app-header__menu-button');\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-closed');\n    });\n\n    // OPTIONS\n\n    // Breakpoint\n    // Note: We pass in a high custom breakpoint to force the component to render as \"mobile\"\n\n    (0, _qunit.test)('it uses the custom passed in breakpoint to control menu display', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::AppHeader @breakpoint=\"20000px\" />\n          \n      */\n      {\n        \"id\": \"O9DvQrie\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@breakpoint\\\"],[\\\"20000px\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-app-header__menu-button').exists();\n    });\n\n    // A11Y\n\n    (0, _qunit.test)(`it displays the correct value for aria-expanded when actions are displayed vs hidden`, async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader />\n          \n      */\n      {\n        \"id\": \"J47zmj9Z\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-app-header__menu-button');\n      assert.dom('.hds-app-header__menu-button').hasAttribute('aria-expanded', 'true');\n      await (0, _testHelpers.click)('.hds-app-header__menu-button');\n      assert.dom('.hds-app-header__menu-button').hasAttribute('aria-expanded', 'false');\n    });\n    (0, _qunit.test)('the actions menu collapses when the ESC key is pressed on narrow viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader id=\"test-app-header\" />\n          \n      */\n      {\n        \"id\": \"SPkfcj3X\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-app-header\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-closed');\n      await (0, _testHelpers.click)('.hds-app-header__menu-button');\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-open');\n      await (0, _testHelpers.triggerKeyEvent)('.hds-app-header__actions', 'keydown', 'Escape');\n      assert.dom('#test-app-header').hasClass('hds-app-header--menu-is-closed');\n    });\n    (0, _qunit.test)('the menu button has an aria-controls attribute with a value matching the menu id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10000px}</style>\n            <Hds::AppHeader />\n          \n      */\n      {\n        \"id\": \"J47zmj9Z\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10000px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-app-header__menu-button');\n      assert.dom('.hds-app-header__menu-button').hasAttribute('aria-controls');\n      assert.dom('.hds-app-header__actions').hasAttribute('id');\n      assert.strictEqual(this.element.querySelector('.hds-app-header__menu-button').getAttribute('aria-controls'), this.element.querySelector('.hds-app-header__actions').getAttribute('id'));\n    });\n\n    // A11Y Refocus\n\n    (0, _qunit.test)('it renders the `a11y-refocus` elements by default with a default skip link href value of \"#hds-main', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader />\n      */\n      {\n        \"id\": \"gUAK0AOC\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#ember-a11y-refocus-nav-message').exists();\n      assert.dom('#ember-a11y-refocus-skip-link').exists().hasAttribute('href', '#hds-main');\n    });\n    (0, _qunit.test)('it renders the `a11y-refocus` elements with the right properties provided as arguments', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::AppHeader\n              @a11yRefocusSkipTo=\"test-skip-to\"\n              @a11yRefocusSkipText=\"test-skip-text\"\n              @a11yRefocusNavigationText=\"test-navigation-text\"\n            />\n          \n      */\n      {\n        \"id\": \"EG0PBvM6\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@a11yRefocusSkipTo\\\",\\\"@a11yRefocusSkipText\\\",\\\"@a11yRefocusNavigationText\\\"],[\\\"test-skip-to\\\",\\\"test-skip-text\\\",\\\"test-navigation-text\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#ember-a11y-refocus-nav-message').hasText('test-navigation-text');\n      assert.dom('#ember-a11y-refocus-skip-link').hasText('test-skip-text');\n      assert.dom('#ember-a11y-refocus-skip-link').hasAttribute('href', '#test-skip-to');\n    });\n    (0, _qunit.test)('it does not render the `a11y-refocus` elements if `hasA11yRefocus` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::AppHeader @hasA11yRefocus={{false}} />\n      */\n      {\n        \"id\": \"pRuM21lG\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@hasA11yRefocus\\\"],[false]],null]],[],false,[\\\"hds/app-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/app-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#ember-a11y-refocus-nav-message').doesNotExist();\n      assert.dom('#ember-a11y-refocus-skip-link').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/application-state/body-test\", [\"qunit\", \"showcase/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"showcase/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/application-state/body', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Body id=\"test-application-state-body\" />\n      */\n      {\n        \"id\": \"8dQwMgj7\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-body\\\"]],null,null]],[],false,[\\\"hds/application-state/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-body').hasClass('hds-application-state__body');\n    });\n    (0, _qunit.test)('it should render the yielded content when used in block form', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Body id=\"test-application-state-body\">\n              <pre>test</pre>\n            </Hds::ApplicationState::Body>\n      */\n      {\n        \"id\": \"alepGVH7\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-body\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]]],[],false,[\\\"hds/application-state/body\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-body > pre').exists();\n      assert.dom('#test-application-state-body > pre').hasText('test');\n    });\n    (0, _qunit.test)('it should render the text if defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Body id=\"test-application-state-body\" @text=\"I am the only thing that should exist\"/>\n      */\n      {\n        \"id\": \"7qgaCQ2V\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-body\\\"]],[[\\\"@text\\\"],[\\\"I am the only thing that should exist\\\"]],null]],[],false,[\\\"hds/application-state/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-body').exists();\n      assert.dom('#test-application-state-body').hasText('I am the only thing that should exist');\n    });\n    (0, _qunit.test)('it should not render defined text if used in block form', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Body id=\"test-application-state-body\" @text=\"I should not exist\">\n              <pre>test should only exist</pre>\n            </Hds::ApplicationState::Body>\n      */\n      {\n        \"id\": \"VlYVO/Z1\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-body\\\"]],[[\\\"@text\\\"],[\\\"I should not exist\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,\\\"pre\\\"],[12],[1,\\\"test should only exist\\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]]],[],false,[\\\"hds/application-state/body\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-body > pre').exists();\n      assert.dom('#test-application-state-body > pre').hasText('test should only exist');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/application-state/footer-test\", [\"qunit\", \"showcase/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"showcase/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/application-state/footer', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::ApplicationState::Footer id=\"test-application-state-footer\">\n              template block text\n            </Hds::ApplicationState::Footer>\n          \n      */\n      {\n        \"id\": \"oKUeUAnX\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-application-state-footer\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/application-state/footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/footer-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-footer').hasClass('hds-application-state__footer');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it should render an Hds::Link::Standalone component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::ApplicationState::Footer id=\"test-application-state-footer\" as |F|>\n                <F.LinkStandalone @icon=\"arrow-left\" @text=\"Go back\" @href=\"/\"/>\n              </Hds::ApplicationState::Footer>\n            \n      */\n      {\n        \"id\": \"i+2ncZXl\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-application-state-footer\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"LinkStandalone\\\"]],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@href\\\"],[\\\"arrow-left\\\",\\\"Go back\\\",\\\"/\\\"]],null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"F\\\"],false,[\\\"hds/application-state/footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/footer-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-footer a').exists().hasClass('hds-link-standalone').hasText('Go back');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/application-state/header-test\", [\"qunit\", \"showcase/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"showcase/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/application-state/header', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Header @title=\"An error has occurred\" id=\"test-application-state-header\" />\n      */\n      {\n        \"id\": \"gcVCO0eW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-header\\\"]],[[\\\"@title\\\"],[\\\"An error has occurred\\\"]],null]],[],false,[\\\"hds/application-state/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-header').hasClass('hds-application-state__header');\n    });\n    (0, _qunit.test)('it should render an icon if @icon is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Header @title=\"An error has occurred\" id=\"test-application-state-header\" @icon=\"help\" @errorCode=\"404\" />\n      */\n      {\n        \"id\": \"xSBPuxXT\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-header\\\"]],[[\\\"@title\\\",\\\"@icon\\\",\\\"@errorCode\\\"],[\\\"An error has occurred\\\",\\\"help\\\",\\\"404\\\"]],null]],[],false,[\\\"hds/application-state/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon').exists();\n    });\n    (0, _qunit.test)('it should render an error code if @errorCode is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Header @title=\"An error has occurred\" id=\"test-application-state-header\" @icon=\"help\" @errorCode=\"404\" />\n      */\n      {\n        \"id\": \"xSBPuxXT\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-header\\\"]],[[\\\"@title\\\",\\\"@icon\\\",\\\"@errorCode\\\"],[\\\"An error has occurred\\\",\\\"help\\\",\\\"404\\\"]],null]],[],false,[\\\"hds/application-state/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-application-state__error-code').exists();\n    });\n    (0, _qunit.test)('it should render the title with a `div` tag if no `@titleTag` is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Header @title=\"An error has occurred\" id=\"test-application-state-header\" />\n      */\n      {\n        \"id\": \"gcVCO0eW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-header\\\"]],[[\\\"@title\\\"],[\\\"An error has occurred\\\"]],null]],[],false,[\\\"hds/application-state/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-application-state__title').hasTagName('div');\n    });\n    (0, _qunit.test)('it should render the title with the tag set for `@titleTag`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Header @title=\"An error has occurred\" @titleTag=\"h1\" id=\"test-application-state-header\" />\n      */\n      {\n        \"id\": \"3nGeErup\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-header\\\"]],[[\\\"@title\\\",\\\"@titleTag\\\"],[\\\"An error has occurred\\\",\\\"h1\\\"]],null]],[],false,[\\\"hds/application-state/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-application-state__title').hasTagName('h1');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/application-state/index-test\", [\"qunit\", \"showcase/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"showcase/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/application-state/index', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::ApplicationState id=\"test-application-state\">\n              template block text\n            </Hds::ApplicationState>\n          \n      */\n      {\n        \"id\": \"82xaEY/D\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-application-state\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state').hasClass('hds-application-state');\n    });\n    (0, _qunit.test)('it should have the correct alignment class when no alignment is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::ApplicationState id=\"test-application-state\">\n              template block text\n            </Hds::ApplicationState>\n          \n      */\n      {\n        \"id\": \"82xaEY/D\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-application-state\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state').hasClass('hds-application-state--align-left');\n    });\n    (0, _qunit.test)('it should have the correct alignment class when alignment is set to \"left\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::ApplicationState id=\"test-application-state\" @align=\"left\">\n              template block text\n            </Hds::ApplicationState>\n          \n      */\n      {\n        \"id\": \"uhHI0YHX\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-application-state\\\"]],[[\\\"@align\\\"],[\\\"left\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state').hasClass('hds-application-state--align-left');\n    });\n    (0, _qunit.test)('it should have the correct alignment class when alignment is set to \"center\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::ApplicationState id=\"test-application-state\" @align=\"center\">\n              template block text\n            </Hds::ApplicationState>\n          \n      */\n      {\n        \"id\": \"knpT/zIv\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-application-state\\\"]],[[\\\"@align\\\"],[\\\"center\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state').hasClass('hds-application-state--align-center');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState as |A|>\n                    <A.Media>ApplicationState Media</A.Media>\n                    <A.Header @title=\"ApplicationState Title\" />\n                    <A.Body>ApplicationState Body</A.Body>\n                    <A.Footer>ApplicationState Footer</A.Footer>\n                  </Hds::ApplicationState>\n      */\n      {\n        \"id\": \"b06LV+iR\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,1,[\\\"Media\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"ApplicationState Media\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,1,[\\\"Header\\\"]],null,[[\\\"@title\\\"],[\\\"ApplicationState Title\\\"]],null],[1,\\\"\\\\n              \\\"],[8,[30,1,[\\\"Body\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"ApplicationState Body\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,1,[\\\"Footer\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"ApplicationState Footer\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[1]]]]]],[\\\"A\\\"],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-application-state__media').hasText('ApplicationState Media');\n      assert.dom('.hds-application-state__header').hasText('ApplicationState Title');\n      assert.dom('.hds-application-state__body').hasText('ApplicationState Body');\n      assert.dom('.hds-application-state__footer').hasText('ApplicationState Footer');\n    });\n    (0, _qunit.test)('it does not render the contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState />\n      */\n      {\n        \"id\": \"xqigAenj\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-application-date__media').doesNotExist();\n      assert.dom('.hds-application-date__header').doesNotExist();\n      assert.dom('.hds-application-date__body').doesNotExist();\n      assert.dom('.hds-application-date__footer').doesNotExist();\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @alignment provided', async function (assert) {\n      const errorMessage = '@align for \"Hds::ApplicationState\" must be one of the following: left, center; received: test';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::ApplicationState id=\"test-application-state\" @align=\"test\">\n              template block text\n            </Hds::ApplicationState>\n          \n      */\n      {\n        \"id\": \"a4GN/bBu\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-application-state\\\"]],[[\\\"@align\\\"],[\\\"test\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/application-state\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/application-state/media-test\", [\"qunit\", \"showcase/tests/helpers\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _helpers, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"showcase/tests/helpers\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/application-state/media', function (hooks) {\n    (0, _helpers.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Media id=\"test-application-state-media\" />\n      */\n      {\n        \"id\": \"2qaEX161\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-media\\\"]],null,null]],[],false,[\\\"hds/application-state/media\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/media-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-media').hasClass('hds-application-state__media');\n    });\n    (0, _qunit.test)('it should render the yielded content when used in block form', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ApplicationState::Media id=\"test-application-state-media\">\n              <pre>test</pre>\n            </Hds::ApplicationState::Media>\n      */\n      {\n        \"id\": \"myySXRQf\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-application-state-media\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n      \\\"]],[]]]]]],[],false,[\\\"hds/application-state/media\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/application-state/media-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-application-state-media > pre').exists();\n      assert.dom('#test-application-state-media > pre').hasText('test');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/badge-count/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/badge-count/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" />\n      */\n      {\n        \"id\": \"sqM801XW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should have the default color if no @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" />\n      */\n      {\n        \"id\": \"sqM801XW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count--color-neutral');\n    });\n    (0, _qunit.test)('it should have the correct color class based on the @color prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" @color=\"neutral-dark-mode\" />\n      */\n      {\n        \"id\": \"LLws6vrN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\",\\\"@color\\\"],[\\\"text renders\\\",\\\"neutral-dark-mode\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count--color-neutral-dark-mode');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should have the medium size if no @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" />\n      */\n      {\n        \"id\": \"sqM801XW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count--size-medium');\n    });\n    (0, _qunit.test)('it should have the correct size class based on the @size prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" @size=\"small\" />\n      */\n      {\n        \"id\": \"sV8l3q8O\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\",\\\"@size\\\"],[\\\"text renders\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count--size-small');\n    });\n\n    // TYPE\n\n    (0, _qunit.test)('it should have the filled type if no @type prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" />\n      */\n      {\n        \"id\": \"sqM801XW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count--type-filled');\n    });\n    (0, _qunit.test)('it should have the correct type class based on the @type prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::BadgeCount @text=\"text renders\" id=\"test-badge-count\" @type=\"inverted\" />\n      */\n      {\n        \"id\": \"jD5GSwfR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge-count\\\"]],[[\\\"@text\\\",\\\"@type\\\"],[\\\"text renders\\\",\\\"inverted\\\"]],null]],[],false,[\\\"hds/badge-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge-count').hasClass('hds-badge-count--type-inverted');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/badge/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/badge/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" />\n      */\n      {\n        \"id\": \"mpz58k1x\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the neutral color as the default if no color is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" />\n      */\n      {\n        \"id\": \"mpz58k1x\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge--color-neutral');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" @color=\"highlight\" />\n      */\n      {\n        \"id\": \"63t66NY0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\",\\\"@color\\\"],[\\\"text renders\\\",\\\"highlight\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge--color-highlight');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size if no size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" />\n      */\n      {\n        \"id\": \"mpz58k1x\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" @size=\"small\" />\n      */\n      {\n        \"id\": \"pGohoxaA\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\",\\\"@size\\\"],[\\\"text renders\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge--size-small');\n    });\n\n    // TYPE\n\n    (0, _qunit.test)('it should render the filled type if no type is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" />\n      */\n      {\n        \"id\": \"mpz58k1x\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge--type-filled');\n    });\n    (0, _qunit.test)('it should render the correct CSS type class if @type prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" @type=\"inverted\" />\n      */\n      {\n        \"id\": \"mOLx31Zz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\",\\\"@type\\\"],[\\\"text renders\\\",\\\"inverted\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-badge').hasClass('hds-badge--type-inverted');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('if an icon is declared the flight icon should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"text renders\" id=\"test-badge\" @icon=\"activity\" />\n      */\n      {\n        \"id\": \"U5PCuI/F\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\",\\\"@icon\\\"],[\\\"text renders\\\",\\\"activity\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-activity').exists();\n    });\n    (0, _qunit.test)('if isIconOnly is set to true, visible text is hidden but text is still available to assistive technology', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Badge @text=\"meaningful text for icon only badge\" @isIconOnly={{true}} id=\"test-badge\" @icon=\"activity\" />\n      */\n      {\n        \"id\": \"YRhzhfrb\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-badge\\\"]],[[\\\"@text\\\",\\\"@isIconOnly\\\",\\\"@icon\\\"],[\\\"meaningful text for icon only badge\\\",true,\\\"activity\\\"]],null]],[],false,[\\\"hds/badge\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/badge/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.deepEqual(this.element.querySelector('.sr-only').textContent.trim(), 'meaningful text for icon only badge');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/breadcrumb/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/breadcrumb/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb id=\"test-breadcrumb\" />\n      */\n      {\n        \"id\": \"3N/f0UNU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb\\\"]],null,null]],[],false,[\\\"hds/breadcrumb\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb').hasClass('hds-breadcrumb');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @itemsCanWrap prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb @itemsCanWrap={{true}} id=\"test-breadcrumb\" />\n      */\n      {\n        \"id\": \"vMgWaQHW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb\\\"]],[[\\\"@itemsCanWrap\\\"],[true]],null]],[],false,[\\\"hds/breadcrumb\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb').hasClass('hds-breadcrumb--items-can-wrap');\n    });\n    (0, _qunit.test)('it should dispatch a didInsert event when the component is rendered', async function (assert) {\n      let inserted = false;\n      this.set('didInsert', () => inserted = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb id=\"test-breadcrumb\" @didInsert={{this.didInsert}} />\n      */\n      {\n        \"id\": \"tk08EPpf\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb\\\"]],[[\\\"@didInsert\\\"],[[30,0,[\\\"didInsert\\\"]]]],null]],[],false,[\\\"hds/breadcrumb\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.ok(inserted);\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct semantic tags', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb id=\"test-breadcrumb\" />\n      */\n      {\n        \"id\": \"3N/f0UNU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb\\\"]],null,null]],[],false,[\\\"hds/breadcrumb\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb').hasTagName('nav');\n      assert.dom('#test-breadcrumb').hasAria('label', 'breadcrumbs');\n      assert.dom('#test-breadcrumb > ol').exists();\n    });\n    (0, _qunit.test)('it should support a custom aria-label attribute', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb id=\"test-breadcrumb\" aria-label=\"my aria label\" />\n      */\n      {\n        \"id\": \"dxmILMON\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb\\\"],[24,\\\"aria-label\\\",\\\"my aria label\\\"]],null,null]],[],false,[\\\"hds/breadcrumb\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb').hasAria('label', 'my aria label');\n      assert.dom('#test-breadcrumb > ol').exists();\n    });\n    (0, _qunit.test)('it should have a fallback aria-label if no custom aria-label is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb id=\"test-breadcrumb\" />\n      */\n      {\n        \"id\": \"3N/f0UNU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb\\\"]],null,null]],[],false,[\\\"hds/breadcrumb\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb').hasAria('label', 'breadcrumbs');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/breadcrumb/item-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/breadcrumb/item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Item id=\"test-breadcrumb-item\" />\n      */\n      {\n        \"id\": \"O0g2wO39\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-item\\\"]],null,null]],[],false,[\\\"hds/breadcrumb/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-item').hasClass('hds-breadcrumb__item');\n    });\n    (0, _qunit.test)('it should render the correct style if the @maxWidth prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Item @maxWidth=\"200px\" @text=\"test\" id=\"test-breadcrumb-item\" />\n      */\n      {\n        \"id\": \"pdyOApPU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-item\\\"]],[[\\\"@maxWidth\\\",\\\"@text\\\"],[\\\"200px\\\",\\\"test\\\"]],null]],[],false,[\\\"hds/breadcrumb/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-item').hasStyle({\n        'max-width': '200px'\n      });\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render a link by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Item id=\"test-breadcrumb-item\" @text=\"text renders\" />\n      */\n      {\n        \"id\": \"jgqO/+yi\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-item\\\"]],[[\\\"@text\\\"],[\\\"text renders\\\"]],null]],[],false,[\\\"hds/breadcrumb/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-item > a').exists();\n    });\n    (0, _qunit.test)('it should not render a if @current is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Item id=\"test-breadcrumb-item\" @text=\"text renders\" @current={{true}} />\n      */\n      {\n        \"id\": \"dz7DW4xS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-item\\\"]],[[\\\"@text\\\",\\\"@current\\\"],[\\\"text renders\\\",true]],null]],[],false,[\\\"hds/breadcrumb/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-item > a').doesNotExist();\n      assert.dom('#test-breadcrumb-item .hds-breadcrumb__current').exists();\n    });\n    (0, _qunit.test)('it should render the item with icon and text if @icon and @text are provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Item id=\"test-breadcrumb-item\" @text=\"text renders\" @icon=\"activity\" />\n      */\n      {\n        \"id\": \"0OX83YRT\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-item\\\"]],[[\\\"@text\\\",\\\"@icon\\\"],[\\\"text renders\\\",\\\"activity\\\"]],null]],[],false,[\\\"hds/breadcrumb/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-activity').exists();\n      assert.dom('.hds-breadcrumb__text').hasText('text renders');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @maxWidth is not in px/em', async function (assert) {\n      const errorMessage = `@maxWidth for \"Hds::Breadcrumb::Item\" must be a size as number in 'px' or in 'em' (eg. '200px' or '24em'); received: 123`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Item @maxWidth=\"123\" id=\"test-breadcrumb-item\" />\n      */\n      {\n        \"id\": \"W5vg1x0x\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-item\\\"]],[[\\\"@maxWidth\\\"],[\\\"123\\\"]],null]],[],false,[\\\"hds/breadcrumb/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/breadcrumb/truncation-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/breadcrumb/truncation', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the breadcrumb truncation with an appropriate CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Truncation id=\"test-breadcrumb-truncation\" />\n      */\n      {\n        \"id\": \"tHpi21bM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-truncation\\\"]],null,null]],[],false,[\\\"hds/breadcrumb/truncation\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/truncation-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-truncation').hasClass('hds-breadcrumb__item--is-truncation');\n    });\n\n    // TOGGLE\n\n    (0, _qunit.test)('it should render a toggle button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Truncation id=\"test-breadcrumb-truncation\" />\n      */\n      {\n        \"id\": \"tHpi21bM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-truncation\\\"]],null,null]],[],false,[\\\"hds/breadcrumb/truncation\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/truncation-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-truncation button').exists();\n    });\n    (0, _qunit.test)('the toggle button should have an aria-label', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Truncation id=\"test-breadcrumb-truncation\" />\n      */\n      {\n        \"id\": \"tHpi21bM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-truncation\\\"]],null,null]],[],false,[\\\"hds/breadcrumb/truncation\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/truncation-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-truncation button').hasAttribute('aria-label');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should not render the content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Truncation id=\"test-breadcrumb-truncation\" />\n      */\n      {\n        \"id\": \"tHpi21bM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-truncation\\\"]],null,null]],[],false,[\\\"hds/breadcrumb/truncation\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/truncation-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-truncation .hds-breadcrumb__truncation-content').isNotVisible();\n    });\n    (0, _qunit.test)('it should yield (and render) the content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Truncation id=\"test-breadcrumb-truncation\"><a id=\"test-breadcrumb-truncation-link\" href=\"#\">test</a></Hds::Breadcrumb::Truncation>\n      */\n      {\n        \"id\": \"zB32LAjw\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-truncation\\\"]],null,[[\\\"default\\\"],[[[[10,3],[14,1,\\\"test-breadcrumb-truncation-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13]],[]]]]]],[],false,[\\\"hds/breadcrumb/truncation\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/truncation-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('#test-breadcrumb-truncation button');\n      assert.dom('.hds-breadcrumb__truncation-content').exists();\n      assert.dom('.hds-breadcrumb__truncation-content > ol').exists();\n      assert.dom('a#test-breadcrumb-truncation-link').exists();\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct aria-expanded attribute on the toggle element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Breadcrumb::Truncation id=\"test-breadcrumb-truncation\" />\n      */\n      {\n        \"id\": \"tHpi21bM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-breadcrumb-truncation\\\"]],null,null]],[],false,[\\\"hds/breadcrumb/truncation\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/breadcrumb/truncation-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-breadcrumb-truncation button').hasAttribute('aria-expanded', 'false');\n      await (0, _testHelpers.click)('#test-breadcrumb-truncation button');\n      assert.dom('#test-breadcrumb-truncation button').hasAttribute('aria-expanded', 'true');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/button-set/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/button-set/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::ButtonSet id=\"test-button-set\" />\n      */\n      {\n        \"id\": \"8Qf45Jhu\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button-set\\\"]],null,null]],[],false,[\\\"hds/button-set\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button-set/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button-set').hasClass('hds-button-set');\n    });\n    (0, _qunit.test)('it should render a child button component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::ButtonSet id=\"test-button-set\">\n                <Hds::Button @text=\"test button\" />\n              </Hds::ButtonSet>\n            \n      */\n      {\n        \"id\": \"9xViMplJ\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-button-set\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],null,[[\\\"@text\\\"],[\\\"test button\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/button-set\\\",\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button-set/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button-set .hds-button').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/button/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/button/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"G7QzUIUY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\"],[\\\"Copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size if no size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"G7QzUIUY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\"],[\\\"Copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" @size=\"small\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"jznVE+GY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@size\\\"],[\\\"Copy to clipboard\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button--size-small');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the primary color as the default if no color is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"G7QzUIUY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\"],[\\\"Copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button--color-primary');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" @color=\"critical\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"bRjrnt7e\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@color\\\"],[\\\"Copy to clipboard\\\",\\\"critical\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button--color-critical');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should not have visible icon if @icon is not declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"D8I0KhrS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\"],[\\\"copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-button__icon').doesNotExist();\n    });\n    (0, _qunit.test)('if an icon is declared the flight icon should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" @icon=\"clipboard-copy\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"+Ruzqx9I\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@icon\\\"],[\\\"Copy to clipboard\\\",\\\"clipboard-copy\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element.querySelector('.hds-icon.hds-icon-clipboard-copy')).exists();\n    });\n    (0, _qunit.test)('if an icon is declared the icon should be in leading position by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" @icon=\"clipboard-copy\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"+Ruzqx9I\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@icon\\\"],[\\\"Copy to clipboard\\\",\\\"clipboard-copy\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-button__icon').matchesSelector(':first-child');\n    });\n    (0, _qunit.test)('if an icon is declared the icon should be in trailing position if @iconPosition is set to trailing', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" @icon=\"clipboard-copy\" @iconPosition=\"trailing\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"PaQmFcl3\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@icon\\\",\\\"@iconPosition\\\"],[\\\"Copy to clipboard\\\",\\\"clipboard-copy\\\",\\\"trailing\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-button__icon').matchesSelector(':last-child');\n    });\n    (0, _qunit.test)('it should ignore isIconOnly if icon is not defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @isIconOnly={{true}} id=\"test-button\" />\n      */\n      {\n        \"id\": \"GXUktV5I\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@isIconOnly\\\"],[\\\"copy to clipboard\\\",true]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasText('copy to clipboard').doesNotHaveAria('label', 'copy to clipboard');\n    });\n\n    // ISINLINE\n\n    (0, _qunit.test)('it should render the element as `inline` if the value of @isInline is \"true\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Button @text=\"Lorem ipsum\" @isInline={{true}} id=\"test-button\" />\n          \n      */\n      {\n        \"id\": \"18FbNmXE\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@isInline\\\"],[\\\"Lorem ipsum\\\",true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button--is-inline');\n    });\n\n    // TEXT\n\n    (0, _qunit.test)('it renders a button with the defined text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"Copy to clipboard\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"zhUgxtaD\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"Copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasText('Copy to clipboard');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should have aria-label on the button element if isIconOnly is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @icon=\"clipboard-copy\" @isIconOnly={{true}} id=\"test-button\" />\n      */\n      {\n        \"id\": \"d1MV01m2\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@icon\\\",\\\"@isIconOnly\\\"],[\\\"copy to clipboard\\\",\\\"clipboard-copy\\\",true]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasAria('label', 'copy to clipboard');\n    });\n    (0, _qunit.test)('it should have \"button\" type by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" id=\"test-button\" />\n      */\n      {\n        \"id\": \"D8I0KhrS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\"],[\\\"copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasAttribute('type', 'button');\n    });\n\n    // OTHER\n\n    (0, _qunit.test)('it should not have visible text if isIconOnly is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @icon=\"clipboard-copy\" @isIconOnly={{true}} id=\"test-button\" />\n      */\n      {\n        \"id\": \"d1MV01m2\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@icon\\\",\\\"@isIconOnly\\\"],[\\\"copy to clipboard\\\",\\\"clipboard-copy\\\",true]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-button__text').doesNotExist();\n    });\n    (0, _qunit.test)('it should disable to the button if the `disabled` attribute is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" disabled id=\"test-button\" />\n      */\n      {\n        \"id\": \"hcgADUUL\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"disabled\\\",\\\"\\\"],[24,1,\\\"test-button\\\"]],[[\\\"@text\\\"],[\\\"copy to clipboard\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').isDisabled();\n    });\n    (0, _qunit.test)('it should have the correct CSS class to support full-width button size if @isFullWidth prop is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @isFullWidth={{true}} id=\"test-button\" />\n      */\n      {\n        \"id\": \"p6PRkZu0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-button\\\"]],[[\\\"@text\\\",\\\"@isFullWidth\\\"],[\\\"copy to clipboard\\\",true]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-button').hasClass('hds-button--width-full');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Button\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @icon=\"clipboard-copy\" />\n      */\n      {\n        \"id\": \"XhAZE38Y\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"clipboard-copy\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Button\" must be one of the following: primary, secondary, tertiary, critical; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @color=\"foo\" />\n      */\n      {\n        \"id\": \"Tw7XTLNl\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@color\\\"],[\\\"copy to clipboard\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Button\" must be one of the following: small, medium, large; received: tiny';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @size=\"tiny\" />\n      */\n      {\n        \"id\": \"btVjJyx9\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"copy to clipboard\\\",\\\"tiny\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @iconPosition is provided', async function (assert) {\n      const errorMessage = '@iconPosition for \"Hds::Button\" must be one of the following: leading, trailing; received: after';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @icon=\"clipboard-copy\" @text=\"copy to clipboard\" @iconPosition=\"after\" />\n      */\n      {\n        \"id\": \"vMWfy7ua\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@iconPosition\\\"],[\\\"clipboard-copy\\\",\\\"copy to clipboard\\\",\\\"after\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @color is \"tertiary\" and an @icon is not provided', async function (assert) {\n      const errorMessage = 'when the \"Hds::Button\" @color is \"tertiary\" an @icon is required';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Button @text=\"copy to clipboard\" @color=\"tertiary\" />\n      */\n      {\n        \"id\": \"P3LdZs4b\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@color\\\"],[\\\"copy to clipboard\\\",\\\"tertiary\\\"]],null]],[],false,[\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/card/container-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/card/container', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" />\n      */\n      {\n        \"id\": \"fW5SbJHm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],null,null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container');\n    });\n\n    // LEVEL(S) + BORDER\n\n    (0, _qunit.test)('it should have the base level elevation as the default if no @level prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" />\n      */\n      {\n        \"id\": \"fW5SbJHm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],null,null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--level-elevation-base');\n    });\n    (0, _qunit.test)('it should have the correct level class based on the @level prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" @level=\"mid\" />\n      */\n      {\n        \"id\": \"vl6AArKR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],[[\\\"@level\\\"],[\\\"mid\\\"]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--level-elevation-mid');\n    });\n    (0, _qunit.test)('it should have a \"surface\" elavation the @hasBorder prop is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" @hasBorder={{true}} />\n      */\n      {\n        \"id\": \"PGf/vbJR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],[[\\\"@hasBorder\\\"],[true]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--level-surface-base');\n    });\n\n    // BACKGROUND\n\n    (0, _qunit.test)('it should have the default background if no @background prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" />\n      */\n      {\n        \"id\": \"fW5SbJHm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],null,null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--background-neutral-primary');\n    });\n    (0, _qunit.test)('it should have the correct background class based on the @background prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" @background=\"neutral-secondary\" />\n      */\n      {\n        \"id\": \"UA6z1Ed3\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],[[\\\"@background\\\"],[\\\"neutral-secondary\\\"]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--background-neutral-secondary');\n    });\n\n    // OVERFLOW\n\n    (0, _qunit.test)('it should have the overflow visible if no @overflow prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" />\n      */\n      {\n        \"id\": \"fW5SbJHm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],null,null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--overflow-visible');\n    });\n    (0, _qunit.test)('it should have the overflow hidden if the @overflow prop is declared as \"hidden\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container id=\"test-card-container\" @overflow=\"hidden\" />\n      */\n      {\n        \"id\": \"rZebY/f2\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-card-container\\\"]],[[\\\"@overflow\\\"],[\\\"hidden\\\"]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-card-container').hasClass('hds-card__container--overflow-hidden');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @level is provided', async function (assert) {\n      const errorMessage = '@level for \"Hds::Card::Container\" must be one of the following: base, mid, high; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container @level=\"foo\" />\n      */\n      {\n        \"id\": \"txQrmsiB\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@level\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @levelHover is provided', async function (assert) {\n      const errorMessage = '@levelHover for \"Hds::Card::Container\" must be one of the following: base, mid, high; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container @levelHover=\"foo\" />\n      */\n      {\n        \"id\": \"8pLwwE5N\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@levelHover\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @levelActive is provided', async function (assert) {\n      const errorMessage = '@levelActive for \"Hds::Card::Container\" must be one of the following: base, mid, high; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Card::Container @levelActive=\"foo\" />\n      */\n      {\n        \"id\": \"WHpmm+Nx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@levelActive\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/card/container\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/card/container-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/code-block/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/code-block/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"2xv1HE9o\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').hasClass('hds-code-block');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in code text content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"2xv1HE9o\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block pre code').containsText(\"console.log('Hello world');\");\n    });\n\n    // DYNAMIC CONTENT\n\n    (0, _qunit.test)('it renders the passed in dynamic content', async function (assert) {\n      this.set('value', \"console.log('Hello world');\");\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value={{this.value}} id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"cdi0DS4D\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block pre code').hasText(\"console.log('Hello world');\");\n      this.set('value', \"console.log('Lorem ipsum');\");\n      await (0, _testHelpers.settled)();\n      assert.dom('#test-code-block pre code').hasText(\"console.log('Lorem ipsum');\");\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" as |CB|>\n              <CB.Title>Title</CB.Title>\n              <CB.Description>Description</CB.Description>\n            </Hds::CodeBlock>\n          \n      */\n      {\n        \"id\": \"vuHLSra4\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Description\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"CB\\\"],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-code-block__title').hasText('Title');\n      assert.dom('.hds-code-block__description').hasText('Description');\n    });\n    (0, _qunit.test)('it renders the title as a p when the @tag argument is not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" as |CB|>\n              <CB.Title>Title</CB.Title>\n            </Hds::CodeBlock>\n          \n      */\n      {\n        \"id\": \"7WPw1Jq3\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"CB\\\"],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-code-block__title').hasTagName('p');\n    });\n    (0, _qunit.test)('it renders the title as the custom title tag when the @tag argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" as |CB|>\n              <CB.Title @tag='h2'>Title</CB.Title>\n            </Hds::CodeBlock>\n          \n      */\n      {\n        \"id\": \"yUnTssXd\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],null,[[\\\"@tag\\\"],[\\\"h2\\\"]],[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"CB\\\"],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-code-block__title').hasTagName('h2');\n    });\n\n    // OPTIONS\n\n    // isStandalone\n    (0, _qunit.test)('it has rounded corners by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"2xv1HE9o\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').hasClass('hds-code-block--is-standalone');\n    });\n    (0, _qunit.test)('it does not have rounded corners if `isStandalone` is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @isStandalone={{false}} id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"8ZqdpMG8\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\",\\\"@isStandalone\\\"],[\\\"console.log('Hello world');\\\",false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').doesNotHaveClass('hds-code-block--is-standalone');\n    });\n\n    // language\n    (0, _qunit.test)('it has no default language for syntax highlighting', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"2xv1HE9o\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').doesNotHaveClass(/language-*/);\n    });\n    (0, _qunit.test)('it uses the passed in language value for syntax highlighting', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @language=\"go\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"1GKMfrre\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\",\\\"@language\\\"],[\\\"console.log('Hello world');\\\",\\\"go\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').hasClass('language-go');\n    });\n    (0, _qunit.test)('syntax highlighting fails gracefully if an invalid language is specified', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @language=\"foo\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"RzMB8WuN\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\",\\\"@language\\\"],[\\\"console.log('Hello world');\\\",\\\"foo\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').hasClass('language-foo');\n      assert.dom('#test-code-block .token').doesNotExist();\n    });\n\n    // hasCopyButton\n    (0, _qunit.test)('it does not display a Copy button by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" />\n          \n      */\n      {\n        \"id\": \"BdEpO6Ij\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-code-block__copy-button').doesNotExist();\n    });\n    (0, _qunit.test)(`it displays a Copy button if hasCopyButton is set to true`, async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @hasCopyButton={{true}} />\n          \n      */\n      {\n        \"id\": \"5RwTSFWS\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@value\\\",\\\"@hasCopyButton\\\"],[\\\"console.log('Hello world');\\\",true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-code-block__copy-button').exists();\n    });\n\n    // hasLineNumbers\n    (0, _qunit.test)('it displays line numbers by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"2xv1HE9o\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').hasClass('line-numbers');\n    });\n    (0, _qunit.test)('it does not display line numbers if hasLineNumbers is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @hasLineNumbers={{false}} id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"OFM883NH\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\",\\\"@hasLineNumbers\\\"],[\\\"console.log('Hello world');\\\",false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').doesNotHaveClass('line-numbers');\n    });\n\n    // hasLineWrapping\n    (0, _qunit.test)('it does not wrap code line by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"2xv1HE9o\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\"],[\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').doesNotHaveClass('hds-code-block--has-line-wrapping');\n    });\n    (0, _qunit.test)('it wraps code lines if hasLineWrapping is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @hasLineWrapping={{true}} id=\"test-code-block\" />\n          \n      */\n      {\n        \"id\": \"A0xtCyYS\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-code-block\\\"]],[[\\\"@value\\\",\\\"@hasLineWrapping\\\"],[\\\"console.log('Hello world');\\\",true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block').hasClass('hds-code-block--has-line-wrapping');\n    });\n\n    // highlightLines\n    (0, _qunit.test)('it highlights the passed in individual line numbers', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Hds::CodeBlock\n            id=\"test-code-block-highlight\"\n            @highlightLines=\"1\"\n            @value=\"console.log('Hello world');\"\n          />\n        \n      */\n      {\n        \"id\": \"0x7F5Ack\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],[[24,1,\\\"test-code-block-highlight\\\"]],[[\\\"@highlightLines\\\",\\\"@value\\\"],[\\\"1\\\",\\\"console.log('Hello world');\\\"]],null],[1,\\\"\\\\n  \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-code-block-highlight [data-range=\"1\"]').exists().hasClass('line-highlight');\n    });\n\n    // maxHeight\n    (0, _qunit.test)('it uses the passed in maxHeight value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::CodeBlock @value=\"console.log('Hello world');\" @maxHeight=\"100px\" />\n          \n      */\n      {\n        \"id\": \"67UsG5ZY\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@value\\\",\\\"@maxHeight\\\"],[\\\"console.log('Hello world');\\\",\\\"100px\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-code-block__code').hasAttribute('style', 'max-height: 100px;');\n    });\n\n    // ASSERTION\n\n    (0, _qunit.test)('it should throw an assertion if no value for @code is provided', async function (assert) {\n      const errorMessage = '@code for \"Hds::CodeBlock\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::CodeBlock />\n      */\n      {\n        \"id\": \"TDFl+3Xr\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/code-block\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/code-block/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/copy/button/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  function wait(timeout = 2000) {\n    return new Promise(resolve => {\n      setTimeout(resolve, timeout);\n    });\n  }\n  (0, _qunit.module)('Integration | Component | hds/copy/button/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // IMPORTANT: don't use an arrow function here or \"this.set\" will not be recognized\n    hooks.beforeEach(function () {\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').resolves();\n      this.success = undefined;\n      this.set('onSuccess', () => this.success = true);\n      this.set('onError', () => this.success = false);\n    });\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n      // we need to restore the \"window.navigator\" methods\n      _sinon.default.restore();\n      this.success = undefined;\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"I+3S0VBQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-copy-button');\n    });\n\n    // @TEXT ARGUMENT\n\n    (0, _qunit.test)('it should allow to copy a `string` provided as `@text` argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @textToCopy=\"someSecretThingGoesHere\" @onSuccess={{this.onSuccess}} @onError={{this.onError}} />\n      */\n      {\n        \"id\": \"k4QdxxOZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\",\\\"@onSuccess\\\",\\\"@onError\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-copy-button');\n      assert.true(this.success);\n    });\n\n    // @TARGET ARGUMENT\n\n    (0, _qunit.test)('it should allow to target an element using a `string` selector for the `@target` argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <p id=\"test-copy-button-target\">Hello world!</p><Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @targetToCopy=\"#test-copy-button-target\" @onSuccess={{this.onSuccess}} @onError={{this.onError}} />\n      */\n      {\n        \"id\": \"wzv9VWEc\",\n        \"block\": \"[[[10,2],[14,1,\\\"test-copy-button-target\\\"],[12],[1,\\\"Hello world!\\\"],[13],[8,[39,1],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@targetToCopy\\\",\\\"@onSuccess\\\",\\\"@onError\\\"],[\\\"Copy your secret key\\\",\\\"#test-copy-button-target\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]],null]],[],false,[\\\"p\\\",\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-copy-button');\n      assert.true(this.success);\n    });\n\n    // VARIANTS\n\n    (0, _qunit.test)('it should render the correct default component variation: secondary color, medium size, idle status', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"I+3S0VBQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-copy-button');\n      assert.dom('#test-copy-button').hasClass('hds-button--size-medium');\n      assert.dom('#test-copy-button').hasClass('hds-button--color-secondary');\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-idle');\n    });\n    (0, _qunit.test)('it should only render an icon and also render an aria-label if isIconOnly is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button @text=\"Copy\" @isIconOnly={{true}} @textToCopy=\"someSecretThingGoesHere\" id=\"test-copy-button\" />\n      */\n      {\n        \"id\": \"5Nd7dVhq\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@isIconOnly\\\",\\\"@textToCopy\\\"],[\\\"Copy\\\",true,\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').doesNotIncludeText('Copy');\n      assert.dom('#test-copy-button').hasAria('label', 'Copy');\n    });\n    (0, _qunit.test)('it should render the small size if @size small is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"copy\" @textToCopy=\"someSecretThingGoesHere\" @size=\"small\" />\n      */\n      {\n        \"id\": \"VZk3Kz2H\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\",\\\"@size\\\"],[\\\"copy\\\",\\\"someSecretThingGoesHere\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-button--size-small');\n    });\n    (0, _qunit.test)('it always renders the text value, not the text to copy', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\"\n            @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"I+3S0VBQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasText('Copy your secret key');\n      assert.dom('#test-copy-button').doesNotIncludeText('someSecretThingGoesHere');\n    });\n    (0, _qunit.test)('it should have the correct CSS class to support full-width size if @isFullWidth prop is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"copy\" @textToCopy=\"someSecretThingGoesHere\" @isFullWidth={{true}} />\n      */\n      {\n        \"id\": \"f59FO0qa\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\",\\\"@isFullWidth\\\"],[\\\"copy\\\",\\\"someSecretThingGoesHere\\\",true]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-button--width-full');\n    });\n\n    // COPY STATES\n\n    (0, _qunit.test)('it should update the status to success if the copy operation was successful', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @textToCopy=\"someSecretThingGoesHere\" @onSuccess={{this.onSuccess}} @onError={{this.onError}} />\n      */\n      {\n        \"id\": \"k4QdxxOZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\",\\\"@onSuccess\\\",\\\"@onError\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-idle');\n      await (0, _testHelpers.click)('button#test-copy-button');\n      assert.true(this.success);\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-success');\n    });\n    (0, _qunit.test)('it should update the status back to idle after success', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\"\n            @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"I+3S0VBQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-idle');\n      await (0, _testHelpers.click)('button#test-copy-button');\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-success');\n      await wait(); // wait for the status to revert to \"idle\" automatically\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-idle');\n    });\n    (0, _qunit.test)('it should update the status to an error after a failed \"copy\" operation', async function (assert) {\n      _sinon.default.restore();\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').throws('Sinon throws (syntethic error)', 'this is a fake error message provided to the sinon.stub().throws() method');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @textToCopy=\"someSecretThingGoesHere\" @onSuccess={{this.onSuccess}} @onError={{this.onError}} />\n      */\n      {\n        \"id\": \"k4QdxxOZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@textToCopy\\\",\\\"@onSuccess\\\",\\\"@onError\\\"],[\\\"Copy your secret key\\\",\\\"someSecretThingGoesHere\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-idle');\n      await (0, _testHelpers.click)('button#test-copy-button');\n      assert.false(this.success);\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-error');\n      await wait(); // wait for the status to revert to \"idle\" automatically\n      assert.dom('#test-copy-button').hasClass('hds-copy-button--status-idle');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Button\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\"\n          @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"YsSbSX5g\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@textToCopy\\\"],[\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Copy::Button\" must be one of the following: small, medium; received: tiny';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Button id=\"test-copy-button\" @text=\"Copy your secret key\" @size=\"tiny\"\n          @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"YIq8hLqZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-button\\\"]],[[\\\"@text\\\",\\\"@size\\\",\\\"@textToCopy\\\"],[\\\"Copy your secret key\\\",\\\"tiny\\\",\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/copy/snippet/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  function wait(timeout = 2000) {\n    return new Promise(resolve => {\n      setTimeout(resolve, timeout);\n    });\n  }\n  (0, _qunit.module)('Integration | Component | hds/copy/snippet/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // IMPORTANT: don't use an arrow function here or \"this.set\" will not be recognized\n    hooks.beforeEach(function () {\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').resolves();\n      this.success = undefined;\n      this.set('onSuccess', () => this.success = true);\n      this.set('onError', () => this.success = false);\n    });\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n      // we need to restore the \"window.navigator\" methods\n      _sinon.default.restore();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"wfudCvbv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\"],[\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet');\n    });\n    (0, _qunit.test)('it should render the component with an aria-label that includes the correct copy text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"this aria label\" />\n      */\n      {\n        \"id\": \"5ykz1V9Y\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\"],[\\\"this aria label\\\"]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasAria('label', 'copy this aria label');\n    });\n\n    // VARIANTS\n\n    (0, _qunit.test)('it should render the correct default component variation: primary color, idle status', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"wfudCvbv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\"],[\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet');\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--color-primary');\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-idle');\n    });\n    (0, _qunit.test)('it should render the secondary color if defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" @color=\"secondary\" />\n      */\n      {\n        \"id\": \"ekhXHLzf\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\",\\\"@color\\\"],[\\\"someSecretThingGoesHere\\\",\\\"secondary\\\"]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--color-secondary');\n    });\n    (0, _qunit.test)('it should support truncation if @isTruncated is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" @isTruncated={{true}} />\n      */\n      {\n        \"id\": \"D5X47EyO\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\",\\\"@isTruncated\\\"],[\\\"someSecretThingGoesHere\\\",true]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--is-truncated');\n    });\n    (0, _qunit.test)('it should have the correct CSS class to support full-width size if @isFullWidth prop is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" @isFullWidth={{true}} />\n      */\n      {\n        \"id\": \"XMnu1xp1\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\",\\\"@isFullWidth\\\"],[\\\"someSecretThingGoesHere\\\",true]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--width-full');\n    });\n\n    // COPY STATES\n\n    (0, _qunit.test)('it should update the status to success if the copy operation was successful', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" @onSuccess={{this.onSuccess}} @onError={{this.onError}} />\n      */\n      {\n        \"id\": \"AkmPFkp7\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\",\\\"@onSuccess\\\",\\\"@onError\\\"],[\\\"someSecretThingGoesHere\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-idle');\n      await (0, _testHelpers.click)('button#test-copy-snippet');\n      assert.true(this.success);\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-success');\n    });\n    (0, _qunit.test)('it should update the status back to idle after success', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" />\n      */\n      {\n        \"id\": \"wfudCvbv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\"],[\\\"someSecretThingGoesHere\\\"]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-idle');\n      await (0, _testHelpers.click)('button#test-copy-snippet');\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-success');\n      await wait(); // wait for the status to revert to \"idle\" automatically\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-idle');\n    });\n    (0, _qunit.test)('it should update the status to an error after a failed \"copy\" operation', async function (assert) {\n      _sinon.default.restore();\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').throws('Sinon throws (syntethic error)', 'this is a fake error message provided to the sinon.stub().throws() method');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" @onSuccess={{this.onSuccess}} @onError={{this.onError}} />\n      */\n      {\n        \"id\": \"AkmPFkp7\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\",\\\"@onSuccess\\\",\\\"@onError\\\"],[\\\"someSecretThingGoesHere\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-idle');\n      await (0, _testHelpers.click)('button#test-copy-snippet');\n      assert.false(this.success);\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-error');\n      await wait(); // wait for the status to revert to \"idle\" automatically\n      assert.dom('#test-copy-snippet').hasClass('hds-copy-snippet--status-idle');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Copy::Snippet\" must be one of the following: primary, secondary; received: tertiary';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Copy::Snippet id=\"test-copy-snippet\" @textToCopy=\"someSecretThingGoesHere\" @color=\"tertiary\" />\n      */\n      {\n        \"id\": \"xEFip3yd\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-copy-snippet\\\"]],[[\\\"@textToCopy\\\",\\\"@color\\\"],[\\\"someSecretThingGoesHere\\\",\\\"tertiary\\\"]],null]],[],false,[\\\"hds/copy/snippet\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/copy/snippet/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dialog-primitive/body-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dialog-primitive/body', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Body id=\"test-body\">\n                Body\n              </Hds::DialogPrimitive::Body>\n            \n      */\n      {\n        \"id\": \"g1plV55l\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-body\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Body\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-body').hasClass('hds-dialog-primitive__body');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Body id=\"test-body\">\n                  Body\n              </Hds::DialogPrimitive::Body>\n            \n      */\n      {\n        \"id\": \"QtI+y+Z9\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-body\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            Body\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__body').hasText('Body');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dialog-primitive/description-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dialog-primitive/description', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Description id=\"test-description\">\n                Description\n              </Hds::DialogPrimitive::Description>\n            \n      */\n      {\n        \"id\": \"m1LMw+zj\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-description\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Description\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/description\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/description-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-description').hasClass('hds-dialog-primitive__description');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Description>\n                Description\n              </Hds::DialogPrimitive::Description>\n            \n      */\n      {\n        \"id\": \"gKZcveO3\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Description\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/description\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/description-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__description').hasText('Description');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dialog-primitive/footer-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dialog-primitive/footer', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Footer id=\"test-footer\">\n                Footer\n              </Hds::DialogPrimitive::Footer>\n            \n      */\n      {\n        \"id\": \"Zie+1/7f\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-footer\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Footer\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/footer-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-footer').hasClass('hds-dialog-primitive__footer');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Footer>\n                <Hds::Button type=\"submit\" @text=\"Primary\" />\n              </Hds::DialogPrimitive::Footer>\n            \n      */\n      {\n        \"id\": \"L+VTmFAe\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],[[24,4,\\\"submit\\\"]],[[\\\"@text\\\"],[\\\"Primary\\\"]],null],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/footer\\\",\\\"hds/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/footer-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__footer .hds-button').exists();\n    });\n\n    // CALLBACK\n\n    (0, _qunit.test)('it should forwards the `onDismiss` callback function so it can be invoked as yielded function', async function (assert) {\n      let dismissed = false;\n      this.set('onDismiss', () => dismissed = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Footer @onDismiss={{this.onDismiss}} as |F|>\n                <Hds::Button type=\"submit\" @text=\"Primary\" {{on \"click\" F.close}} />\n              </Hds::DialogPrimitive::Footer>\n            \n      */\n      {\n        \"id\": \"gVfbPLCn\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onDismiss\\\"],[[30,0,[\\\"onDismiss\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,1],[[24,4,\\\"submit\\\"],[4,[38,2],[\\\"click\\\",[30,1,[\\\"close\\\"]]],null]],[[\\\"@text\\\"],[\\\"Primary\\\"]],null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"F\\\"],false,[\\\"hds/dialog-primitive/footer\\\",\\\"hds/button\\\",\\\"on\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/footer-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-dialog-primitive__footer .hds-button');\n      assert.ok(dismissed);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dialog-primitive/header-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dialog-primitive/header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header id=\"test-header\">Title</Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"77/GD0JS\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-header\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-header').hasClass('hds-dialog-primitive__header');\n    });\n\n    // TITLE (ICON, TAGLINE & DESCRIPTION)\n\n    (0, _qunit.test)('it renders the title without icon, tagline, or description', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header>\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"zA6u4Hlz\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__title').exists();\n      assert.dom('.hds-dialog-primitive__title').hasText('Title');\n      assert.dom('.hds-dialog-primitive__icon').doesNotExist();\n      assert.dom('.hds-dialog-primitive__tagline').doesNotExist();\n    });\n    (0, _qunit.test)('it renders the title with icon and tagline if provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header @icon=\"info\" @tagline=\"Tagline\">\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"IOLaxtCN\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@tagline\\\"],[\\\"info\\\",\\\"Tagline\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__title').exists();\n      assert.dom('.hds-dialog-primitive__title').hasText('Tagline Title');\n      assert.dom('.hds-dialog-primitive__icon.hds-icon-info').exists();\n      assert.dom('.hds-dialog-primitive__tagline').exists();\n      assert.dom('.hds-dialog-primitive__tagline').hasText('Tagline');\n    });\n    (0, _qunit.test)('it renders the title as a div when the @titleTag argument is not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header @icon=\"info\" @tagline=\"Tagline\">\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"IOLaxtCN\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@tagline\\\"],[\\\"info\\\",\\\"Tagline\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__title').hasTagName('div');\n    });\n    (0, _qunit.test)('it renders the title as a custom title tag when the @titleTag argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header @icon=\"info\" @tagline=\"Tagline\" @titleTag='h1'>\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"7auQaQcK\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@tagline\\\",\\\"@titleTag\\\"],[\\\"info\\\",\\\"Tagline\\\",\\\"h1\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__title').hasTagName('h1');\n    });\n\n    // CONTEXTUAL CLASSES\n\n    (0, _qunit.test)('it adds contextual classes to different DOM nodes using the `@contextualClassPrefix`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header @icon=\"info\" @tagline=\"Tagline\" @contextualClassPrefix=\"abc\">\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"2T5PMxjL\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@icon\\\",\\\"@tagline\\\",\\\"@contextualClassPrefix\\\"],[\\\"info\\\",\\\"Tagline\\\",\\\"abc\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__header.abc__header').exists();\n      assert.dom('.hds-dialog-primitive__icon.abc__icon').exists();\n      assert.dom('.hds-dialog-primitive__title.abc__title').exists();\n      assert.dom('.hds-dialog-primitive__tagline.abc__tagline').exists();\n      assert.dom('.hds-dialog-primitive__dismiss.abc__dismiss').exists();\n    });\n\n    // DISMISS\n\n    (0, _qunit.test)('it should always render the \"dismiss\" button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header>\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"zA6u4Hlz\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-dialog-primitive__dismiss').exists();\n    });\n\n    // CALLBACK\n\n    (0, _qunit.test)('the \"dismiss\" button should invoke the `onDismiss` callback function', async function (assert) {\n      let dismissed = false;\n      this.set('onDismiss', () => dismissed = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Header @onDismiss={{this.onDismiss}}>\n                Title\n              </Hds::DialogPrimitive::Header>\n            \n      */\n      {\n        \"id\": \"oBCLTySc\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onDismiss\\\"],[[30,0,[\\\"onDismiss\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Title\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/header-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button.hds-dialog-primitive__dismiss');\n      assert.ok(dismissed);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dialog-primitive/overlay-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dialog-primitive/overlay', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::DialogPrimitive::Overlay />\n      */\n      {\n        \"id\": \"LFCaJmOI\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/dialog-primitive/overlay\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/overlay-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__overlay').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dialog-primitive/wrapper-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dialog-primitive/wrapper', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name, and its sub', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Wrapper id=\"test-dialog-primitive\">\n                <:header>Header</:header>\n                <:body>Body</:body>\n                <:footer>Footer</:footer>\n              </Hds::DialogPrimitive::Wrapper>\n            \n      */\n      {\n        \"id\": \"gO7ZJ96B\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-dialog-primitive\\\"]],null,[[\\\"header\\\",\\\"body\\\",\\\"footer\\\"],[[[[1,\\\"Header\\\"]],[]],[[[1,\\\"Body\\\"]],[]],[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/wrapper\\\",\\\":header\\\",\\\":body\\\",\\\":footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/wrapper-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-dialog-primitive').hasClass('hds-dialog-primitive__wrapper');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the content slots and the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DialogPrimitive::Wrapper id=\"test-dialog-primitive\">\n                <:header>\n                  <Hds::DialogPrimitive::Header>Title</Hds::DialogPrimitive::Header>\n                  <Hds::DialogPrimitive::Description>Description</Hds::DialogPrimitive::Description>\n                </:header>\n                <:body>\n                  <Hds::DialogPrimitive::Body>Body</Hds::DialogPrimitive::Body>\n                </:body>\n                <:footer>\n                  <Hds::DialogPrimitive::Footer>Footer</Hds::DialogPrimitive::Footer>\n                </:footer>\n              </Hds::DialogPrimitive::Wrapper>\n            \n      */\n      {\n        \"id\": \"kGOSQ9WY\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-dialog-primitive\\\"]],null,[[\\\"header\\\",\\\"body\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[39,2],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[39,3],null,null,[[\\\"default\\\"],[[[[1,\\\"Description\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]],[[[1,\\\"\\\\n            \\\"],[8,[39,5],null,null,[[\\\"default\\\"],[[[[1,\\\"Body\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]],[[[1,\\\"\\\\n            \\\"],[8,[39,7],null,null,[[\\\"default\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dialog-primitive/wrapper\\\",\\\":header\\\",\\\"hds/dialog-primitive/header\\\",\\\"hds/dialog-primitive/description\\\",\\\":body\\\",\\\"hds/dialog-primitive/body\\\",\\\":footer\\\",\\\"hds/dialog-primitive/footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dialog-primitive/wrapper-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dialog-primitive__wrapper-header').exists();\n      assert.dom('.hds-dialog-primitive__wrapper-body').exists();\n      assert.dom('.hds-dialog-primitive__wrapper-footer').exists();\n      assert.dom('.hds-dialog-primitive__header').exists().hasText('Title');\n      assert.dom('.hds-dialog-primitive__description').exists().hasText('Description');\n      assert.dom('.hds-dialog-primitive__body').exists().hasText('Body');\n      assert.dom('.hds-dialog-primitive__footer').exists().hasText('Footer');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/disclosure-primitive/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/disclosure-primitive/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::DisclosurePrimitive id=\"test-disclosure-primitive\" />\n      */\n      {\n        \"id\": \"+Fnmd2Ss\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],null,null]],[],false,[\\\"hds/disclosure-primitive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-disclosure-primitive').hasClass('hds-disclosure-primitive');\n    });\n\n    // TOGGLE + CONTENT\n\n    (0, _qunit.test)('it should render the \"toggle\" block but not the \"content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive>\n              <:toggle>\n                <button type=\"button\" id=\"test-disclosure-primitive-button\" />\n              </:toggle>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"tR2+yDZU\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"toggle\\\"],[[[[1,\\\"\\\\n          \\\"],[10,\\\"button\\\"],[14,1,\\\"test-disclosure-primitive-button\\\"],[14,4,\\\"button\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-disclosure-primitive__toggle').exists();\n      assert.dom('button#test-disclosure-primitive-button').exists();\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the \"content\" when the \"toggle\" is clicked', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive>\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-disclosure-primitive-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"Uiv2krkq\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-disclosure-primitive-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-disclosure-primitive-button');\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('a#test-disclosure-primitive-link').exists();\n    });\n\n    // isOpen\n\n    (0, _qunit.test)('it should toggle the \"content\" when @isOpen is set', async function (assert) {\n      this.set('isOpen', true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive @isOpen={{this.isOpen}} id=\"test-disclosure-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"o7saKMPx\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],[[\\\"@isOpen\\\"],[[30,0,[\\\"isOpen\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('a#test-disclosure-primitive-link').exists();\n      this.set('isOpen', false);\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n      assert.dom('a#test-disclosure-primitive-link').doesNotExist();\n    });\n    (0, _qunit.test)('it should allow @isOpen to override an internal _isOpen=true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive @isOpen={{this.isOpen}} id=\"test-disclosure-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"o7saKMPx\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],[[\\\"@isOpen\\\"],[[30,0,[\\\"isOpen\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('a#test-disclosure-primitive-link').exists();\n      this.set('isOpen', false);\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n      assert.dom('a#test-disclosure-primitive-link').doesNotExist();\n    });\n    (0, _qunit.test)('it should allow @isOpen to override an internal _isOpen=false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive @isOpen={{this.isOpen}} id=\"test-disclosure-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"o7saKMPx\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],[[\\\"@isOpen\\\"],[[30,0,[\\\"isOpen\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n      assert.dom('a#test-disclosure-primitive-link').doesNotExist();\n      this.set('isOpen', true);\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('a#test-disclosure-primitive-link').exists();\n    });\n    (0, _qunit.test)('it should allow the internal _isOpen to override @isOpen=true', async function (assert) {\n      this.set('isOpen', true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive @isOpen={{this.isOpen}} id=\"test-disclosure-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"o7saKMPx\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],[[\\\"@isOpen\\\"],[[30,0,[\\\"isOpen\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('a#test-disclosure-primitive-link').exists();\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n      assert.dom('a#test-disclosure-primitive-link').doesNotExist();\n    });\n    (0, _qunit.test)('it should allow the internal _isOpen to override @isOpen=false', async function (assert) {\n      this.set('isOpen', false);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive @isOpen={{this.isOpen}} id=\"test-disclosure-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"o7saKMPx\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],[[\\\"@isOpen\\\"],[[30,0,[\\\"isOpen\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n      assert.dom('a#test-disclosure-primitive-link').doesNotExist();\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('a#test-disclosure-primitive-link').exists();\n    });\n\n    // CLOSE DISCLOSED CONTENT ON CLICK\n\n    (0, _qunit.test)('it should hide the \"content\" when an interactive element triggers `close`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::DisclosurePrimitive id=\"test-disclosure-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content as |c|>\n                <button id=\"test-content-button\" {{on \"click\" c.close}}>test</button>\n              </:content>\n            </Hds::DisclosurePrimitive>\n          \n      */\n      {\n        \"id\": \"OY52HGSP\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-content-button\\\"],[4,[38,3],[\\\"click\\\",[30,2,[\\\"close\\\"]]],null],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[2]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\",\\\"c\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      assert.dom('button#test-content-button').exists();\n      await (0, _testHelpers.click)('button#test-content-button');\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n      assert.dom('button#test-content-button').doesNotExist();\n    });\n\n    // CALLBACK\n\n    (0, _qunit.test)('it should invoke the `onClickToggle` callback', async function (assert) {\n      let opened = false;\n      this.set('onClickToggle', () => opened = !opened);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::DisclosurePrimitive @onClickToggle={{this.onClickToggle}} id=\"test-disclosure-primitive\">\n                <:toggle as |t|>\n                  <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n                </:toggle>\n                <:content>\n                  <a id=\"test-disclosure-primitive-link\" href=\"#\">test</a>\n                </:content>\n              </Hds::DisclosurePrimitive>\n            \n      */\n      {\n        \"id\": \"tb2ywaou\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-disclosure-primitive\\\"]],[[\\\"@onClickToggle\\\"],[[30,0,[\\\"onClickToggle\\\"]]]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n          \\\"]],[1]],[[[1,\\\"\\\\n            \\\"],[10,3],[14,1,\\\"test-disclosure-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[\\\"t\\\"],false,[\\\"hds/disclosure-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/disclosure-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // toggle to open\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.true(opened);\n      assert.dom('.hds-disclosure-primitive__content').exists();\n      // toggle to close\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.false(opened);\n      assert.dom('.hds-disclosure-primitive__content').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dismiss-button/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dismiss-button/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::DismissButton id=\"test-dismiss-button\" />\n      */\n      {\n        \"id\": \"aXhv65eQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-dismiss-button\\\"]],null,null]],[],false,[\\\"hds/dismiss-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dismiss-button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-dismiss-button').hasClass('hds-dismiss-button');\n    });\n    (0, _qunit.test)('it should spread all the passed attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::DismissButton id=\"test-dismiss-button\" class=\"dismiss-button-class\" data-test-dismiss-button1 data-test-dismiss-button2=\"test\" />\n      */\n      {\n        \"id\": \"yV6ujYYZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-dismiss-button\\\"],[24,0,\\\"dismiss-button-class\\\"],[24,\\\"data-test-dismiss-button1\\\",\\\"\\\"],[24,\\\"data-test-dismiss-button2\\\",\\\"test\\\"]],null,null]],[],false,[\\\"hds/dismiss-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dismiss-button/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-dismiss-button').hasClass('dismiss-button-class');\n      assert.dom('#test-dismiss-button').hasAttribute('data-test-dismiss-button1');\n      assert.dom('#test-dismiss-button').hasAttribute('data-test-dismiss-button2', 'test');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"zbS5ltWv\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],null,[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-dropdown').hasClass('hds-dropdown');\n    });\n\n    // NAMED YIELDS\n\n    (0, _qunit.test)('it renders the \"toggle\" sub-components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.ToggleIcon @icon=\"user\" @text=\"toggle icon\" id=\"test-toggle-icon\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"UdrT+4ai\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleIcon\\\"]],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\"],[\\\"user\\\",\\\"toggle icon\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-dropdown #test-toggle-button').exists();\n      assert.dom('#test-dropdown #test-toggle-icon').exists();\n    });\n    (0, _qunit.test)('it renders the \"list-item\" sub-components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Description @text=\"description\" id=\"test-list-item-description\" />\n              <D.Generic>\n                <div id=\"test-list-item-generic\" />\n              </D.Generic>\n              <D.Interactive @route=\"components.dropdown\" @text=\"interactive\" id=\"test-list-item-interactive\" />\n              <D.Separator id=\"test-list-item-separator\" />\n              <D.Title @text=\"title\" id=\"test-list-item-title\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"Kv9OM1pJ\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Description\\\"]],[[24,1,\\\"test-list-item-description\\\"]],[[\\\"@text\\\"],[\\\"description\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Generic\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[10,0],[14,1,\\\"test-list-item-generic\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],[[24,1,\\\"test-list-item-interactive\\\"]],[[\\\"@route\\\",\\\"@text\\\"],[\\\"components.dropdown\\\",\\\"interactive\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Separator\\\"]],[[24,1,\\\"test-list-item-separator\\\"]],null,null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],[[24,1,\\\"test-list-item-title\\\"]],[[\\\"@text\\\"],[\\\"title\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown ul').exists();\n      assert.dom('#test-dropdown #test-list-item-description').exists();\n      assert.dom('#test-dropdown #test-list-item-generic').exists();\n      assert.dom('#test-dropdown #test-list-item-interactive').exists();\n      assert.dom('#test-dropdown #test-list-item-separator').exists();\n      assert.dom('#test-dropdown #test-list-item-title').exists();\n    });\n    (0, _qunit.test)('it renders the \"header\"/\"footer\" sub-components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Header id=\"test-header\">Header</D.Header>\n              <D.Footer id=\"test-footer\">Footer</D.Footer>\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"v5KVtipS\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Header\\\"]],[[24,1,\\\"test-header\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Header\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Footer\\\"]],[[24,1,\\\"test-footer\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown #test-header').hasText('Header');\n      assert.dom('#test-dropdown #test-footer').hasText('Footer');\n    });\n    (0, _qunit.test)('it renders the \"header\"/\"footer\" sub-components with separators', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Header @hasDivider={{true}} id=\"test-header\">Header</D.Header>\n              <D.Footer @hasDivider={{true}} id=\"test-footer\">Footer</D.Footer>\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"qPAqn6VK\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Header\\\"]],[[24,1,\\\"test-header\\\"]],[[\\\"@hasDivider\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"Header\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Footer\\\"]],[[24,1,\\\"test-footer\\\"]],[[\\\"@hasDivider\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown #test-header').hasClass('hds-dropdown__header--with-divider');\n      assert.dom('#test-dropdown #test-footer').hasClass('hds-dropdown__footer--with-divider');\n    });\n\n    // POSITION\n\n    (0, _qunit.test)('it should render the content aligned on the right by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Interactive @route=\"components.dropdown\" @text=\"interactive\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"2nAD+AOu\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],null,[[\\\"@route\\\",\\\"@text\\\"],[\\\"components.dropdown\\\",\\\"interactive\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown .hds-dropdown__content').hasClass('hds-dropdown__content--position-bottom-right');\n    });\n    (0, _qunit.test)('it should render the content aligned on the left if the value of @listPosition is \"bottom-left\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" @listPosition=\"bottom-left\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Interactive @route=\"components.dropdown\" @text=\"interactive\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"BGg8Jy/x\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],[[\\\"@listPosition\\\"],[\\\"bottom-left\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],null,[[\\\"@route\\\",\\\"@text\\\"],[\\\"components.dropdown\\\",\\\"interactive\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown .hds-dropdown__content').hasClass('hds-dropdown__content--position-bottom-left');\n    });\n    (0, _qunit.test)('it should render the element as `inline` if the value of @isInline is \"true\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" @isInline={{true}} as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Interactive @route=\"components.dropdown\" @text=\"interactive\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"JlK1LFl3\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],[[\\\"@isInline\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],null,[[\\\"@route\\\",\\\"@text\\\"],[\\\"components.dropdown\\\",\\\"interactive\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown').hasClass('hds-dropdown--is-inline');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the content with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown @width=\"248px\" id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Interactive @route=\"components.dropdown\" @text=\"interactive\" />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"3anzOBxF\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],[[\\\"@width\\\"],[\\\"248px\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],null,[[\\\"@route\\\",\\\"@text\\\"],[\\\"components.dropdown\\\",\\\"interactive\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown ul').hasStyle({\n        width: '248px'\n      });\n    });\n\n    // CLOSE DISCLOSED CONTENT ON CLICK\n\n    (0, _qunit.test)('it should hide the content when an interactive element triggers `close`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Interactive @text=\"interactive\" id=\"test-list-item-interactive\" {{on \"click\" D.close}} />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"Mxa/zmZp\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],[[24,1,\\\"test-list-item-interactive\\\"],[4,[38,1],[\\\"click\\\",[30,1,[\\\"close\\\"]]],null]],[[\\\"@text\\\"],[\\\"interactive\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\",\\\"on\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown #test-list-item-interactive').exists();\n      await (0, _testHelpers.click)('#test-list-item-interactive');\n      assert.dom('#test-dropdown #test-list-item-interactive').isNotVisible();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it should render a list of items without a role if no selectable items are passed in', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Interactive @text=\"interactive\" id=\"test-list-item-interactive\" {{on \"click\" D.close}} />\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"Mxa/zmZp\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Interactive\\\"]],[[24,1,\\\"test-list-item-interactive\\\"],[4,[38,1],[\\\"click\\\",[30,1,[\\\"close\\\"]]],null]],[[\\\"@text\\\"],[\\\"interactive\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\",\\\"on\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown ul').doesNotHaveAttribute('role');\n    });\n    (0, _qunit.test)('it should render a list of items with a `listbox` role, refering an existing `id` via `aria-labelledby` if selectable items are passed in', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" id=\"test-toggle-button\" />\n              <D.Checkmark>Checkmark</D.Checkmark>\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"Uvd6pMfq\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Checkmark\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkmark\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('#test-dropdown ul').hasAttribute('role', 'listbox');\n      assert.dom('#test-dropdown ul').hasAttribute('aria-labelledby', 'test-toggle-button');\n    });\n    (0, _qunit.test)('it should render a list of items with a `listbox` role, refering an generated `id` via `aria-labelledby` if selectable items are passed in', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Dropdown id=\"test-dropdown\" as |D|>\n              <D.ToggleButton @text=\"toggle button\" />\n              <D.Checkmark>Checkmark</D.Checkmark>\n            </Hds::Dropdown>\n          \n      */\n      {\n        \"id\": \"zqW5FvlD\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"ToggleButton\\\"]],null,[[\\\"@text\\\"],[\\\"toggle button\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Checkmark\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkmark\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"D\\\"],false,[\\\"hds/dropdown\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      const button = this.element.querySelector('.hds-dropdown-toggle-button');\n      const buttonId = button.id;\n      await (0, _testHelpers.click)('button.hds-dropdown-toggle-button');\n      assert.dom('#test-dropdown ul').hasAttribute('role', 'listbox');\n      assert.dom('#test-dropdown ul').hasAttribute('aria-labelledby', buttonId);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/checkbox', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the \"list-item/checkbox\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox>Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"bDIHCwdU\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item/checkbox\" as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox>Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"bDIHCwdU\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasTagName('li');\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--variant-checkbox');\n    });\n\n    // ELEMENTS\n\n    (0, _qunit.test)('it should render the \"list-item\" with a checkbox control', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox>Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"bDIHCwdU\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-checkbox').exists();\n    });\n\n    // ARGUMENT FORWARDING: ID, VALUE\n\n    (0, _qunit.test)('it should forward the `id` and `value` arguments to the input control', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox @id=\"id\" @value=\"value\">Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"81twtbF/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@value\\\"],[\\\"id\\\",\\\"value\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-checkbox').hasAttribute('id', 'id');\n      assert.dom('.hds-form-checkbox').hasValue('value');\n    });\n\n    // CONTROL-LABEL ASSOCIATION\n    (0, _qunit.test)('it automatically creates the control-label relationship via generated id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox @value=\"value\">Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"XgkqfCx5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"value\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      let control = this.element.querySelector('.hds-dropdown-list-item__control');\n      let controlId = control.id;\n      assert.dom('.hds-dropdown-list-item__label').hasAttribute('for', controlId);\n    });\n\n    // ICON\n\n    (0, _qunit.test)('if an icon is declared the flight icon should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox @icon=\"hexagon\">Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"FN8apXTm\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"hexagon\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-hexagon').exists();\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the content passed as block in a form label', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox>Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"bDIHCwdU\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item__control').exists();\n      assert.dom('.hds-dropdown-list-item__label').hasText('Checkbox item');\n    });\n\n    // COUNT\n\n    (0, _qunit.test)('it should render with a result count badge', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox @count=\"10\">Checkbox item</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"UwSrOgPd\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@count\\\"],[\\\"10\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item__count').hasText('10');\n    });\n\n    // SELECTED\n\n    (0, _qunit.test)('it should render as checked if `checked` is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkbox checked={{true}}>Checkbox</Hds::Dropdown::ListItem::Checkbox>\n      */\n      {\n        \"id\": \"Yxh5nZII\",\n        \"block\": \"[[[8,[39,0],[[16,\\\"checked\\\",true]],null,[[\\\"default\\\"],[[[[1,\\\"Checkbox\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkbox\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-checkbox').isChecked();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/checkmark', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the \"list-item/checkmark\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark>Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"R30RXz+5\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item/checkmark\" as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark>Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"R30RXz+5\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasTagName('li');\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--variant-checkmark');\n    });\n\n    // ELEMENTS\n\n    (0, _qunit.test)('it should render the \"list-item\" with a button by default\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark>Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"R30RXz+5\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-dropdown-list-item__interactive').exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item\" with a link if it has a @route parameter\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark @route=\"index\">Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"7nZcBmsS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\"],[\\\"index\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a.hds-dropdown-list-item__interactive').exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item\" with a link if it has a @href argument\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark @href=\"#\">Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"x2myXBcP\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@href\\\"],[\\\"#\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a.hds-dropdown-list-item__interactive').exists();\n    });\n\n    // ICON\n\n    (0, _qunit.test)('if an icon is declared the flight icon should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark @icon=\"hexagon\">Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"4i/mpq2C\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"hexagon\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-hexagon').exists();\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the content passed as block', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark>Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"R30RXz+5\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasText('Checkmark item');\n    });\n\n    // COUNT\n\n    (0, _qunit.test)('it should render with a result count badge', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark @count=\"10\">Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"UESPAb+5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@count\\\"],[\\\"10\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item__count').hasText('10');\n    });\n\n    // SELECTED\n\n    (0, _qunit.test)('it should render as selected if `@selected` is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark @selected={{true}}>Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"ZDOby51s\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--variant-checkmark-selected');\n      assert.dom('.hds-dropdown-list-item__checkmark').exists();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it should present the interactive element as a selectable option', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Checkmark @selected={{true}}>Checkmark item</Hds::Dropdown::ListItem::Checkmark>\n      */\n      {\n        \"id\": \"ZDOby51s\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@selected\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"Checkmark item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/checkmark\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/checkmark-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item__interactive').hasAttribute('role', 'option').hasAttribute('aria-selected', 'true');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/copy-item-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/copy-item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::CopyItem @text=\"copy-item\" id=\"test-list-item-copy-item\" />\n      */\n      {\n        \"id\": \"8aBEPYG/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-copy-item\\\"]],[[\\\"@text\\\"],[\\\"copy-item\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/copy-item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/copy-item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-copy-item').hasTagName('li');\n      assert.dom('#test-list-item-copy-item').hasClass('hds-dropdown-list-item');\n      assert.dom('#test-list-item-copy-item').hasClass('hds-dropdown-list-item--variant-copy-item');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Dropdown::ListItem::CopyItem\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::CopyItem />\n      */\n      {\n        \"id\": \"EjLuieib\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/dropdown/list-item/copy-item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/copy-item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/description-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/description', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Description @text=\"description\" id=\"test-list-item-description\" />\n      */\n      {\n        \"id\": \"6svX1EwY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-description\\\"]],[[\\\"@text\\\"],[\\\"description\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/description\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/description-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-description').hasTagName('li');\n      assert.dom('#test-list-item-description').hasClass('hds-dropdown-list-item');\n      assert.dom('#test-list-item-description').hasClass('hds-dropdown-list-item--variant-description');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Dropdown::ListItem::Description\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Description />\n      */\n      {\n        \"id\": \"h80Y3+Rg\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/dropdown/list-item/description\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/description-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/generic-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/generic', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Generic id=\"test-list-item-generic\" />\n      */\n      {\n        \"id\": \"MDhWaVnx\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-generic\\\"]],null,null]],[],false,[\\\"hds/dropdown/list-item/generic\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/generic-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-generic').hasTagName('li');\n      assert.dom('#test-list-item-generic').hasClass('hds-dropdown-list-item');\n      assert.dom('#test-list-item-generic').hasClass('hds-dropdown-list-item--variant-generic');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Generic><pre>test</pre></Hds::Dropdown::ListItem::Generic>\n      */\n      {\n        \"id\": \"ITcRUZsj\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/generic\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/generic-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item--variant-generic > pre').exists();\n      assert.dom('.hds-dropdown-list-item--variant-generic > pre').hasText('test');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/interactive-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/interactive', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n\n    // 🚨 NOTICE 🚨:\n    // unlike other components, the `...attributes` spread is not applied to the top element, but to the `<button>/<a>` children,\n    // so we can't use the DOM \"id\" to target the component but we have to rely on the class name\n\n    (0, _qunit.test)('it should render the component as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive\" />\n      */\n      {\n        \"id\": \"zFw3HIT4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"interactive\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasTagName('li');\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--variant-interactive');\n    });\n\n    // ELEMENTS\n\n    (0, _qunit.test)('it should render the \"list-item\" with a button by default\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive\" />\n      */\n      {\n        \"id\": \"zFw3HIT4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"interactive\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item > button').exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item\" with a link if it has a @route parameter\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive\" @route=\"index\" />\n      */\n      {\n        \"id\": \"7H5RnMGY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@route\\\"],[\\\"interactive\\\",\\\"index\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item > a').exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item\" with a link if it has a @href argument\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive\" @href=\"#\" />\n      */\n      {\n        \"id\": \"S7kpVAG/\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@href\\\"],[\\\"interactive\\\",\\\"#\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item > a').exists();\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the \"action\" color as the default if no color is declared\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive\" />\n      */\n      {\n        \"id\": \"zFw3HIT4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"interactive\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--color-action');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @color=\"critical\" @text=\"interactive\" @icon=\"trash\" />\n      */\n      {\n        \"id\": \"xWOVMgF4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@color\\\",\\\"@text\\\",\\\"@icon\\\"],[\\\"critical\\\",\\\"interactive\\\",\\\"trash\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--color-critical');\n    });\n\n    // ICONS\n\n    (0, _qunit.test)('if an `@icon` is declared a leading icon should be rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @icon=\"clipboard-copy\" @text=\"interactive\" />\n      */\n      {\n        \"id\": \"jNJNa9sn\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\"],[\\\"clipboard-copy\\\",\\\"interactive\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-clipboard-copy').exists();\n    });\n    (0, _qunit.test)('if an `@trailingIcon` is declared a trailing icon should be rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @trailingIcon=\"external-link\" @text=\"interactive\" />\n      */\n      {\n        \"id\": \"SPnQ/mN8\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@trailingIcon\\\",\\\"@text\\\"],[\\\"external-link\\\",\\\"interactive\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-external-link').exists();\n    });\n    (0, _qunit.test)('if both an `@icon` and an `@trailingIcon` are declared both the leading and trailing icons should be rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @icon=\"clipboard-copy\" @trailingIcon=\"external-link\" @text=\"interactive\" />\n      */\n      {\n        \"id\": \"4ghIBYCI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@trailingIcon\\\",\\\"@text\\\"],[\\\"clipboard-copy\\\",\\\"external-link\\\",\\\"interactive\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-clipboard-copy').exists();\n      assert.dom('.hds-icon.hds-icon-external-link').exists();\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the text passed as @text prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive text\" />\n      */\n      {\n        \"id\": \"1t5+JfJE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"interactive text\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasText('interactive text');\n    });\n    (0, _qunit.test)('it should render the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Dropdown::ListItem::Interactive>\n                interactive\n              </Hds::Dropdown::ListItem::Interactive>\n            \n      */\n      {\n        \"id\": \"o1pOVjqg\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          interactive\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasText('interactive');\n    });\n    (0, _qunit.test)('it should render the text passed as @text prop if content is yielded', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Dropdown::ListItem::Interactive @text=\"erroneous\">\n                interactive\n              </Hds::Dropdown::ListItem::Interactive>\n            \n      */\n      {\n        \"id\": \"ZB6WExMP\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@text\\\"],[\\\"erroneous\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          interactive\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').doesNotContainText('erroneous');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value and the component does not yield content', async function (assert) {\n      const errorMessage = '@text for \"Hds::Dropdown::ListItem::Interactive\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive />\n      */\n      {\n        \"id\": \"x1p0gTcY\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Dropdown::ListItem::Interactive\" must be one of the following: action, critical; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive @text=\"interactive text\" @color=\"foo\" />\n      */\n      {\n        \"id\": \"61EePakL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@color\\\"],[\\\"interactive text\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive as |I|>\n                    <I.Badge @text=\"Badge\" />\n                  </Hds::Dropdown::ListItem::Interactive>\n      */\n      {\n        \"id\": \"igy97Koi\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,1,[\\\"Badge\\\"]],null,[[\\\"@text\\\"],[\\\"Badge\\\"]],null],[1,\\\"\\\\n            \\\"]],[1]]]]]],[\\\"I\\\"],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-badge').hasText('Badge').hasClass('hds-badge--size-small');\n    });\n    (0, _qunit.test)('it does not render the contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Interactive>\n                    interactive\n                  </Hds::Dropdown::ListItem::Interactive>\n      */\n      {\n        \"id\": \"5pCQTd/N\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              interactive\\\\n            \\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/interactive-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-badge').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/radio-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/radio', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the \"list-item/radio\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio>Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"DR/qGO1M\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).exists();\n    });\n    (0, _qunit.test)('it should render the \"list-item/radio\" as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio>Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"DR/qGO1M\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item').hasTagName('li');\n      assert.dom('.hds-dropdown-list-item').hasClass('hds-dropdown-list-item--variant-radio');\n    });\n\n    // ELEMENTS\n\n    (0, _qunit.test)('it should render the \"list-item\" with a radio control', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio>Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"DR/qGO1M\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-radio').exists();\n    });\n\n    // ARGUMENT FORWARDING: ID, VALUE\n\n    (0, _qunit.test)('it should forward the `id` and `value` arguments to the input control', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio @id=\"id\" @value=\"value\">Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"CFcPsdDk\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@value\\\"],[\\\"id\\\",\\\"value\\\"]],[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-radio').hasAttribute('id', 'id');\n      assert.dom('.hds-form-radio').hasValue('value');\n    });\n\n    // CONTROL-LABEL ASSOCIATION\n    (0, _qunit.test)('it automatically creates the control-label relationship via generated id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio @value=\"value\">Checkbox item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"0nKczr72\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"value\\\"]],[[\\\"default\\\"],[[[[1,\\\"Checkbox item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      let control = this.element.querySelector('.hds-dropdown-list-item__control');\n      let controlId = control.id;\n      assert.dom('.hds-dropdown-list-item__label').hasAttribute('for', controlId);\n    });\n\n    // ICON\n\n    (0, _qunit.test)('if an icon is declared the flight icon should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio @icon=\"hexagon\">Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"ywnWDmmh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"hexagon\\\"]],[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-hexagon').exists();\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the content passed as block in a form label', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio>Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"DR/qGO1M\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item__control').exists();\n      assert.dom('.hds-dropdown-list-item__label').hasText('Radio item');\n    });\n\n    // COUNT\n\n    (0, _qunit.test)('it should render with a result count badge', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio @count=\"10\">Radio item</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"ojW4X5yC\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@count\\\"],[\\\"10\\\"]],[[\\\"default\\\"],[[[[1,\\\"Radio item\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-dropdown-list-item__count').hasText('10');\n    });\n\n    // SELECTED\n\n    (0, _qunit.test)('it should render as checked if `checked` is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Radio checked={{true}}>Radio</Hds::Dropdown::ListItem::Radio>\n      */\n      {\n        \"id\": \"uwWibjYl\",\n        \"block\": \"[[[8,[39,0],[[16,\\\"checked\\\",true]],null,[[\\\"default\\\"],[[[[1,\\\"Radio\\\"]],[]]]]]],[],false,[\\\"hds/dropdown/list-item/radio\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/radio-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-radio').isChecked();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/separator-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/separator', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the \"list-item/separator\" as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Separator @text=\"separator\" id=\"test-list-item-separator\" />\n      */\n      {\n        \"id\": \"vTOJCnnR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-separator\\\"]],[[\\\"@text\\\"],[\\\"separator\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/separator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-separator').hasTagName('li');\n      assert.dom('#test-list-item-separator').hasClass('hds-dropdown-list-item');\n      assert.dom('#test-list-item-separator').hasClass('hds-dropdown-list-item--variant-separator');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render the \"list-item/separator\" with role of separator', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Separator id=\"test-list-item-separator\" />\n      */\n      {\n        \"id\": \"VLjg3mVn\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-separator\\\"]],null,null]],[],false,[\\\"hds/dropdown/list-item/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/separator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-separator').hasAttribute('role', 'separator');\n    });\n    (0, _qunit.test)('it should render the \"list-item/separator\" with the aria-hidden attribute', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Separator id=\"test-list-item-separator\" />\n      */\n      {\n        \"id\": \"VLjg3mVn\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-separator\\\"]],null,null]],[],false,[\\\"hds/dropdown/list-item/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/separator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-separator').hasAttribute('aria-hidden', 'true');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/list-item/title-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/list-item/title', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component as a <li> element with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Title @text=\"title\" id=\"test-list-item-title\" />\n      */\n      {\n        \"id\": \"a8oZf06j\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-list-item-title\\\"]],[[\\\"@text\\\"],[\\\"title\\\"]],null]],[],false,[\\\"hds/dropdown/list-item/title\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/title-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-list-item-title').hasTagName('li');\n      assert.dom('#test-list-item-title').hasClass('hds-dropdown-list-item');\n      assert.dom('#test-list-item-title').hasClass('hds-dropdown-list-item--variant-title');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Dropdown::ListItem::Title\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::ListItem::Title />\n      */\n      {\n        \"id\": \"QDjUubwV\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/dropdown/list-item/title\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/list-item/title-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/toggle/button-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/toggle/button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n\n    // notice: \"toggle-button\" is a wrapper around the \"hds::button\" so we test only very specific things\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"toggle text\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"G7xMdwDZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle text\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasClass('hds-dropdown-toggle-button');\n    });\n\n    // TEXT\n\n    (0, _qunit.test)('it should render the text passed as @text prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"toggle text\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"G7xMdwDZ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"toggle text\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasText('toggle text');\n    });\n\n    // CHEVRON\n\n    (0, _qunit.test)('it should render the chevron \"down\" by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"/JBQcV4r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"text toggle\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-chevron-down').exists();\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should render an icon if @icon is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" @icon=\"hexagon\" />\n      */\n      {\n        \"id\": \"i5aAqeJ5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@icon\\\"],[\\\"text toggle\\\",\\\"hexagon\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-hexagon').exists();\n    });\n\n    // BADGE\n\n    (0, _qunit.test)('it should render a badge if @badge is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"Lorem ipsum\" @badge=\"badge\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"pRB7QtQt\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@badge\\\"],[\\\"Lorem ipsum\\\",\\\"badge\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button .hds-dropdown-toggle-button__badge').hasText('badge');\n      assert.dom('.hds-dropdown-toggle-button__badge .hds-icon').doesNotExist();\n    });\n    (0, _qunit.test)('it should render a badge with icon if @badge and @badgeIcon is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"Lorem ipsum\" @badge=\"badge\" @badgeIcon=\"hexagon\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"YuvpcI7V\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@badge\\\",\\\"@badgeIcon\\\"],[\\\"Lorem ipsum\\\",\\\"badge\\\",\\\"hexagon\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button .hds-dropdown-toggle-button__badge').hasText('badge');\n      assert.dom('.hds-dropdown-toggle-button__badge .hds-icon.hds-icon-hexagon').exists();\n    });\n\n    // COUNT\n\n    (0, _qunit.test)('it should render a badge count if @count is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"Lorem ipsum\" @count=\"3\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"zpMjsWZ8\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@count\\\"],[\\\"Lorem ipsum\\\",\\\"3\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button .hds-dropdown-toggle-button__count').hasText('3');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the primary color as the default if no color is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"/JBQcV4r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"text toggle\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasClass('hds-dropdown-toggle-button--color-primary');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" @color=\"secondary\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"xyjRGcLO\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@color\\\"],[\\\"text toggle\\\",\\\"secondary\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasClass('hds-dropdown-toggle-button--color-secondary');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size as the default if no size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"/JBQcV4r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\"],[\\\"text toggle\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasClass('hds-dropdown-toggle-button--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" @size=\"small\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"leHQ4eyv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@size\\\"],[\\\"text toggle\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasClass('hds-dropdown-toggle-button--size-small');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct aria-expanded attribute on the toggle element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" @isOpen={{true}} id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"kqdi4ngn\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@isOpen\\\"],[\\\"text toggle\\\",true]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-button').hasAttribute('aria-expanded', 'true');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is not defined', async function (assert) {\n      const errorMessage = `@text for \"Hds::Dropdown::Toggle::Button\" must have a valid value`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"Ey5lCaKU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],null,null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Dropdown::Toggle::Button\" must be one of the following: primary, secondary; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" @color=\"foo\" id=\"test-toggle-button\" />\n      */\n      {\n        \"id\": \"9EifOhJy\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-button\\\"]],[[\\\"@text\\\",\\\"@color\\\"],[\\\"text toggle\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Dropdown::Toggle::Button\" must be one of the following: small, medium; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Button @text=\"text toggle\" @size=\"foo\" />\n      */\n      {\n        \"id\": \"jHElmJ3K\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"text toggle\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/dropdown/toggle/icon-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/dropdown/toggle/icon', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n\n    // notice: by default the \"toggle-icon\" has \"user\" icon, \"chevron-down\", and an aria-label\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"toggle text\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"GJChcSxb\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\"],[\\\"user\\\",\\\"toggle text\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-icon').hasClass('hds-dropdown-toggle-icon');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('if an @icon is declared the flight icon should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"settings\" @text=\"settings menu\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"FqqDC4oI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\"],[\\\"settings\\\",\\\"settings menu\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-settings').exists();\n    });\n\n    // IMAGE (AVATAR)\n\n    (0, _qunit.test)('if an @imageSrc is declared and exists the image should render in the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" @imageSrc=\"/assets/images/avatar.png\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"G0B3E+Ks\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@imageSrc\\\"],[\\\"user\\\",\\\"user menu\\\",\\\"/assets/images/avatar.png\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('img').exists();\n    });\n    (0, _qunit.skip)('if an @imageSrc is declared but does not exist, the flight icon should render in the component', async function (assert) {\n      this.set('imageSrc', '/assets/images/avatar.png');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" @imageSrc={{this.imageSrc}} id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"N4ml41B4\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@imageSrc\\\"],[\\\"user\\\",\\\"user menu\\\",[30,0,[\\\"imageSrc\\\"]]]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      // we load the image dynamically to cover this usecase and also to prevent this test from intermittently failing for no obvious reason\n      this.set('imageSrc', '/assets/images/avatar-broken.png');\n      await (0, _testHelpers.settled)();\n      assert.dom('img').doesNotExist();\n      assert.dom('#test-toggle-icon .hds-icon.hds-icon-user').exists();\n    });\n\n    // CHEVRON\n\n    (0, _qunit.test)('it should render the chevron \"down\" by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"ni9DurP+\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\"],[\\\"user\\\",\\\"user menu\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-chevron-down').exists();\n    });\n    (0, _qunit.test)('toggle-icon renders no chevron when hasChevron is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" id=\"test-toggle-icon\" @hasChevron={{false}} />\n      */\n      {\n        \"id\": \"SCe6tqNN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@hasChevron\\\"],[\\\"user\\\",\\\"user menu\\\",false]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon.hds-icon-chevron-down').doesNotExist();\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size as the default if no size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"ni9DurP+\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\"],[\\\"user\\\",\\\"user menu\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-icon').hasClass('hds-dropdown-toggle-icon--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" @size=\"small\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"GzPXC99Z\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@size\\\"],[\\\"user\\\",\\\"user menu\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-icon').hasClass('hds-dropdown-toggle-icon--size-small');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct aria attribute declared using the @text prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"ni9DurP+\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\"],[\\\"user\\\",\\\"user menu\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-icon').hasAria('label', 'user menu');\n    });\n    (0, _qunit.test)('it should render the user \"avatar\" image with the correct role', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" @imageSrc=\"/assets/images/avatar.png\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"G0B3E+Ks\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@imageSrc\\\"],[\\\"user\\\",\\\"user menu\\\",\\\"/assets/images/avatar.png\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-icon img').hasAttribute('role', 'presentation');\n    });\n    (0, _qunit.test)('it should render with the correct aria-expanded attribute on the toggle element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" @isOpen={{true}} id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"b0jjMKDD\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@isOpen\\\"],[\\\"user\\\",\\\"user menu\\\",true]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toggle-icon').hasAttribute('aria-expanded', 'true');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is not defined', async function (assert) {\n      const errorMessage = `@text for \"Hds::Dropdown::Toggle::Icon\" must have a valid value`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" id=\"test-toggle-icon\" />\n      */\n      {\n        \"id\": \"gHnx6DV+\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toggle-icon\\\"]],[[\\\"@icon\\\"],[\\\"user\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if both @icon and @imageSrc are not defined', async function (assert) {\n      const errorMessage = '@icon or @imageSrc must be defined for \"Hds::Dropdown::Toggle::Icon\"';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @text=\"user menu\" />\n      */\n      {\n        \"id\": \"/gjYyNeZ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"user menu\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Dropdown::Toggle::Icon\" must be one of the following: small, medium; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Dropdown::Toggle::Icon @icon=\"user\" @text=\"user menu\" @size=\"foo\" />\n      */\n      {\n        \"id\": \"q360VFoq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@size\\\"],[\\\"user\\\",\\\"user menu\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/dropdown/toggle/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/dropdown/toggle/icon-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/flight-icon/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | flight-icon', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" />\n      */\n      {\n        \"id\": \"TxfRGJM4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon').hasClass('flight-icon');\n    });\n    (0, _qunit.test)('it has aria-hidden set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" />\n      */\n      {\n        \"id\": \"TxfRGJM4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').hasAria('hidden', 'true');\n    });\n    (0, _qunit.test)('it renders the 16x16 icon by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" />\n      */\n      {\n        \"id\": \"TxfRGJM4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').hasStyle({\n        height: '16px',\n        width: '16px'\n      }).hasAttribute('width', '16').hasAttribute('height', '16');\n    });\n    (0, _qunit.test)('it renders the 24x24 icon when option is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @size=\"24\" />\n      */\n      {\n        \"id\": \"qed/2rfm\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@size\\\"],[\\\"activity\\\",\\\"24\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').hasStyle({\n        height: '24px',\n        width: '24px'\n      }).hasAttribute('width', '24').hasAttribute('height', '24');\n    });\n    (0, _qunit.test)('it sets the width/height to 100% when the \"stretched\" option is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @size=\"24\" @stretched={{true}} />\n      */\n      {\n        \"id\": \"j+JmqsJN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@size\\\",\\\"@stretched\\\"],[\\\"activity\\\",\\\"24\\\",true]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').hasAttribute('width', '100%').hasAttribute('height', '100%');\n    });\n    (0, _qunit.test)('it does not have the \"flight-icon-display-inline\" class if the option is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @isInlineBlock={{false}} />\n      */\n      {\n        \"id\": \"RMv/qk2h\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@isInlineBlock\\\"],[\\\"activity\\\",false]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon').doesNotHaveClass('flight-icon-display-inline');\n    });\n    (0, _qunit.test)('it does have the \"flight-icon-display-inline\" class if the option is not set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" />\n      */\n      {\n        \"id\": \"TxfRGJM4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon').hasClass('flight-icon-display-inline');\n    });\n    (0, _qunit.test)('it does not have the \"flight-icon-display-inline\" class if the \"stretched\" option is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @stretched={{true}} />\n      */\n      {\n        \"id\": \"HDJLWti1\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@stretched\\\"],[\\\"activity\\\",true]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon').doesNotHaveClass('flight-icon-display-inline');\n    });\n    (0, _qunit.test)('additional classes can be added when component is invoked', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"meh\" class=\"demo\" />\n      */\n      {\n        \"id\": \"d7HdCPR7\",\n        \"block\": \"[[[8,[39,0],[[24,0,\\\"demo\\\"]],[[\\\"@name\\\"],[\\\"meh\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.flight-icon`).hasClass('demo');\n    });\n    (0, _qunit.test)('the color property should accept :root variable values', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"alert-circle\" @color=\"var(--shw-color-feedback-critical-100)\" />\n      */\n      {\n        \"id\": \"c6T9mLHv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@color\\\"],[\\\"alert-circle\\\",\\\"var(--shw-color-feedback-critical-100)\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.flight-icon`).hasStyle({\n        fill: 'rgb(186, 34, 38)'\n      });\n    });\n    (0, _qunit.test)('the fill color should be set to black by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"meh\" />\n      */\n      {\n        \"id\": \"MBBJ8AwD\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"meh\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.flight-icon`).hasStyle({\n        fill: 'rgb(0, 0, 0)'\n      });\n    });\n    (0, _qunit.test)('The fill color should be able to be inherited from parent', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <div style=\"color:blue;\"><FlightIcon @name=\"meh\" /></div>\n      */\n      {\n        \"id\": \"KzZsxN5F\",\n        \"block\": \"[[[10,0],[14,5,\\\"color:blue;\\\"],[12],[8,[39,1],null,[[\\\"@name\\\"],[\\\"meh\\\"]],null],[13]],[],false,[\\\"div\\\",\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.flight-icon`).hasStyle({\n        fill: 'rgb(0, 0, 255)'\n      });\n    });\n    (0, _qunit.test)('it renders the title if one is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @title=\"try to avoid\" />\n      */\n      {\n        \"id\": \"mI+KaqTV\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"try to avoid\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('title').containsText('try to avoid');\n    });\n    (0, _qunit.test)('it has aria-hidden set to false if a title is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @title=\"try to avoid\" />\n      */\n      {\n        \"id\": \"mI+KaqTV\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"try to avoid\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').hasAria('hidden', 'false');\n    });\n    (0, _qunit.test)('it has aria-labelledby if a title exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @title=\"try to avoid\" />\n      */\n      {\n        \"id\": \"mI+KaqTV\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"try to avoid\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').hasAttribute('aria-labelledby');\n    });\n    (0, _qunit.test)('it does not have aria-labelledby if a title does not exist', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" />\n      */\n      {\n        \"id\": \"TxfRGJM4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.flight-icon.flight-icon-activity').doesNotHaveAttribute('aria-labelledby');\n    });\n    (0, _qunit.test)('it has a g element with role of presentation if a title exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"activity\" @title=\"computer says no\" />\n      */\n      {\n        \"id\": \"6uyHbUda\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"computer says no\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg > g').hasAttribute('role');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @name is not provided', async function (assert) {\n      const errorMessage = `Please provide to <FlightIcon> a value for @name`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon />\n      */\n      {\n        \"id\": \"RwkQgMIZ\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if the icon @name does not exist', async function (assert) {\n      const errorMessage = `The icon @name \"abc\" provided to <FlightIcon> is not correct. Please verify it exists on https://helios.hashicorp.design/icons/library`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <FlightIcon @name=\"abc\" />\n      */\n      {\n        \"id\": \"8KjKfeGh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"abc\\\"]],null]],[],false,[\\\"flight-icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flight-icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/flyout/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/flyout/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-flyout').hasClass('hds-flyout');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the component with default size if no arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-flyout').hasClass('hds-flyout--size-medium');\n    });\n    (0, _qunit.test)('it should render the component with custom size if provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" @size=\"large\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"TKunSNm7\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],[[\\\"@size\\\"],[\\\"large\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-flyout').hasClass('hds-flyout--size-large');\n    });\n\n    // OVERLAY\n\n    (0, _qunit.test)('it should render the component with an overlay element by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-flyout__overlay').isVisible();\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|>\n                  <F.Header>Title</F.Header>\n                  <F.Body>Body</F.Body>\n                  <F.Footer>Footer</F.Footer>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"GB00PbM4\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Body\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Body\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Footer\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-flyout').exists();\n      assert.dom('.hds-flyout__header').exists();\n      assert.dom('.hds-flyout__header').hasText('Title');\n      assert.dom('.hds-flyout__body').exists();\n      assert.dom('.hds-flyout__body').hasText('Body');\n      assert.dom('.hds-flyout__footer').exists();\n      assert.dom('.hds-flyout__footer').hasText('Footer');\n    });\n\n    // TITLE (ICON, TAGLINE & DESCRIPTION)\n\n    (0, _qunit.test)('it renders the title without icon, tagline, and description', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|>\n                  <F.Header>Title</F.Header>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"ath0rtYj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-flyout__title').exists();\n      assert.dom('.hds-flyout__title').hasText('Title');\n      assert.dom('.hds-flyout__icon').doesNotExist();\n      assert.dom('.hds-flyout__tagline').doesNotExist();\n      assert.dom('.hds-flyout__description').doesNotExist();\n    });\n    (0, _qunit.test)('it renders the title with icon and tagline if provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|>\n                  <F.Header @icon=\"info\" @tagline=\"Tagline\">Title</F.Header>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"G0Gh77pp\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,[[\\\"@icon\\\",\\\"@tagline\\\"],[\\\"info\\\",\\\"Tagline\\\"]],[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-flyout__title').exists();\n      assert.dom('.hds-flyout__title').hasText('Tagline Title');\n      assert.dom('.hds-flyout__icon.hds-icon-info').exists();\n      assert.dom('.hds-flyout__tagline').exists();\n      assert.dom('.hds-flyout__tagline').hasText('Tagline');\n    });\n    (0, _qunit.test)('it renders the description if provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|>\n                  <F.Header>Title</F.Header>\n                  <F.Description>Description</F.Description>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"FJgT+ybA\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Description\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-flyout__title').exists();\n      assert.dom('.hds-flyout__title').hasText('Title');\n      assert.dom('.hds-flyout__description').exists();\n      assert.dom('.hds-flyout__description').hasText('Description');\n      assert.dom('.hds-flyout__icon').doesNotExist();\n      assert.dom('.hds-flyout__tagline').doesNotExist();\n    });\n    (0, _qunit.test)('it renders the title as an h1', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|>\n                  <F.Header @icon=\"info\" @tagline=\"Tagline\">Title</F.Header>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"G0Gh77pp\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,[[\\\"@icon\\\",\\\"@tagline\\\"],[\\\"info\\\",\\\"Tagline\\\"]],[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-flyout__title').hasTagName('h1');\n    });\n\n    // DISMISS\n\n    (0, _qunit.test)('it should always render the \"dismiss\" button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-flyout__dismiss').exists();\n    });\n    (0, _qunit.test)('it should close the flyout when the \"dismiss\" button is pressed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-flyout').isVisible();\n      await (0, _testHelpers.click)('button.hds-flyout__dismiss');\n      assert.dom('#test-flyout').isNotVisible();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it uses the title as name for the dialog', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the IDs are dynamically generated\n      let titleElement = this.element.querySelector('.hds-flyout__title');\n      let titleElementId = titleElement.id;\n      assert.dom('dialog').hasAttribute('aria-labelledby', titleElementId);\n    });\n\n    // FOCUS MANAGEMENT\n\n    (0, _qunit.test)('it sets initial focus on the dimiss button, as first focusable element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-flyout\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"Dqm+EiBF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-flyout\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-flyout__dismiss').isFocused();\n    });\n\n    // CALLBACKS\n\n    (0, _qunit.test)('it should call `onOpen` function if provided', async function (assert) {\n      let opened = false;\n      this.set('onOpen', () => opened = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-onopen-callback\" @onOpen={{this.onOpen}} as |F|>\n                  <F.Header>Title</F.Header>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"ztWHNLJc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-onopen-callback\\\"]],[[\\\"@onOpen\\\"],[[30,0,[\\\"onOpen\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-onopen-callback').isVisible();\n      await (0, _testHelpers.settled)();\n      assert.ok(opened);\n    });\n    (0, _qunit.skip)('it should call `onClose` function if provided', async function (assert) {\n      let closed = false;\n      this.set('onClose', () => closed = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout id=\"test-close-callback\" @onClose={{this.onClose}} as |F|>\n                  <F.Header>Title</F.Header>\n                </Hds::Flyout>\n      */\n      {\n        \"id\": \"g4TI55tY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-close-callback\\\"]],[[\\\"@onClose\\\"],[[30,0,[\\\"onClose\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button.hds-flyout__dismiss');\n      assert.dom('#test-onclose-callback').isNotVisible();\n      await (0, _testHelpers.settled)();\n      assert.ok(closed);\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Flyout\" must be one of the following: medium, large; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Flyout @size=\"foo\" as |F|><F.Header>Title</F.Header></Hds::Flyout>\n      */\n      {\n        \"id\": \"D38QD/be\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"foo\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/flyout\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/flyout/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/character-count/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/character-count/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.set('value', '');\n      this.update = event => this.set('value', event.target.value);\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::CharacterCount id=\"test-form-character-count\" />\n      */\n      {\n        \"id\": \"c5SJCWZ/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-character-count\\\"]],null,null]],[],false,[\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasClass('hds-form-character-count');\n    });\n    (0, _qunit.test)('it should render with a CSS class provided via the @contextualClass argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::CharacterCount @contextualClass=\"my-class\" id=\"test-form-character-count\" />\n      */\n      {\n        \"id\": \"VwRD9ion\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@contextualClass\\\"],[\\\"my-class\\\"]],null]],[],false,[\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasClass('my-class');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it renders a character count with the correct \"id\" attribute if the @controlId argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::CharacterCount @controlId=\"my-control-id\"/>\n      */\n      {\n        \"id\": \"j8pjKNEG\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@controlId\\\"],[\\\"my-control-id\\\"]],null]],[],false,[\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#character-count-my-control-id').exists();\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders a character count with the default predefined format', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <input id=\"input-1\" value={{this.value}} {{on \"input\" this.update}} />\n                <Hds::Form::CharacterCount @value={{this.value}} @controlId=\"input-1\" id=\"test-form-character-count\"/>\n      */\n      {\n        \"id\": \"IF+nAOXs\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[11,\\\"input\\\"],[24,1,\\\"input-1\\\"],[16,2,[30,0,[\\\"value\\\"]]],[4,[38,1],[\\\"input\\\",[30,0,[\\\"update\\\"]]],null],[12],[13],[1,\\\"\\\\n          \\\"],[8,[39,2],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@value\\\",\\\"@controlId\\\"],[[30,0,[\\\"value\\\"]],\\\"input-1\\\"]],null]],[],false,[\\\"input\\\",\\\"on\\\",\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasText('0 characters entered');\n      await (0, _testHelpers.typeIn)('#input-1', 'cl');\n      assert.dom('#test-form-character-count').hasText('2 characters entered');\n    });\n    (0, _qunit.test)('it renders a character count in the predefined format when only @maxLength is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <input id=\"input-max-length\" value={{this.value}} {{on \"input\" this.update}} />\n                <Hds::Form::CharacterCount @value={{this.value}} @maxLength={{25}} @controlId=\"input-max-length\" id=\"test-form-character-count\"/>\n      */\n      {\n        \"id\": \"YLjZqiXB\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[11,\\\"input\\\"],[24,1,\\\"input-max-length\\\"],[16,2,[30,0,[\\\"value\\\"]]],[4,[38,1],[\\\"input\\\",[30,0,[\\\"update\\\"]]],null],[12],[13],[1,\\\"\\\\n          \\\"],[8,[39,2],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@value\\\",\\\"@maxLength\\\",\\\"@controlId\\\"],[[30,0,[\\\"value\\\"]],25,\\\"input-max-length\\\"]],null]],[],false,[\\\"input\\\",\\\"on\\\",\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasText('25 characters allowed');\n      await (0, _testHelpers.typeIn)('#input-max-length', 'cluster');\n      assert.dom('#test-form-character-count').hasText('18 characters remaining');\n      await (0, _testHelpers.typeIn)('#input-max-length', '-length-is-longer');\n      assert.dom('#test-form-character-count').hasText('1 character remaining');\n      await (0, _testHelpers.typeIn)('#input-max-length', '-');\n      assert.dom('#test-form-character-count').hasText('0 characters remaining');\n      await (0, _testHelpers.typeIn)('#input-max-length', 't');\n      assert.dom('#test-form-character-count').hasText('Exceeded by 1 character');\n      await (0, _testHelpers.typeIn)('#input-max-length', 'han');\n      assert.dom('#test-form-character-count').hasText('Exceeded by 4 characters');\n    });\n    (0, _qunit.test)('it renders a character count in the predefined format when only @minLength is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <input id=\"input-min-length\" value={{this.value}} {{on \"input\" this.update}} />\n                <Hds::Form::CharacterCount @value={{this.value}} @minLength={{3}} @controlId=\"input-min-length\" id=\"test-form-character-count\"/>\n      */\n      {\n        \"id\": \"c2PQmaAC\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[11,\\\"input\\\"],[24,1,\\\"input-min-length\\\"],[16,2,[30,0,[\\\"value\\\"]]],[4,[38,1],[\\\"input\\\",[30,0,[\\\"update\\\"]]],null],[12],[13],[1,\\\"\\\\n          \\\"],[8,[39,2],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@value\\\",\\\"@minLength\\\",\\\"@controlId\\\"],[[30,0,[\\\"value\\\"]],3,\\\"input-min-length\\\"]],null]],[],false,[\\\"input\\\",\\\"on\\\",\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasText('3 characters required');\n      await (0, _testHelpers.typeIn)('#input-min-length', 'c');\n      assert.dom('#test-form-character-count').hasText('2 more characters required');\n      await (0, _testHelpers.typeIn)('#input-min-length', 'l');\n      assert.dom('#test-form-character-count').hasText('1 more character required');\n      await (0, _testHelpers.typeIn)('#input-min-length', 'u');\n      assert.dom('#test-form-character-count').hasText('3 characters entered');\n    });\n    (0, _qunit.test)('it renders a character count in the predefined format when both @minLength and @maxLength are set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <input id=\"input-minmax-length\" value={{this.value}} {{on \"input\" this.update}} />\n                <Hds::Form::CharacterCount @value={{this.value}} @minLength={{3}} @maxLength={{25}} @controlId=\"input-minmax-length\" id=\"test-form-character-count\"/>\n      */\n      {\n        \"id\": \"DU1fGQeu\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[11,\\\"input\\\"],[24,1,\\\"input-minmax-length\\\"],[16,2,[30,0,[\\\"value\\\"]]],[4,[38,1],[\\\"input\\\",[30,0,[\\\"update\\\"]]],null],[12],[13],[1,\\\"\\\\n          \\\"],[8,[39,2],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@value\\\",\\\"@minLength\\\",\\\"@maxLength\\\",\\\"@controlId\\\"],[[30,0,[\\\"value\\\"]],3,25,\\\"input-minmax-length\\\"]],null]],[],false,[\\\"input\\\",\\\"on\\\",\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasText('3 characters required');\n      await (0, _testHelpers.typeIn)('#input-minmax-length', 'c');\n      assert.dom('#test-form-character-count').hasText('2 more characters required');\n      await (0, _testHelpers.typeIn)('#input-minmax-length', 'luster');\n      assert.dom('#test-form-character-count').hasText('18 characters remaining');\n      await (0, _testHelpers.typeIn)('#input-minmax-length', '-length-is-longer-than');\n      assert.dom('#test-form-character-count').hasText('Exceeded by 4 characters');\n    });\n    (0, _qunit.test)('it renders a character count in custom format', async function (assert) {\n      this.set('value', 'with custom content');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <input type=\"hidden\" value={{this.value}} id=\"input-2\" {{on \"input\" this.update}} />\n              <Hds::Form::CharacterCount @value={{this.value}} @minLength={{20}} @maxLength={{40}} @controlId=\"input-2\" id=\"test-form-character-count\" as |CC|>\n                maxLength {{CC.maxLength}} \n                minLength {{CC.minLength}} \n                remaining {{CC.remaining}} \n                shortfall {{CC.shortfall}} \n                currentLength {{CC.currentLength}}\n              </Hds::Form::CharacterCount>\n      */\n      {\n        \"id\": \"ko4OK9Zi\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[11,\\\"input\\\"],[16,2,[30,0,[\\\"value\\\"]]],[24,1,\\\"input-2\\\"],[24,4,\\\"hidden\\\"],[4,[38,1],[\\\"input\\\",[30,0,[\\\"update\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"],[8,[39,2],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@value\\\",\\\"@minLength\\\",\\\"@maxLength\\\",\\\"@controlId\\\"],[[30,0,[\\\"value\\\"]],20,40,\\\"input-2\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          maxLength \\\"],[1,[30,1,[\\\"maxLength\\\"]]],[1,\\\" \\\\n          minLength \\\"],[1,[30,1,[\\\"minLength\\\"]]],[1,\\\" \\\\n          remaining \\\"],[1,[30,1,[\\\"remaining\\\"]]],[1,\\\" \\\\n          shortfall \\\"],[1,[30,1,[\\\"shortfall\\\"]]],[1,\\\" \\\\n          currentLength \\\"],[1,[30,1,[\\\"currentLength\\\"]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"CC\\\"],false,[\\\"input\\\",\\\"on\\\",\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasText('maxLength 40 minLength 20 remaining 21 shortfall 1 currentLength 19');\n    });\n\n    // A11y\n\n    (0, _qunit.test)('it should present the character count as a live region', async function (assert) {\n      this.set('value', 'with default content');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <input type=\"hidden\" value={{this.value}} id=\"input-3\"/>\n                <Hds::Form::CharacterCount @maxLength={{40}} @controlId=\"input-3\" id=\"test-form-character-count\"/>\n      */\n      {\n        \"id\": \"yYQoGnw9\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[10,\\\"input\\\"],[15,2,[30,0,[\\\"value\\\"]]],[14,1,\\\"input-3\\\"],[14,4,\\\"hidden\\\"],[12],[13],[1,\\\"\\\\n          \\\"],[8,[39,1],[[24,1,\\\"test-form-character-count\\\"]],[[\\\"@maxLength\\\",\\\"@controlId\\\"],[40,\\\"input-3\\\"]],null]],[],false,[\\\"input\\\",\\\"hds/form/character-count\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/character-count/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-character-count').hasAttribute('aria-live', 'polite');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/checkbox/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/checkbox/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Base id=\"test-form-checkbox\" />\n      */\n      {\n        \"id\": \"IJ6gZBpc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-checkbox\\\"]],null,null]],[],false,[\\\"hds/form/checkbox/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-checkbox').hasClass('hds-form-checkbox');\n    });\n    (0, _qunit.test)('it should convert the `indeterminate` attribute into a property', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Base id=\"test-form-checkbox\" indeterminate={{true}} />\n      */\n      {\n        \"id\": \"m7iS9Nne\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-checkbox\\\"],[16,\\\"indeterminate\\\",true]],null,null]],[],false,[\\\"hds/form/checkbox/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-checkbox').doesNotHaveAttribute('indeterminate');\n      assert.dom('#test-form-checkbox').hasProperty('indeterminate', true);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/checkbox/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/checkbox/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with the appropriate CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Field />\n      */\n      {\n        \"id\": \"dT8q+9kn\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/checkbox/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Field @value=\"abc123\" />\n      */\n      {\n        \"id\": \"FKqAeOts\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/checkbox/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('abc123');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the input with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"0gzHiQSu\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/checkbox/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Field checked=\"checked\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Checkbox::Field>\n      */\n      {\n        \"id\": \"dpWeyDDx\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"checked\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/checkbox/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__control input').isChecked();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Field />\n      */\n      {\n        \"id\": \"dT8q+9kn\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/checkbox/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Checkbox::Field>\n      */\n      {\n        \"id\": \"sP6TLdVb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/checkbox/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/checkbox/group-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/checkbox/group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with an appropriate CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group id=\"test-form-checkbox\" />\n      */\n      {\n        \"id\": \"Zo4M2/Tp\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-checkbox\\\"]],null,null]],[],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-checkbox').hasClass('hds-form-group');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components and subcomponents', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.CheckboxField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.CheckboxField>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::Checkbox::Group>\n      */\n      {\n        \"id\": \"MUQ2DGUW\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').exists();\n      assert.dom('.hds-form-group__legend').hasText('This is the legend');\n      assert.dom('.hds-form-group__helper-text').exists();\n      assert.dom('.hds-form-group__helper-text').hasText('This is the group helper text');\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__label').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__control').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper input').isChecked();\n      assert.dom('.hds-form-group__control-fields-wrapper input').hasValue('abc123');\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__error').exists();\n      assert.dom('.hds-form-group__error').exists();\n      assert.dom('.hds-form-group__error').hasText('This is the group error');\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group />\n      */\n      {\n        \"id\": \"dp8dqIm4\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').doesNotExist();\n      assert.dom('.hds-form-group__helper-text').doesNotExist();\n      assert.dom('.hds-form-group__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.CheckboxField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.CheckboxField>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::Checkbox::Group>\n      */\n      {\n        \"id\": \"MUQ2DGUW\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      let fieldHelperText = this.element.querySelector('.hds-form-field__helper-text');\n      let fieldHelperTextId = fieldHelperText.id;\n      let fieldError = this.element.querySelector('.hds-form-field__error');\n      let fieldErrorId = fieldError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${fieldHelperTextId} ${fieldErrorId} ${groupHelperTextId} ${groupErrorId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements even when Error is conditionally rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.CheckboxField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.CheckboxField>\n                  {{#if this.showErrors}}\n                    <G.Error>This is the group error</G.Error>\n                  {{/if}}\n                </Hds::Form::Checkbox::Group>\n      */\n      {\n        \"id\": \"god26tYm\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"              \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/checkbox/group\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      let fieldHelperText = this.element.querySelector('.hds-form-field__helper-text');\n      let fieldHelperTextId = fieldHelperText.id;\n      let fieldError = this.element.querySelector('.hds-form-field__error');\n      let fieldErrorId = fieldError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${fieldHelperTextId} ${fieldErrorId} ${groupHelperTextId} ${groupErrorId}`);\n    });\n\n    // NAME\n\n    (0, _qunit.test)('it renders the defined name on all controls within a group', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group @name=\"datacenter-demo\" as |G|>\n                  <G.Legend>Choose datacenter</G.Legend>\n                  <G.CheckboxField data-test=\"first-control\" as |F|>\n                    <F.Label>NYC1</F.Label>\n                  </G.CheckboxField>\n                  <G.CheckboxField data-test=\"second-control\" as |F|>\n                    <F.Label>DC1</F.Label>\n                  </G.CheckboxField>\n                </Hds::Form::Checkbox::Group>\n      */\n      {\n        \"id\": \"ytWhLX5w\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"datacenter-demo\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Choose datacenter\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"data-test\\\",\\\"first-control\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"NYC1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"data-test\\\",\\\"second-control\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,3,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"DC1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[3]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\",\\\"F\\\"],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test=\"first-control\"]').hasAttribute('name', 'datacenter-demo');\n      assert.dom('[data-test=\"second-control\"]').hasAttribute('name', 'datacenter-demo');\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the legend text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group @isRequired={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.CheckboxField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                  </G.CheckboxField>\n                </Hds::Form::Checkbox::Group>\n      */\n      {\n        \"id\": \"ugRuIPjd\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('Required');\n      assert.dom('input').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Checkbox::Group @isOptional={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.CheckboxField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                  </G.CheckboxField>\n                </Hds::Form::Checkbox::Group>\n      */\n      {\n        \"id\": \"a6aRFOz3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"CheckboxField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/checkbox/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/checkbox/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/error/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/error/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Error id=\"test-form-error\" />\n      */\n      {\n        \"id\": \"veBWxurY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-error\\\"]],null,null]],[],false,[\\\"hds/form/error\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/error/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-error').hasClass('hds-form-error');\n    });\n    (0, _qunit.test)('it should render with a CSS class provided via the @contextualClass argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Error @contextualClass=\"my-class\" id=\"test-form-error\" />\n      */\n      {\n        \"id\": \"gEEgDJY3\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-error\\\"]],[[\\\"@contextualClass\\\"],[\\\"my-class\\\"]],null]],[],false,[\\\"hds/form/error\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/error/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-error').hasClass('my-class');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders an error with the defined text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Error id=\"test-form-error\">This is the error</Hds::Form::Error>\n      */\n      {\n        \"id\": \"xXfZ5V2M\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-error\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]]],[],false,[\\\"hds/form/error\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/error/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-error').hasText('This is the error');\n    });\n    (0, _qunit.test)('it renders an error with the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Error id=\"test-form-error\"><pre>This is an HTML element inside the error</pre></Hds::Form::Error>\n      */\n      {\n        \"id\": \"vXIKvvOf\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-error\\\"]],null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"This is an HTML element inside the error\\\"],[13]],[]]]]]],[],false,[\\\"hds/form/error\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/error/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-error pre').exists();\n      assert.dom('#test-form-error pre').hasText('This is an HTML element inside the error');\n    });\n    (0, _qunit.test)('it renders multiple error messages as contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Error id=\"test-form-error\" as |E|><E.Message>First error message</E.Message><E.Message>Second error message</E.Message></Hds::Form::Error>\n      */\n      {\n        \"id\": \"K7q7dAL7\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-error\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Message\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"First error message\\\"]],[]]]]],[8,[30,1,[\\\"Message\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Second error message\\\"]],[]]]]]],[1]]]]]],[\\\"E\\\"],false,[\\\"hds/form/error\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/error/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-error .hds-form-error__message').exists({\n        count: 2\n      });\n      assert.dom('#test-form-error .hds-form-error__message').hasText('First error message');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it renders an error with the correct \"id\" attribute if the @controlId argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Error @controlId=\"my-control-id\">This is the error</Hds::Form::Error>\n      */\n      {\n        \"id\": \"S9+te8KM\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@controlId\\\"],[\\\"my-control-id\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]]],[],false,[\\\"hds/form/error\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/error/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#error-my-control-id').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/field/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/field/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class provided via the @contextualClass argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @contextualClass=\"my-class\" id=\"test-form-field\" />\n      */\n      {\n        \"id\": \"HrkNgD3y\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-field\\\"]],[[\\\"@contextualClass\\\"],[\\\"my-class\\\"]],null]],[],false,[\\\"hds/form/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-field').hasClass('my-class');\n    });\n\n    // LAYOUT\n\n    (0, _qunit.test)('it should render the correct CSS layout class depending on the @layout prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @layout=\"vertical\" id=\"test-form-field\" />\n      */\n      {\n        \"id\": \"PF8c5iDV\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-field\\\"]],[[\\\"@layout\\\"],[\\\"vertical\\\"]],null]],[],false,[\\\"hds/form/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-field').hasClass('hds-form-field--layout-vertical');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @layout=\"vertical\" id=\"test-form-field\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Control>This is a mock control</F.Control>\n                <F.CharacterCount>20/40</F.CharacterCount>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Field>\n      */\n      {\n        \"id\": \"g9ojHhKy\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-field\\\"]],[[\\\"@layout\\\"],[\\\"vertical\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Control\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is a mock control\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"20/40\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-field .hds-form-field__label').exists();\n      assert.dom('.hds-form-field__label').hasText('This is the label');\n      assert.dom('#test-form-field .hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__helper-text').hasText('This is the helper text');\n      assert.dom('#test-form-field .hds-form-field__control').exists();\n      assert.dom('.hds-form-field__control').hasText('This is a mock control');\n      assert.dom('#test-form-field .hds-form-field__character-count').exists();\n      assert.dom('#test-form-field .hds-form-field__error').exists();\n      assert.dom('.hds-form-field__error').hasText('This is the error');\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @layout=\"vertical\" id=\"test-form-field\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Control><pre id={{F.id}} aria-describedby={{F.ariaDescribedBy}}>This is a mock control</pre></F.Control>\n                <F.CharacterCount>20/40</F.CharacterCount>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Field>\n      */\n      {\n        \"id\": \"aMIG65su\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-field\\\"]],[[\\\"@layout\\\"],[\\\"vertical\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Control\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[15,1,[30,1,[\\\"id\\\"]]],[15,\\\"aria-describedby\\\",[30,1,[\\\"ariaDescribedBy\\\"]]],[12],[1,\\\"This is a mock control\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"20/40\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/field\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('#test-form-field .hds-form-field__control pre');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control pre').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId}`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @layout=\"vertical\" id=\"test-form-field\" @id=\"my-custom-id\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Control><pre id={{F.id}} aria-describedby={{F.ariaDescribedBy}}>This is a mock control</pre></F.Control>\n                <F.CharacterCount>20/40</F.CharacterCount>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Field>\n      */\n      {\n        \"id\": \"KkTxI+zB\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-field\\\"]],[[\\\"@layout\\\",\\\"@id\\\"],[\\\"vertical\\\",\\\"my-custom-id\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Control\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[15,1,[30,1,[\\\"id\\\"]]],[15,\\\"aria-describedby\\\",[30,1,[\\\"ariaDescribedBy\\\"]]],[12],[1,\\\"This is a mock control\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"20/40\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/field\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      let controlId = 'my-custom-id';\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__label').hasAttribute('id', `label-${controlId}`);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control pre').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId}`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it provides all the ID relations between the elements and allows extra `aria-describedby` attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @layout=\"vertical\" id=\"test-form-field\" @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Control><pre id={{F.id}} aria-describedby={{F.ariaDescribedBy}}>This is a mock control</pre></F.Control>\n                <F.CharacterCount>20/40</F.CharacterCount>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Field>\n      */\n      {\n        \"id\": \"I5g+53Yk\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-field\\\"]],[[\\\"@layout\\\",\\\"@extraAriaDescribedBy\\\"],[\\\"vertical\\\",\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Control\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[15,1,[30,1,[\\\"id\\\"]]],[15,\\\"aria-describedby\\\",[30,1,[\\\"ariaDescribedBy\\\"]]],[12],[1,\\\"This is a mock control\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"20/40\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/field\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('#test-form-field .hds-form-field__control pre');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control pre').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @isRequired={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Field>\n      */\n      {\n        \"id\": \"n3PoTuwe\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @isOptional={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Field>\n      */\n      {\n        \"id\": \"PNVDXf7Q\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @layout is provided', async function (assert) {\n      const errorMessage = '@layout for \"Hds::Form::Field\" must be one of the following: vertical, flag; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Field @layout=\"foo\" />\n      */\n      {\n        \"id\": \"CfpEaSB2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@layout\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/form/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/field/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/fieldset/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/fieldset/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with an appropriate CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset id=\"test-form-fieldset\" />\n      */\n      {\n        \"id\": \"hGMeMBgY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-fieldset\\\"]],null,null]],[],false,[\\\"hds/form/fieldset\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-fieldset').hasClass('hds-form-group');\n    });\n    (0, _qunit.test)('it renders the element as <fieldset>', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset id=\"test-form-fieldset\" />\n      */\n      {\n        \"id\": \"hGMeMBgY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-fieldset\\\"]],null,null]],[],false,[\\\"hds/form/fieldset\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-fieldset').hasTagName('fieldset');\n    });\n\n    // LAYOUT\n\n    (0, _qunit.test)('it should render the correct CSS layout class depending on the @layout prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset @layout=\"vertical\" id=\"test-form-fieldset\" />\n      */\n      {\n        \"id\": \"ASxyNGCn\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-fieldset\\\"]],[[\\\"@layout\\\"],[\\\"vertical\\\"]],null]],[],false,[\\\"hds/form/fieldset\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-fieldset').hasClass('hds-form-group--layout-vertical');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset @layout=\"vertical\" id=\"test-form-fieldset\" as |F|>\n                <F.Legend>This is the legend</F.Legend>\n                <F.HelperText>This is the group helper text</F.HelperText>\n                <F.Control><pre class=\"hds-form-group__control-field\">This is a mock control field</pre></F.Control>\n                <F.Error>This is the group error</F.Error>\n              </Hds::Form::Fieldset>\n      */\n      {\n        \"id\": \"UaUPzG5V\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-fieldset\\\"]],[[\\\"@layout\\\"],[\\\"vertical\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Control\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[14,0,\\\"hds-form-group__control-field\\\"],[12],[1,\\\"This is a mock control field\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/fieldset\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-fieldset .hds-form-group__legend').exists();\n      assert.dom('.hds-form-group__legend').hasText('This is the legend');\n      assert.dom('#test-form-fieldset .hds-form-group__helper-text').exists();\n      assert.dom('.hds-form-group__helper-text').hasText('This is the group helper text');\n      assert.dom('#test-form-fieldset .hds-form-group__control-field').exists();\n      assert.dom('.hds-form-group__control-field').hasText('This is a mock control field');\n      assert.dom('#test-form-fieldset .hds-form-group__error').exists();\n      assert.dom('.hds-form-group__error').hasText('This is the group error');\n    });\n    (0, _qunit.test)('it automatically provides IDs for helper text and error', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset @layout=\"vertical\" as |F|>\n                <F.Legend>This is the legend</F.Legend>\n                <F.HelperText>This is the group helper text</F.HelperText>\n                <F.Control><pre class=\"hds-form-group__control\" id={{F.id}} aria-describedby={{F.ariaDescribedBy}}>This is a mock control</pre></F.Control>\n                <F.Error>This is the group error</F.Error>\n              </Hds::Form::Fieldset>\n      */\n      {\n        \"id\": \"fk4GGvkQ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@layout\\\"],[\\\"vertical\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Control\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[14,0,\\\"hds-form-group__control\\\"],[15,1,[30,1,[\\\"id\\\"]]],[15,\\\"aria-describedby\\\",[30,1,[\\\"ariaDescribedBy\\\"]]],[12],[1,\\\"This is a mock control\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/fieldset\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the fieldset ID is dynamically generated\n      let fieldset = this.element.querySelector('fieldset');\n      let fieldsetId = fieldset.id;\n      assert.dom('.hds-form-group__helper-text').hasAttribute('id', `helper-text-${fieldsetId}`);\n      assert.dom('.hds-form-group__error').hasAttribute('id', `error-${fieldsetId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset @isRequired={{true}} as |F|>\n                <F.Legend>This is the legend</F.Legend>\n              </Hds::Form::Fieldset>\n      */\n      {\n        \"id\": \"uye4xcBv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/fieldset\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Fieldset @isOptional={{true}} as |F|>\n                <F.Legend>This is the legend</F.Legend>\n              </Hds::Form::Fieldset>\n      */\n      {\n        \"id\": \"LS3oW+Ps\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/fieldset\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/fieldset/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/file-input/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/file-input/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Base id=\"test-form-file-input\" />\n      */\n      {\n        \"id\": \"+qowN97t\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-file-input\\\"]],null,null]],[],false,[\\\"hds/form/file-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-file-input').hasClass('hds-form-file-input');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/file-input/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/file-input/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field />\n      */\n      {\n        \"id\": \"jGOKThYz\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the input with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"01NSbJOa\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::FileInput::Field>\n      */\n      {\n        \"id\": \"pGxRewXY\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field />\n      */\n      {\n        \"id\": \"jGOKThYz\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::FileInput::Field>\n      */\n      {\n        \"id\": \"uccNVHEd\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::FileInput::Field>\n      */\n      {\n        \"id\": \"kEeZ3hML\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/file-input/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field @isRequired={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::FileInput::Field>\n      */\n      {\n        \"id\": \"SCMks2YU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n      assert.dom('input').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field @isOptional={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::FileInput::Field>\n      */\n      {\n        \"id\": \"6J3pZdzN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n    (0, _qunit.test)('it should not append an indicator to the label text when the required attribute is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::FileInput::Field required as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::FileInput::Field>\n      */\n      {\n        \"id\": \"R3/5uNYP\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"required\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/file-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/file-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('required');\n      assert.dom('label .hds-form-indicator').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/helper-text/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/helper-text/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::HelperText id=\"test-form-helper-text\" />\n      */\n      {\n        \"id\": \"JkVmn6fm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-helper-text\\\"]],null,null]],[],false,[\\\"hds/form/helper-text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/helper-text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-helper-text').hasClass('hds-form-helper-text');\n    });\n    (0, _qunit.test)('it should render with a CSS class provided via the @contextualClass argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::HelperText @contextualClass=\"my-class\" id=\"test-form-helper-text\" />\n      */\n      {\n        \"id\": \"D4auPMCG\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-helper-text\\\"]],[[\\\"@contextualClass\\\"],[\\\"my-class\\\"]],null]],[],false,[\\\"hds/form/helper-text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/helper-text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-helper-text').hasClass('my-class');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders a helper text with the defined text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::HelperText id=\"test-form-helper-text\">This is the helper text</Hds::Form::HelperText>\n      */\n      {\n        \"id\": \"6/xNfVgS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-helper-text\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]]],[],false,[\\\"hds/form/helper-text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/helper-text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-helper-text').hasText('This is the helper text');\n    });\n    (0, _qunit.test)('it renders a helper text with the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::HelperText id=\"test-form-helper-text\"><pre>This is an HTML element inside the helper text</pre></Hds::Form::HelperText>\n      */\n      {\n        \"id\": \"4vpM5BUn\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-helper-text\\\"]],null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"This is an HTML element inside the helper text\\\"],[13]],[]]]]]],[],false,[\\\"hds/form/helper-text\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/helper-text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-helper-text > pre').exists();\n      assert.dom('#test-form-helper-text pre').hasText('This is an HTML element inside the helper text');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it renders a helper text with the correct \"id\" attribute if the @controlId argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::HelperText @controlId=\"my-control-id\">This is the helper text</Hds::Form::HelperText>\n      */\n      {\n        \"id\": \"18a98g7S\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@controlId\\\"],[\\\"my-control-id\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]]],[],false,[\\\"hds/form/helper-text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/helper-text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#helper-text-my-control-id').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/label/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/label/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label id=\"test-form-label\" />\n      */\n      {\n        \"id\": \"jCiHnwSP\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],null,null]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label').hasClass('hds-form-label');\n    });\n    (0, _qunit.test)('it should render with a CSS class provided via the @contextualClass argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label @contextualClass=\"my-class\" id=\"test-form-label\" />\n      */\n      {\n        \"id\": \"14V7/aws\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],[[\\\"@contextualClass\\\"],[\\\"my-class\\\"]],null]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label').hasClass('my-class');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders a label with the defined text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label id=\"test-form-label\">This is the label</Hds::Form::Label>\n      */\n      {\n        \"id\": \"ENrC/M6j\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label').hasText('This is the label');\n    });\n    (0, _qunit.test)('it renders a label with the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label id=\"test-form-label\"><pre>This is an HTML element inside the label</pre></Hds::Form::Label>\n      */\n      {\n        \"id\": \"6ktif0iL\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"This is an HTML element inside the label\\\"],[13]],[]]]]]],[],false,[\\\"hds/form/label\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label > pre').exists();\n      assert.dom('#test-form-label pre').hasText('This is an HTML element inside the label');\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it appends an indicator to the label text when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label @isRequired={{true}} id=\"test-form-label\">This is the label</Hds::Form::Label>\n      */\n      {\n        \"id\": \"I6xoPk6G\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label .hds-form-indicator').exists();\n      assert.dom('#test-form-label .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it appends an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label @isOptional={{true}} id=\"test-form-label\">This is the label</Hds::Form::Label>\n      */\n      {\n        \"id\": \"ufn49gnU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label > .hds-form-indicator').exists();\n      assert.dom('#test-form-label .hds-form-indicator').hasText('(Optional)');\n    });\n\n    // FOR\n\n    (0, _qunit.test)('it renders a label with the \"for\" attribute if the @controlId argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label @controlId=\"my-control-id\" id=\"test-form-label\">This is the label</Hds::Form::Label>\n      */\n      {\n        \"id\": \"3e5OX2io\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-label\\\"]],[[\\\"@controlId\\\"],[\\\"my-control-id\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-label').hasAttribute('for', 'my-control-id');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it renders a label with the correct \"id\" attribute if the @controlId argument is provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Label @controlId=\"my-control-id\">This is the label</Hds::Form::Label>\n      */\n      {\n        \"id\": \"GuBUOOxY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@controlId\\\"],[\\\"my-control-id\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]]],[],false,[\\\"hds/form/label\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/label/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#label-my-control-id').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/legend/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/legend/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend id=\"test-form-legend\" />\n      */\n      {\n        \"id\": \"wXzAVlyk\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],null,null]],[],false,[\\\"hds/form/legend\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend').hasClass('hds-form-legend');\n    });\n    (0, _qunit.test)('it renders the element as <legend>', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend id=\"test-form-legend\" />\n      */\n      {\n        \"id\": \"wXzAVlyk\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],null,null]],[],false,[\\\"hds/form/legend\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend').hasTagName('legend');\n    });\n    (0, _qunit.test)('it should render with a CSS class provided via the @contextualClass argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend @contextualClass=\"my-class\" id=\"test-form-legend\" />\n      */\n      {\n        \"id\": \"q1/AekqG\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],[[\\\"@contextualClass\\\"],[\\\"my-class\\\"]],null]],[],false,[\\\"hds/form/legend\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend').hasClass('my-class');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders a legend with the defined text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend id=\"test-form-legend\">This is the legend</Hds::Form::Legend>\n      */\n      {\n        \"id\": \"u3kdfNU5\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]]],[],false,[\\\"hds/form/legend\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend').hasText('This is the legend');\n    });\n    (0, _qunit.test)('it renders a legend with the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend id=\"test-form-legend\"><pre>This is an HTML element inside the legend</pre></Hds::Form::Legend>\n      */\n      {\n        \"id\": \"cW5N8S7n\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"This is an HTML element inside the legend\\\"],[13]],[]]]]]],[],false,[\\\"hds/form/legend\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend > pre').exists();\n      assert.dom('#test-form-legend pre').hasText('This is an HTML element inside the legend');\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it appends an indicator to the legend text when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend id=\"test-form-legend\" @isRequired={{true}}>This is the legend</Hds::Form::Legend>\n      */\n      {\n        \"id\": \"8Np+2BAe\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]]],[],false,[\\\"hds/form/legend\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend .hds-form-indicator').exists();\n      assert.dom('#test-form-legend .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it appends an indicator to the legend text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Legend id=\"test-form-legend\" @isOptional={{true}}>This is the legend</Hds::Form::Legend>\n      */\n      {\n        \"id\": \"5NdC5CGo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-legend\\\"]],[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]]],[],false,[\\\"hds/form/legend\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/legend/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-legend > .hds-form-indicator').exists();\n      assert.dom('#test-form-legend .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/masked-input/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/masked-input/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"hY2NqciV\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-masked-input\\\"]],null,null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-masked-input').hasClass('hds-form-masked-input__control');\n    });\n\n    // MASKING\n\n    (0, _qunit.test)('it should render the text masked by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"hY2NqciV\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-masked-input\\\"]],null,null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-masked-input__control').hasStyle({\n        '-webkit-text-security': 'disc'\n      });\n      assert.dom('.hds-form-visibility-toggle .hds-icon-eye').exists();\n    });\n    (0, _qunit.test)('it should render readable text when `isContentMasked` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base id=\"test-form-masked-input\" @isContentMasked={{false}} />\n      */\n      {\n        \"id\": \"u/xw1Azy\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-masked-input\\\"]],[[\\\"@isContentMasked\\\"],[false]],null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-masked-input__control').hasStyle({\n        '-webkit-text-security': 'none'\n      });\n      assert.dom('.hds-form-visibility-toggle .hds-icon-eye-off').exists();\n    });\n    (0, _qunit.test)('it should toggle the masking when button is pressed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"hY2NqciV\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-masked-input\\\"]],null,null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-masked-input__control').hasStyle({\n        '-webkit-text-security': 'none'\n      });\n      assert.dom('.hds-form-visibility-toggle .hds-icon-eye-off').exists();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it automatically provides the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base @id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"iHcA1bei\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"test-form-masked-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-controls', 'test-form-masked-input');\n    });\n    (0, _qunit.test)('it updates the button label on toggle', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base @id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"iHcA1bei\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"test-form-masked-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-label', 'Show masked content');\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-label', 'Hide masked content');\n    });\n    (0, _qunit.test)('it informs the user about visibility change on toggle', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base @id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"iHcA1bei\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"test-form-masked-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-visibility-toggle').hasText('Input content is visible');\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-visibility-toggle').hasText('Input content is hidden');\n    });\n\n    // MULTILINE\n\n    (0, _qunit.test)('it should render an `<input>` element by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"hY2NqciV\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-masked-input\\\"]],null,null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input#test-form-masked-input').exists();\n    });\n    (0, _qunit.test)('it should render a `<textarea>` element when `@isMultiline` is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Base @isMultiline={{true}} id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"+nBtYF9T\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-masked-input\\\"]],[[\\\"@isMultiline\\\"],[true]],null]],[],false,[\\\"hds/form/masked-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea#test-form-masked-input').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/masked-input/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/masked-input/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field />\n      */\n      {\n        \"id\": \"eeQGQRW7\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @value=\"abc123\" />\n      */\n      {\n        \"id\": \"GdljrXOe\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('abc123');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"ORaQyq6W\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasClass('hds-form-text-input--is-invalid');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the input with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @width=\"248px\" />\n      */\n      {\n        \"id\": \"Y04mmlBL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[\\\"248px\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-masked-input').hasStyle({\n        width: '248px'\n      });\n    });\n\n    // HEIGHT\n\n    (0, _qunit.test)('it should render the input with a fixed height if a @height value is passed and `@isMultiline` is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @isMultiline={{true}} @height=\"248px\" />\n      */\n      {\n        \"id\": \"WeuFqwKi\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isMultiline\\\",\\\"@height\\\"],[true,\\\"248px\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-masked-input__control').hasStyle({\n        height: '248px'\n      });\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the input with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"elvxk7EZ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::MaskedInput::Field>\n      */\n      {\n        \"id\": \"T6ge5WLT\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__character-count').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field />\n      */\n      {\n        \"id\": \"eeQGQRW7\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__character-count').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::MaskedInput::Field>\n      */\n      {\n        \"id\": \"8+ekityr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::MaskedInput::Field>\n      */\n      {\n        \"id\": \"3k4xbHBU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/masked-input/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @isRequired={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::MaskedInput::Field>\n      */\n      {\n        \"id\": \"UH8pQlul\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n      assert.dom('input').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @isOptional={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::MaskedInput::Field>\n      */\n      {\n        \"id\": \"fvlTbjyl\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n    (0, _qunit.test)('it should not append an indicator to the label text when the required attribute is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field required as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::MaskedInput::Field>\n      */\n      {\n        \"id\": \"FsWCl2WH\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"required\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('required');\n      assert.dom('label .hds-form-indicator').doesNotExist();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it automatically provides the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"yV17mfOC\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"test-form-masked-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-controls', 'test-form-masked-input');\n    });\n    (0, _qunit.test)('it updates the button label on toggle', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"yV17mfOC\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"test-form-masked-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-label', 'Show masked content');\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-label', 'Hide masked content');\n    });\n    (0, _qunit.test)('it renders a custom toggle button label', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @id=\"test-form-masked-input\" @visibilityToggleAriaLabel=\"Show my masked content\" />\n      */\n      {\n        \"id\": \"Jum5pCW4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@visibilityToggleAriaLabel\\\"],[\\\"test-form-masked-input\\\",\\\"Show my masked content\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-visibility-toggle').hasAttribute('aria-label', 'Show my masked content');\n    });\n    (0, _qunit.test)('it informs the user about visibility change on toggle', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @id=\"test-form-masked-input\" />\n      */\n      {\n        \"id\": \"yV17mfOC\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"test-form-masked-input\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-visibility-toggle').hasText('Input content is visible');\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('.hds-form-visibility-toggle').hasText('Input content is hidden');\n    });\n    (0, _qunit.test)('it renders a custom message on toggle', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::MaskedInput::Field @id=\"test-form-masked-input\" @visibilityToggleAriaMessageText=\"My input content is visible\" />\n      */\n      {\n        \"id\": \"No6oGaxv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@visibilityToggleAriaMessageText\\\"],[\\\"test-form-masked-input\\\",\\\"My input content is visible\\\"]],null]],[],false,[\\\"hds/form/masked-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/masked-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-visibility-toggle').hasText('My input content is visible');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/radio-card/group-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/radio-card/group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group id=\"test-radio-card-group\" />\n      */\n      {\n        \"id\": \"0d6Yi73g\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-radio-card-group\\\"]],null,null]],[],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-radio-card-group').hasClass('hds-form-group--radio-cards');\n    });\n\n    // LAYOUT\n\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the `@layout` argument provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group id=\"test-radio-card-group-layout\" @layout=\"vertical\" />\n      */\n      {\n        \"id\": \"gqf1Iu2S\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-radio-card-group-layout\\\"]],[[\\\"@layout\\\"],[\\\"vertical\\\"]],null]],[],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-radio-card-group-layout').hasClass('hds-form-group--layout-vertical');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioCard/>\n                  <G.RadioCard/>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::RadioCard::Group>\n      */\n      {\n        \"id\": \"Nmy8FffK\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\"],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-radio-card').exists();\n      assert.dom('.hds-form-group__legend').exists();\n      assert.dom('.hds-form-group__legend').hasText('This is the legend');\n      assert.dom('.hds-form-group__helper-text').exists();\n      assert.dom('.hds-form-group__helper-text').hasText('This is the group helper text');\n      assert.dom('.hds-form-radio-card').exists();\n      assert.dom('.hds-form-group__error').exists();\n      assert.dom('.hds-form-group__error').hasText('This is the group error');\n    });\n    (0, _qunit.test)('it does not render the contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group />\n      */\n      {\n        \"id\": \"EFP00srz\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').doesNotExist();\n      assert.dom('.hds-form-group__helper-text').doesNotExist();\n      assert.dom('.hds-form-group__error').doesNotExist();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioCard/>\n                  <G.RadioCard/>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::RadioCard::Group>\n      */\n      {\n        \"id\": \"Nmy8FffK\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\"],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${groupHelperTextId} ${groupErrorId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioCard/>\n                  <G.RadioCard/>\n                  {{#if this.showErrors}}\n                    <G.Error>This is the group error</G.Error>\n                  {{/if}}\n                </Hds::Form::RadioCard::Group>\n      */\n      {\n        \"id\": \"ITcT/Ri4\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"              \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"]],[1]]]]]],[\\\"G\\\"],false,[\\\"hds/form/radio-card/group\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${groupHelperTextId} ${groupErrorId}`);\n    });\n\n    // ARGUMENT FORWARDING: NAME, ALIGNMENT, CONTROL POSITION, LAYOUT\n\n    (0, _qunit.test)('it should render the contextual components with CSS classes that reflect the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group @name=\"test-name\" @alignment=\"center\" @controlPosition=\"left\" as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioCard @maxWidth=\"50%\" data-test=\"first-control\"/>\n                  <G.RadioCard @maxWidth=\"50%\" data-test=\"second-control\"/>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::RadioCard::Group>\n      */\n      {\n        \"id\": \"DzcZ7/FN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@alignment\\\",\\\"@controlPosition\\\"],[\\\"test-name\\\",\\\"center\\\",\\\"left\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],[[24,\\\"data-test\\\",\\\"first-control\\\"]],[[\\\"@maxWidth\\\"],[\\\"50%\\\"]],null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],[[24,\\\"data-test\\\",\\\"second-control\\\"]],[[\\\"@maxWidth\\\"],[\\\"50%\\\"]],null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\"],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test=\"first-control\"]').hasAttribute('name', 'test-name');\n      assert.dom('[data-test=\"second-control\"]').hasAttribute('name', 'test-name');\n      assert.dom('.hds-form-radio-card').hasClass('hds-form-radio-card--align-center');\n      assert.dom('.hds-form-radio-card').hasClass('hds-form-radio-card--control-left');\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group @isRequired={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.RadioCard/>\n                </Hds::Form::RadioCard::Group>\n      */\n      {\n        \"id\": \"mXFUTmos\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\"],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard::Group @isOptional={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.RadioCard/>\n                </Hds::Form::RadioCard::Group>\n      */\n      {\n        \"id\": \"nCLqHwhq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioCard\\\"]],null,null,null],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\"],false,[\\\"hds/form/radio-card/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/radio-card/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/radio-card/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard/>\n      */\n      {\n        \"id\": \"ATCiZr5T\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label').hasClass('hds-form-radio-card');\n    });\n    (0, _qunit.test)('it should render the input with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard />\n      */\n      {\n        \"id\": \"ATCiZr5T\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasClass('hds-form-radio-card__control');\n    });\n\n    // NAME, VALUE\n\n    (0, _qunit.test)('it should render the input with the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard @name=\"name\" @value=\"value\" />\n      */\n      {\n        \"id\": \"aYBPrRUK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@value\\\"],[\\\"name\\\",\\\"value\\\"]],null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('value');\n      assert.dom('input').hasAttribute('name', 'name');\n    });\n\n    // CHECKED, DISABLED, MAX-WIDTH\n\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard @checked=\"checked\" @disabled=\"disabled\" />\n      */\n      {\n        \"id\": \"INV2zqHr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\",\\\"@disabled\\\"],[\\\"checked\\\",\\\"disabled\\\"]],null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label').hasClass('hds-form-radio-card--checked');\n      assert.dom('label').hasClass('hds-form-radio-card--disabled');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the default class, resulting in a fluid width', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard />\n      */\n      {\n        \"id\": \"ATCiZr5T\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label').hasClass('hds-form-radio-card--has-fluid-width');\n    });\n    (0, _qunit.test)('it should render the correct class if `@maxWidth` is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard @maxWidth=\"25%\" />\n      */\n      {\n        \"id\": \"vPA2kbuN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@maxWidth\\\"],[\\\"25%\\\"]],null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label').hasClass('hds-form-radio-card--has-fixed-width');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard as |R|>\n                  <R.Icon @name=\"hexagon\"/>\n                  <R.Label>This is the label</R.Label>\n                  <R.Badge @text=\"badge\"/>\n                  <R.Description>This is the description</R.Description>\n                  <R.Generic><div class=\"custom\">This is the custom content</div></R.Generic>\n                </Hds::Form::RadioCard>\n      */\n      {\n        \"id\": \"PvGzPPcG\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Icon\\\"]],null,[[\\\"@name\\\"],[\\\"hexagon\\\"]],null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Badge\\\"]],null,[[\\\"@text\\\"],[\\\"badge\\\"]],null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the description\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Generic\\\"]],null,null,[[\\\"default\\\"],[[[[10,0],[14,0,\\\"custom\\\"],[12],[1,\\\"This is the custom content\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"R\\\"],false,[\\\"hds/form/radio-card\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-hexagon').exists();\n      assert.dom('.hds-form-radio-card__label').exists();\n      assert.dom('.hds-badge').exists();\n      assert.dom('.hds-form-radio-card__description').exists();\n      assert.dom('.custom').exists();\n    });\n    (0, _qunit.test)('it does not render the contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard />\n      */\n      {\n        \"id\": \"ATCiZr5T\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon').doesNotExist();\n      assert.dom('.hds-form-radio-card__label').doesNotExist();\n      assert.dom('.hds-badge').doesNotExist();\n      assert.dom('.hds-form-radio-card__description').doesNotExist();\n      assert.dom('.custom').doesNotExist();\n    });\n\n    // ASSERTIONS: ALIGNMENT, CONTROL POSITION, LAYOUT\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @alignment is provided', async function (assert) {\n      const errorMessage = '@alignment for \"Hds::Form::RadioCard\" must be one of the following: left, center; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard @alignment=\"foo\" />\n      */\n      {\n        \"id\": \"W7ye3/H5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@alignment\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @controlPosition is provided', async function (assert) {\n      const errorMessage = '@controlPosition for \"Hds::Form::RadioCard\" must be one of the following: bottom, left; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::RadioCard @controlPosition=\"foo\" />\n      */\n      {\n        \"id\": \"c8ldFfVY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@controlPosition\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/form/radio-card\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio-card/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/radio/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/radio/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Base id=\"test-form-radio\" />\n      */\n      {\n        \"id\": \"Jqx38HhC\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-radio\\\"]],null,null]],[],false,[\\\"hds/form/radio/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-radio').hasClass('hds-form-radio');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/radio/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/radio/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field />\n      */\n      {\n        \"id\": \"8EbjimVw\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field @value=\"abc123\" />\n      */\n      {\n        \"id\": \"9U0ixYWn\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/radio/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('abc123');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the input with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"7fhIx2AK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/radio/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Radio::Field>\n      */\n      {\n        \"id\": \"2ND4GcJj\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/radio/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field />\n      */\n      {\n        \"id\": \"8EbjimVw\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Radio::Field>\n      */\n      {\n        \"id\": \"5l3hwKcx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/radio/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::Radio::Field>\n      */\n      {\n        \"id\": \"K2nTSmER\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/radio/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/radio/group-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/radio/group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group id=\"test-form-radio\" />\n      */\n      {\n        \"id\": \"32H+fXPb\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-radio\\\"]],null,null]],[],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-radio').hasClass('hds-form-group');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components and subcomponents', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.RadioField>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::Radio::Group>\n      */\n      {\n        \"id\": \"Y2HMRfHW\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').exists();\n      assert.dom('.hds-form-group__legend').hasText('This is the legend');\n      assert.dom('.hds-form-group__helper-text').exists();\n      assert.dom('.hds-form-group__helper-text').hasText('This is the group helper text');\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__label').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__control').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper input').isChecked();\n      assert.dom('.hds-form-group__control-fields-wrapper input').hasValue('abc123');\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__error').exists();\n      assert.dom('.hds-form-group__error').exists();\n      assert.dom('.hds-form-group__error').hasText('This is the group error');\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group />\n      */\n      {\n        \"id\": \"sZ5/78zt\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').doesNotExist();\n      assert.dom('.hds-form-group__helper-text').doesNotExist();\n      assert.dom('.hds-form-group__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.RadioField>\n                  <G.Error>This is the group error</G.Error>\n                </Hds::Form::Radio::Group>\n      */\n      {\n        \"id\": \"Y2HMRfHW\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      let fieldHelperText = this.element.querySelector('.hds-form-field__helper-text');\n      let fieldHelperTextId = fieldHelperText.id;\n      let fieldError = this.element.querySelector('.hds-form-field__error');\n      let fieldErrorId = fieldError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${fieldHelperTextId} ${fieldErrorId} ${groupHelperTextId} ${groupErrorId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.RadioField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.RadioField>\n                  {{#if this.showErrors}}\n                    <G.Error>This is the group error</G.Error>\n                  {{/if}}\n                </Hds::Form::Radio::Group>\n      */\n      {\n        \"id\": \"lc433I3Q\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"              \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/radio/group\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      let fieldHelperText = this.element.querySelector('.hds-form-field__helper-text');\n      let fieldHelperTextId = fieldHelperText.id;\n      let fieldError = this.element.querySelector('.hds-form-field__error');\n      let fieldErrorId = fieldError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${fieldHelperTextId} ${fieldErrorId} ${groupHelperTextId} ${groupErrorId}`);\n    });\n\n    // NAME\n\n    (0, _qunit.test)('it renders the defined name on all controls within a group', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group @name=\"datacenter-demo\" as |G|>\n                  <G.Legend>Choose datacenter</G.Legend>\n                  <G.RadioField data-test=\"first-control\" as |F|>\n                    <F.Label>NYC1</F.Label>\n                  </G.RadioField>\n                  <G.RadioField data-test=\"second-control\" as |F|>\n                    <F.Label>DC1</F.Label>\n                  </G.RadioField>\n                </Hds::Form::Radio::Group>\n      */\n      {\n        \"id\": \"pdVo7z33\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"datacenter-demo\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Choose datacenter\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"data-test\\\",\\\"first-control\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"NYC1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"data-test\\\",\\\"second-control\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,3,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"DC1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[3]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\",\\\"F\\\"],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test=\"first-control\"]').hasAttribute('name', 'datacenter-demo');\n      assert.dom('[data-test=\"second-control\"]').hasAttribute('name', 'datacenter-demo');\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the legend text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group @isRequired={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.RadioField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                  </G.RadioField>\n              </Hds::Form::Radio::Group>\n      */\n      {\n        \"id\": \"f6kYgUDn\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('Required');\n      assert.dom('input').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Radio::Group @isOptional={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.RadioField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                  </G.RadioField>\n                </Hds::Form::Radio::Group>\n      */\n      {\n        \"id\": \"jRlRVUNv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"RadioField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/radio/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/radio/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/select/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/select/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Base id=\"test-form-select\" />\n      */\n      {\n        \"id\": \"8uyPjO21\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-select\\\"]],null,null]],[],false,[\\\"hds/form/select/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-select').hasClass('hds-form-select');\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it should render the options passed via contextual component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Base id=\"test-form-select\" as |C|><C.Options><option value=\"abc123\">This is the option</option></C.Options></Hds::Form::Select::Base>\n      */\n      {\n        \"id\": \"kDIDTxHs\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-select\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Options\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"option\\\"],[14,2,\\\"abc123\\\"],[12],[1,\\\"This is the option\\\"],[13]],[]]]]]],[1]]]]]],[\\\"C\\\"],false,[\\\"hds/form/select/base\\\",\\\"option\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-select option').exists();\n      assert.dom('#test-form-select option').hasText('This is the option');\n      assert.dom('#test-form-select option').hasValue('abc123');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the select with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Base @width=\"248px\" id=\"test-form-select\" />\n      */\n      {\n        \"id\": \"5urdZoBl\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-select\\\"]],[[\\\"@width\\\"],[\\\"248px\\\"]],null]],[],false,[\\\"hds/form/select/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-select').hasStyle({\n        width: '248px'\n      });\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Base id=\"test-form-select\" @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"moLCc8qE\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-select\\\"]],[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/select/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-select').hasClass('hds-form-select--is-invalid');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/select/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/select/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field />\n      */\n      {\n        \"id\": \"wyM/9BJ1\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it should render the options passed via contextual component', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field id=\"test-form-select\" as |F|><F.Options><option value=\"abc123\">This is the option</option></F.Options></Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"r40FE54A\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-select\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Options\\\"]],null,null,[[\\\"default\\\"],[[[[10,\\\"option\\\"],[14,2,\\\"abc123\\\"],[12],[1,\\\"This is the option\\\"],[13]],[]]]]]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\",\\\"option\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('select option').exists();\n      assert.dom('select option').hasText('This is the option');\n      assert.dom('select option').hasValue('abc123');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the input with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @width=\"248px\" />\n      */\n      {\n        \"id\": \"GibIKY3o\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[\\\"248px\\\"]],null]],[],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('select').hasStyle({\n        width: '248px'\n      });\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"vToc8Ug0\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('select').hasClass('hds-form-select--is-invalid');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the select control with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"O6KzZ+HW\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('select').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"DbwcgDp4\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field />\n      */\n      {\n        \"id\": \"wyM/9BJ1\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"Iv2kvoZT\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control select');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control select').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"FcLaQRmi\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control select');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control select').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @isRequired={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"CigHowoK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n      assert.dom('select').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field @isOptional={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"oKY0qYz7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n    (0, _qunit.test)('it should not append an indicator to the label text when the required attribute is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Select::Field required as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Select::Field>\n      */\n      {\n        \"id\": \"qC5YBbNo\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"required\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/select/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/select/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('select').hasAttribute('required');\n      assert.dom('label .hds-form-indicator').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/super-select/multiple/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-power-select/test-support\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _testSupport, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-power-select/test-support\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // we're using this data for multiple tests so we'll define it here\n  const setOptionsData = context => {\n    context.set('NOOP', () => {});\n    context.set('OPTION', []);\n    context.set('OPTIONS', ['Option 1', 'Option 2', 'Option 3']);\n  };\n  (0, _qunit.module)('Integration | Component | hds/form/super-select/multiple/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} id=\"test-super-select-multiple\" />\n      */\n      {\n        \"id\": \"/OxoMdRu\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-super-select-multiple\\\"]],[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select-multiple #test-super-select-multiple').exists();\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it should render the options passed', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>\n                  {{option}}\n                </Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"OSaVLXHc\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@onChange\\\",\\\"@options\\\"],[[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[1,[30,1]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.ember-power-select-options').exists();\n      assert.dom('.ember-power-select-option').hasText('Option 1');\n    });\n\n    // AFTER OPTIONS\n\n    (0, _qunit.test)('it should render the after options block by default', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"yOlQ+1ou\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@options\\\"],[[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__after-options .hds-form-super-select__result-count').hasText('0 selected of 3 total');\n      assert.dom('.hds-form-super-select__after-options .hds-button').hasText('Show selected');\n      assert.dom('.hds-form-super-select__after-options .hds-button').doesNotHaveTextContaining('Clear selected');\n    });\n    (0, _qunit.test)('it should update the options view when \"Show selected\"/\"Show all\" is toggled', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{fn (mut this.OPTION)}} @selected={{this.OPTION}} @options={{this.OPTIONS}} id=\"test-super-select-multiple\" as |option|>{{option}}</Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"aPO8jwUA\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-super-select-multiple\\\"]],[[\\\"@onChange\\\",\\\"@selected\\\",\\\"@options\\\"],[[28,[37,1],[[28,[37,2],[[30,0,[\\\"OPTION\\\"]]],null]],null],[30,0,[\\\"OPTION\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\",\\\"fn\\\",\\\"mut\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      await (0, _testSupport.selectChoose)('#test-super-select-multiple', 'Option 1');\n      await (0, _testSupport.selectChoose)('#test-super-select-multiple', 'Option 2');\n      assert.dom('.hds-form-super-select__after-options .hds-form-super-select__result-count').hasText('2 selected of 3 total');\n      assert.dom('.ember-power-select-option').isVisible({\n        count: 3\n      });\n\n      // click 'Show selected'\n      await (0, _testHelpers.click)('.hds-form-super-select__after-options .hds-button:first-child');\n      assert.dom('.ember-power-select-option').isVisible({\n        count: 2\n      });\n\n      // click 'Show all'\n      await (0, _testHelpers.click)('.hds-form-super-select__after-options .hds-button:first-child');\n      assert.dom('.ember-power-select-option').isVisible({\n        count: 3\n      });\n    });\n    (0, _qunit.test)('it should clear any existing selection when \"Clear selected\" is activated', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{fn (mut this.OPTION)}} @selected={{this.OPTION}} @options={{this.OPTIONS}} id=\"test-super-select-multiple\" as |option|>{{option}}</Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"aPO8jwUA\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-super-select-multiple\\\"]],[[\\\"@onChange\\\",\\\"@selected\\\",\\\"@options\\\"],[[28,[37,1],[[28,[37,2],[[30,0,[\\\"OPTION\\\"]]],null]],null],[30,0,[\\\"OPTION\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\",\\\"fn\\\",\\\"mut\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      await (0, _testSupport.selectChoose)('#test-super-select-multiple', 'Option 1');\n      await (0, _testSupport.selectChoose)('#test-super-select-multiple', 'Option 2');\n      assert.dom('.hds-form-super-select__after-options .hds-form-super-select__result-count').hasText('2 selected of 3 total');\n      assert.dom('.ember-power-select-option').isVisible({\n        count: 3\n      });\n      assert.dom('.hds-form-super-select__no-options-selected').doesNotExist();\n\n      // click 'Clear selected'\n      await (0, _testHelpers.click)('.hds-form-super-select__after-options .hds-button:nth-child(2)');\n      assert.dom('.ember-power-select-option[aria-selected=\"true\"]').doesNotExist();\n      assert.dom('.hds-form-super-select__after-options .hds-form-super-select__result-count').hasText('0 selected of 3 total');\n\n      // click 'Show selected'\n      await (0, _testHelpers.click)('.hds-form-super-select__after-options .hds-button:first-child');\n      assert.dom('.hds-form-super-select__no-options-selected').hasText('No options selected');\n    });\n    (0, _qunit.test)('it should not render the after options block when showAfterOptions is set to false', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} @options={{this.OPTIONS}} @showAfterOptions={{false}} as |option|>{{option}}</Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"EvzgT0Oy\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@options\\\",\\\"@showAfterOptions\\\"],[[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]],false]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__after-options').doesNotExist();\n    });\n    (0, _qunit.test)('it should render custom content in the after options block when `@afterOptionsContent` exists', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @afterOptionsContent=\"Custom content\" @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"hZK57ze5\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@afterOptionsContent\\\",\\\"@onChange\\\",\\\"@options\\\"],[\\\"Custom content\\\",[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__result-count').doesNotExist();\n      assert.dom('.hds-form-super-select__after-options').hasText('Custom content');\n    });\n    (0, _qunit.test)('it should not render the after options block when `@showAfterOptions` is false', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @showAfterOptions={{false}} @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Multiple::Base>\n      */\n      {\n        \"id\": \"heoYfWlh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@showAfterOptions\\\",\\\"@onChange\\\",\\\"@options\\\"],[false,[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__after-options').doesNotExist();\n    });\n\n    // MATCH TRIGGER WIDTH\n\n    (0, _qunit.test)('`@matchTriggerWidth` should be true by default', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"gbUxptTE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').doesNotHaveClass('hds-form-super-select--dropdown-content-auto-width');\n    });\n    (0, _qunit.test)('it should render the correct CSS class when `@matchTriggerWidth` is false', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} @matchTriggerWidth={{false}} />\n      */\n      {\n        \"id\": \"dP3evC0P\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@matchTriggerWidth\\\"],[[30,0,[\\\"NOOP\\\"]],false]],null]],[],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').hasClass('hds-form-super-select--dropdown-content-auto-width');\n    });\n\n    // DROPDOWN MAX WIDTH\n\n    (0, _qunit.test)('it should set the correct CSS property value when `@dropdownMaxWidth` is set', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} @dropdownMaxWidth=\"40em\" />\n      */\n      {\n        \"id\": \"QksJcXLP\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@dropdownMaxWidth\\\"],[[30,0,[\\\"NOOP\\\"]],\\\"40em\\\"]],null]],[],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').hasClass('hds-form-super-select--dropdown-content-auto-width').hasAttribute('style', '--hds-form-super-select-dropdown-max-width: 40em;');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class when `@isInvalid` is true', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Base @onChange={{this.NOOP}} @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"ByIBuxPf\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@isInvalid\\\"],[[30,0,[\\\"NOOP\\\"]],true]],null]],[],false,[\\\"hds/form/super-select/multiple/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').hasClass('hds-form-super-select--is-invalid');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/super-select/multiple/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // we're using this data for multiple tests so we'll define it here\n  const setOptionsData = context => {\n    context.set('NOOP', () => {});\n  };\n  (0, _qunit.module)('Integration | Component | hds/form/super-select/multiple/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"rQhrHnc+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control .hds-form-super-select').exists();\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if @isInvalid is true', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @onChange={{this.NOOP}} @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"R9Dh4FEt\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@isInvalid\\\"],[[30,0,[\\\"NOOP\\\"]],true]],null]],[],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control .hds-form-super-select').hasClass('hds-form-super-select--is-invalid');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the trigger with a custom id', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @id=\"my-super-select\" @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"yh0o04uO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@onChange\\\"],[\\\"my-super-select\\\",[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('id', 'my-super-select');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @onChange={{this.NOOP}} as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::SuperSelect::Multiple::Field>\n      */\n      {\n        \"id\": \"IDoyhrGj\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"rQhrHnc+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @extraAriaDescribedBy=\"extra\" @onChange={{this.NOOP}} as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::SuperSelect::Multiple::Field>\n      */\n      {\n        \"id\": \"KQTaF0Ho\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\",\\\"@onChange\\\"],[\\\"extra\\\",[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      let control = this.element.querySelector('.ember-basic-dropdown-trigger');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('id', `label-${controlId}`);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-labelledby', `label-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @extraAriaDescribedBy=\"extra\" @onChange={{this.NOOP}} as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::SuperSelect::Multiple::Field>\n      */\n      {\n        \"id\": \"YCsfNcc7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\",\\\"@onChange\\\"],[\\\"extra\\\",[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/multiple/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      let control = this.element.querySelector('.ember-basic-dropdown-trigger');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('id', `label-${controlId}`);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-labelledby', `label-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text when user input is required', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @isRequired={{true}} @onChange={{this.NOOP}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::SuperSelect::Multiple::Field>\n      */\n      {\n        \"id\": \"+cf9Pn7P\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Multiple::Field @isOptional={{true}} @onChange={{this.NOOP}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::SuperSelect::Multiple::Field>\n      */\n      {\n        \"id\": \"wMJ0I4+w\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/multiple/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/multiple/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/super-select/single/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // we're using this data for multiple tests so we'll define it here\n  const setOptionsData = context => {\n    context.set('NOOP', () => {});\n    context.set('OPTION', []);\n    context.set('OPTIONS', ['Option 1', 'Option 2', 'Option 3']);\n  };\n  (0, _qunit.module)('Integration | Component | hds/form/super-select/single/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} id=\"test-super-select-single\" />\n      */\n      {\n        \"id\": \"82k81TBL\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-super-select-single\\\"]],[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select-single #test-super-select-single').exists();\n    });\n\n    // OPTIONS\n\n    (0, _qunit.test)('it should render the options passed', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Single::Base>\n      */\n      {\n        \"id\": \"S8LqD3Dh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@options\\\"],[[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.ember-power-select-options').exists();\n      assert.dom('.ember-power-select-option').hasText('Option 1');\n    });\n\n    // AFTER OPTIONS\n\n    (0, _qunit.test)('it should not render the after options block by default', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Single::Base>\n      */\n      {\n        \"id\": \"S8LqD3Dh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@options\\\"],[[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__after-options').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the after options block when showAfterOptions is set to true', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} @options={{this.OPTIONS}} @showAfterOptions={{true}} as |option|>{{option}}</Hds::Form::SuperSelect::Single::Base>\n      */\n      {\n        \"id\": \"Gg7aUKTI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@options\\\",\\\"@showAfterOptions\\\"],[[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]],true]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__after-options .hds-form-super-select__result-count').hasText('3 total');\n    });\n    (0, _qunit.test)('it should render custom content in the after options block when `@afterOptionsContent` exists', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @afterOptionsContent=\"Custom content\" @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Single::Base>\n      */\n      {\n        \"id\": \"o0uesCMP\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@afterOptionsContent\\\",\\\"@onChange\\\",\\\"@options\\\"],[\\\"Custom content\\\",[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__result-count').doesNotExist();\n      assert.dom('.hds-form-super-select__after-options').hasText('Custom content');\n    });\n    (0, _qunit.test)('it should not render the after options block when `@showAfterOptions` is false', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @showAfterOptions={{false}} @onChange={{this.NOOP}} @options={{this.OPTIONS}} as |option|>{{option}}</Hds::Form::SuperSelect::Single::Base>\n      */\n      {\n        \"id\": \"PZpklBhw\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@showAfterOptions\\\",\\\"@onChange\\\",\\\"@options\\\"],[false,[30,0,[\\\"NOOP\\\"]],[30,0,[\\\"OPTIONS\\\"]]]],[[\\\"default\\\"],[[[[1,[30,1]]],[1]]]]]],[\\\"option\\\"],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-super-select .ember-basic-dropdown-trigger');\n      assert.dom('.hds-form-super-select__after-options').doesNotExist();\n    });\n\n    // MATCH TRIGGER WIDTH\n\n    (0, _qunit.test)('`@matchTriggerWidth` should be true by default', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"8ovUKvhb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').doesNotHaveClass('hds-form-super-select--dropdown-content-auto-width');\n    });\n    (0, _qunit.test)('it should render the correct CSS class when `@matchTriggerWidth` is false', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} @matchTriggerWidth={{false}} />\n      */\n      {\n        \"id\": \"xACkjTDO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@matchTriggerWidth\\\"],[[30,0,[\\\"NOOP\\\"]],false]],null]],[],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').hasClass('hds-form-super-select--dropdown-content-auto-width');\n    });\n\n    // DROPDOWN MAX WIDTH\n\n    (0, _qunit.test)('it should set the correct CSS property value when `@dropdownMaxWidth` is set', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} @dropdownMaxWidth=\"40em\" />\n      */\n      {\n        \"id\": \"WlE3dZsK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@dropdownMaxWidth\\\"],[[30,0,[\\\"NOOP\\\"]],\\\"40em\\\"]],null]],[],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').hasClass('hds-form-super-select--dropdown-content-auto-width').hasAttribute('style', '--hds-form-super-select-dropdown-max-width: 40em;');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class when `@isInvalid` is true', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Base @onChange={{this.NOOP}} @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"L9N2m2/b\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@isInvalid\\\"],[[30,0,[\\\"NOOP\\\"]],true]],null]],[],false,[\\\"hds/form/super-select/single/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-super-select').hasClass('hds-form-super-select--is-invalid');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/super-select/single/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // we're using this data for multiple tests so we'll define it here\n  const setOptionsData = context => {\n    context.set('NOOP', () => {});\n  };\n  (0, _qunit.module)('Integration | Component | hds/form/super-select/single/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"+4l2PJqS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control .hds-form-super-select').exists();\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if @isInvalid is true', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @onChange={{this.NOOP}} @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"QH+WCSo1\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@isInvalid\\\"],[[30,0,[\\\"NOOP\\\"]],true]],null]],[],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control .hds-form-super-select').hasClass('hds-form-super-select--is-invalid');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the trigger with a custom id', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @id=\"my-super-select\" @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"3U5ohvLd\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@onChange\\\"],[\\\"my-super-select\\\",[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('id', 'my-super-select');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @onChange={{this.NOOP}} as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::SuperSelect::Single::Field>\n      */\n      {\n        \"id\": \"wU0dul/g\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @onChange={{this.NOOP}} />\n      */\n      {\n        \"id\": \"+4l2PJqS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @extraAriaDescribedBy=\"extra\" @onChange={{this.NOOP}} as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::SuperSelect::Single::Field>\n      */\n      {\n        \"id\": \"/xVyEAB8\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\",\\\"@onChange\\\"],[\\\"extra\\\",[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      let control = this.element.querySelector('.ember-basic-dropdown-trigger');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('id', `label-${controlId}`);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-labelledby', `label-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @extraAriaDescribedBy=\"extra\" @onChange={{this.NOOP}} as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::SuperSelect::Single::Field>\n      */\n      {\n        \"id\": \"t5kCwTTF\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\",\\\"@onChange\\\"],[\\\"extra\\\",[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/single/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      let control = this.element.querySelector('.ember-basic-dropdown-trigger');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('id', `label-${controlId}`);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-labelledby', `label-${controlId}`);\n      assert.dom('.ember-basic-dropdown-trigger').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text when user input is required', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @isRequired={{true}} @onChange={{this.NOOP}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::SuperSelect::Single::Field>\n      */\n      {\n        \"id\": \"tI8F1BXf\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      setOptionsData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::SuperSelect::Single::Field @isOptional={{true}} @onChange={{this.NOOP}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::SuperSelect::Single::Field>\n      */\n      {\n        \"id\": \"dBYUncGF\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"NOOP\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/super-select/single/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/super-select/single/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/text-input/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/text-input/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base id=\"test-form-text-input\" />\n      */\n      {\n        \"id\": \"oM5s2Irx\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],null,null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasClass('hds-form-text-input');\n    });\n\n    // TYPE\n\n    (0, _qunit.test)('it should render the \"text\" type if no type is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base id=\"test-form-text-input\" />\n      */\n      {\n        \"id\": \"oM5s2Irx\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],null,null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasAttribute('type', 'text');\n    });\n    (0, _qunit.test)('it should render the correct type depending on the @type prop', async function (assert) {\n      this.set('type', 'email');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base @type={{this.type}} id=\"test-form-text-input\" />\n      */\n      {\n        \"id\": \"U9UH5IRu\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],[[\\\"@type\\\"],[[30,0,[\\\"type\\\"]]]],null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasAttribute('type', 'email');\n      this.set('type', 'datetime-local');\n      assert.dom('#test-form-text-input').hasAttribute('type', 'datetime-local');\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base @value=\"abc123\" id=\"test-form-text-input\" />\n      */\n      {\n        \"id\": \"hQDRXCq+\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasValue('abc123');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base id=\"test-form-text-input\" @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"6M+ZCVSP\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasClass('hds-form-text-input--is-invalid');\n    });\n\n    // IS LOADING\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isLoading prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base id=\"test-form-text-input\" @type=\"search\" @isLoading={{true}} />\n      */\n      {\n        \"id\": \"r5tK+B9R\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],[[\\\"@type\\\",\\\"@isLoading\\\"],[\\\"search\\\",true]],null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasClass('hds-form-text-input--is-loading');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the input with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base @width=\"248px\" id=\"test-form-text-input\" />\n      */\n      {\n        \"id\": \"/fHNoE4m\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-text-input\\\"]],[[\\\"@width\\\"],[\\\"248px\\\"]],null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-text-input').hasStyle({\n        width: '248px'\n      });\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @type is provided', async function (assert) {\n      const errorMessage = '@type for \"Hds::Form::TextInput\" must be one of the following: text, email, password, url, date, time, datetime-local, search, month, week, tel; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Base @type=\"foo\" />\n      */\n      {\n        \"id\": \"eyfzJm7a\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/form/text-input/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/text-input/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/text-input/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field />\n      */\n      {\n        \"id\": \"59WFxmar\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // TYPE\n\n    (0, _qunit.test)('it should render the \"text\" type if no type is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field />\n      */\n      {\n        \"id\": \"59WFxmar\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'text');\n    });\n    (0, _qunit.test)('it should render the correct type depending on the @type prop', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @type=\"email\" />\n      */\n      {\n        \"id\": \"39R71BgJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"email\\\"]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'email');\n    });\n\n    // PASSWORD\n\n    (0, _qunit.test)('it should render the password input with visibility toggle and masked by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @type=\"password\" />\n      */\n      {\n        \"id\": \"cw8h3DHK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"password\\\"]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'password');\n      assert.dom('.hds-form-visibility-toggle .hds-icon-eye').exists();\n    });\n    (0, _qunit.test)('it should toggle the masking when the toggle button is pressed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @type=\"password\" />\n      */\n      {\n        \"id\": \"cw8h3DHK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"password\\\"]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-form-visibility-toggle');\n      assert.dom('input').hasAttribute('type', 'text');\n      assert.dom('.hds-form-visibility-toggle .hds-icon-eye-off').exists();\n    });\n    (0, _qunit.test)('it should render the password input without visibility toggle when `hasVisibilityToggle` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @type=\"password\" @hasVisibilityToggle={{false}} />\n      */\n      {\n        \"id\": \"09yg3NnJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@hasVisibilityToggle\\\"],[\\\"password\\\",false]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('type', 'password');\n      assert.dom('.hds-form-visibility-toggle').doesNotExist();\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @value=\"abc123\" />\n      */\n      {\n        \"id\": \"GtJ70fVX\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('abc123');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"BHSSyeZ1\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasClass('hds-form-text-input--is-invalid');\n    });\n\n    // IS LOADING\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isLoading prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @type=\"search\" @isLoading={{true}} />\n      */\n      {\n        \"id\": \"QWwCheCk\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@isLoading\\\"],[\\\"search\\\",true]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasClass('hds-form-text-input--is-loading');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should render the input with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @width=\"248px\" />\n      */\n      {\n        \"id\": \"lF64aDjp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@width\\\"],[\\\"248px\\\"]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasStyle({\n        width: '248px'\n      });\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the input with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"r+8Lrs4g\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @value=\"abc123\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::TextInput::Field>\n      */\n      {\n        \"id\": \"F9tIAxUq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__character-count').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field />\n      */\n      {\n        \"id\": \"59WFxmar\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__character-count').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @value=\"abc123\" @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::TextInput::Field>\n      */\n      {\n        \"id\": \"H6k3pJgS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@extraAriaDescribedBy\\\"],[\\\"abc123\\\",\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__character-count').hasText('4 characters remaining');\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements even when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @value=\"abc123\" @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::TextInput::Field>\n      */\n      {\n        \"id\": \"NHp5eqqr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@extraAriaDescribedBy\\\"],[\\\"abc123\\\",\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/text-input/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__character-count').hasText('4 characters remaining');\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @isRequired={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::TextInput::Field>\n      */\n      {\n        \"id\": \"jOHQ8Nca\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n      assert.dom('input').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field @isOptional={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::TextInput::Field>\n      */\n      {\n        \"id\": \"GUZJg6XH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n    (0, _qunit.test)('it should not append an indicator to the label text when the required attribute is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::TextInput::Field required as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::TextInput::Field>\n      */\n      {\n        \"id\": \"nTeAtF49\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"required\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/text-input/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/text-input/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('required');\n      assert.dom('label .hds-form-indicator').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/textarea/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/textarea/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Base id=\"test-form-textarea\" />\n      */\n      {\n        \"id\": \"OePD7N0a\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-textarea\\\"]],null,null]],[],false,[\\\"hds/form/textarea/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-textarea').hasClass('hds-form-textarea');\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Base @value=\"abc123\" id=\"test-form-textarea\" />\n      */\n      {\n        \"id\": \"XJCRUvKL\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-textarea\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/textarea/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-textarea').hasValue('abc123');\n    });\n\n    // ROWS\n\n    (0, _qunit.test)('it should render the textarea with the default number of rows', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Base />\n      */\n      {\n        \"id\": \"ApFPWyFd\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/textarea/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasAttribute('rows', '4');\n    });\n    (0, _qunit.test)('it should render the textarea with a custom number of rows', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Base rows=\"2\" />\n      */\n      {\n        \"id\": \"nnCCcXoW\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"rows\\\",\\\"2\\\"]],null,null]],[],false,[\\\"hds/form/textarea/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasAttribute('rows', '2');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Base id=\"test-form-textarea\" @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"4qoxKNzG\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-textarea\\\"]],[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/textarea/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-textarea').hasClass('hds-form-textarea--is-invalid');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/textarea/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/textarea/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field />\n      */\n      {\n        \"id\": \"G/iXSYYV\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__control').exists();\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @value=\"abc123\" />\n      */\n      {\n        \"id\": \"N5boUivw\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasValue('abc123');\n    });\n\n    // INVALID\n\n    (0, _qunit.test)('it should render the correct CSS class if the @isInvalid prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @isInvalid={{true}} />\n      */\n      {\n        \"id\": \"8P1QHV9y\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isInvalid\\\"],[true]],null]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasClass('hds-form-textarea--is-invalid');\n    });\n\n    // WIDTH & HEIGHT\n\n    (0, _qunit.test)('it should render the textarea control with a fixed width if a @width value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Form::Textarea::Field @width=\"248px\" />\n          \n      */\n      {\n        \"id\": \"tjyAbP9G\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@width\\\"],[\\\"248px\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasStyle({\n        width: '248px'\n      });\n    });\n    (0, _qunit.test)('it should render the textarea control with a fixed height if a @height value is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Form::Textarea::Field @height=\"248px\" />\n          \n      */\n      {\n        \"id\": \"uUOYqVqg\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@height\\\"],[\\\"248px\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasStyle({\n        height: '248px'\n      });\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the textarea control with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @id=\"my-textarea\" />\n      */\n      {\n        \"id\": \"SnBa5lms\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-textarea\\\"]],null]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasAttribute('id', 'my-textarea');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @value=\"abc123\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Textarea::Field>\n      */\n      {\n        \"id\": \"njF4x4ff\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__character-count').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field />\n      */\n      {\n        \"id\": \"G/iXSYYV\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__character-count').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @value=\"abc123\" @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Textarea::Field>\n      */\n      {\n        \"id\": \"g3Lv1Ta6\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@extraAriaDescribedBy\\\"],[\\\"abc123\\\",\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control textarea');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control textarea').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @value=\"abc123\" @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.CharacterCount @maxLength={{10}}/>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::Textarea::Field>\n      */\n      {\n        \"id\": \"0gCriROy\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@extraAriaDescribedBy\\\"],[\\\"abc123\\\",\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"CharacterCount\\\"]],null,[[\\\"@maxLength\\\"],[10]],null],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/textarea/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n\n      // the control ID is dynamically generated\n      let control = this.element.querySelector('.hds-form-field__control textarea');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control textarea').hasAttribute('aria-describedby', `helper-text-${controlId} character-count-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__character-count').hasAttribute('id', `character-count-${controlId}`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the label text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @isRequired={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Textarea::Field>\n      */\n      {\n        \"id\": \"TZp0EXu7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('Required');\n      assert.dom('textarea').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the label text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field @isOptional={{true}} as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Textarea::Field>\n      */\n      {\n        \"id\": \"DD/8luY6\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('label .hds-form-indicator').exists();\n      assert.dom('label .hds-form-indicator').hasText('(Optional)');\n    });\n    (0, _qunit.test)('it should not append an indicator to the label text when the required attribute is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Textarea::Field required as |F|>\n                  <F.Label>This is the label</F.Label>\n                </Hds::Form::Textarea::Field>\n      */\n      {\n        \"id\": \"P9Drdreu\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"required\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/textarea/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/textarea/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('textarea').hasAttribute('required');\n      assert.dom('label .hds-form-indicator').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/toggle/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/toggle/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Base id=\"test-form-toggle\" />\n      */\n      {\n        \"id\": \"fSiYQOId\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-toggle\\\"]],null,null]],[],false,[\\\"hds/form/toggle/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Notice: the \"toggle\" component has a slightly different DOM structure than the other form controls\n      assert.dom('.hds-form-toggle').exists();\n      assert.dom('.hds-form-toggle > #test-form-toggle').exists();\n      assert.dom('#test-form-toggle').hasClass('hds-form-toggle__control');\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it should render with the correct role', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Base id=\"test-form-toggle\" />\n      */\n      {\n        \"id\": \"fSiYQOId\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-toggle\\\"]],null,null]],[],false,[\\\"hds/form/toggle/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-toggle').hasAttribute('role', 'switch');\n    });\n    // role=\"switch\"\n  });\n});","define(\"showcase/tests/integration/components/hds/form/toggle/field-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/toggle/field', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a specific CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field />\n      */\n      {\n        \"id\": \"55qZCHIe\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/toggle/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Notice: the \"toggle\" component has a slightly different DOM structure than the other form controls\n      assert.dom('input').hasClass('hds-form-toggle__control');\n    });\n\n    // VALUE\n\n    (0, _qunit.test)('it should render the input with the value provided via @value argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field @value=\"abc123\" />\n      */\n      {\n        \"id\": \"uz0uNSM9\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"abc123\\\"]],null]],[],false,[\\\"hds/form/toggle/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasValue('abc123');\n    });\n\n    // ID\n\n    (0, _qunit.test)('it should render the input with a custom @id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field @id=\"my-input\" />\n      */\n      {\n        \"id\": \"PQ4A+y9f\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"my-input\\\"]],null]],[],false,[\\\"hds/form/toggle/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('input').hasAttribute('id', 'my-input');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Toggle::Field>\n      */\n      {\n        \"id\": \"+VqkhvpZ\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/toggle/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').exists();\n      assert.dom('.hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-field__control').exists();\n      assert.dom('.hds-form-field__error').exists();\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field />\n      */\n      {\n        \"id\": \"55qZCHIe\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/toggle/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-field__label').doesNotExist();\n      assert.dom('.hds-form-field__helper-text').doesNotExist();\n      assert.dom('.hds-form-field__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                <F.Error>This is the error</F.Error>\n              </Hds::Form::Toggle::Field>\n      */\n      {\n        \"id\": \"PEe9WCqe\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/toggle/field\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the control ID is dynamically generated\n      // Notice: the \"toggle\" component has a slightly different DOM structure than the other form controls\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements when dynamically rendered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Field @extraAriaDescribedBy=\"extra\" as |F|>\n                <F.Label>This is the label</F.Label>\n                <F.HelperText>This is the helper text</F.HelperText>\n                {{#if this.showErrors}}\n                  <F.Error>This is the error</F.Error>\n                {{/if}}\n              </Hds::Form::Toggle::Field>\n      */\n      {\n        \"id\": \"atxTJC/J\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@extraAriaDescribedBy\\\"],[\\\"extra\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the label\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the helper text\\\"]],[]]]]],[1,\\\"\\\\n\\\"],[41,[30,0,[\\\"showErrors\\\"]],[[[1,\\\"            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the error\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]],null],[1,\\\"        \\\"]],[1]]]]]],[\\\"F\\\"],false,[\\\"hds/form/toggle/field\\\",\\\"if\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/field-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('showErrors', true);\n      await (0, _testHelpers.settled)();\n      // the control ID is dynamically generated\n      // Notice: the \"toggle\" component has a slightly different DOM structure than the other form controls\n      let control = this.element.querySelector('.hds-form-field__control input');\n      let controlId = control.id;\n      assert.dom('.hds-form-field__label').hasAttribute('for', controlId);\n      assert.dom('.hds-form-field__helper-text').hasAttribute('id', `helper-text-${controlId}`);\n      assert.dom('.hds-form-field__control input').hasAttribute('aria-describedby', `helper-text-${controlId} error-${controlId} extra`);\n      assert.dom('.hds-form-field__error').hasAttribute('id', `error-${controlId}`);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/toggle/group-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/toggle/group', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Group id=\"test-form-toggle\" />\n      */\n      {\n        \"id\": \"51j9bxvz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-form-toggle\\\"]],null,null]],[],false,[\\\"hds/form/toggle/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-form-toggle').hasClass('hds-form-group');\n    });\n\n    // YIELDED (CONTEXTUAL) COMPONENTS\n\n    (0, _qunit.test)('it renders the yielded contextual components and subcomponents', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.ToggleField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.ToggleField>\n                  <G.Error>This is the group error</G.Error>\n              </Hds::Form::Toggle::Group>\n      */\n      {\n        \"id\": \"+PlTluyN\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"ToggleField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/toggle/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').exists();\n      assert.dom('.hds-form-group__legend').hasText('This is the legend');\n      assert.dom('.hds-form-group__helper-text').exists();\n      assert.dom('.hds-form-group__helper-text').hasText('This is the group helper text');\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__label').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__helper-text').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__control').exists();\n      assert.dom('.hds-form-group__control-fields-wrapper input').isChecked();\n      assert.dom('.hds-form-group__control-fields-wrapper input').hasValue('abc123');\n      assert.dom('.hds-form-group__control-fields-wrapper .hds-form-field__error').exists();\n      assert.dom('.hds-form-group__error').exists();\n      assert.dom('.hds-form-group__error').hasText('This is the group error');\n    });\n    (0, _qunit.test)('it does not render the yielded contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Group />\n      */\n      {\n        \"id\": \"gTvozURA\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/form/toggle/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-form-group__legend').doesNotExist();\n      assert.dom('.hds-form-group__helper-text').doesNotExist();\n      assert.dom('.hds-form-group__error').doesNotExist();\n    });\n    (0, _qunit.test)('it automatically provides all the ID relations between the elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Group as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.HelperText>This is the group helper text</G.HelperText>\n                  <G.ToggleField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                    <F.HelperText>This is the control helper text</F.HelperText>\n                    <F.Error>This is the control error</F.Error>\n                  </G.ToggleField>\n                  <G.Error>This is the group error</G.Error>\n              </Hds::Form::Toggle::Group>\n      */\n      {\n        \"id\": \"+PlTluyN\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group helper text\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"ToggleField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"HelperText\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control helper text\\\"]],[]]]]],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control error\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Error\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the group error\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/toggle/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the IDs are dynamically generated\n      let groupHelperText = this.element.querySelector('.hds-form-group__helper-text');\n      let groupHelperTextId = groupHelperText.id;\n      let groupError = this.element.querySelector('.hds-form-group__error');\n      let groupErrorId = groupError.id;\n      let fieldHelperText = this.element.querySelector('.hds-form-field__helper-text');\n      let fieldHelperTextId = fieldHelperText.id;\n      let fieldError = this.element.querySelector('.hds-form-field__error');\n      let fieldErrorId = fieldError.id;\n      assert.dom('input').hasAttribute('aria-describedby', `${fieldHelperTextId} ${fieldErrorId} ${groupHelperTextId} ${groupErrorId}`);\n    });\n\n    // REQUIRED AND OPTIONAL\n\n    (0, _qunit.test)('it should append an indicator to the legend text and set the required attribute when user input is required', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Group @isRequired={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.ToggleField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                  </G.ToggleField>\n                </Hds::Form::Toggle::Group>\n      */\n      {\n        \"id\": \"alr0qrR4\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isRequired\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"ToggleField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/toggle/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('Required');\n      assert.dom('input').hasAttribute('required');\n    });\n    (0, _qunit.test)('it should append an indicator to the legend text when user input is optional', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::Toggle::Group @isOptional={{true}} as |G|>\n                  <G.Legend>This is the legend</G.Legend>\n                  <G.ToggleField checked=\"checked\" @value=\"abc123\" as |F|>\n                    <F.Label>This is the control label</F.Label>\n                  </G.ToggleField>\n                </Hds::Form::Toggle::Group>\n      */\n      {\n        \"id\": \"epshZP+p\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isOptional\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Legend\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the legend\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"ToggleField\\\"]],[[24,\\\"checked\\\",\\\"checked\\\"]],[[\\\"@value\\\"],[\\\"abc123\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Label\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"This is the control label\\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"G\\\",\\\"F\\\"],false,[\\\"hds/form/toggle/group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/toggle/group-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('legend .hds-form-indicator').exists();\n      assert.dom('legend .hds-form-indicator').hasText('(Optional)');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/form/visibility-toggle/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/form/visibility-toggle/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::VisibilityToggle id=\"test-visibility-toggle\" />\n      */\n      {\n        \"id\": \"gUUPeTm9\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-visibility-toggle\\\"]],null,null]],[],false,[\\\"hds/form/visibility-toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/visibility-toggle/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-visibility-toggle').hasClass('hds-form-visibility-toggle');\n    });\n    (0, _qunit.test)('it should render the default icon, `aria-label` and `sr-live` message', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::VisibilityToggle id=\"test-visibility-toggle\" />\n      */\n      {\n        \"id\": \"gUUPeTm9\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-visibility-toggle\\\"]],null,null]],[],false,[\\\"hds/form/visibility-toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/visibility-toggle/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-visibility-toggle .hds-icon').hasClass('hds-icon-eye-off');\n    });\n    (0, _qunit.test)('it should render correct icon when `@isVisible` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::VisibilityToggle @isVisible={{true}} id=\"test-visibility-toggle\" />\n      */\n      {\n        \"id\": \"GlSS6DUc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-visibility-toggle\\\"]],[[\\\"@isVisible\\\"],[true]],null]],[],false,[\\\"hds/form/visibility-toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/visibility-toggle/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-visibility-toggle .hds-icon').hasClass('hds-icon-eye');\n    });\n    (0, _qunit.test)('it should render `aria-label` and `sr-live` message', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Form::VisibilityToggle @ariaLabel=\"Hide masked content\" @ariaMessageText=\"Input content is visible\" id=\"test-visibility-toggle\" />\n      */\n      {\n        \"id\": \"7aNlzr9j\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-visibility-toggle\\\"]],[[\\\"@ariaLabel\\\",\\\"@ariaMessageText\\\"],[\\\"Hide masked content\\\",\\\"Input content is visible\\\"]],null]],[],false,[\\\"hds/form/visibility-toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/form/visibility-toggle/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-visibility-toggle').hasAttribute('aria-label', 'Hide masked content');\n      assert.dom('#test-visibility-toggle .sr-only').hasText('Input content is visible');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/icon-tile/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/icon-tile/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"KF4XZxcg\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\"],[\\\"dashboard\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it renders an icon-tile with an icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"KF4XZxcg\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\"],[\\\"dashboard\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile .hds-icon-tile__icon').exists();\n      assert.dom('div#test-icon-tile .hds-icon-tile__icon svg.hds-icon-dashboard').exists();\n    });\n\n    // LOGO\n\n    (0, _qunit.test)('it renders an icon-tile with a logo', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @logo=\"boundary\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"qlHXl3bI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@logo\\\"],[\\\"boundary\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile .hds-icon-tile__logo').exists();\n      assert.dom('div#test-icon-tile .hds-icon-tile__logo svg').exists();\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the neutral color as the default if no color is declared and is an icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"KF4XZxcg\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\"],[\\\"dashboard\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile--color-neutral');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared and is an icon', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" @color=\"boundary\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"mJF93OcE\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\",\\\"@color\\\"],[\\\"dashboard\\\",\\\"boundary\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile--color-boundary');\n    });\n    (0, _qunit.test)('it should render the product color if is a logo', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @logo=\"boundary\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"qlHXl3bI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@logo\\\"],[\\\"boundary\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile--color-boundary');\n    });\n    (0, _qunit.test)('it should render the product color even if the @color prop is declared and is a logo', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @logo=\"boundary\" @color=\"waypoint\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"YqrkYgn3\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@logo\\\",\\\"@color\\\"],[\\\"boundary\\\",\\\"waypoint\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile--color-boundary');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size if no size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"KF4XZxcg\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\"],[\\\"dashboard\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" id=\"test-icon-tile\" @size=\"small\" />\n      */\n      {\n        \"id\": \"oADMkDib\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\",\\\"@size\\\"],[\\\"dashboard\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasClass('hds-icon-tile--size-small');\n    });\n\n    // SECONDARY ICON\n\n    (0, _qunit.test)('it should render the secondary icon if the @iconSecondary prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" @iconSecondary=\"plus\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"a8SsKysO\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@icon\\\",\\\"@iconSecondary\\\"],[\\\"dashboard\\\",\\\"plus\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile .hds-icon-tile__extra').exists();\n      assert.dom('div#test-icon-tile .hds-icon-tile__extra-icon').exists();\n      assert.dom('div#test-icon-tile .hds-icon-tile__extra-icon svg.hds-icon-plus').exists();\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should have aria-hidden set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @logo=\"boundary\" id=\"test-icon-tile\" />\n      */\n      {\n        \"id\": \"qlHXl3bI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-icon-tile\\\"]],[[\\\"@logo\\\"],[\\\"boundary\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-icon-tile').hasAria('hidden', 'true');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if both @icon and @logo are passed', async function (assert) {\n      const errorMessage = 'you can\\'t pass both @logo and @icon properties to the \"Hds::IconTile\" component';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @icon=\"dashboard\" @logo=\"boundary\" />\n      */\n      {\n        \"id\": \"RXQ7kSJ7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@logo\\\"],[\\\"dashboard\\\",\\\"boundary\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if neither @icon or @logo are passed', async function (assert) {\n      const errorMessage = 'you need to pass @logo or @icon to the \"Hds::IconTile\" component';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile />\n      */\n      {\n        \"id\": \"irnvv28a\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if a wrong @logo value is passed', async function (assert) {\n      const errorMessage = '@logo for \"Hds::IconTile\" must be one of the following: boundary, consul, hcp, nomad, packer, terraform, vagrant, vault, vault-secrets, vault-radar, waypoint; received: test';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::IconTile @logo=\"test\" />\n      */\n      {\n        \"id\": \"lj7zaVyE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@logo\\\"],[\\\"test\\\"]],null]],[],false,[\\\"hds/icon-tile\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon-tile/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/icon/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds-icon', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" />\n      */\n      {\n        \"id\": \"BaJeC9T7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon').hasClass('hds-icon');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it renders the 16x16 icon by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" />\n      */\n      {\n        \"id\": \"BaJeC9T7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').hasStyle({\n        height: '16px',\n        width: '16px'\n      }).hasAttribute('width', '16').hasAttribute('height', '16');\n    });\n    (0, _qunit.test)('it renders the 24x24 icon when the \"size\" option is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @size=\"24\" />\n      */\n      {\n        \"id\": \"5ZsAhPB3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@size\\\"],[\\\"activity\\\",\\\"24\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').hasStyle({\n        height: '24px',\n        width: '24px'\n      }).hasAttribute('width', '24').hasAttribute('height', '24');\n    });\n    (0, _qunit.test)('it sets the width/height to 100% when the \"stretched\" option is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @size=\"24\" @stretched={{true}} />\n      */\n      {\n        \"id\": \"lsYVzjxl\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@size\\\",\\\"@stretched\\\"],[\\\"activity\\\",\\\"24\\\",true]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').hasAttribute('width', '100%').hasAttribute('height', '100%');\n    });\n\n    // DISPLAY\n\n    (0, _qunit.test)('it does not have the \"hds-icon--is-inline\" class by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" />\n      */\n      {\n        \"id\": \"BaJeC9T7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon').doesNotHaveClass('hds-icon--is-inline');\n    });\n    (0, _qunit.test)('it does have the \"hds-icon--is-inline\" class if the `@isInline` option is set to `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @isInline={{true}} />\n      */\n      {\n        \"id\": \"h68Am+j0\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@isInline\\\"],[\\\"activity\\\",true]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon').hasClass('hds-icon--is-inline');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('the fill color should be `currentColor` if no @color is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"alert-circle\" />\n      */\n      {\n        \"id\": \"jpm1Ru+G\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"alert-circle\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.hds-icon`).hasAttribute('fill', 'currentColor');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared using a pre-defined color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"alert-circle\" @color=\"highlight\" />\n      */\n      {\n        \"id\": \"dLflt3YL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@color\\\"],[\\\"alert-circle\\\",\\\"highlight\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // notice: we use CSS helper classes for the color definitions\n      assert.dom(`svg.hds-icon`).hasClass('hds-foreground-highlight');\n      assert.dom(`svg.hds-icon`).hasAttribute('fill', 'currentColor');\n    });\n    (0, _qunit.test)('it should render the correct style if the @color prop is declared as custom CSS property color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"alert-circle\" @color=\"var(--doc-color-feedback-critical-100)\" />\n      */\n      {\n        \"id\": \"9xqQpbDj\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@color\\\"],[\\\"alert-circle\\\",\\\"var(--doc-color-feedback-critical-100)\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.hds-icon`).hasAttribute('fill', 'var(--doc-color-feedback-critical-100)');\n    });\n    (0, _qunit.test)('it should render the correct style if the @color prop is declared as custom HEX color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"alert-circle\" @color=\"#FF0000\" />\n      */\n      {\n        \"id\": \"X4wlgQJB\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@color\\\"],[\\\"alert-circle\\\",\\\"#FF0000\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.hds-icon`).hasAttribute('fill', '#FF0000');\n    });\n    (0, _qunit.test)('the fill color should be able to be inherited from parent', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <div style=\"color:blue;\"><Hds::Icon @name=\"alert-circle\" /></div>\n      */\n      {\n        \"id\": \"0APE05EG\",\n        \"block\": \"[[[10,0],[14,5,\\\"color:blue;\\\"],[12],[8,[39,1],null,[[\\\"@name\\\"],[\\\"alert-circle\\\"]],null],[13]],[],false,[\\\"div\\\",\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.hds-icon`).hasStyle({\n        fill: 'rgb(0, 0, 255)'\n      });\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it renders the title if one is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @title=\"try to avoid\" />\n      */\n      {\n        \"id\": \"hZ8HzPzM\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"try to avoid\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('title').containsText('try to avoid');\n    });\n    (0, _qunit.test)('it has aria-hidden set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" />\n      */\n      {\n        \"id\": \"BaJeC9T7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').hasAria('hidden', 'true');\n    });\n    (0, _qunit.test)('it has aria-hidden set to false if a title is defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @title=\"try to avoid\" />\n      */\n      {\n        \"id\": \"hZ8HzPzM\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"try to avoid\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').hasAria('hidden', 'false');\n    });\n    (0, _qunit.test)('it has aria-labelledby if a title exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @title=\"try to avoid\" />\n      */\n      {\n        \"id\": \"hZ8HzPzM\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"try to avoid\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').hasAttribute('aria-labelledby');\n    });\n    (0, _qunit.test)('it does not have aria-labelledby if a title does not exist', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" />\n      */\n      {\n        \"id\": \"BaJeC9T7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"activity\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg.hds-icon.hds-icon-activity').doesNotHaveAttribute('aria-labelledby');\n    });\n    (0, _qunit.test)('it has a g element with role of presentation if a title exists', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"activity\" @title=\"computer says no\" />\n      */\n      {\n        \"id\": \"Lzg8KovX\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\",\\\"@title\\\"],[\\\"activity\\\",\\\"computer says no\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('svg > g').hasAttribute('role');\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('additional classes can be added when component is invoked', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"meh\" class=\"demo\" />\n      */\n      {\n        \"id\": \"cEJfRCQy\",\n        \"block\": \"[[[8,[39,0],[[24,0,\\\"demo\\\"]],[[\\\"@name\\\"],[\\\"meh\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(`svg.hds-icon`).hasClass('demo');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @name is not provided', async function (assert) {\n      const errorMessage = `Please provide to <Hds::Icon> a value for @name`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon />\n      */\n      {\n        \"id\": \"PiRuo/cZ\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if the icon @name does not exist', async function (assert) {\n      const errorMessage = `The icon @name \"abc\" provided to <Hds::Icon> is not correct. Please verify it exists on https://helios.hashicorp.design/icons/library`;\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Icon @name=\"abc\" />\n      */\n      {\n        \"id\": \"aHnM2cvz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@name\\\"],[\\\"abc\\\"]],null]],[],false,[\\\"hds/icon\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/icon/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/interactive/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/interactive/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // notice: since this element can generate different HTML element, to make the tests even more solid, in the DOM selectors we prefix the #ID of the element with the tag name\n\n    (0, _qunit.test)('it renders the interactive container', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive />\n      */\n      {\n        \"id\": \"r1mxUsPn\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(this.element).exists();\n    });\n\n    // GENERATED ELEMENTS\n\n    (0, _qunit.test)('it should render a <button> if no @href or @route is passed (default)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive id=\"test-interactive\" />\n      */\n      {\n        \"id\": \"AtTkXQqi\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],null,null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-interactive').hasTagName('button');\n    });\n    (0, _qunit.test)('it should render a <a> link if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @href=\"#\" id=\"test-interactive\" />\n      */\n      {\n        \"id\": \"Xs+CjNV/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],[[\\\"@href\\\"],[\\\"#\\\"]],null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-interactive').hasTagName('a');\n      assert.dom('#test-interactive').hasAttribute('href', '#');\n    });\n    (0, _qunit.test)('it should render a <a> link if @route is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @route=\"utilities.interactive\" id=\"test-interactive\" />\n      */\n      {\n        \"id\": \"6rg+92wY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],[[\\\"@route\\\"],[\\\"utilities.interactive\\\"]],null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-interactive').hasTagName('a');\n      assert.dom('#test-interactive').hasAttribute('href', '/utilities/interactive');\n    });\n\n    // TARGET/REL ATTRIBUTES\n\n    (0, _qunit.test)('it should render a <a> link with the right \"target\" and \"rel\" attributes if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @href=\"#\" id=\"test-interactive\" />\n      */\n      {\n        \"id\": \"Xs+CjNV/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],[[\\\"@href\\\"],[\\\"#\\\"]],null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-interactive').hasAttribute('target', '_blank');\n      assert.dom('#test-interactive').hasAttribute('rel', 'noopener noreferrer');\n    });\n    (0, _qunit.test)('it should render a <a> link with custom \"target\" and \"rel\" attributes if they are passed as attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @href=\"#\" id=\"test-interactive\" target=\"test-target\" rel=\"test-rel\" />\n      */\n      {\n        \"id\": \"Otlyym44\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"],[24,\\\"target\\\",\\\"test-target\\\"],[24,\\\"rel\\\",\\\"test-rel\\\"]],[[\\\"@href\\\"],[\\\"#\\\"]],null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-interactive').hasAttribute('target', 'test-target');\n      assert.dom('#test-interactive').hasAttribute('rel', 'test-rel');\n    });\n    (0, _qunit.test)('it should render a <a> link withhout \"target\" and \"rel\" attributes if @isHrefExternal is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @href=\"#\" @isHrefExternal={{false}} id=\"test-interactive\" />\n      */\n      {\n        \"id\": \"LRboxbaA\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],[[\\\"@href\\\",\\\"@isHrefExternal\\\"],[\\\"#\\\",false]],null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-interactive').doesNotHaveAttribute('target');\n      assert.dom('#test-interactive').doesNotHaveAttribute('rel');\n    });\n\n    // YIELDING\n\n    (0, _qunit.test)('it should yield the children of the <button> element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive id=\"test-interactive\"><pre>test</pre></Hds::Interactive>\n      */\n      {\n        \"id\": \"R7o5/NIj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],null,[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13]],[]]]]]],[],false,[\\\"hds/interactive\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button#test-interactive > pre').exists();\n      assert.dom('button#test-interactive > pre').hasText('test');\n    });\n    (0, _qunit.test)('it should yield the children of the <a> element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @href=\"#\" id=\"test-interactive\"><pre>test</pre></Hds::Interactive>\n      */\n      {\n        \"id\": \"Bg3jjgMY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],[[\\\"@href\\\"],[\\\"#\\\"]],[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13]],[]]]]]],[],false,[\\\"hds/interactive\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a#test-interactive > pre').exists();\n      assert.dom('a#test-interactive > pre').hasText('test');\n    });\n    (0, _qunit.test)('it should yield the children of the <LinkTo> element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive @route=\"index\" id=\"test-interactive\"><pre>test</pre></Hds::Interactive>\n      */\n      {\n        \"id\": \"glnDTgWY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],[[\\\"@route\\\"],[\\\"index\\\"]],[[\\\"default\\\"],[[[[10,\\\"pre\\\"],[12],[1,\\\"test\\\"],[13]],[]]]]]],[],false,[\\\"hds/interactive\\\",\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('a#test-interactive > pre').exists();\n      assert.dom('a#test-interactive > pre').hasText('test');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct button \"type\" by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive id=\"test-interactive\" />\n      */\n      {\n        \"id\": \"AtTkXQqi\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"]],null,null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button#test-interactive').hasAttribute('type', 'button');\n    });\n    (0, _qunit.test)('it should have a custom type if @type is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Interactive id=\"test-interactive\" type=\"submit\" />\n      */\n      {\n        \"id\": \"+HmXNCqL\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-interactive\\\"],[24,4,\\\"submit\\\"]],null,null]],[],false,[\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button#test-interactive').hasAttribute('type', 'submit');\n    });\n    (0, _qunit.test)('it should dispatch a click event when pressing space key on a link', async function (assert) {\n      let clicked = false;\n      this.set('clickHandler', () => clicked = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <div {{on \"click\" this.clickHandler}}><Hds::Interactive @href=\"javascript:;\" id=\"test-interactive\"/></div>\n      */\n      {\n        \"id\": \"/j+HI+Tv\",\n        \"block\": \"[[[11,0],[4,[38,1],[\\\"click\\\",[30,0,[\\\"clickHandler\\\"]]],null],[12],[8,[39,2],[[24,1,\\\"test-interactive\\\"]],[[\\\"@href\\\"],[\\\"javascript:;\\\"]],null],[13]],[],false,[\\\"div\\\",\\\"on\\\",\\\"hds/interactive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/interactive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerKeyEvent)('#test-interactive', 'keyup', ' ');\n      assert.ok(clicked);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/link/inline-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/link/inline', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" id=\"test-link\">watch video</Hds::Link::Inline>\n      */\n      {\n        \"id\": \"ALZVvnQB\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\"],[\\\"/\\\"]],[[\\\"default\\\"],[[[[1,\\\"watch video\\\"]],[]]]]]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-inline');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should render the icon in the trailing position by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" @icon=\"film\" id=\"test-link\">watch video</Hds::Link::Inline>\n      */\n      {\n        \"id\": \"Xr+xWxYo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\",\\\"@icon\\\"],[\\\"/\\\",\\\"film\\\"]],[[\\\"default\\\"],[[[[1,\\\"watch video\\\"]],[]]]]]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link .hds-link-inline__icon').exists();\n      assert.dom('#test-link ').hasClass('hds-link-inline--icon-trailing');\n    });\n    (0, _qunit.test)('it should render the icon in the leading position if @iconPosition is set to leading', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" @icon=\"film\" @iconPosition=\"leading\" id=\"test-link\">watch video</Hds::Link::Inline>\n      */\n      {\n        \"id\": \"bnZAWjCe\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\",\\\"@icon\\\",\\\"@iconPosition\\\"],[\\\"/\\\",\\\"film\\\",\\\"leading\\\"]],[[\\\"default\\\"],[[[[1,\\\"watch video\\\"]],[]]]]]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link ').hasClass('hds-link-inline--icon-leading');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the primary color as the default if no @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" id=\"test-link\">watch video</Hds::Link::Inline>\n      */\n      {\n        \"id\": \"ALZVvnQB\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\"],[\\\"/\\\"]],[[\\\"default\\\"],[[[[1,\\\"watch video\\\"]],[]]]]]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-inline--color-primary');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" @color=\"secondary\" id=\"test-link\">watch video</Hds::Link::Inline>\n      */\n      {\n        \"id\": \"ig68MEan\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\",\\\"@color\\\"],[\\\"/\\\",\\\"secondary\\\"]],[[\\\"default\\\"],[[[[1,\\\"watch video\\\"]],[]]]]]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-inline--color-secondary');\n    });\n\n    // YIELDING\n\n    (0, _qunit.test)('it should yield the children of the <a> element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" id=\"test-link\"><span>test</span></Hds::Link::Inline>\n      */\n      {\n        \"id\": \"JWIIfhWT\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\"],[\\\"/\\\"]],[[\\\"default\\\"],[[[[10,1],[12],[1,\\\"test\\\"],[13]],[]]]]]],[],false,[\\\"hds/link/inline\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link > span').exists();\n      assert.dom('#test-link > span').hasText('test');\n    });\n\n    // TARGET/REL ATTRIBUTES\n\n    (0, _qunit.test)('it should render a <a> link with the right \"target\" and \"rel\" attributes if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"0QD7XDhv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\"],[\\\"/\\\"]],null]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasAttribute('target', '_blank');\n      assert.dom('#test-link').hasAttribute('rel', 'noopener noreferrer');\n    });\n    (0, _qunit.test)('it should render a <a> link with custom \"target\" and \"rel\" attributes if they are passed as attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" id=\"test-link\" target=\"test-target\" rel=\"test-rel\" />\n      */\n      {\n        \"id\": \"dYSrzSrw\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"],[24,\\\"target\\\",\\\"test-target\\\"],[24,\\\"rel\\\",\\\"test-rel\\\"]],[[\\\"@href\\\"],[\\\"/\\\"]],null]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasAttribute('target', 'test-target');\n      assert.dom('#test-link').hasAttribute('rel', 'test-rel');\n    });\n    (0, _qunit.test)('it should render a <a> link withhout \"target\" and \"rel\" attributes if @isHrefExternal is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @href=\"/\" @isHrefExternal={{false}} id=\"test-link\" />\n      */\n      {\n        \"id\": \"Y4BS3Suo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@href\\\",\\\"@isHrefExternal\\\"],[\\\"/\\\",false]],null]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').doesNotHaveAttribute('target');\n      assert.dom('#test-link').doesNotHaveAttribute('rel');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if both @href and @route are not defined', async function (assert) {\n      const errorMessage = '@href or @route must be defined for <Hds::Link::Inline>';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline>watch video</Hds::Link::Inline>\n      */\n      {\n        \"id\": \"v01Fr62p\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"watch video\\\"]],[]]]]]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Link::Inline\" must be one of the following: primary, secondary; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Inline @icon=\"film\" @text=\"watch video\" @href=\"/\" @color=\"foo\" />\n      */\n      {\n        \"id\": \"9Wgn1u63\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@href\\\",\\\"@color\\\"],[\\\"film\\\",\\\"watch video\\\",\\\"/\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/link/inline\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/inline-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/link/standalone-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/link/standalone', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"N963sg0r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-standalone');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the medium size if no size is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"N963sg0r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-standalone--size-medium');\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" @size=\"small\" />\n      */\n      {\n        \"id\": \"hQQhaayN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\",\\\"@size\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\",\\\"small\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-standalone--size-small');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render the primary color as the default if no color is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"N963sg0r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-standalone--color-primary');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" @color=\"secondary\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"gu+Eeugi\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\",\\\"@color\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\",\\\"secondary\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasClass('hds-link-standalone--color-secondary');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should render the icon in the leading position by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"N963sg0r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-link-standalone__icon').matchesSelector(':first-child');\n    });\n    (0, _qunit.test)('it should render the icon in the trailing position if @iconPosition is set to trailing', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" @iconPosition=\"trailing\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"jibq2dpM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\",\\\"@iconPosition\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\",\\\"trailing\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-link-standalone__icon').matchesSelector(':last-child');\n    });\n\n    // TEXT\n\n    (0, _qunit.test)('it renders a link with the defined text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"Copy to clipboard\" @href=\"/\" @icon=\"film\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"jy+8rpkm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"Copy to clipboard\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasText('Copy to clipboard');\n    });\n\n    // TARGET/REL ATTRIBUTES\n\n    (0, _qunit.test)('it should render a <a> link with the right \"target\" and \"rel\" attributes if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" />\n      */\n      {\n        \"id\": \"N963sg0r\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasAttribute('target', '_blank');\n      assert.dom('#test-link').hasAttribute('rel', 'noopener noreferrer');\n    });\n    (0, _qunit.test)('it should render a <a> link with custom \"target\" and \"rel\" attributes if they are passed as attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" id=\"test-link\" target=\"test-target\" rel=\"test-rel\" />\n      */\n      {\n        \"id\": \"GG4tejqH\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"],[24,\\\"target\\\",\\\"test-target\\\"],[24,\\\"rel\\\",\\\"test-rel\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').hasAttribute('target', 'test-target');\n      assert.dom('#test-link').hasAttribute('rel', 'test-rel');\n    });\n    (0, _qunit.test)('it should render a <a> link without \"target\" and \"rel\" attributes if @isHrefExternal is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" @href=\"/\" @icon=\"film\" @isHrefExternal={{false}} id=\"test-link\" />\n      */\n      {\n        \"id\": \"cXK72+qH\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@icon\\\",\\\"@isHrefExternal\\\"],[\\\"watch video\\\",\\\"/\\\",\\\"film\\\",false]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link').doesNotHaveAttribute('target');\n      assert.dom('#test-link').doesNotHaveAttribute('rel');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if both @href and @route are not defined', async function (assert) {\n      const errorMessage = '@href or @route must be defined for <Hds::Link::Standalone>';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @text=\"watch video\" />\n      */\n      {\n        \"id\": \"fWQ88zC3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"watch video\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Link::Standalone\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @icon=\"film\" @href=\"/\" />\n      */\n      {\n        \"id\": \"aY7b77bC\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@href\\\"],[\\\"film\\\",\\\"/\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if there is no @icon defined', async function (assert) {\n      const errorMessage = '@icon for \"Hds::Link::Standalone\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @href=\"/\" @text=\"watch video\" />\n      */\n      {\n        \"id\": \"1RGWcn9F\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@href\\\",\\\"@text\\\"],[\\\"/\\\",\\\"watch video\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @iconPosition is provided', async function (assert) {\n      const errorMessage = '@iconPosition for \"Hds::Link::Standalone\" must be one of the following: leading, trailing; received: after';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @icon=\"film\" @href=\"/\" @text=\"watch video\" @iconPosition=\"after\" />\n      */\n      {\n        \"id\": \"6t3UOXhH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@href\\\",\\\"@text\\\",\\\"@iconPosition\\\"],[\\\"film\\\",\\\"/\\\",\\\"watch video\\\",\\\"after\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Link::Standalone\" must be one of the following: small, medium, large; received: tiny';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @icon=\"film\" @text=\"watch video\" @href=\"/\" @size=\"tiny\" />\n      */\n      {\n        \"id\": \"HoWwvrTl\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@href\\\",\\\"@size\\\"],[\\\"film\\\",\\\"watch video\\\",\\\"/\\\",\\\"tiny\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Link::Standalone\" must be one of the following: primary, secondary; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Link::Standalone @icon=\"film\" @text=\"watch video\" @href=\"/\" @color=\"foo\" />\n      */\n      {\n        \"id\": \"88byfNLK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@href\\\",\\\"@color\\\"],[\\\"film\\\",\\\"watch video\\\",\\\"/\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/link/standalone\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/link/standalone-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/menu-primitive/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/menu-primitive/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::MenuPrimitive id=\"test-menu-primitive\" />\n      */\n      {\n        \"id\": \"/wqslhfG\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-menu-primitive\\\"]],null,null]],[],false,[\\\"hds/menu-primitive\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/menu-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('div#test-menu-primitive').hasClass('hds-menu-primitive');\n    });\n\n    // TOGGLE + CONTENT\n\n    (0, _qunit.test)('it should render the \"toggle\" block but not the \"content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::MenuPrimitive>\n              <:toggle>\n                <button type=\"button\" id=\"test-menu-primitive-button\" />\n              </:toggle>\n            </Hds::MenuPrimitive>\n          \n      */\n      {\n        \"id\": \"9KngZyri\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"toggle\\\"],[[[[1,\\\"\\\\n          \\\"],[10,\\\"button\\\"],[14,1,\\\"test-menu-primitive-button\\\"],[14,4,\\\"button\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/menu-primitive\\\",\\\":toggle\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/menu-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-menu-primitive__toggle').exists();\n      assert.dom('button#test-menu-primitive-button').exists();\n      assert.dom('.hds-menu-primitive__content').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the \"content\" when the \"toggle\" is clicked', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::MenuPrimitive>\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-menu-primitive-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-menu-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::MenuPrimitive>\n          \n      */\n      {\n        \"id\": \"IHmulmsO\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-menu-primitive-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-menu-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/menu-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/menu-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-menu-primitive-button');\n      assert.dom('.hds-menu-primitive__content').exists();\n      assert.dom('a#test-menu-primitive-link').exists();\n    });\n\n    // ESCAPE KEY\n\n    (0, _qunit.test)('it should hide the \"content\" when the \"toggle\" is deactivated via \"Escape\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::MenuPrimitive id=\"test-menu-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-menu-primitive-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-menu-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::MenuPrimitive>\n          \n      */\n      {\n        \"id\": \"c3qe1FqC\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-menu-primitive\\\"]],null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-menu-primitive-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-menu-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/menu-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/menu-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-menu-primitive-button');\n      assert.dom('.hds-menu-primitive__content').exists();\n      assert.dom('a#test-menu-primitive-link').exists();\n      await (0, _testHelpers.triggerKeyEvent)('#test-menu-primitive', 'keyup', 'Escape');\n      assert.dom('.hds-menu-primitive__content').doesNotExist();\n      assert.dom('a#test-menu-primitive-link').doesNotExist();\n    });\n\n    // FOCUS OUT\n\n    (0, _qunit.test)('it should hide the \"content\" when the focus is moved outside', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::MenuPrimitive id=\"test-menu-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-menu-primitive-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content>\n                <a id=\"test-menu-primitive-link\" href=\"#\">test</a>\n              </:content>\n            </Hds::MenuPrimitive>\n          \n      */\n      {\n        \"id\": \"c3qe1FqC\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-menu-primitive\\\"]],null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-menu-primitive-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,3],[14,1,\\\"test-menu-primitive-link\\\"],[14,6,\\\"#\\\"],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\"],false,[\\\"hds/menu-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\",\\\"a\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/menu-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-menu-primitive-button');\n      assert.dom('.hds-menu-primitive__content').exists();\n      assert.dom('a#test-menu-primitive-link').exists();\n      // simulating the focus moves to the body element\n      await (0, _testHelpers.triggerEvent)('#test-menu-primitive', 'focusout', {\n        relatedTarget: document.body\n      });\n      assert.dom('.hds-menu-primitive__content').doesNotExist();\n      assert.dom('a#test-menu-primitive-link').doesNotExist();\n    });\n\n    // CLOSE DISCLOSED CONTENT ON CLICK\n\n    (0, _qunit.test)('it should hide the \"content\" when an interactive element triggers `close`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::MenuPrimitive id=\"test-menu-primitive\">\n              <:toggle as |t|>\n                <button type=\"button\" id=\"test-toggle-button\" {{on \"click\" t.onClickToggle}} />\n              </:toggle>\n              <:content as |c|>\n                <button id=\"test-content-button\" {{on \"click\" c.close}}>test</button>\n              </:content>\n            </Hds::MenuPrimitive>\n          \n      */\n      {\n        \"id\": \"F9Un8tmm\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-menu-primitive\\\"]],null,[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-toggle-button\\\"],[24,4,\\\"button\\\"],[4,[38,3],[\\\"click\\\",[30,1,[\\\"onClickToggle\\\"]]],null],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[11,\\\"button\\\"],[24,1,\\\"test-content-button\\\"],[4,[38,3],[\\\"click\\\",[30,2,[\\\"close\\\"]]],null],[12],[1,\\\"test\\\"],[13],[1,\\\"\\\\n        \\\"]],[2]]]]],[1,\\\"\\\\n    \\\"]],[\\\"t\\\",\\\"c\\\"],false,[\\\"hds/menu-primitive\\\",\\\":toggle\\\",\\\"button\\\",\\\"on\\\",\\\":content\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/menu-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-toggle-button');\n      assert.dom('.hds-menu-primitive__content').exists();\n      assert.dom('button#test-content-button').exists();\n      await (0, _testHelpers.click)('button#test-content-button');\n      assert.dom('.hds-menu-primitive__content').doesNotExist();\n      assert.dom('button#test-content-button').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/modal/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/modal/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"ErdePwIz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-modal').hasClass('hds-modal');\n    });\n\n    // SIZE & COLOR\n\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the default vaules if no arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"ErdePwIz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-modal').hasClass('hds-modal--size-medium');\n      assert.dom('#test-modal').hasClass('hds-modal--color-neutral');\n    });\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal @size=\"small\" @color=\"warning\" id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"EvUqJh2B\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],[[\\\"@size\\\",\\\"@color\\\"],[\\\"small\\\",\\\"warning\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-modal').hasClass('hds-modal--size-small');\n      assert.dom('#test-modal').hasClass('hds-modal--color-warning');\n    });\n\n    // OVERLAY\n\n    (0, _qunit.test)('it should render the component with an overlay element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal @size=\"small\" @color=\"warning\" id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"EvUqJh2B\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],[[\\\"@size\\\",\\\"@color\\\"],[\\\"small\\\",\\\"warning\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-modal__overlay').isVisible();\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Header>Title</M.Header>\n                  <M.Body>Body</M.Body>\n                  <M.Footer>Footer</M.Footer>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"qNwafKAy\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Body\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Body\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Footer\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Footer\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-modal').exists();\n      assert.dom('.hds-modal__header').exists();\n      assert.dom('.hds-modal__header').hasText('Title');\n      assert.dom('.hds-modal__body').exists();\n      assert.dom('.hds-modal__body').hasText('Body');\n      assert.dom('.hds-modal__footer').exists();\n      assert.dom('.hds-modal__footer').hasText('Footer');\n    });\n\n    // TITLE (ICON & TAGLINE)\n\n    (0, _qunit.test)('it renders the title without icon and tagline if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Header>Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"Hjo5RZCo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-modal__title').exists();\n      assert.dom('.hds-modal__title').hasText('Title');\n      assert.dom('.hds-modal__icon').doesNotExist();\n      assert.dom('.hds-modal__tagline').doesNotExist();\n    });\n    (0, _qunit.test)('it renders the title with icon and tagline if provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Header @icon=\"info\" @tagline=\"Tagline\">Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"uZz/bf+K\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,[[\\\"@icon\\\",\\\"@tagline\\\"],[\\\"info\\\",\\\"Tagline\\\"]],[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-modal__title').exists();\n      assert.dom('.hds-modal__title').hasText('Tagline Title');\n      assert.dom('.hds-modal__icon.hds-icon-info').exists();\n      assert.dom('.hds-modal__tagline').exists();\n      assert.dom('.hds-modal__tagline').hasText('Tagline');\n    });\n    (0, _qunit.test)('it renders the title as an h1', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Header @icon=\"info\" @tagline=\"Tagline\">Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"uZz/bf+K\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,[[\\\"@icon\\\",\\\"@tagline\\\"],[\\\"info\\\",\\\"Tagline\\\"]],[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-modal__title').hasTagName('h1');\n    });\n\n    // DISMISS\n\n    (0, _qunit.test)('it should always render the \"dismiss\" button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"ErdePwIz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-modal__dismiss').exists();\n    });\n    (0, _qunit.test)('it should close the modal when the \"dismiss\" button is pressed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"ErdePwIz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-modal').isVisible();\n      await (0, _testHelpers.click)('button.hds-modal__dismiss');\n      assert.dom('#test-modal').isNotVisible();\n    });\n    (0, _qunit.test)('it should close the modal when the \"close\" function is called', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Footer as |F|>\n                    <Hds::Button id=\"cancel-button\" type=\"button\" @text=\"Cancel\" @color=\"secondary\" {{on \"click\" F.close}} />\n                  </M.Footer>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"mqyys/ce\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Footer\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[39,1],[[24,1,\\\"cancel-button\\\"],[24,4,\\\"button\\\"],[4,[38,2],[\\\"click\\\",[30,2,[\\\"close\\\"]]],null]],[[\\\"@text\\\",\\\"@color\\\"],[\\\"Cancel\\\",\\\"secondary\\\"]],null],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\",\\\"F\\\"],false,[\\\"hds/modal\\\",\\\"hds/button\\\",\\\"on\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-modal').isVisible();\n      await (0, _testHelpers.click)('#cancel-button');\n      assert.dom('#test-modal').isNotVisible();\n    });\n    (0, _qunit.test)('it should not close the modal when `@isDismissDisabled` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal @isDismissDisabled={{true}} id=\"test-modal\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"EQWhb/jF\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],[[\\\"@isDismissDisabled\\\"],[true]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button.hds-modal__dismiss');\n      assert.dom('#test-modal').exists();\n    });\n\n    // ACCESSIBILITY\n\n    (0, _qunit.test)('it uses the title as name for the dialog', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Header>Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"Hjo5RZCo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the IDs are dynamically generated\n      let titleElement = this.element.querySelector('.hds-modal__title');\n      let titleElementId = titleElement.id;\n      assert.dom('dialog').hasAttribute('aria-labelledby', titleElementId);\n    });\n\n    // FOCUS MANAGEMENT\n\n    (0, _qunit.test)('it sets initial focus on the dimiss button, as first focusable element', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal\" as |M|>\n                  <M.Header>Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"Hjo5RZCo\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-modal__dismiss').isFocused();\n    });\n\n    // CALLBACKS\n\n    (0, _qunit.test)('it should call `onOpen` function if provided', async function (assert) {\n      let opened = false;\n      this.set('onOpen', () => opened = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal-onopen-callback\" @onOpen={{this.onOpen}} as |M|>\n                  <M.Header>Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"Gs9cxmnv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal-onopen-callback\\\"]],[[\\\"@onOpen\\\"],[[30,0,[\\\"onOpen\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-modal-onopen-callback').isVisible();\n      await (0, _testHelpers.settled)();\n      assert.ok(opened);\n    });\n    (0, _qunit.test)('it should call `onClose` function if provided', async function (assert) {\n      let closed = false;\n      this.set('onClose', () => closed = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal id=\"test-modal-onclose-callback\" @onClose={{this.onClose}} as |M|>\n                  <M.Header>Title</M.Header>\n                </Hds::Modal>\n      */\n      {\n        \"id\": \"jxsq1ue0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-modal-onclose-callback\\\"]],[[\\\"@onClose\\\"],[[30,0,[\\\"onClose\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('#test-modal-onclose-callback button.hds-modal__dismiss');\n      assert.dom('#test-modal-onclose-callback').isNotVisible();\n      await (0, _testHelpers.settled)();\n      assert.ok(closed);\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Modal\" must be one of the following: small, medium, large; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal @size=\"foo\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"Subz37UO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"foo\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided', async function (assert) {\n      const errorMessage = '@color for \"Hds::Modal\" must be one of the following: neutral, warning, critical; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Modal @color=\"foo\" as |M|><M.Header>Title</M.Header></Hds::Modal>\n      */\n      {\n        \"id\": \"+ZO2ZySf\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@color\\\"],[\\\"foo\\\"]],[[\\\"default\\\"],[[[[8,[30,1,[\\\"Header\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]]],[1]]]]]],[\\\"M\\\"],false,[\\\"hds/modal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/modal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/page-header/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/page-header/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::PageHeader id=\"test-page-header\" as |PH|>\n                  <PH.Title>Page title</PH.Title>\n                </Hds::PageHeader>\n      */\n      {\n        \"id\": \"h/dHECcT\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-page-header\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Page title\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"PH\\\"],false,[\\\"hds/page-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/page-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-page-header').hasClass('hds-page-header');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it should render contextual components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::PageHeader id=\"test-page-header\" as |PH|>\n                  <PH.Title>Page title</PH.Title>\n                  <PH.Breadcrumb>\n                    <Hds::Breadcrumb>\n                      <Hds::Breadcrumb::Item @text=\"Breadcrumb\" />\n                    </Hds::Breadcrumb>\n                  </PH.Breadcrumb>\n                  <PH.IconTile @icon=\"server-cluster\" />\n                  <PH.Actions>Actions</PH.Actions>\n                  <PH.Subtitle>Subtitle</PH.Subtitle>\n                  <PH.Description>Description</PH.Description>\n                  <PH.Generic><p class=\"custom\">Generic</p></PH.Generic>\n                </Hds::PageHeader>\n      */\n      {\n        \"id\": \"IejnSYAM\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-page-header\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Title\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Page title\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Breadcrumb\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n                \\\"],[8,[39,2],null,[[\\\"@text\\\"],[\\\"Breadcrumb\\\"]],null],[1,\\\"\\\\n              \\\"]],[]]]]],[1,\\\"\\\\n            \\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"IconTile\\\"]],null,[[\\\"@icon\\\"],[\\\"server-cluster\\\"]],null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Actions\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Actions\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Subtitle\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Subtitle\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Description\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Description\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Generic\\\"]],null,null,[[\\\"default\\\"],[[[[10,2],[14,0,\\\"custom\\\"],[12],[1,\\\"Generic\\\"],[13]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"PH\\\"],false,[\\\"hds/page-header\\\",\\\"hds/breadcrumb\\\",\\\"hds/breadcrumb/item\\\",\\\"p\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/page-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-page-header').exists();\n      assert.dom('.hds-page-header__title').exists();\n      assert.dom('.hds-page-header__title').hasText('Page title');\n      assert.dom('.hds-breadcrumb').exists();\n      assert.dom('.hds-icon-tile').exists();\n      assert.dom('.hds-page-header__actions').exists();\n      assert.dom('.hds-page-header__actions').hasText('Actions');\n      assert.dom('.hds-page-header__subtitle').exists();\n      assert.dom('.hds-page-header__subtitle').hasText('Subtitle');\n      assert.dom('.hds-page-header__description').exists();\n      assert.dom('.hds-page-header__description').hasText('Description');\n      assert.dom('.custom').exists();\n      assert.dom('.custom').hasText('Generic');\n    });\n    (0, _qunit.test)('it should not render the contextual components if not provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::PageHeader />\n      */\n      {\n        \"id\": \"yvJKqJeQ\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/page-header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/page-header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-breadcrumb').doesNotExist();\n      assert.dom('.hds-page-header__title').doesNotExist();\n      assert.dom('.hds-page-header__actions').doesNotExist();\n      assert.dom('.hds-page-header__subtitle').doesNotExist();\n      assert.dom('.hds-page-header__description').doesNotExist();\n      assert.dom('.hds-icon-tile').doesNotExist();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/compact-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/compact', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Hds::Pagination::Compact id=\"test-pagination-compact\" />\n          \n      */\n      {\n        \"id\": \"+hkTmkYz\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],[[24,1,\\\"test-pagination-compact\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-pagination-compact').hasClass('hds-pagination');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the \"prev\" and \"next\" controls', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Compact />\n      */\n      {\n        \"id\": \"9097bN9/\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').includesText('Previous');\n      assert.dom('.hds-pagination-nav__arrow--direction-prev .hds-pagination-nav__arrow-label').exists();\n      assert.dom('.hds-pagination-nav__arrow--direction-next').includesText('Next');\n      assert.dom('.hds-pagination-nav__arrow--direction-next .hds-pagination-nav__arrow-label').exists();\n    });\n    (0, _qunit.test)('it should not render the text labels if @showLabels is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Compact @showLabels={{false}} />\n          \n      */\n      {\n        \"id\": \"ItqgMwKA\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showLabels\\\"],[false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow-label').doesNotExist();\n    });\n\n    // SIZE SELECTOR\n\n    (0, _qunit.test)('it shows the \"size-selector\" if @showSizeSelector is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Compact @showSizeSelector={{true}} />\n          \n      */\n      {\n        \"id\": \"LMtuoX02\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showSizeSelector\\\"],[true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-size-selector').exists();\n    });\n    (0, _qunit.test)('it renders the \"size selector\" content with default pageSizes values', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Compact @showSizeSelector={{true}} />\n          \n      */\n      {\n        \"id\": \"LMtuoX02\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showSizeSelector\\\"],[true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"10\"]').hasText('10');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"30\"]').hasText('30');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"50\"]').hasText('50');\n    });\n    (0, _qunit.test)('it renders custom options for passed in pageSizes and sets currentPageSize to the first PageSizes item', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Compact @showSizeSelector={{true}} @pageSizes={{array 20 40 60}} />\n          \n      */\n      {\n        \"id\": \"U/oaJxnI\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showSizeSelector\\\",\\\"@pageSizes\\\"],[true,[28,[37,1],[20,40,60],null]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"20\"]').hasText('20');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"40\"]').hasText('40');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"60\"]').hasText('60');\n    });\n    (0, _qunit.test)('it renders the passed in currentPageSize value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Compact @showSizeSelector={{true}} @currentPageSize={{40}} @pageSizes={{array 20 40 60}} />\n          \n      */\n      {\n        \"id\": \"iUhYHXya\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showSizeSelector\\\",\\\"@currentPageSize\\\",\\\"@pageSizes\\\"],[true,40,[28,[37,1],[20,40,60],null]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-size-selector select').hasValue('40');\n    });\n    (0, _qunit.test)('it displays the passed in custom text for the SizeSelector label text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Compact @showSizeSelector={{true}} @sizeSelectorLabel=\"Custom text\" />\n          \n      */\n      {\n        \"id\": \"ozzegQlu\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@showSizeSelector\\\",\\\"@sizeSelectorLabel\\\"],[true,\\\"Custom text\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-size-selector label').hasText('Custom text');\n    });\n\n    // DISABLED\n\n    (0, _qunit.test)('it should render disabled buttons when @isDisabledPrev/Next are set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Compact @isDisabledPrev={{true}} @isDisabledNext={{true}} />\n            \n      */\n      {\n        \"id\": \"l9vgyFzP\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@isDisabledPrev\\\",\\\"@isDisabledNext\\\"],[true,true]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').hasAttribute('disabled');\n      assert.dom('.hds-pagination-nav__arrow--direction-next').hasAttribute('disabled');\n    });\n\n    // EVENTS\n\n    (0, _qunit.test)('it should invoke the onPageChange callback and return the value of the new page number and page size', async function (assert) {\n      let direction;\n      this.set('onPageChange', dir => direction = dir);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Compact @onPageChange={{this.onPageChange}} />\n              \n      */\n      {\n        \"id\": \"ZEd/1Vb1\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@onPageChange\\\"],[[30,0,[\\\"onPageChange\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-pagination-nav__arrow--direction-prev');\n      assert.strictEqual(direction, 'prev');\n      await (0, _testHelpers.click)('.hds-pagination-nav__arrow--direction-next');\n      assert.strictEqual(direction, 'next');\n    });\n\n    // ROUTING\n\n    (0, _qunit.test)('it should render links instead of buttons, with the correct \"href\" values, if it has routing', async function (assert) {\n      this.set('myQueryFunction', page => ({\n        page\n      }));\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Compact @route=\"components.pagination\" @queryFunction={{this.myQueryFunction}} />\n      */\n      {\n        \"id\": \"6zyslkMG\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\",\\\"@queryFunction\\\"],[\\\"components.pagination\\\",[30,0,[\\\"myQueryFunction\\\"]]]],null]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').hasAttribute('href', '/components/pagination?page=prev');\n      assert.dom('.hds-pagination-nav__arrow--direction-next').hasAttribute('href', '/components/pagination?page=next');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @queryFunction is not a function', async function (assert) {\n      const errorMessage = '@queryFunction for \"Hds::Pagination::Compact\" must be a function';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Compact @queryFunction=\"foo\" @model=\"test\" />\n      */\n      {\n        \"id\": \"U6xLnvoh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@queryFunction\\\",\\\"@model\\\"],[\\\"foo\\\",\\\"test\\\"]],null]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @queryFunction is provided without a routing argument', async function (assert) {\n      this.set('myQueryFunction', page => ({\n        page\n      }));\n      const errorMessage = '@model, @models, or @route for \"Hds::Pagination::Compact\" must be provided when using the `@queryFunction` argument';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Compact @queryFunction={{this.myQueryFunction}} />\n      */\n      {\n        \"id\": \"QwjzK3ln\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@queryFunction\\\"],[[30,0,[\\\"myQueryFunction\\\"]]]],null]],[],false,[\\\"hds/pagination/compact\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/compact-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/info-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/info', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Info @itemsRangeStart={{1}} @itemsRangeEnd={{10}} @totalItems={{100}} id=\"test-pagination-info\" />\n          \n      */\n      {\n        \"id\": \"XqsZcuS4\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-pagination-info\\\"]],[[\\\"@itemsRangeStart\\\",\\\"@itemsRangeEnd\\\",\\\"@totalItems\\\"],[1,10,100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/info\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/info-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-pagination-info').hasClass('hds-pagination-info');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should show the passed in itemsRangeStart and itemsRangeEnd values', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Info @itemsRangeStart={{1}} @itemsRangeEnd={{10}} @totalItems={{103}} />\n          \n      */\n      {\n        \"id\": \"rrHWZXnh\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@itemsRangeStart\\\",\\\"@itemsRangeEnd\\\",\\\"@totalItems\\\"],[1,10,103]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/info\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/info-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-info').hasText('1–10 of 103');\n    });\n    (0, _qunit.test)('it should not display the totalItems when showTotalItems is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Hds::Pagination::Info @itemsRangeStart={{1}} @itemsRangeEnd={{10}} @totalItems={{100}} @showTotalItems={{false}} />\n          \n      */\n      {\n        \"id\": \"Q28AfFHC\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],null,[[\\\"@itemsRangeStart\\\",\\\"@itemsRangeEnd\\\",\\\"@totalItems\\\",\\\"@showTotalItems\\\"],[1,10,100,false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/info\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/info-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-info').doesNotIncludeText('of 100');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/nav/arrow-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/nav/arrow', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Nav::Arrow @direction=\"prev\" id=\"test-nav-arrow\" />\n          \n      */\n      {\n        \"id\": \"OlOx+Yzg\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-nav-arrow\\\"]],[[\\\"@direction\\\"],[\\\"prev\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-nav-arrow').hasClass('hds-pagination-nav__arrow');\n    });\n\n    // DIRECTION\n\n    (0, _qunit.test)('it should render a \"Previous\" or \"Next\" button matching the passed in direction', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Hds::Pagination::Nav::Arrow @direction=\"prev\" id=\"test-nav-arrow-prev\" />\n          <Hds::Pagination::Nav::Arrow @direction=\"next\" id=\"test-nav-arrow-next\" />\n          \n      */\n      {\n        \"id\": \"tYj/4Xr8\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],[[24,1,\\\"test-nav-arrow-prev\\\"]],[[\\\"@direction\\\"],[\\\"prev\\\"]],null],[1,\\\"\\\\n    \\\"],[8,[39,0],[[24,1,\\\"test-nav-arrow-next\\\"]],[[\\\"@direction\\\"],[\\\"next\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-nav-arrow-next').hasClass('hds-pagination-nav__arrow--direction-next').hasAttribute('aria-label', 'Next page');\n      assert.dom('#test-nav-arrow-next .hds-icon-chevron-right').exists();\n      assert.dom('#test-nav-arrow-prev').hasClass('hds-pagination-nav__arrow--direction-prev').hasAttribute('aria-label', 'Previous page');\n      assert.dom('#test-nav-arrow-prev .hds-icon-chevron-left').exists();\n    });\n\n    // LABEL\n\n    (0, _qunit.test)('it should render the appropriate text labels by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Nav::Arrow @direction=\"prev\" id=\"test-nav-arrow-prev\" />\n            <Hds::Pagination::Nav::Arrow @direction=\"next\" id=\"test-nav-arrow-next\" />\n          \n      */\n      {\n        \"id\": \"MIvBYRP9\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-nav-arrow-prev\\\"]],[[\\\"@direction\\\"],[\\\"prev\\\"]],null],[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-nav-arrow-next\\\"]],[[\\\"@direction\\\"],[\\\"next\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-nav-arrow-prev .hds-pagination-nav__arrow-label').hasText('Previous');\n      assert.dom('#test-nav-arrow-next .hds-pagination-nav__arrow-label').hasText('Next');\n    });\n    (0, _qunit.test)('it should not render the text label if @showLabel is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Nav::Arrow @direction=\"prev\" @showLabel={{false}} />\n          \n      */\n      {\n        \"id\": \"X03YrDkI\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@direction\\\",\\\"@showLabel\\\"],[\\\"prev\\\",false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow-label').doesNotExist();\n    });\n\n    // DISABLED\n\n    (0, _qunit.test)('it should render a disabled button when @disabled is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Nav::Arrow @direction=\"prev\" @disabled={{true}} />\n            \n      */\n      {\n        \"id\": \"Sm2CNJAt\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@direction\\\",\\\"@disabled\\\"],[\\\"prev\\\",true]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__control').hasAttribute('disabled');\n    });\n\n    // EVENTS\n\n    (0, _qunit.test)('it should call the onClick handler with the value of the direction of the button', async function (assert) {\n      let direction;\n      this.set('onClick', dir => direction = dir);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <Hds::Pagination::Nav::Arrow @direction=\"prev\" @onClick={{this.onClick}} />\n              \n      */\n      {\n        \"id\": \"1YxaSpz2\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],null,[[\\\"@direction\\\",\\\"@onClick\\\"],[\\\"prev\\\",[30,0,[\\\"onClick\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-pagination-nav__control');\n      assert.strictEqual(direction, 'prev');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @direction is not defined', async function (assert) {\n      const errorMessage = '@direction for \"Pagination::Nav::Arrow\" must be one of the following: prev, next; received: undefined';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Nav::Arrow />\n      */\n      {\n        \"id\": \"HHjixqQx\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @direction is not one of the right values', async function (assert) {\n      const errorMessage = '@direction for \"Pagination::Nav::Arrow\" must be one of the following: prev, next; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Nav::Arrow @direction=\"foo\" />\n      */\n      {\n        \"id\": \"tBQ/CHz2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@direction\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/pagination/nav/arrow\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/arrow-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/nav/ellipsis-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/nav/ellipsis', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Nav::Ellipsis id=\"test-nav-ellipsis\" />\n          \n      */\n      {\n        \"id\": \"5wJ3td6K\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-nav-ellipsis\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/nav/ellipsis\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/ellipsis-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-nav-ellipsis').hasClass('hds-pagination-nav__ellipsis');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/nav/number-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/nav/number', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Nav::Number @page={{1}} id=\"test-pagination-number\" />\n            \n      */\n      {\n        \"id\": \"TuUxyBPz\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-pagination-number\\\"]],[[\\\"@page\\\"],[1]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/nav/number\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/number-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-pagination-number').hasClass('hds-pagination-nav__number');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it displays the passed in page number', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Nav::Number @page={{5}} />\n            \n      */\n      {\n        \"id\": \"8v5AWKis\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@page\\\"],[5]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/nav/number\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/number-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__control').hasText('page 5');\n    });\n\n    // SELECTED\n\n    (0, _qunit.test)('it is selected if @isSelected is set to true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Nav::Number @page={{1}} @isSelected={{true}} id=\"test-is-selected\" />\n              <Hds::Pagination::Nav::Number @page={{3}} id=\"test-not-selected\" />\n            \n      */\n      {\n        \"id\": \"t+gMeavg\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-is-selected\\\"]],[[\\\"@page\\\",\\\"@isSelected\\\"],[1,true]],null],[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-not-selected\\\"]],[[\\\"@page\\\"],[3]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/nav/number\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/number-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-is-selected').hasClass('hds-pagination-nav__number--is-selected');\n      assert.dom('#test-is-selected').hasAttribute('aria-current', 'page');\n      assert.dom('#test-not-selected').doesNotHaveClass('hds-pagination-nav__number--is-selected');\n      assert.dom('#test-not-selected').doesNotHaveAttribute('aria-current', 'page');\n    });\n\n    // EVENTS\n\n    (0, _qunit.test)('it should call the onClick handler with the value of the page number', async function (assert) {\n      let pageNumber;\n      this.set('onClick', pageNum => pageNumber = pageNum);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n                <Hds::Pagination::Nav::Number @page={{3}} id=\"test-pagination-number\" @onClick={{this.onClick}} />\n              \n      */\n      {\n        \"id\": \"Iphl0C7v\",\n        \"block\": \"[[[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,1,\\\"test-pagination-number\\\"]],[[\\\"@page\\\",\\\"@onClick\\\"],[3,[30,0,[\\\"onClick\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"hds/pagination/nav/number\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/number-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('#test-pagination-number');\n      assert.strictEqual(pageNumber, 3);\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @page is not defined', async function (assert) {\n      const errorMessage = '@page for \"Pagination::Nav::Number\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Nav::Number />\n      */\n      {\n        \"id\": \"3KUiUF4i\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/pagination/nav/number\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/nav/number-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/numbered-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/numbered', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} id=\"test-pagination-numbered\" />\n          \n      */\n      {\n        \"id\": \"H6HHWzM+\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-pagination-numbered\\\"]],[[\\\"@totalItems\\\"],[100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-pagination-numbered').hasClass('hds-pagination');\n    });\n\n    // CONTENT (AND ARGUMENTS DRILLING)\n\n    (0, _qunit.test)('it renders the main child components', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} />\n          \n      */\n      {\n        \"id\": \"kt9oDHCa\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\"],[100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-info').exists();\n      assert.dom('.hds-pagination .hds-pagination-nav').exists();\n      assert.dom('.hds-pagination .hds-pagination-size-selector').exists();\n    });\n    (0, _qunit.test)('it renders the \"info\" and \"size selector\" content with default pageSizes and currentPageSize values', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} />\n          \n      */\n      {\n        \"id\": \"kt9oDHCa\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\"],[100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-info').hasText('1–10 of 100');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"10\"]').hasText('10');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"30\"]').hasText('30');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"50\"]').hasText('50');\n    });\n    (0, _qunit.test)('it renders custom options for passed in pageSizes and sets currentPageSize to the first PageSizes item', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @pageSizes={{array 20 40 60}} />\n          \n      */\n      {\n        \"id\": \"ss4AaAay\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@pageSizes\\\"],[100,[28,[37,1],[20,40,60],null]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-info').hasText('1–20 of 100');\n      assert.dom('.hds-pagination .hds-pagination-size-selector select').hasValue('20');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"20\"]').hasText('20');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"40\"]').hasText('40');\n      assert.dom('.hds-pagination .hds-pagination-size-selector option[value=\"60\"]').hasText('60');\n    });\n    (0, _qunit.test)('it renders the passed in currentPageSize value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPageSize={{40}} @pageSizes={{array 20 40 60}} />\n          \n      */\n      {\n        \"id\": \"YYD0K6g5\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPageSize\\\",\\\"@pageSizes\\\"],[100,40,[28,[37,1],[20,40,60],null]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-info').hasText('1–40 of 100');\n      assert.dom('.hds-pagination .hds-pagination-size-selector select').hasValue('40');\n    });\n    (0, _qunit.test)('it renders the \"nav\" content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} />\n          \n      */\n      {\n        \"id\": \"kt9oDHCa\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\"],[100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-nav__arrow--direction-prev').exists();\n      assert.dom('.hds-pagination .hds-pagination-nav__page-item:last-child .hds-pagination-nav__control').hasText('page 10');\n      assert.dom('.hds-pagination .hds-pagination-nav__arrow--direction-next').exists();\n    });\n    (0, _qunit.test)('it displays the passed in custom text for the SizeSelector label text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @sizeSelectorLabel=\"Custom text\" />\n          \n      */\n      {\n        \"id\": \"Lp4tCGXY\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@sizeSelectorLabel\\\"],[100,\\\"Custom text\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-size-selector label').hasText('Custom text');\n    });\n\n    // SHOW/HIDE ELEMENTS\n    (0, _qunit.test)('it hides the total items from the \"info\" content when @showTotalItems is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @showTotalItems={{false}} />\n          \n      */\n      {\n        \"id\": \"BQqaFu4Q\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@showTotalItems\\\"],[100,false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-info').hasText('1–10');\n    });\n    (0, _qunit.test)('it hides \"info\", \"page numbers\" and \"size-selector\" @showInfo/@showPageNumbers/@showSizeSelector are false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @showInfo={{false}} @showPageNumbers={{false}} @showSizeSelector={{false}} />\n          \n      */\n      {\n        \"id\": \"yj2Kiqta\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@showInfo\\\",\\\"@showPageNumbers\\\",\\\"@showSizeSelector\\\"],[100,false,false,false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-info').doesNotExist();\n      assert.dom('.hds-pagination .hds-pagination-nav__page-list').doesNotExist();\n      assert.dom('.hds-pagination .hds-pagination-size-selector').doesNotExist();\n    });\n    (0, _qunit.test)('it hides the \"prev/next\" labels by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} />\n          \n      */\n      {\n        \"id\": \"kt9oDHCa\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\"],[100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev .hds-pagination-nav__arrow-label').doesNotExist();\n      assert.dom('.hds-pagination-nav__arrow--direction-next .hds-pagination-nav__arrow-label').doesNotExist();\n    });\n    (0, _qunit.test)('it show the \"prev/next\" labels is @showLabels is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @showLabels={{true}} />\n          \n      */\n      {\n        \"id\": \"9xy86TDf\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@showLabels\\\"],[100,true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev .hds-pagination-nav__arrow-label').exists();\n      assert.dom('.hds-pagination-nav__arrow--direction-next .hds-pagination-nav__arrow-label').exists();\n    });\n\n    // CURRENT PAGE\n\n    (0, _qunit.test)('the selected page match the passed in @currentPage value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{2}} />\n          \n      */\n      {\n        \"id\": \"6UzBdtmc\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,2]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__number--is-selected').exists();\n      assert.dom('.hds-pagination-nav__number--is-selected').hasText('page 2');\n    });\n\n    // TRUNCATION\n\n    (0, _qunit.test)('it truncates the page numbers by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} />\n          \n      */\n      {\n        \"id\": \"kt9oDHCa\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\"],[100]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      // displays 7 items (the max number displayed)\n      assert.dom('.hds-pagination-nav .hds-pagination-nav__page-item').exists({\n        count: 7\n      });\n    });\n    (0, _qunit.test)('it disable truncation if @isTruncated is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @isTruncated={{false}} />\n          \n      */\n      {\n        \"id\": \"cl/nVbSV\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@isTruncated\\\"],[100,false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination .hds-pagination-nav .hds-pagination-nav__page-item').exists({\n        count: 10\n      });\n    });\n    (0, _qunit.test)('it should display an ellipsis for the 5th item when the first page number is selected', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{1}} />\n          \n      */\n      {\n        \"id\": \"vtozr2H1\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,1]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav .hds-pagination-nav__page-item:nth-child(5)').hasText('...');\n      assert.dom('.hds-pagination-nav .hds-pagination-nav__page-item:not(:nth-child(5))').doesNotIncludeText('...');\n    });\n    (0, _qunit.test)('it should display an ellipsis for the 2nd and 6th items when a middle page number is selected', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{4}} />\n          \n      */\n      {\n        \"id\": \"Tlj1JIHa\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,4]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__page-item:nth-child(2)').hasText('...');\n      assert.dom('.hds-pagination-nav__page-item:nth-child(6)').hasText('...');\n      assert.dom('.hds-pagination-nav__page-item:not(:nth-child(2)):not(:nth-child(6))').doesNotIncludeText('...');\n    });\n    (0, _qunit.test)('it should display an ellipsis for the 3rd item when the last page number is selected', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{10}} />\n          \n      */\n      {\n        \"id\": \"tT9xg9h1\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,10]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__page-item:nth-child(3)').hasText('...');\n      assert.dom('.hds-pagination-nav__page-item:not(:nth-child(3))').doesNotIncludeText('...');\n    });\n\n    // DISABLED PREV/NEXT\n\n    (0, _qunit.test)('when on the first page, the \"Previous\" control should be disabled', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{1}} />\n          \n      */\n      {\n        \"id\": \"vtozr2H1\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,1]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Test that the first page is selected:\n      assert.dom('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control').hasClass('hds-pagination-nav__number--is-selected');\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').isDisabled();\n    });\n    (0, _qunit.test)('when on the last page, the \"Next\" control should be disabled', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{10}} />\n          \n      */\n      {\n        \"id\": \"tT9xg9h1\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,10]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Test that the last page is selected:\n      assert.dom('.hds-pagination-nav__page-item:last-child .hds-pagination-nav__control').hasClass('hds-pagination-nav__number--is-selected');\n      assert.dom('.hds-pagination-nav__arrow--direction-next').isDisabled();\n    });\n    (0, _qunit.test)('clicking on the fist/last page disables the \"Prev/Next\" controls', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{10}} />\n          \n      */\n      {\n        \"id\": \"MOxnS6YH\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,10]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').isNotDisabled();\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').isNotDisabled();\n      // Activate the first page:\n      await (0, _testHelpers.click)('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control');\n      // Test that the first page is selected:\n      assert.dom('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control').hasClass('hds-pagination-nav__number--is-selected');\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').isDisabled();\n      // Activate the last page:\n      await (0, _testHelpers.click)('.hds-pagination-nav__page-item:last-child .hds-pagination-nav__control');\n      // Test that the last page is selected:\n      assert.dom('.hds-pagination-nav__page-item:last-child .hds-pagination-nav__control').hasClass('hds-pagination-nav__number--is-selected');\n      assert.dom('.hds-pagination-nav__arrow--direction-next').isDisabled();\n    });\n\n    // INTERACTION\n\n    (0, _qunit.test)('it should select the activated page number', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n          <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{1}} />\n          \n      */\n      {\n        \"id\": \"JBOTSth3\",\n        \"block\": \"[[[1,\\\"\\\\n    \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,1]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__page-item:nth-child(3) .hds-pagination-nav__control').doesNotHaveClass('hds-pagination-nav__number--is-selected');\n\n      // click page 3 control:\n      await (0, _testHelpers.click)('.hds-pagination-nav__page-item:nth-child(3) .hds-pagination-nav__control');\n      assert.dom('.hds-pagination-nav__page-item:nth-child(3) .hds-pagination-nav__control').hasClass('hds-pagination-nav__number--is-selected');\n    });\n    (0, _qunit.test)('selecting a pageSize option should change the page size', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::Numbered @totalItems={{100}} @currentPage={{1}} />\n          \n      */\n      {\n        \"id\": \"vtozr2H1\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\"],[100,1]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Check that items per page is initially set to 10:\n      assert.dom('.hds-pagination-size-selector select').hasValue('10');\n      assert.dom('.hds-pagination-info').hasText('1–10 of 100');\n      assert.dom('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control').includesText('1');\n      assert.dom('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control').doesNotIncludeText('0');\n      assert.dom('.hds-pagination-nav__page-item:last-child .hds-pagination-nav__control').includesText('10');\n      assert.dom('.hds-pagination-nav__page-item:last-child .hds-pagination-nav__control').doesNotIncludeText('00');\n\n      // Select 30 options per page:\n      await (0, _testHelpers.select)('.hds-pagination-size-selector select', '30');\n      // check that the items per page has been updated to 30\n      assert.dom('.hds-pagination-size-selector select').hasValue('30');\n      assert.dom('.hds-pagination-info').hasText('1–30 of 100');\n      assert.dom('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control').includesText('1');\n      assert.dom('.hds-pagination-nav__page-item:first-child .hds-pagination-nav__control').doesNotIncludeText('0');\n      assert.dom('.hds-pagination-nav__page-item:last-child .hds-pagination-nav__control').includesText('4');\n    });\n\n    // EVENTS\n\n    (0, _qunit.test)('it should invoke the onPageChange callback and return the value of the new page number and page size', async function (assert) {\n      let pageNumber, pageSize;\n      this.set('onPageChange', (page, size) => {\n        pageNumber = page;\n        pageSize = size;\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Numbered @totalItems={{100}} @onPageChange={{this.onPageChange}} />\n              \n      */\n      {\n        \"id\": \"hRB5BmAd\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@onPageChange\\\"],[100,[30,0,[\\\"onPageChange\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-pagination-nav__page-item:nth-child(3) .hds-pagination-nav__control');\n      assert.strictEqual(pageNumber, 3);\n      assert.strictEqual(pageSize, 10);\n    });\n    (0, _qunit.test)('it should invoke the onPageSizeChange callback and return the value of the new page size', async function (assert) {\n      let size;\n      this.set('onPageSizeChange', pageSize => size = pageSize);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::Numbered @totalItems={{100}} @onPageSizeChange={{this.onPageSizeChange}} />\n              \n      */\n      {\n        \"id\": \"Qau9VxX7\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@onPageSizeChange\\\"],[100,[30,0,[\\\"onPageSizeChange\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.select)('.hds-pagination-size-selector select', '30'); // notice: '30' needs to be a string to work\n      assert.strictEqual(size, 30); // notice: it's converted to an integer by the callback function\n    });\n\n    // ROUTING\n\n    (0, _qunit.test)('it should render links instead of buttons, with the correct \"href\" values, if it has routing', async function (assert) {\n      this.set('myQueryFunction', (page, pageSize) => ({\n        page,\n        pageSize\n      }));\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered @totalItems={{30}} @currentPage={{2}} @currentPageSize={{10}} @route=\"components.pagination\" @queryFunction={{this.myQueryFunction}} />\n      */\n      {\n        \"id\": \"G5ie05/7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@currentPage\\\",\\\"@currentPageSize\\\",\\\"@route\\\",\\\"@queryFunction\\\"],[30,2,10,\\\"components.pagination\\\",[30,0,[\\\"myQueryFunction\\\"]]]],null]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-nav__arrow--direction-prev').hasAttribute('href', '/components/pagination?page=1&pageSize=10');\n      assert.dom('.hds-pagination-nav__page-list .hds-pagination-nav__page-item:nth-child(1) a').hasAttribute('href', '/components/pagination?page=1&pageSize=10');\n      assert.dom('.hds-pagination-nav__page-list .hds-pagination-nav__page-item:nth-child(3) a').hasAttribute('href', '/components/pagination?page=3&pageSize=10');\n      assert.dom('.hds-pagination-nav__arrow--direction-next').hasAttribute('href', '/components/pagination?page=3&pageSize=10');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @queryFunction is not a function', async function (assert) {\n      const errorMessage = '@queryFunction for \"Hds::Pagination::Numbered\" must be a function';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered @totalItems={{100}} @queryFunction=\"foo\" @model=\"test\" />\n      */\n      {\n        \"id\": \"JpoYo8Eg\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@queryFunction\\\",\\\"@model\\\"],[100,\\\"foo\\\",\\\"test\\\"]],null]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if it has routing but @currentPage and @currentPageSize are not defined as number', async function (assert) {\n      this.set('myQueryFunction', (page, pageSize) => ({\n        page,\n        pageSize\n      }));\n      const errorMessage = '@currentPage and @currentPageSize for \"Hds::Pagination::Numbered\" must be provided as numeric arguments when the pagination controls the routing';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered @totalItems={{100}} @queryFunction={{this.myQueryFunction}} @model=\"test\" />\n      */\n      {\n        \"id\": \"jZcUpL+G\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@totalItems\\\",\\\"@queryFunction\\\",\\\"@model\\\"],[100,[30,0,[\\\"myQueryFunction\\\"]],\\\"test\\\"]],null]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @totalItems is not defined', async function (assert) {\n      const errorMessage = '@totalItems for \"Hds::Pagination::Numbered\" must be defined as an integer number';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered />\n      */\n      {\n        \"id\": \"uvgkjBRd\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @totalItems is not a number', async function (assert) {\n      const errorMessage = '@totalItems for \"Hds::Pagination::Numbered\" must be defined as an integer number';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered @totalItems=\"foo\" />\n      */\n      {\n        \"id\": \"cjZyZDBK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@totalItems\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @queryFunction is provided without a routing argument', async function (assert) {\n      this.set('myQueryFunction', page => ({\n        page\n      }));\n      const errorMessage = '@model, @models, or @route for \"Hds::Pagination::Numbered\" must be provided when using the @queryFunction argument';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::Numbered @queryFunction={{this.myQueryFunction}} />\n      */\n      {\n        \"id\": \"75JtBglN\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@queryFunction\\\"],[[30,0,[\\\"myQueryFunction\\\"]]]],null]],[],false,[\\\"hds/pagination/numbered\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/numbered-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/pagination/size-selector-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/pagination/size-selector', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} id=\"test-pagination-size-selector\" />\n          \n      */\n      {\n        \"id\": \"DWI2/WHy\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-pagination-size-selector\\\"]],[[\\\"@pageSizes\\\"],[[28,[37,1],[10,30,50],null]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-pagination-size-selector').hasClass('hds-pagination-size-selector');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should display options for the passed in page sizes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} />\n          \n      */\n      {\n        \"id\": \"hv7LELMZ\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@pageSizes\\\"],[[28,[37,1],[10,30,50],null]]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-size-selector option[value=\"10\"]').hasText('10');\n      assert.dom('.hds-pagination-size-selector option[value=\"30\"]').hasText('30');\n      assert.dom('.hds-pagination-size-selector option[value=\"50\"]').hasText('50');\n    });\n    (0, _qunit.test)('it should display the passed in @selectedSize as selected value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} @selectedSize={{30}} />\n            \n      */\n      {\n        \"id\": \"HxVFxZbs\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@pageSizes\\\",\\\"@selectedSize\\\"],[[28,[37,1],[10,30,50],null],30]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-size-selector select').hasValue('30');\n    });\n    (0, _qunit.test)('it has a label with a \"for\" attribute value matching the select id value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} id=\"test-pagination-size-selector\" />\n            \n      */\n      {\n        \"id\": \"R8fw2iPY\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-pagination-size-selector\\\"]],[[\\\"@pageSizes\\\"],[[28,[37,1],[10,30,50],null]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      let controlId = this.element.querySelector('.hds-form-select').id;\n      assert.dom('.hds-pagination-size-selector label').hasAttribute('for', controlId);\n    });\n    (0, _qunit.test)('the label text matches the default value if no custom value is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} />\n            \n      */\n      {\n        \"id\": \"HxvGkZN7\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@pageSizes\\\"],[[28,[37,1],[10,30,50],null]]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-size-selector label').hasText('Items per page');\n    });\n    (0, _qunit.test)('it displays the passed in custom text for the label text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} @label=\"Custom text\" />\n            \n      */\n      {\n        \"id\": \"MXCDirf+\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@pageSizes\\\",\\\"@label\\\"],[[28,[37,1],[10,30,50],null],\\\"Custom text\\\"]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-pagination-size-selector label').hasText('Custom text');\n    });\n\n    // EVENTS\n\n    (0, _qunit.test)('it should call the onClick handler with the value of the page number', async function (assert) {\n      let size;\n      this.set('onChange', pageSize => size = pageSize);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} @selectedSize={{10}} id=\"test-pagination-size-selector\" @onChange={{this.onChange}} />\n              \n      */\n      {\n        \"id\": \"6QtcmUFi\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-pagination-size-selector\\\"]],[[\\\"@pageSizes\\\",\\\"@selectedSize\\\",\\\"@onChange\\\"],[[28,[37,1],[10,30,50],null],10,[30,0,[\\\"onChange\\\"]]]],null],[1,\\\"\\\\n        \\\"]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.select)('#test-pagination-size-selector select', '30'); // notice: '30' needs to be a string to work\n      assert.strictEqual(size, 30); // notice: it's converted to an integer by the callback function\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @pageSizes is not defined', async function (assert) {\n      const errorMessage = '@pageSizes for \"Pagination::SizeSelector\" must be defined';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::SizeSelector />\n      */\n      {\n        \"id\": \"0U/LvaO/\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/pagination/size-selector\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @selectedSize is not one of the @pageSizes items', async function (assert) {\n      const errorMessage = '@selectedSize for \"Pagination::SizeSelector\" must one of the @pageSizes provided (10,30,50), received 1234';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Pagination::SizeSelector @pageSizes={{array 10 30 50}} @selectedSize={{1234}} />\n      */\n      {\n        \"id\": \"ajhscQot\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@pageSizes\\\",\\\"@selectedSize\\\"],[[28,[37,1],[10,30,50],null],1234]],null]],[],false,[\\\"hds/pagination/size-selector\\\",\\\"array\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/pagination/size-selector-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/popover-primitive/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/popover-primitive/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // NOTICE: the PopoverPrimitive is a headless component\n\n    // IDs\n\n    (0, _qunit.test)('it should generate IDs provided and connect them with the popover attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} />\n                  <main {{PP.setupPrimitivePopover}} />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"fh+ggI2A\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,\\\"main\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\",\\\"main\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // the popover ID is dynamically generated\n      const popover = this.element.querySelector('main');\n      const popoverId = popover.id;\n      assert.dom('button').hasAttribute('popovertarget', popoverId);\n      assert.dom('main').hasAttribute('popover', 'auto');\n    });\n    (0, _qunit.test)('it should use the IDs provided and connect them with the popover attributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-content\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"CdGXu/24\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-content\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-popover-primitive-toggle').hasAttribute('popovertarget', 'test-popover-primitive-content');\n      assert.dom('#test-popover-primitive-content').hasAttribute('popover', 'auto');\n    });\n\n    // INTERACTIONS\n\n    (0, _qunit.test)('it should toggle the popover visibility on focus in/out', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableSoftEvents={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-content\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"Cv/760JD\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableSoftEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-content\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // it's hidden by default\n      assert.dom('#test-popover-primitive-content').isNotVisible();\n      // focus the toggle to show the popover\n      await (0, _testHelpers.focus)('#test-popover-primitive-toggle');\n      // now it should be visible\n      assert.dom('#test-popover-primitive-content').isVisible();\n      // extra test to check that the the content goes on the top layer\n      assert.strictEqual(document.querySelectorAll('[popover]:popover-open').length, 1);\n      // unfocus the toggle to hide the popover\n      await (0, _testHelpers.blur)('#test-popover-primitive-toggle');\n      // should go back to hidden\n      assert.dom('#test-popover-primitive-content').isNotVisible();\n    });\n    (0, _qunit.test)('it should toggle the popover visibility on click', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-content\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"CdGXu/24\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-content\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // it's hidden by default\n      assert.dom('#test-popover-primitive-content').isNotVisible();\n      // focus the toggle to show the popover\n      await (0, _testHelpers.click)('#test-popover-primitive-toggle');\n      // now it should be visible\n      assert.dom('#test-popover-primitive-content').isVisible();\n      // extra test to check that the the content goes on the top layer\n      assert.strictEqual(document.querySelectorAll('[popover]:popover-open').length, 1);\n      // click again the toggle to hide the content\n      await (0, _testHelpers.click)('#test-popover-primitive-toggle');\n      // should go back to hidden\n      assert.dom('#test-popover-primitive-content').isNotVisible();\n    });\n    (0, _qunit.skip)('it should toggle the popover visibility on click', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}}>\n                <:toggle>Toggle</:toggle>\n                <:content>\n                  <div id=\"test-popover-primitive-content\">Content</div>\n                </:content>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"/OXCCFX3\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"toggle\\\",\\\"content\\\"],[[[[1,\\\"Toggle\\\"]],[]],[[[1,\\\"\\\\n            \\\"],[10,0],[14,1,\\\"test-popover-primitive-content\\\"],[12],[1,\\\"Content\\\"],[13],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/popover-primitive\\\",\\\":toggle\\\",\\\":content\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // it's hidden when closed\n      assert.dom('.hds-popover-primitive__content').isNotVisible();\n      assert.dom('#test-popover-primitive-content').doesNotExist();\n      // click the toggle to show the content\n      await (0, _testHelpers.click)('button.hds-popover-primitive__toggle');\n      // now it should be visible\n      assert.dom('.hds-popover-primitive__content').isVisible();\n      assert.dom('#test-popover-primitive-content').exists().isVisible();\n      // click again the toggle to hide the content\n      await (0, _testHelpers.click)('button.hds-popover-primitive__toggle');\n      // it's hidden when closed\n      assert.dom('.hds-popover-primitive__content').isNotVisible();\n      assert.dom('#test-popover-primitive-content').doesNotExist();\n    });\n\n    // CALLBACKS\n\n    (0, _qunit.test)('it should invoke the `onOpen/onClose` callbacks', async function (assert) {\n      let status;\n      this.set('onOpen', () => status = 'opened');\n      this.set('onClose', () => status = 'closed');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive\n                @enableClickEvents={{true}}\n                @onOpen={{this.onOpen}}\n                @onClose={{this.onClose}}\n                as |PP|\n              >\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"d0ZJknay\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\",\\\"@onOpen\\\",\\\"@onClose\\\"],[true,[30,0,[\\\"onOpen\\\"]],[30,0,[\\\"onClose\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // toggle the visibility\n      await (0, _testHelpers.click)('#test-popover-primitive-toggle');\n      assert.strictEqual(status, 'opened');\n      // toggle it again\n      await (0, _testHelpers.click)('#test-popover-primitive-toggle');\n      assert.strictEqual(status, 'closed');\n    });\n\n    // ANCHORED POSITION OPTIONS\n\n    // notice: since these options are forwarded to the `hds-anchored-position` modifier and there are specific tests for it, we're not going to test them here\n    // plus, since the content elements are moved to the top layer, thery're not scaled like the `ember-testing` container, all the sizes/positions are out of sync\n\n    // POPOVER API (HTML ATTRIBUTES)\n\n    (0, _qunit.test)('the toggle does not have a `popovertarget` attribute by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"+2YRCBVu\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-popover-primitive-toggle').doesNotHaveAttribute('popovertarget');\n    });\n    (0, _qunit.test)('the toggle has a `popovertarget` attribute if `@enableClickEvents` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-popover\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"NL1w7VuQ\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-popover\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-popover-primitive-toggle').hasAttribute('popovertarget', 'test-popover-primitive-popover');\n    });\n    (0, _qunit.test)('the popover has a `popover` attribute by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-content\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"fLu/VRFx\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-content\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-popover-primitive-content').hasAttribute('popover', 'auto');\n    });\n    (0, _qunit.test)('the popover has a `popover` attribute set to `manual` if `@isOpen` is `true` and it reverts to `auto` after \"soft\" interacting with it', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}} @isOpen={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-content\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"ZYKLWYwm\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\",\\\"@isOpen\\\"],[true,true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-content\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-popover-primitive-content').isVisible().hasAttribute('popover', 'manual');\n      // focus the toggle to show the popover\n      await (0, _testHelpers.focus)('#test-popover-primitive-toggle');\n      // unfocus the toggle to hide the popover\n      await (0, _testHelpers.blur)('#test-popover-primitive-toggle');\n      assert.dom('#test-popover-primitive-content').isNotVisible().hasAttribute('popover', 'auto');\n    });\n    (0, _qunit.test)('the popover has a `popover` attribute set to `manual` if `@isOpen` is `true` and it reverts to `auto` after \"click\" interacting with it', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive @enableClickEvents={{true}} @isOpen={{true}} as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <button {{PP.setupPrimitiveToggle}} id=\"test-popover-primitive-toggle\" />\n                  <div {{PP.setupPrimitivePopover}} id=\"test-popover-primitive-content\" />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"ZYKLWYwm\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\",\\\"@isOpen\\\"],[true,true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,\\\"button\\\"],[24,1,\\\"test-popover-primitive-toggle\\\"],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[24,1,\\\"test-popover-primitive-content\\\"],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\",\\\"button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-popover-primitive-content').hasAttribute('popover', 'manual');\n      // this will change back the `popover` attribute to `auto`\n      await (0, _testHelpers.click)('#test-popover-primitive-toggle');\n      assert.dom('#test-popover-primitive-content').hasAttribute('popover', 'auto');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if the toggle element is not a button', async function (assert) {\n      const errorMessage = 'The toggle element of \"Hds::PopoverPrimitive\" must be a <button>; element received: <div>';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::PopoverPrimitive as |PP|>\n                <div {{PP.setupPrimitiveContainer}}>\n                  <div {{PP.setupPrimitiveToggle}} />\n                  <div {{PP.setupPrimitivePopover}} />\n                </div>\n              </Hds::PopoverPrimitive>\n            \n      */\n      {\n        \"id\": \"+cPlb/6S\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveContainer\\\"]],null,null],[12],[1,\\\"\\\\n            \\\"],[11,0],[4,[30,1,[\\\"setupPrimitiveToggle\\\"]],null,null],[12],[13],[1,\\\"\\\\n            \\\"],[11,0],[4,[30,1,[\\\"setupPrimitivePopover\\\"]],null,null],[12],[13],[1,\\\"\\\\n          \\\"],[13],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"PP\\\"],false,[\\\"hds/popover-primitive\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/popover-primitive/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/reveal/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/reveal/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Reveal @text=\"More options\" id=\"test-reveal\">Additional content</Hds::Reveal>\n          \n      */\n      {\n        \"id\": \"DJI5hl9h\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-reveal\\\"]],[[\\\"@text\\\"],[\\\"More options\\\"]],[[\\\"default\\\"],[[[[1,\\\"Additional content\\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-reveal').hasClass('hds-reveal');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders passed in @text content in the toggle button', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Reveal @text=\"More options\">\n                Additional content\n              </Hds::Reveal>\n      */\n      {\n        \"id\": \"rIlUzYxf\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@text\\\"],[\\\"More options\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Additional content\\\\n        \\\"]],[]]]]]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-reveal__toggle-button').hasText('More options');\n    });\n    (0, _qunit.test)('it shows and hides passed in content when the toggle is triggered', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Reveal @text=\"More options\">\n                Additional content\n              </Hds::Reveal>\n      */\n      {\n        \"id\": \"rIlUzYxf\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@text\\\"],[\\\"More options\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Additional content\\\\n        \\\"]],[]]]]]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Test content is not shown before toggle is triggered\n      assert.dom('.hds-reveal__content').doesNotExist();\n      // Test that content is displayed after the toggle is triggered\n      await (0, _testHelpers.click)('.hds-reveal__toggle-button');\n      assert.dom('.hds-reveal__content').exists().hasText('Additional content');\n      // Test that content is hidden after the toggle is triggered again\n      await (0, _testHelpers.click)('.hds-reveal__toggle-button');\n      assert.dom('.hds-reveal__content').doesNotExist();\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it displays the correct value for aria-expanded when closed vs open', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Reveal @text=\"More options\">\n                Additional content\n              </Hds::Reveal>\n            \n      */\n      {\n        \"id\": \"pHZhdHUF\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@text\\\"],[\\\"More options\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Additional content\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-reveal__toggle-button').hasAttribute('aria-expanded', 'false');\n      await (0, _testHelpers.click)('.hds-reveal__toggle-button');\n      assert.dom('.hds-reveal__toggle-button').hasAttribute('aria-expanded', 'true');\n    });\n    (0, _qunit.test)('the toggle button has an aria-controls attribute with a value matching the content id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Reveal @text=\"More options\">Additional content</Hds::Reveal>\n      */\n      {\n        \"id\": \"FDVnoxm2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"More options\\\"]],[[\\\"default\\\"],[[[[1,\\\"Additional content\\\"]],[]]]]]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-reveal__toggle-button');\n      assert.dom('.hds-reveal__toggle-button').hasAttribute('aria-controls');\n      assert.dom('.hds-reveal__content').hasAttribute('id');\n      assert.strictEqual(this.element.querySelector('.hds-reveal__toggle-button').getAttribute('aria-controls'), this.element.querySelector('.hds-reveal__content').getAttribute('id'));\n    });\n\n    // OPTIONS\n\n    // isOpen\n\n    (0, _qunit.test)('it displays content initially when @isOpen is set to true, ', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::Reveal @text=\"More options\" @isOpen={{true}}>\n                Additional content\n              </Hds::Reveal>\n      */\n      {\n        \"id\": \"e2bum4Pi\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@text\\\",\\\"@isOpen\\\"],[\\\"More options\\\",true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          Additional content\\\\n        \\\"]],[]]]]]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Test content is displayed\n      assert.dom('.hds-reveal__content').exists().hasText('Additional content');\n      // Test that content is hidden after the toggle is triggered\n      await (0, _testHelpers.click)('.hds-reveal__toggle-button');\n      assert.dom('.hds-reveal__content').doesNotExist();\n    });\n\n    // textWhenOpen\n\n    (0, _qunit.test)('it displays different passed in text when open', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Reveal @text=\"Open me\" @textWhenOpen=\"Close me\">\n              Additional content\n            </Hds::Reveal>\n      */\n      {\n        \"id\": \"0sLerd9O\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@text\\\",\\\"@textWhenOpen\\\"],[\\\"Open me\\\",\\\"Close me\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        Additional content\\\\n      \\\"]],[]]]]]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-reveal__toggle-button');\n      assert.dom('.hds-reveal__toggle-button').hasText('Close me');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::Reveal\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Reveal>Additional content</Hds::Reveal>\n      */\n      {\n        \"id\": \"kvs3cKwx\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Additional content\\\"]],[]]]]]],[],false,[\\\"hds/reveal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/reveal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/rich-tooltip/bubble-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"ember-modifier\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberModifier, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"ember-modifier\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/rich-tooltip/bubble', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble @popoverId=\"test-rich-tooltip-bubble\" />\n      */\n      {\n        \"id\": \"Yb02qVnb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@popoverId\\\"],[\\\"test-rich-tooltip-bubble\\\"]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-rich-tooltip-bubble').hasClass('hds-rich-tooltip__bubble');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render some elements but not the yielded content by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip::Bubble @popoverId=\"test-rich-tooltip-bubble\" @arrowId=\"test-rich-tooltip-bubble-arrow\">\n              <div id=\"test-rich-tooltip-bubble-content\" />\n            </Hds::RichTooltip::Bubble>\n          \n      */\n      {\n        \"id\": \"uluz2/3P\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@popoverId\\\",\\\"@arrowId\\\"],[\\\"test-rich-tooltip-bubble\\\",\\\"test-rich-tooltip-bubble-arrow\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"test-rich-tooltip-bubble-content\\\"],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/rich-tooltip/bubble\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__bubble').exists();\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('id', 'test-rich-tooltip-bubble');\n      assert.dom('.hds-rich-tooltip__bubble-arrow').exists();\n      assert.dom('.hds-rich-tooltip__bubble-arrow').hasAttribute('id', 'test-rich-tooltip-bubble-arrow');\n      assert.dom('.hds-rich-tooltip__bubble-inner-content').doesNotExist();\n      assert.dom('#test-rich-tooltip-bubble-content').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the inner content if `@isOpen` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip::Bubble @isOpen={{true}}>\n              <div id=\"test-rich-tooltip-bubble-content\" />\n            </Hds::RichTooltip::Bubble>\n          \n      */\n      {\n        \"id\": \"rbb/qflQ\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@isOpen\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"test-rich-tooltip-bubble-content\\\"],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/rich-tooltip/bubble\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__bubble').exists();\n      assert.dom('.hds-rich-tooltip__bubble-arrow').exists();\n      assert.dom('.hds-rich-tooltip__bubble-inner-content').exists();\n      assert.dom('.hds-rich-tooltip__bubble-inner-content > #test-rich-tooltip-bubble-content').exists();\n    });\n\n    // WIDTH/HEIGHT\n\n    (0, _qunit.test)('it should render the container with the provided with/height', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip::Bubble @width=\"123px\" @height=\"456px\" @isOpen={{true}} />\n          \n      */\n      {\n        \"id\": \"Qeg/iUJo\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@width\\\",\\\"@height\\\",\\\"@isOpen\\\"],[\\\"123px\\\",\\\"456px\\\",true]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      const container = this.element.querySelector('.hds-rich-tooltip__bubble');\n      const rect = container.getBoundingClientRect();\n      // we need to divide by 2 because ember testing scales the `#ember-testing` container by a factor 0.5;\n      assert.deepEqual(rect.width, 123 / 2);\n      assert.deepEqual(rect.height, 456 / 2);\n    });\n\n    // ANCHORED POSITION OPTIONS\n    // here we're testing the anchoredPositionOptions getter using a fake modifier\n\n    (0, _qunit.test)('it should return the default values for the `anchoredPositionOptions` object', async function (assert) {\n      let anchoredPositionOptions;\n      this.set('fakeSetupPrimitivePopover', (0, _emberModifier.modifier)((_element, _positional, named) => {\n        anchoredPositionOptions = named;\n      }));\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble\n              @popoverId=\"test-rich-tooltip-bubble\"\n              @arrowId=\"test-rich-tooltip-arrow\"\n              @setupPrimitivePopover={{this.fakeSetupPrimitivePopover}}\n            />\n      */\n      {\n        \"id\": \"3PPnpwhJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@popoverId\\\",\\\"@arrowId\\\",\\\"@setupPrimitivePopover\\\"],[\\\"test-rich-tooltip-bubble\\\",\\\"test-rich-tooltip-arrow\\\",[30,0,[\\\"fakeSetupPrimitivePopover\\\"]]]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.deepEqual(anchoredPositionOptions, {\n        anchoredPositionOptions: {\n          arrowPadding: 12,\n          arrowSelector: '#test-rich-tooltip-arrow',\n          enableCollisionDetection: true,\n          offsetOptions: 12,\n          placement: 'bottom'\n        }\n      });\n    });\n    (0, _qunit.test)('it should return the values provided via arguments for the `anchoredPositionOptions` object', async function (assert) {\n      let anchoredPositionOptions;\n      this.set('fakeSetupPrimitivePopover', (0, _emberModifier.modifier)((_element, _positional, named) => {\n        anchoredPositionOptions = named;\n      }));\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble\n              @popoverId=\"test-rich-tooltip-bubble\"\n              @arrowId=\"test-rich-tooltip-arrow\"\n              @placement=\"top-start\"\n              @offsetOptions={{123}}\n              @enableCollisionDetection={{false}}\n              @arrowSelector=\"#test-arrow-selector\"\n              @arrowPadding={{987}}\n              @setupPrimitivePopover={{this.fakeSetupPrimitivePopover}}\n            />\n      */\n      {\n        \"id\": \"rUK3BweU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@popoverId\\\",\\\"@arrowId\\\",\\\"@placement\\\",\\\"@offsetOptions\\\",\\\"@enableCollisionDetection\\\",\\\"@arrowSelector\\\",\\\"@arrowPadding\\\",\\\"@setupPrimitivePopover\\\"],[\\\"test-rich-tooltip-bubble\\\",\\\"test-rich-tooltip-arrow\\\",\\\"top-start\\\",123,false,\\\"#test-arrow-selector\\\",987,[30,0,[\\\"fakeSetupPrimitivePopover\\\"]]]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.deepEqual(anchoredPositionOptions, {\n        anchoredPositionOptions: {\n          arrowPadding: 12,\n          arrowSelector: '#test-rich-tooltip-arrow',\n          enableCollisionDetection: false,\n          offsetOptions: 12,\n          placement: 'top-start'\n        }\n      });\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('it should assign the ID value provided with @popoverId', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble @popoverId=\"test-rich-tooltip-bubble\" />\n      */\n      {\n        \"id\": \"Yb02qVnb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@popoverId\\\"],[\\\"test-rich-tooltip-bubble\\\"]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('id', 'test-rich-tooltip-bubble');\n    });\n    (0, _qunit.test)('it should not override the ID value provided with @popoverId with an attribute', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble @popoverId=\"test-rich-tooltip-bubble\" id=\"the-other-id\" />\n      */\n      {\n        \"id\": \"78TU2Sgi\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"the-other-id\\\"]],[[\\\"@popoverId\\\"],[\\\"test-rich-tooltip-bubble\\\"]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('id', 'test-rich-tooltip-bubble');\n    });\n    (0, _qunit.test)('it should have a set of attributes based on the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble @popoverId=\"popoverId\" @isOpen={{true}} />\n      */\n      {\n        \"id\": \"32jgg6Hk\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@popoverId\\\",\\\"@isOpen\\\"],[\\\"popoverId\\\",true]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('id', 'popoverId');\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('tabindex', '-1');\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('role', 'tooltip');\n      assert.dom('.hds-rich-tooltip__bubble').doesNotHaveAria('hidden');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble id=\"test-rich-tooltip-bubble\" />\n      */\n      {\n        \"id\": \"/kUbKJ3D\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-rich-tooltip-bubble\\\"]],null,null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__bubble').hasAria('hidden', '');\n    });\n\n    // ASSERTIONS\n\n    // not sure why this one doesn't trigger an assertion\n    (0, _qunit.skip)('it should throw an assertion if an incorrect value for @placement is provided', async function (assert) {\n      // this is used only to trigger the `anchoredPositionOptions` getter\n      this.set('fakeSetupPrimitivePopover', (0, _emberModifier.modifier)(() => {}));\n      const errorMessage = '@placement for \"Hds::RichTooltip::Bubble\" must be one of the following: top, top-start, top-end, right, right-start, right-end, bottom, bottom-start, bottom-end, left, left-start, left-end; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Bubble\n              @placement=\"foo\"\n              @setupPrimitivePopover={{this.fakeSetupPrimitivePopover}}\n            />\n      */\n      {\n        \"id\": \"f+9VZ9P2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placement\\\",\\\"@setupPrimitivePopover\\\"],[\\\"foo\\\",[30,0,[\\\"fakeSetupPrimitivePopover\\\"]]]],null]],[],false,[\\\"hds/rich-tooltip/bubble\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/bubble-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/rich-tooltip/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  function wait(timeout = 2000) {\n    return new Promise(resolve => {\n      setTimeout(resolve, timeout);\n    });\n  }\n  (0, _qunit.module)('Integration | Component | hds/rich-tooltip/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip id=\"test-rich-tooltip\" />\n      */\n      {\n        \"id\": \"vWIjhHbL\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-rich-tooltip\\\"]],null,null]],[],false,[\\\"hds/rich-tooltip\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-rich-tooltip').hasClass('hds-rich-tooltip');\n    });\n\n    // CONTENT + VISIBILITY + IS-OPEN\n\n    (0, _qunit.test)('it should render the toggle (visible) and bubble (not visible) but not the yielded content by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip as |RT|>\n              <RT.Toggle>Toggle</RT.Toggle>\n              <RT.Bubble><span id=\"test-rich-tooltip-content\">Content</span></RT.Bubble>\n            </Hds::RichTooltip>\n          \n      */\n      {\n        \"id\": \"Gg5G3iGJ\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Toggle\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Toggle\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Bubble\\\"]],null,null,[[\\\"default\\\"],[[[[10,1],[14,1,\\\"test-rich-tooltip-content\\\"],[12],[1,\\\"Content\\\"],[13]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"RT\\\"],false,[\\\"hds/rich-tooltip\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle').isVisible();\n      assert.dom('.hds-rich-tooltip__bubble').isNotVisible();\n      assert.dom('.hds-rich-tooltip__bubble-arrow').isNotVisible();\n      // because `hds-rich-tooltip__bubble-inner-content` has `display: contents` we can't use `.isVisible` so we need to test that a child is not visible\n      assert.dom('.hds-rich-tooltip__bubble-inner-content #test-rich-tooltip-content').isNotVisible();\n    });\n    (0, _qunit.test)('it should render the toggle (visible) and bubble (visible) and the yielded content (visible) if `@isOpen` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip @isOpen={{true}} as |RT|>\n              <RT.Toggle>Toggle</RT.Toggle>\n              <RT.Bubble><span id=\"test-rich-tooltip-content\">Content</span></RT.Bubble>\n            </Hds::RichTooltip>\n          \n      */\n      {\n        \"id\": \"jayBQKpG\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@isOpen\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Toggle\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Toggle\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Bubble\\\"]],null,null,[[\\\"default\\\"],[[[[10,1],[14,1,\\\"test-rich-tooltip-content\\\"],[12],[1,\\\"Content\\\"],[13]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"RT\\\"],false,[\\\"hds/rich-tooltip\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle').isVisible();\n      assert.dom('.hds-rich-tooltip__bubble').isVisible();\n      assert.dom('.hds-rich-tooltip__bubble-arrow').isVisible();\n      // because `hds-rich-tooltip__bubble-inner-content` has `display: contents` we can't use `.isVisible` so we need to test that a child is visible\n      assert.dom('.hds-rich-tooltip__bubble-inner-content #test-rich-tooltip-content').isVisible();\n    });\n\n    // INTERACTIONS\n\n    (0, _qunit.test)('it should toggle the content visibility on focus in/out by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::RichTooltip as |RT|>\n                <RT.Toggle>Toggle</RT.Toggle>\n                <RT.Bubble>Content</RT.Bubble>\n              </Hds::RichTooltip>\n            \n      */\n      {\n        \"id\": \"IfdZr8y4\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Toggle\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Toggle\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Bubble\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"RT\\\"],false,[\\\"hds/rich-tooltip\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // it's hidden when closed\n      assert.dom('.hds-rich-tooltip__bubble').isNotVisible();\n      // focus the toggle to show the content\n      await (0, _testHelpers.focus)('button.hds-rich-tooltip__toggle');\n      await wait(500); // wait for the opacity animation to complete\n      // now it should be visible\n      assert.dom('.hds-rich-tooltip__bubble').isVisible();\n      // unfocus the toggle to hide the content\n      await (0, _testHelpers.blur)('button.hds-rich-tooltip__toggle');\n      // it's hidden when closed\n      assert.dom('.hds-rich-tooltip__bubble').isNotVisible();\n    });\n    (0, _qunit.test)('it should toggle the content visibility on click', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::RichTooltip @enableClickEvents={{true}} as |RT|>\n                <RT.Toggle>Toggle</RT.Toggle>\n                <RT.Bubble>Content</RT.Bubble>\n              </Hds::RichTooltip>\n            \n      */\n      {\n        \"id\": \"sPbcW6LQ\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Toggle\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Toggle\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Bubble\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"RT\\\"],false,[\\\"hds/rich-tooltip\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // it's hidden when closed\n      assert.dom('.hds-rich-tooltip__bubble').isNotVisible();\n      // click the toggle to show the content\n      await (0, _testHelpers.click)('button.hds-rich-tooltip__toggle');\n      // now it should be visible\n      assert.dom('.hds-rich-tooltip__bubble').isVisible();\n      // click again the toggle to hide the content\n      await (0, _testHelpers.click)('button.hds-rich-tooltip__toggle');\n      // it's hidden when closed\n      assert.dom('.hds-rich-tooltip__bubble').isNotVisible();\n    });\n\n    // CALLBACKS\n\n    (0, _qunit.test)('it should invoke the `onOpen/onClose` callbacks', async function (assert) {\n      let status;\n      this.set('onOpen', () => status = 'opened');\n      this.set('onClose', () => status = 'closed');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::RichTooltip @enableClickEvents={{true}} @onOpen={{this.onOpen}} @onClose={{this.onClose}} as |RT|>\n                <RT.Toggle />\n                <RT.Bubble />\n              </Hds::RichTooltip>\n            \n      */\n      {\n        \"id\": \"he4++IsA\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\",\\\"@onOpen\\\",\\\"@onClose\\\"],[true,[30,0,[\\\"onOpen\\\"]],[30,0,[\\\"onClose\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Toggle\\\"]],null,null,null],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Bubble\\\"]],null,null,null],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"RT\\\"],false,[\\\"hds/rich-tooltip\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // toggle the visibility\n      await (0, _testHelpers.click)('button.hds-rich-tooltip__toggle');\n      assert.strictEqual(status, 'opened');\n      // toggle it again\n      await (0, _testHelpers.click)('button.hds-rich-tooltip__toggle');\n      assert.strictEqual(status, 'closed');\n    });\n\n    // ANCHORED POSITION OPTIONS\n    // unfortunately there is no easy/reliable way to test them here\n\n    // A11Y\n\n    (0, _qunit.test)('it displays the correct aria attributes for the \"toggle\" and \"bubble\" elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip @enableClickEvents={{true}} as |RT|>\n              <RT.Toggle>Toggle</RT.Toggle>\n              <RT.Bubble>Content</RT.Bubble>\n            </Hds::RichTooltip>\n          \n      */\n      {\n        \"id\": \"qJqelao5\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@enableClickEvents\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Toggle\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Toggle\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Bubble\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Content\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"RT\\\"],false,[\\\"hds/rich-tooltip\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      const bubbleElement = document.querySelector('.hds-rich-tooltip__bubble');\n      const bubbleId = bubbleElement.id;\n      // when closed\n      assert.dom('.hds-rich-tooltip__toggle').hasAttribute('type', 'button');\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('controls', bubbleId);\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('describedby', bubbleId);\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('expanded', 'false');\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('id', bubbleId);\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('tabindex', '-1');\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('role', 'tooltip');\n      assert.dom('.hds-rich-tooltip__bubble').hasAria('hidden', '');\n      // click the toggle to show the content\n      await (0, _testHelpers.click)('button.hds-rich-tooltip__toggle');\n      // when opened\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('controls', bubbleId);\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('describedby', bubbleId);\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('expanded', 'true');\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('id', bubbleId);\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('tabindex', '-1');\n      assert.dom('.hds-rich-tooltip__bubble').hasAttribute('role', 'tooltip');\n      assert.dom('.hds-rich-tooltip__bubble').doesNotHaveAria('hidden');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/rich-tooltip/toggle-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/rich-tooltip/toggle', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle id=\"test-rich-tooltip-toggle\" />\n      */\n      {\n        \"id\": \"O08str4h\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-rich-tooltip-toggle\\\"]],null,null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-rich-tooltip-toggle').hasClass('hds-rich-tooltip__toggle');\n    });\n\n    // TEXT + ICON\n\n    (0, _qunit.test)('it should render the text and icon provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @text=\"test\" @icon=\"info\" />\n      */\n      {\n        \"id\": \"lmoqFIta\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@icon\\\"],[\\\"test\\\",\\\"info\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle-text').hasText('test');\n      assert.dom('.hds-rich-tooltip__toggle-icon.hds-icon-info').exists();\n    });\n    (0, _qunit.test)('it should render only the text provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::RichTooltip::Toggle @text=\"test\" />\n            \n      */\n      {\n        \"id\": \"yJvNk9DU\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,[[\\\"@text\\\"],[\\\"test\\\"]],null],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle-text').hasText('test');\n      assert.dom('.hds-rich-tooltip__toggle-icon').doesNotExist();\n    });\n    (0, _qunit.test)('it should render only the icon provided (in the leading position by default)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @icon=\"info\" />\n      */\n      {\n        \"id\": \"3u3HY0xp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"info\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle-icon:first-child').exists();\n      assert.dom('.hds-rich-tooltip__toggle-text').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the icon in the trailing position if @iconPosition is set to trailing', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @icon=\"info\" @iconPosition=\"trailing\" />\n      */\n      {\n        \"id\": \"PTT4yseR\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@iconPosition\\\"],[\\\"info\\\",\\\"trailing\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle-icon:last-child').exists();\n      assert.dom('.hds-rich-tooltip__toggle-text').doesNotExist();\n    });\n\n    // YIELD\n\n    (0, _qunit.test)('it should yield the content provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::RichTooltip::Toggle>\n                Lorem <strong>ipsum</strong> dolor\n              </Hds::RichTooltip::Toggle>\n            \n      */\n      {\n        \"id\": \"FTvlZ9WT\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          Lorem \\\"],[10,\\\"strong\\\"],[12],[1,\\\"ipsum\\\"],[13],[1,\\\" dolor\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/rich-tooltip/toggle\\\",\\\"strong\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle').exists();\n      assert.dom('.hds-rich-tooltip__toggle').hasText('Lorem ipsum dolor');\n      assert.dom('.hds-rich-tooltip__toggle strong').hasText('ipsum');\n    });\n\n    // DISPLAY\n\n    (0, _qunit.test)('it should render the element as block by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @icon=\"info\" />\n      */\n      {\n        \"id\": \"3u3HY0xp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"info\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle--is-block').exists();\n      assert.dom('.hds-rich-tooltip__toggle-icon').doesNotHaveClass('hds-icon--is-inline');\n    });\n    (0, _qunit.test)('it should render the element as inline if `@isInline` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @isInline={{true}} @icon=\"info\" />\n      */\n      {\n        \"id\": \"tLiIGPo+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isInline\\\",\\\"@icon\\\"],[true,\\\"info\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle--is-inline').exists();\n      assert.dom('.hds-rich-tooltip__toggle-icon').hasClass('hds-icon--is-inline');\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the element with @text without sizing classes by default if no @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @text=\"test\" />\n      */\n      {\n        \"id\": \"LggZRD1P\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"test\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[class*=\"hds-rich-tooltip__toggle--size-\"]').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the correct CSS size class if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @text=\"test\" @size=\"large\" />\n      */\n      {\n        \"id\": \"LXRDcDGY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"test\\\",\\\"large\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle').hasClass('hds-rich-tooltip__toggle--size-large');\n    });\n    (0, _qunit.test)('it should render the element with yielded content without sizing classes even if the @size prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::RichTooltip::Toggle @size=\"large\">\n              test\n            </Hds::RichTooltip::Toggle>\n          \n      */\n      {\n        \"id\": \"3EYa1jyu\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@size\\\"],[\\\"large\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        test\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[class*=\"hds-rich-tooltip__toggle--size-\"]').doesNotExist();\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('it should have a set of attributes based on the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @popoverId=\"popoverId\" @isOpen={{true}} />\n      */\n      {\n        \"id\": \"arHD57kt\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@popoverId\\\",\\\"@isOpen\\\"],[\\\"popoverId\\\",true]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-rich-tooltip__toggle').hasAttribute('type', 'button');\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('controls', 'popoverId');\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('describedby', 'popoverId');\n      assert.dom('.hds-rich-tooltip__toggle').hasAria('expanded', 'true');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @iconPosition is provided', async function (assert) {\n      const errorMessage = '@iconPosition for \"Hds::RichTooltip::Toggle\" must be one of the following: leading, trailing; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @icon=\"info\" @iconPosition=\"foo\" />\n      */\n      {\n        \"id\": \"nA8BGKhb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@iconPosition\\\"],[\\\"info\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::RichTooltip::Toggle\" must be one of the following: small, medium, large; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::RichTooltip::Toggle @text=\"test\" @size=\"foo\" />\n      */\n      {\n        \"id\": \"XdVrOmdE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@size\\\"],[\\\"test\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/rich-tooltip/toggle\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/rich-tooltip/toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/segmented-group/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/segmented-group/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SegmentedGroup id=\"test-segmented-group\" />\n      */\n      {\n        \"id\": \"TSNrEBIQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-segmented-group\\\"]],null,null]],[],false,[\\\"hds/segmented-group\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/segmented-group/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-segmented-group').hasClass('hds-segmented-group');\n    });\n\n    // CONTEXTUAL COMPONENTS\n\n    (0, _qunit.test)('it renders the contextual components with CSS modifier classes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SegmentedGroup as |SG|>\n                  <SG.Button id=\"segmented-button\" @color=\"secondary\" @text=\"Button\" />\n                  <SG.Dropdown id=\"segmented-dropdown\" as |DD|>\n                    <DD.ToggleButton @color=\"secondary\" @text=\"Toggle\" />\n                    <DD.Interactive @href=\"#\" @text=\"Dropdown Item\" />\n                  </SG.Dropdown>\n                  <SG.Select id=\"segmented-select\"/>\n                  <SG.TextInput id=\"segmented-input\" />\n                  <SG.Generic><span id=\"segmented-generic\"></span></SG.Generic>\n                </Hds::SegmentedGroup>\n      */\n      {\n        \"id\": \"dLvlHYll\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Button\\\"]],[[24,1,\\\"segmented-button\\\"]],[[\\\"@color\\\",\\\"@text\\\"],[\\\"secondary\\\",\\\"Button\\\"]],null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Dropdown\\\"]],[[24,1,\\\"segmented-dropdown\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"ToggleButton\\\"]],null,[[\\\"@color\\\",\\\"@text\\\"],[\\\"secondary\\\",\\\"Toggle\\\"]],null],[1,\\\"\\\\n              \\\"],[8,[30,2,[\\\"Interactive\\\"]],null,[[\\\"@href\\\",\\\"@text\\\"],[\\\"#\\\",\\\"Dropdown Item\\\"]],null],[1,\\\"\\\\n            \\\"]],[2]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Select\\\"]],[[24,1,\\\"segmented-select\\\"]],null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"TextInput\\\"]],[[24,1,\\\"segmented-input\\\"]],null,null],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Generic\\\"]],null,null,[[\\\"default\\\"],[[[[10,1],[14,1,\\\"segmented-generic\\\"],[12],[13]],[]]]]],[1,\\\"\\\\n          \\\"]],[1]]]]]],[\\\"SG\\\",\\\"DD\\\"],false,[\\\"hds/segmented-group\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/segmented-group/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#segmented-button').hasClass('hds-button');\n      assert.dom('#segmented-dropdown').hasClass('hds-dropdown');\n      assert.dom('#segmented-select').hasClass('hds-form-select');\n      assert.dom('#segmented-input').hasClass('hds-form-text-input');\n      assert.dom('#segmented-generic').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/separator/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/separator/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Separator id=\"test-separator\" />\n      */\n      {\n        \"id\": \"6xHtQJNS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-separator\\\"]],null,null]],[],false,[\\\"hds/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/separator/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-separator').hasClass('hds-separator');\n    });\n\n    // SPACING\n\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the default vaules if no arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Separator id=\"test-separator\" />\n      */\n      {\n        \"id\": \"6xHtQJNS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-separator\\\"]],null,null]],[],false,[\\\"hds/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/separator/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-separator').hasClass('hds-separator--spacing-24');\n    });\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the arguments provided', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Separator @spacing=\"0\" id=\"test-separator\" />\n      */\n      {\n        \"id\": \"Ku4BhAs+\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-separator\\\"]],[[\\\"@spacing\\\"],[\\\"0\\\"]],null]],[],false,[\\\"hds/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/separator/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-separator').hasClass('hds-separator--spacing-0');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @spacing is provided', async function (assert) {\n      const errorMessage = '@spacing for \"Hds::Separator\" must be one of the following: 0, 24; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Separator @spacing=\"foo\" id=\"test-separator\" />\n      */\n      {\n        \"id\": \"bTU5cHh0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-separator\\\"]],[[\\\"@spacing\\\"],[\\\"foo\\\"]],null]],[],false,[\\\"hds/separator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/separator/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/base-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/base', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Base id=\"test-side-nav\" />\n      */\n      {\n        \"id\": \"73ZvyEAV\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],null,null]],[],false,[\\\"hds/side-nav/base\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders content passed to the named blocks', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Base>\n              <:root>\n                <span id=\"test-side-nav-root\" />\n              </:root>\n              <:header>\n                <span id=\"test-side-nav-header\" />\n              </:header>\n              <:body>\n                <span id=\"test-side-nav-body\" />\n              </:body>\n              <:footer>\n                <span id=\"test-side-nav-footer\" />\n              </:footer>\n            </Hds::SideNav::Base>\n          \n      */\n      {\n        \"id\": \"7Jk8P0G2\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"root\\\",\\\"header\\\",\\\"body\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-root\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-header\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-body\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-footer\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/base\\\",\\\":root\\\",\\\"span\\\",\\\":header\\\",\\\":body\\\",\\\":footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/base-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-root').exists();\n      assert.dom('#test-side-nav-header').exists();\n      assert.dom('#test-side-nav-body').exists();\n      assert.dom('#test-side-nav-footer').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/header/home-link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/home-link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::HomeLink @icon=\"hashicorp\" @ariaLabel=\"Hashicorp\" id=\"test-home-link\" />\n      */\n      {\n        \"id\": \"G0KaQ7ha\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-home-link\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\"],[\\\"hashicorp\\\",\\\"Hashicorp\\\"]],null]],[],false,[\\\"hds/side-nav/header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-home-link').hasClass('hds-side-nav__home-link');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in args', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::HomeLink @icon=\"hashicorp\" @ariaLabel=\"Hashicorp\" @href=\"https://www.hashicorp.com/\" id=\"test-home-link\" />\n      */\n      {\n        \"id\": \"/Ft0s44I\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-home-link\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\",\\\"@href\\\"],[\\\"hashicorp\\\",\\\"Hashicorp\\\",\\\"https://www.hashicorp.com/\\\"]],null]],[],false,[\\\"hds/side-nav/header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-hashicorp').exists();\n      assert.dom('#test-home-link').hasAttribute('href', 'https://www.hashicorp.com/').hasAttribute('aria-label', 'Hashicorp');\n    });\n    (0, _qunit.test)('it renders the logo with a custom passed in color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::HomeLink @icon=\"boundary\" @ariaLabel=\"Boundary\" @color=\"var(--token-color-boundary-brand)\" @href=\"#\" />\n      */\n      {\n        \"id\": \"3cWyDky+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@ariaLabel\\\",\\\"@color\\\",\\\"@href\\\"],[\\\"boundary\\\",\\\"Boundary\\\",\\\"var(--token-color-boundary-brand)\\\",\\\"#\\\"]],null]],[],false,[\\\"hds/side-nav/header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-boundary').hasAttribute('fill', 'var(--token-color-boundary-brand)');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @ariaLabel is missing/has no value', async function (assert) {\n      const errorMessage = '@ariaLabel for \"Hds::SideNav::Header::HomeLink\" (\"Logo\") must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::HomeLink @icon=\"hashicorp\" />\n      */\n      {\n        \"id\": \"ZgQTJ+yx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"hashicorp\\\"]],null]],[],false,[\\\"hds/side-nav/header/home-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/home-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/header/icon-button-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/icon-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::IconButton @icon=\"search\" @ariaLabel=\"Search\" id=\"test-side-nav-icon-button\" />\n      */\n      {\n        \"id\": \"ldggdIwX\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-icon-button\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\"],[\\\"search\\\",\\\"Search\\\"]],null]],[],false,[\\\"hds/side-nav/header/icon-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-icon-button').hasClass('hds-side-nav__icon-button');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the passed in args', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::IconButton @icon=\"search\" @ariaLabel=\"Search\" id=\"test-side-nav-button\" />\n      */\n      {\n        \"id\": \"DXY83Zd5\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-button\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\"],[\\\"search\\\",\\\"Search\\\"]],null]],[],false,[\\\"hds/side-nav/header/icon-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-search').exists();\n    });\n\n    // GENERATED ELEMENTS\n\n    (0, _qunit.test)('it should render a <button> if no @href or @route is passed (default)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::IconButton @icon=\"search\" @ariaLabel=\"Search\" id=\"test-side-nav-button\" />\n      */\n      {\n        \"id\": \"DXY83Zd5\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-button\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\"],[\\\"search\\\",\\\"Search\\\"]],null]],[],false,[\\\"hds/side-nav/header/icon-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-button').hasTagName('button');\n    });\n    (0, _qunit.test)('it should render a <a> link if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::IconButton @icon=\"search\" @ariaLabel=\"Search\" @href=\"https://www.hashicorp.com/\" id=\"test-side-nav-button\" />\n      */\n      {\n        \"id\": \"uAimOfDy\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-button\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\",\\\"@href\\\"],[\\\"search\\\",\\\"Search\\\",\\\"https://www.hashicorp.com/\\\"]],null]],[],false,[\\\"hds/side-nav/header/icon-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-button').hasTagName('a').hasAttribute('href', 'https://www.hashicorp.com/');\n    });\n    (0, _qunit.test)('it should render a <a> link if @route is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::IconButton @icon=\"search\" @ariaLabel=\"Search\" @route=\"utilities.interactive\" id=\"test-side-nav-button\" />\n      */\n      {\n        \"id\": \"Sfat1VC0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-button\\\"]],[[\\\"@icon\\\",\\\"@ariaLabel\\\",\\\"@route\\\"],[\\\"search\\\",\\\"Search\\\",\\\"utilities.interactive\\\"]],null]],[],false,[\\\"hds/side-nav/header/icon-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-button').hasTagName('a').hasAttribute('href', '/utilities/interactive');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @ariaLabel is missing/has no value', async function (assert) {\n      const errorMessage = '@ariaLabel for \"Hds::SideNav::Header::IconButton\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header::IconButton @icon=\"search\" />\n      */\n      {\n        \"id\": \"0VJGk3zb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\"],[\\\"search\\\"]],null]],[],false,[\\\"hds/side-nav/header/icon-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/header/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Header id=\"test-side-nav-header\"/>\n      */\n      {\n        \"id\": \"yXfrbMXY\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-header\\\"]],null,null]],[],false,[\\\"hds/side-nav/header\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-header').hasClass('hds-side-nav-header');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders passed in content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Header>\n              <:logo>\n                <div id=\"test-side-nav-logo\"></div>\n              </:logo>\n              <:actions>\n                <div id=\"test-side-nav-actions\"></div>\n              </:actions>\n            </Hds::SideNav::Header>\n          \n      */\n      {\n        \"id\": \"EKfuzBZO\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"logo\\\",\\\"actions\\\"],[[[[1,\\\"\\\\n          \\\"],[10,0],[14,1,\\\"test-side-nav-logo\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,0],[14,1,\\\"test-side-nav-actions\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/header\\\",\\\":logo\\\",\\\"div\\\",\\\":actions\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/header/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-logo').exists();\n      assert.dom('#test-side-nav-actions').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav id=\"test-side-nav\" @hasA11yRefocus={{false}} />\n      */\n      {\n        \"id\": \"+LMlyhC5\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],[[\\\"@hasA11yRefocus\\\"],[false]],null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders content passed to the named blocks', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav @hasA11yRefocus={{false}}>\n              <:header>\n                <span id=\"test-side-nav-header\" />\n              </:header>\n              <:body>\n                <span id=\"test-side-nav-body\" />\n              </:body>\n              <:footer>\n                <span id=\"test-side-nav-footer\" />\n              </:footer>\n            </Hds::SideNav>\n          \n      */\n      {\n        \"id\": \"nhddPZQv\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@hasA11yRefocus\\\"],[false]],[[\\\"header\\\",\\\"body\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-header\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-body\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-footer\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav\\\",\\\":header\\\",\\\"span\\\",\\\":body\\\",\\\":footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-header').exists();\n      assert.dom('#test-side-nav-body').exists();\n      assert.dom('#test-side-nav-footer').exists();\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it renders the `a11y-refocus` elements by default with a default skip link href value of \"#hds-main', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav />\n      */\n      {\n        \"id\": \"+pXGL5Yl\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#ember-a11y-refocus-nav-message').exists();\n      assert.dom('#ember-a11y-refocus-skip-link').exists().hasAttribute('href', '#hds-main');\n    });\n    (0, _qunit.test)('it renders the `a11y-refocus` elements with the right properties provided as arguments', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav\n              @a11yRefocusSkipTo=\"test-skip-to\"\n              @a11yRefocusSkipText=\"test-skip-text\"\n              @a11yRefocusNavigationText=\"test-navigation-text\"\n            />\n          \n      */\n      {\n        \"id\": \"ZzI7jg+n\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@a11yRefocusSkipTo\\\",\\\"@a11yRefocusSkipText\\\",\\\"@a11yRefocusNavigationText\\\"],[\\\"test-skip-to\\\",\\\"test-skip-text\\\",\\\"test-navigation-text\\\"]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#ember-a11y-refocus-nav-message').hasText('test-navigation-text');\n      assert.dom('#ember-a11y-refocus-skip-link').hasText('test-skip-text');\n      assert.dom('#ember-a11y-refocus-skip-link').hasAttribute('href', '#test-skip-to');\n    });\n    (0, _qunit.test)('it does not render the `a11y-refocus` elements if `hasA11yRefocus` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav @hasA11yRefocus={{false}} />\n      */\n      {\n        \"id\": \"wUPgLfur\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@hasA11yRefocus\\\"],[false]],null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#ember-a11y-refocus-nav-message').doesNotExist();\n      assert.dom('#ember-a11y-refocus-skip-link').doesNotExist();\n    });\n\n    // RESPONSIVENESS\n\n    (0, _qunit.test)('it is \"desktop\" by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav id=\"test-side-nav\" />\n      */\n      {\n        \"id\": \"yREUQZ3T\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],null,null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-desktop');\n    });\n    (0, _qunit.test)('it is \"responsive\" by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav id=\"test-side-nav\" />\n      */\n      {\n        \"id\": \"yREUQZ3T\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],null,null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-responsive');\n    });\n    (0, _qunit.test)('it is not \"responsive\" if `isResponsive` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav id=\"test-side-nav\" @isResponsive={{false}} />\n      */\n      {\n        \"id\": \"x2kFYQvt\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],[[\\\"@isResponsive\\\"],[false]],null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').doesNotHaveClass('hds-side-nav--is-responsive');\n    });\n\n    // MOBILE\n\n    (0, _qunit.test)('it is \"mobile\" on narrow viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" />\n          \n      */\n      {\n        \"id\": \"ILa78c3T\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-mobile');\n    });\n    (0, _qunit.test)('it is minimized/collapsed on narrow viewports by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" />\n          \n      */\n      {\n        \"id\": \"ILa78c3T\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n    });\n    (0, _qunit.test)('it is not minimized/collapsed on narrow viewports if `isResponsive` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" @isResponsive={{false}} />\n          \n      */\n      {\n        \"id\": \"P/KT6tqj\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],[[\\\"@isResponsive\\\"],[false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-not-minimized');\n    });\n    (0, _qunit.test)('it shows a toggle button on narrow viewports by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" />\n          \n      */\n      {\n        \"id\": \"ILa78c3T\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__toggle-button').exists();\n    });\n    (0, _qunit.test)('it does not show a toggle button on narrow viewports if `isResponsive` is false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" @isResponsive={{false}} />\n          \n      */\n      {\n        \"id\": \"P/KT6tqj\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],[[\\\"@isResponsive\\\"],[false]],null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__toggle-button').doesNotExist();\n    });\n    (0, _qunit.test)('it expands/collapses when the toggle button is pressed on narrow viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" />\n          \n      */\n      {\n        \"id\": \"ILa78c3T\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-not-minimized');\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n    });\n    (0, _qunit.test)('it collapses when the ESC key is pressed on narrow viewports', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <style>:root {--hds-app-desktop-breakpoint: 10088px}</style>\n            <Hds::SideNav id=\"test-side-nav\" />\n          \n      */\n      {\n        \"id\": \"ILa78c3T\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,\\\"style\\\"],[12],[1,\\\":root {--hds-app-desktop-breakpoint: 10088px}\\\"],[13],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,1,\\\"test-side-nav\\\"]],null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"style\\\",\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-not-minimized');\n      await (0, _testHelpers.triggerKeyEvent)('#test-side-nav', 'keydown', 'Escape');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n    });\n\n    // COLLAPSIBLE\n\n    (0, _qunit.test)('it responds to different events to toggle between \"non-minimized\" (by default) and \"mimimized\" states', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav @isCollapsible={{true}} id=\"test-side-nav\" />\n      */\n      {\n        \"id\": \"6x3tE1rJ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],[[\\\"@isCollapsible\\\"],[true]],null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-not-minimized');\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-not-minimized');\n    });\n    (0, _qunit.test)('the \"non-minimized\" and \"minimized\" states have impact on its internal properties', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav @isCollapsible={{true}} id=\"test-side-nav\">\n              <:header as |H|>\n                <span id=\"test-side-nav-header\" data-test-minimized={{H.isMinimized}} />\n              </:header>\n              <:body as |B|>\n                <span id=\"test-side-nav-body\" data-test-minimized={{B.isMinimized}} />\n                <span class=\"hds-side-nav-hide-when-minimized\" />\n              </:body>\n              <:footer as |F|>\n                <span id=\"test-side-nav-footer\" data-test-minimized={{F.isMinimized}} />\n              </:footer>\n            </Hds::SideNav>\n          \n      */\n      {\n        \"id\": \"BIPzzRZC\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-side-nav\\\"]],[[\\\"@isCollapsible\\\"],[true]],[[\\\"header\\\",\\\"body\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-header\\\"],[15,\\\"data-test-minimized\\\",[30,1,[\\\"isMinimized\\\"]]],[12],[13],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-body\\\"],[15,\\\"data-test-minimized\\\",[30,2,[\\\"isMinimized\\\"]]],[12],[13],[1,\\\"\\\\n          \\\"],[10,1],[14,0,\\\"hds-side-nav-hide-when-minimized\\\"],[12],[13],[1,\\\"\\\\n        \\\"]],[2]],[[[1,\\\"\\\\n          \\\"],[10,1],[14,1,\\\"test-side-nav-footer\\\"],[15,\\\"data-test-minimized\\\",[30,3,[\\\"isMinimized\\\"]]],[12],[13],[1,\\\"\\\\n        \\\"]],[3]]]]],[1,\\\"\\\\n    \\\"]],[\\\"H\\\",\\\"B\\\",\\\"F\\\"],false,[\\\"hds/side-nav\\\",\\\":header\\\",\\\"span\\\",\\\":body\\\",\\\":footer\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-not-minimized');\n      assert.dom('.hds-side-nav__toggle-button').hasAttribute('aria-label', 'Close menu');\n      assert.dom('.hds-side-nav__toggle-button .hds-icon').hasClass('hds-icon-chevrons-left');\n      assert.dom('#test-side-nav-header').doesNotHaveAttribute('data-test-minimized');\n      assert.dom('#test-side-nav-body').doesNotHaveAttribute('data-test-minimized');\n      assert.dom('#test-side-nav-footer').doesNotHaveAttribute('data-test-minimized');\n      assert.dom('.hds-side-nav-hide-when-minimized').doesNotHaveAttribute('inert');\n      assert.dom('#test-side-nav-body').doesNotHaveAttribute('inert');\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.dom('#test-side-nav').hasClass('hds-side-nav--is-minimized');\n      assert.dom('.hds-side-nav__toggle-button').hasAttribute('aria-label', 'Open menu');\n      assert.dom('.hds-side-nav__toggle-button .hds-icon').hasClass('hds-icon-chevrons-right');\n      assert.dom('#test-side-nav-header').hasAttribute('data-test-minimized');\n      assert.dom('#test-side-nav-body').hasAttribute('data-test-minimized');\n      assert.dom('#test-side-nav-footer').hasAttribute('data-test-minimized');\n      assert.dom('.hds-side-nav-hide-when-minimized').hasAttribute('inert');\n      assert.dom('#test-side-nav-body').doesNotHaveAttribute('inert');\n    });\n\n    // CALLBACKS\n\n    (0, _qunit.test)('it should call `onToggleMinimizedStatus` function if provided', async function (assert) {\n      let toggled = false;\n      this.set('onToggleMinimizedStatus', () => toggled = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav @isCollapsible={{true}} @onToggleMinimizedStatus={{this.onToggleMinimizedStatus}} />\n      */\n      {\n        \"id\": \"weR6I6bE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isCollapsible\\\",\\\"@onToggleMinimizedStatus\\\"],[true,[30,0,[\\\"onToggleMinimizedStatus\\\"]]]],null]],[],false,[\\\"hds/side-nav\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('.hds-side-nav__toggle-button');\n      assert.ok(toggled);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/list/back-link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/list/back-link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // Basic\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::BackLink id=\"test-side-nav-list-item-link-back-link\" />\n      */\n      {\n        \"id\": \"W70YlBEf\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-list-item-link-back-link\\\"]],null,null]],[],false,[\\\"hds/side-nav/list/back-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/back-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-list-item-link-back-link').hasClass('hds-side-nav__list-item-link--back-link');\n    });\n\n    // Test Content / Args\n\n    (0, _qunit.test)('it renders the passed in args', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::BackLink @text=\"Back to parent page\" @href=\"#\" />\n      */\n      {\n        \"id\": \"z4czi6ud\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@href\\\"],[\\\"Back to parent page\\\",\\\"#\\\"]],null]],[],false,[\\\"hds/side-nav/list/back-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/back-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-chevron-left').exists();\n      assert.dom('.hds-side-nav__list-item-text').hasText('Back to parent page');\n    });\n\n    // GENERATED ELEMENTS\n\n    (0, _qunit.test)('it should render a <button> if no @href or @route is passed (default)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::BackLink />\n      */\n      {\n        \"id\": \"5mNEmIBb\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/side-nav/list/back-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/back-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-item-link--back-link').hasTagName('button');\n    });\n    (0, _qunit.test)('it should render a <a> link if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::BackLink @href=\"https://www.hashicorp.com/\" />\n      */\n      {\n        \"id\": \"KNX8Qt4D\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@href\\\"],[\\\"https://www.hashicorp.com/\\\"]],null]],[],false,[\\\"hds/side-nav/list/back-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/back-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-item-link--back-link').hasTagName('a').hasAttribute('href', 'https://www.hashicorp.com/');\n    });\n    (0, _qunit.test)('it should render a <a> link if @route is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::BackLink @route=\"utilities.interactive\" />\n      */\n      {\n        \"id\": \"Hu3LB4XD\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\"],[\\\"utilities.interactive\\\"]],null]],[],false,[\\\"hds/side-nav/list/back-link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/back-link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-item-link--back-link').hasTagName('a').hasAttribute('href', '/utilities/interactive');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/list/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/list/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // Basic\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List id=\"test-side-nav-list-wrapper\" />\n      */\n      {\n        \"id\": \"Wc6R78l4\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-list-wrapper\\\"]],null,null]],[],false,[\\\"hds/side-nav/list\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-list-wrapper').hasClass('hds-side-nav__list-wrapper');\n    });\n\n    // Test Content / Args\n\n    (0, _qunit.test)('it renders passed in yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::List as |L|>\n              <L.Item id=\"test-side-nav-list-content-item\" />\n              <L.BackLink id=\"test-side-nav-list-content-backlink\" />\n              <L.Title id=\"test-side-nav-list-content-title\" />\n              <L.Link id=\"test-side-nav-list-content-link\" />\n            </Hds::SideNav::List>\n          \n      */\n      {\n        \"id\": \"ffUhX2Kk\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-side-nav-list-content-item\\\"]],null,null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"BackLink\\\"]],[[24,1,\\\"test-side-nav-list-content-backlink\\\"]],null,null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],[[24,1,\\\"test-side-nav-list-content-title\\\"]],null,null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Link\\\"]],[[24,1,\\\"test-side-nav-list-content-link\\\"]],null,null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"L\\\"],false,[\\\"hds/side-nav/list\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-list-content-item').exists();\n      assert.dom('#test-side-nav-list-content-backlink').exists();\n      assert.dom('#test-side-nav-list-content-title').exists();\n      assert.dom('#test-side-nav-list-content-link').exists();\n    });\n\n    // Accessibilty feature\n    (0, _qunit.test)('it has the role of \"list\" role so Safari will identify it correctly as a list since the list-style is changed in the CSS', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::List />\n          \n      */\n      {\n        \"id\": \"1uuKcvIR\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,null],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/list\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list').hasAttribute('role', 'list');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/list/item-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/list/item', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // Basic\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Item id=\"test-side-nav-list-item\" />\n      */\n      {\n        \"id\": \"9UclPTF8\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-list-item\\\"]],null,null]],[],false,[\\\"hds/side-nav/list/item\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-list-item').hasClass('hds-side-nav__list-item');\n    });\n\n    // Test Content\n\n    (0, _qunit.test)('it renders the passed in custom content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::List::Item>\n              <span id=\"test-custom-content\" />\n            </Hds::SideNav::List::Item>\n          \n      */\n      {\n        \"id\": \"B8Tk4bSo\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,1],[14,1,\\\"test-custom-content\\\"],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/list/item\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/item-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-custom-content').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/list/link-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/side-nav/list/link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // Basic\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Link id=\"test-side-nav-list-item-link\" />\n      */\n      {\n        \"id\": \"40P+FfE2\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-list-item-link\\\"]],null,null]],[],false,[\\\"hds/side-nav/list/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-list-item-link').hasClass('hds-side-nav__list-item-link');\n    });\n\n    // Test Content / Args\n\n    (0, _qunit.test)('it renders the passed in args', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Link @icon=\"boundary\" @text=\"Boundary\" @count=\"3\" @badge=\"Alpha\" @hasSubItems={{true}} @isHrefExternal={{true}} />\n      */\n      {\n        \"id\": \"m5q4hX1p\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@icon\\\",\\\"@text\\\",\\\"@count\\\",\\\"@badge\\\",\\\"@hasSubItems\\\",\\\"@isHrefExternal\\\"],[\\\"boundary\\\",\\\"Boundary\\\",\\\"3\\\",\\\"Alpha\\\",true,true]],null]],[],false,[\\\"hds/side-nav/list/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-boundary').exists();\n      assert.dom('.hds-side-nav__list-item-text').hasText('Boundary');\n      assert.dom('.hds-badge-count').hasText('3');\n      assert.dom('.hds-badge').hasText('Alpha');\n      assert.dom('.hds-icon-chevron-right').exists();\n      assert.dom('.hds-icon-external-link').exists();\n    });\n    (0, _qunit.test)('it renders the link as \"active\" if @isActive is true', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Link @isActive={{true}} id=\"test-side-nav-link\" />\n      */\n      {\n        \"id\": \"8WpGS6DE\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-link\\\"]],[[\\\"@isActive\\\"],[true]],null]],[],false,[\\\"hds/side-nav/list/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-link').hasClass('active');\n    });\n    (0, _qunit.test)('it renders the passed in custom content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::List::Link>\n              <span id=\"test-custom-content\" />\n            </Hds::SideNav::List::Link>\n          \n      */\n      {\n        \"id\": \"PZV88aqM\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,1],[14,1,\\\"test-custom-content\\\"],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/list/link\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-custom-content').exists();\n    });\n\n    // GENERATED ELEMENTS\n\n    (0, _qunit.test)('it should render a <button> if no @href or @route is passed (default)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Link />\n      */\n      {\n        \"id\": \"5CaNvTxU\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"hds/side-nav/list/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-item-link').hasTagName('button');\n    });\n    (0, _qunit.test)('it should render a <a> link if @href is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Link @href=\"https://www.hashicorp.com/\" />\n      */\n      {\n        \"id\": \"rAaKzLRx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@href\\\"],[\\\"https://www.hashicorp.com/\\\"]],null]],[],false,[\\\"hds/side-nav/list/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-item-link').hasTagName('a').hasAttribute('href', 'https://www.hashicorp.com/');\n    });\n    (0, _qunit.test)('it should render a <a> link if @route is passed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::List::Link @route=\"utilities.interactive\" />\n      */\n      {\n        \"id\": \"LjZRqlhO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\"],[\\\"utilities.interactive\\\"]],null]],[],false,[\\\"hds/side-nav/list/link\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/list/link-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-item-link').hasTagName('a').hasAttribute('href', '/utilities/interactive');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/side-nav/portal/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // NOTICE: we combine the tests for `PortalTarget` and `Portal` in a single file, because the two components are strictly interconnected\n  (0, _qunit.module)('Integration | Component | hds/side-nav/portal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::SideNav::Portal::Target id=\"test-side-nav-portal-target\" />\n      */\n      {\n        \"id\": \"3peGgOZJ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-side-nav-portal-target\\\"]],null,null]],[],false,[\\\"hds/side-nav/portal/target\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-portal-target').hasClass('hds-side-nav__content');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders the content provided via portal', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Portal::Target />\n            <Hds::SideNav::Portal>\n              <div id=\"test-side-nav-content-portaled\" />\n            </Hds::SideNav::Portal>\n          \n      */\n      {\n        \"id\": \"0tvoFJ5c\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,null],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"test-side-nav-content-portaled\\\"],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/portal/target\\\",\\\"hds/side-nav/portal\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-content-portaled').exists();\n    });\n    (0, _qunit.test)('we can use custom a custom name for the target portal', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Portal::Target @targetName=\"test-side-nav-portal-target\" />\n            <Hds::SideNav::Portal @targetName=\"test-side-nav-portal-target\">\n              <div id=\"test-side-nav-content-portaled\" />\n            </Hds::SideNav::Portal>\n          \n      */\n      {\n        \"id\": \"fRjXlSWq\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,[[\\\"@targetName\\\"],[\\\"test-side-nav-portal-target\\\"]],null],[1,\\\"\\\\n      \\\"],[8,[39,1],null,[[\\\"@targetName\\\"],[\\\"test-side-nav-portal-target\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"test-side-nav-content-portaled\\\"],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/portal/target\\\",\\\"hds/side-nav/portal\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-content-portaled').exists();\n    });\n    (0, _qunit.test)('it renders the panel items provided via portal, in the right DOM location', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Portal::Target id=\"test-side-nav-content\" />\n            <Hds::SideNav::Portal as |Nav|>\n              <Nav.BackLink @text=\"Back-link\" @href=\"#\" id=\"test-side-nav-list-backlink\" />\n              <Nav.Title id=\"test-side-nav-list-title\">Title</Nav.Title>\n              <Nav.Item id=\"test-side-nav-list-item\">Item</Nav.Item>\n              <Nav.Link @icon=\"hexagon\" @text=\"Link\" @href=\"#\" id=\"test-side-nav-list-link\" />\n            </Hds::SideNav::Portal>\n          \n      */\n      {\n        \"id\": \"zn0i1s1/\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-side-nav-content\\\"]],null,null],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"BackLink\\\"]],[[24,1,\\\"test-side-nav-list-backlink\\\"]],[[\\\"@text\\\",\\\"@href\\\"],[\\\"Back-link\\\",\\\"#\\\"]],null],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Title\\\"]],[[24,1,\\\"test-side-nav-list-title\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Title\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Item\\\"]],[[24,1,\\\"test-side-nav-list-item\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Item\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Link\\\"]],[[24,1,\\\"test-side-nav-list-link\\\"]],[[\\\"@icon\\\",\\\"@text\\\",\\\"@href\\\"],[\\\"hexagon\\\",\\\"Link\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Nav\\\"],false,[\\\"hds/side-nav/portal/target\\\",\\\"hds/side-nav/portal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-side-nav-content .hds-side-nav__content-panels .hds-side-nav__content-panel').exists();\n      assert.dom('#test-side-nav-list-backlink').hasClass('hds-side-nav__list-item-link--back-link');\n      assert.dom('#test-side-nav-list-backlink').hasText('Back-link');\n      assert.dom('#test-side-nav-list-title').hasClass('hds-side-nav__list-title');\n      assert.dom('#test-side-nav-list-title').hasText('Title');\n      assert.dom('#test-side-nav-list-item').hasClass('hds-side-nav__list-item');\n      assert.dom('#test-side-nav-list-item').hasText('Item');\n      assert.dom('#test-side-nav-list-link').hasClass('hds-side-nav__list-item-link');\n      assert.dom('#test-side-nav-list-link').hasText('Link');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it should render with the correct aria-label attribute passed down to the \"list\" parent', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Portal::Target />\n            <Hds::SideNav::Portal @ariaLabel=\"test\">\n              <div/>\n            </Hds::SideNav::Portal>\n          \n      */\n      {\n        \"id\": \"2uVp3ohw\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,null],[1,\\\"\\\\n      \\\"],[8,[39,1],null,[[\\\"@ariaLabel\\\"],[\\\"test\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[10,0],[12],[13],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"hds/side-nav/portal/target\\\",\\\"hds/side-nav/portal\\\",\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-side-nav__list-wrapper').hasAttribute('aria-label', 'test');\n    });\n\n    // DOM MANIPULATION\n\n    (0, _qunit.test)('it marks inactive subnavs', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Portal::Target />\n            <Hds::SideNav::Portal data-test-side-nav-panel as |Nav|>\n              <Nav.Link @text=\"Some link content\" @href=\"#\" />\n            </Hds::SideNav::Portal>\n            <Hds::SideNav::Portal data-test-side-nav-panel as |Nav|>\n              <Nav.Link @text=\"Some other link content\" @href=\"#\" />\n            </Hds::SideNav::Portal>\n            <Hds::SideNav::Portal data-test-side-nav-panel as |Nav|>\n              <Nav.Link @text=\"The last link content\" @href=\"#\" />\n            </Hds::SideNav::Portal>\n          \n      */\n      {\n        \"id\": \"FT+/eWY/\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,null],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,\\\"data-test-side-nav-panel\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Link\\\"]],null,[[\\\"@text\\\",\\\"@href\\\"],[\\\"Some link content\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,\\\"data-test-side-nav-panel\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,2,[\\\"Link\\\"]],null,[[\\\"@text\\\",\\\"@href\\\"],[\\\"Some other link content\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"],[8,[39,1],[[24,\\\"data-test-side-nav-panel\\\",\\\"\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,3,[\\\"Link\\\"]],null,[[\\\"@text\\\",\\\"@href\\\"],[\\\"The last link content\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[3]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Nav\\\",\\\"Nav\\\",\\\"Nav\\\"],false,[\\\"hds/side-nav/portal/target\\\",\\\"hds/side-nav/portal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test-side-nav-panel]').exists({\n        count: 3\n      });\n      assert.dom('[data-test-side-nav-panel]:nth-child(1)').hasStyle({\n        visibility: 'hidden'\n      });\n      assert.dom('[data-test-side-nav-panel]:nth-child(2)').hasStyle({\n        visibility: 'hidden'\n      });\n      assert.dom('[data-test-side-nav-panel]:nth-child(3)').hasStyle({\n        visibility: 'visible'\n      });\n    });\n    (0, _qunit.test)('it sets transform on the container', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::SideNav::Portal::Target id=\"test-side-nav-content\" />\n            <Hds::SideNav::Portal as |Nav|>\n              <Nav.Link @text=\"Some link content\" @href=\"#\" id=\"test-side-nav-list-link-1\" data-test-side-nav-link-2 />\n            </Hds::SideNav::Portal>\n            <Hds::SideNav::Portal as |Nav|>\n              <Nav.Link @text=\"Some other link content\" @href=\"#\" id=\"test-side-nav-list-link-2\" data-test-side-nav-link-2 />\n            </Hds::SideNav::Portal>\n            <Hds::SideNav::Portal as |Nav|>\n              <Nav.Link @text=\"The last link content\" @href=\"#\" id=\"test-side-nav-list-link-3\" data-test-side-nav-link-3 />\n            </Hds::SideNav::Portal>\n          \n      */\n      {\n        \"id\": \"Y8ake0O6\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-side-nav-content\\\"]],null,null],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Link\\\"]],[[24,1,\\\"test-side-nav-list-link-1\\\"],[24,\\\"data-test-side-nav-link-2\\\",\\\"\\\"]],[[\\\"@text\\\",\\\"@href\\\"],[\\\"Some link content\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,2,[\\\"Link\\\"]],[[24,1,\\\"test-side-nav-list-link-2\\\"],[24,\\\"data-test-side-nav-link-2\\\",\\\"\\\"]],[[\\\"@text\\\",\\\"@href\\\"],[\\\"Some other link content\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[2]]]]],[1,\\\"\\\\n      \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,3,[\\\"Link\\\"]],[[24,1,\\\"test-side-nav-list-link-3\\\"],[24,\\\"data-test-side-nav-link-3\\\",\\\"\\\"]],[[\\\"@text\\\",\\\"@href\\\"],[\\\"The last link content\\\",\\\"#\\\"]],null],[1,\\\"\\\\n      \\\"]],[3]]]]],[1,\\\"\\\\n    \\\"]],[\\\"Nav\\\",\\\"Nav\\\",\\\"Nav\\\"],false,[\\\"hds/side-nav/portal/target\\\",\\\"hds/side-nav/portal\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/side-nav/portal/index-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // we need to wait for\n      let animationDone = false;\n      await (0, _testHelpers.waitUntil)(function () {\n        setTimeout(() => {\n          animationDone = true;\n        }, 1000);\n        return animationDone;\n      });\n\n      // element.animate() API, converts transforms into matricies so\n      // 'matrix(1, 0, 0, 1, -560, 0)' is the same as translateX('-560px')\n      assert.dom('.hds-side-nav__content-panels').hasStyle({\n        transform: 'matrix(1, 0, 0, 1, -560, 0)'\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/stepper/step-indicator-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/stepper/indicator/step', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @text=\"1\" @status=\"incomplete\" />\n      */\n      {\n        \"id\": \"lfgezAE/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@text\\\",\\\"@status\\\"],[\\\"1\\\",\\\"incomplete\\\"]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-step').hasClass('hds-stepper-indicator-step');\n    });\n\n    // IS INTERACTIVE\n\n    (0, _qunit.test)('it should render the non-interactive variant by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @status=\"incomplete\" @test=\"1\" />\n      */\n      {\n        \"id\": \"eeVRz+Xk\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@status\\\",\\\"@test\\\"],[\\\"incomplete\\\",\\\"1\\\"]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      // Is there a way to test if an element DOESN'T have a class?\n      assert.dom('#test-stepper-indicator-step').hasClass('hds-stepper-indicator-step');\n    });\n    (0, _qunit.test)('it should render the interactive variant if passed the isInteractive property', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @status=\"incomplete\" @isInteractive={{true}} />\n      */\n      {\n        \"id\": \"eItzsEhj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@status\\\",\\\"@isInteractive\\\"],[\\\"incomplete\\\",true]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-step').hasClass('hds-stepper-indicator-step--is-interactive');\n    });\n\n    // STATUS\n\n    // -- NON INTERACTIVE\n\n    (0, _qunit.test)('it should render the correct step status if the @status=\"incomplete\" prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @status=\"incomplete\" />\n      */\n      {\n        \"id\": \"nweCFaAU\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@status\\\"],[\\\"incomplete\\\"]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-step').hasClass('hds-stepper-indicator-step--status-incomplete');\n    });\n\n    // -- INTERACTIVE\n\n    (0, _qunit.test)('it should render the correct status if the @status=\"incomplete\" prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @status=\"incomplete\" @isInteractive={{true}} />\n      */\n      {\n        \"id\": \"eItzsEhj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@status\\\",\\\"@isInteractive\\\"],[\\\"incomplete\\\",true]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-step').hasClass('hds-stepper-indicator-step--status-incomplete').hasClass('hds-stepper-indicator-step--is-interactive');\n    });\n\n    // TEXT\n\n    (0, _qunit.test)('it should render text within the indicator if the @text prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @status=\"incomplete\" @text=\"1\" />\n      */\n      {\n        \"id\": \"7MqDKVsE\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@status\\\",\\\"@text\\\"],[\\\"incomplete\\\",\\\"1\\\"]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-step').hasText('1');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should render a flight icon if the @status=\"processing\" prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Step::Indicator id=\"test-stepper-indicator-step\" @status=\"processing\" />\n      */\n      {\n        \"id\": \"pUWxzCTQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-step\\\"]],[[\\\"@status\\\"],[\\\"processing\\\"]],null]],[],false,[\\\"hds/stepper/step/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/step-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-loading').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/stepper/task-indicator-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/stepper/indicator/task', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Task::Indicator id=\"test-stepper-indicator-task\" @status=\"incomplete\" />\n      */\n      {\n        \"id\": \"DL2O4a8q\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-task\\\"]],[[\\\"@status\\\"],[\\\"incomplete\\\"]],null]],[],false,[\\\"hds/stepper/task/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/task-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-task').hasClass('hds-stepper-indicator-task');\n    });\n\n    // IS INTERACTIVE\n\n    (0, _qunit.test)('it should render the non-interactive variant by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Task::Indicator id=\"test-stepper-indicator-task\" @status=\"incomplete\" />\n      */\n      {\n        \"id\": \"DL2O4a8q\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-task\\\"]],[[\\\"@status\\\"],[\\\"incomplete\\\"]],null]],[],false,[\\\"hds/stepper/task/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/task-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-task').hasClass('hds-stepper-indicator-task');\n    });\n    (0, _qunit.test)('it should render the interactive variant if passed the isInteractive property', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Task::Indicator id=\"test-stepper-indicator-task\" @status=\"incomplete\" @isInteractive={{true}} />\n      */\n      {\n        \"id\": \"2tYO0OGW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-task\\\"]],[[\\\"@status\\\",\\\"@isInteractive\\\"],[\\\"incomplete\\\",true]],null]],[],false,[\\\"hds/stepper/task/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/task-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-task').hasClass('hds-stepper-indicator-task--is-interactive');\n    });\n\n    // STATUS\n\n    // -- NON INTERACTIVE\n\n    (0, _qunit.test)('it should render the correct task status if the @status=\"incomplete\" prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Task::Indicator id=\"test-stepper-indicator-task\" @status=\"incomplete\" />\n      */\n      {\n        \"id\": \"DL2O4a8q\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-task\\\"]],[[\\\"@status\\\"],[\\\"incomplete\\\"]],null]],[],false,[\\\"hds/stepper/task/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/task-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-task').hasClass('hds-stepper-indicator-task--status-incomplete');\n    });\n\n    // -- INTERACTIVE\n\n    (0, _qunit.test)('it should render the correct status if the @status=\"incomplete\" prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Task::Indicator id=\"test-stepper-indicator-task\" @status=\"incomplete\" @isInteractive={{true}} />\n      */\n      {\n        \"id\": \"2tYO0OGW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-task\\\"]],[[\\\"@status\\\",\\\"@isInteractive\\\"],[\\\"incomplete\\\",true]],null]],[],false,[\\\"hds/stepper/task/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/task-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-stepper-indicator-task').hasClass('hds-stepper-indicator-task--status-incomplete').hasClass('hds-stepper-indicator-task--is-interactive');\n    });\n\n    // ICON\n\n    (0, _qunit.test)('it should render a flight icon for any of the variants', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Stepper::Task::Indicator id=\"test-stepper-indicator-task\" @status=\"processing\" />\n      */\n      {\n        \"id\": \"e6Y1x4Fz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-stepper-indicator-task\\\"]],[[\\\"@status\\\"],[\\\"processing\\\"]],null]],[],false,[\\\"hds/stepper/task/indicator\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/stepper/task-indicator-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-icon-loading').exists();\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/table/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // we're using this for multiple tests so we'll declare context once and use it when we need it.\n  const setSortableTableData = context => {\n    context.set('model', [{\n      id: '1',\n      type: 'folk',\n      artist: 'Nick Drake',\n      album: 'Pink Moon',\n      year: '1972'\n    }, {\n      id: '2',\n      type: 'folk',\n      artist: 'The Beatles',\n      album: 'Abbey Road',\n      year: '1969'\n    }, {\n      id: '3',\n      type: 'folk',\n      artist: 'Melanie',\n      album: 'Candles in the Rain',\n      year: '1971'\n    }]);\n    context.set('columns', [{\n      key: 'artist',\n      label: 'Artist',\n      isSortable: true\n    }, {\n      key: 'album',\n      label: 'Album',\n      isSortable: true\n    }, {\n      key: 'year',\n      label: 'Year'\n    }]);\n    context.set('sortBy', 'artist');\n    context.set('sortOrder', 'asc');\n  };\n  const setSelectableTableData = context => {\n    context.set('model', [{\n      id: '1',\n      type: 'folk',\n      artist: 'Nick Drake',\n      album: 'Pink Moon',\n      year: '1972'\n    }, {\n      id: '2',\n      type: 'folk',\n      artist: 'The Beatles',\n      album: 'Abbey Road',\n      year: '1969'\n    }, {\n      id: '3',\n      type: 'folk',\n      artist: 'Melanie',\n      album: 'Candles in the Rain',\n      year: '1971'\n    }]);\n    context.set('columns', [{\n      key: 'artist',\n      label: 'Artist'\n    }, {\n      key: 'album',\n      label: 'Album'\n    }, {\n      key: 'year',\n      label: 'Year'\n    }]);\n  };\n  const hbsSortableTable = (0, _templateFactory.createTemplateFactory)(\n  /*\n    \n    <Hds::Table\n      @model={{this.model}}\n      @sortBy={{this.sortBy}}\n      @sortOrder={{this.sortOrder}}\n      @onSort={{this.onSort}}\n      @columns={{this.columns}}\n      @sortedMessageText={{this.sortedMessageText}}\n      @caption={{this.caption}}\n      id=\"data-test-table\"\n    >\n      <:body as |B|>\n        <B.Tr>\n          <B.Td>{{B.data.artist}}</B.Td>\n          <B.Td>{{B.data.album}}</B.Td>\n          <B.Td>{{B.data.year}}</B.Td>\n        </B.Tr>\n      </:body>\n    </Hds::Table>\n  \n  */\n  {\n    \"id\": \"HydYL4vX\",\n    \"block\": \"[[[1,\\\"\\\\n  \\\"],[8,[39,0],[[24,1,\\\"data-test-table\\\"]],[[\\\"@model\\\",\\\"@sortBy\\\",\\\"@sortOrder\\\",\\\"@onSort\\\",\\\"@columns\\\",\\\"@sortedMessageText\\\",\\\"@caption\\\"],[[30,0,[\\\"model\\\"]],[30,0,[\\\"sortBy\\\"]],[30,0,[\\\"sortOrder\\\"]],[30,0,[\\\"onSort\\\"]],[30,0,[\\\"columns\\\"]],[30,0,[\\\"sortedMessageText\\\"]],[30,0,[\\\"caption\\\"]]]],[[\\\"body\\\"],[[[[1,\\\"\\\\n      \\\"],[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"artist\\\"]]]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"album\\\"]]]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"year\\\"]]]],[]]]]],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[1]]]]],[1,\\\"\\\\n\\\"]],[\\\"B\\\"],false,[\\\"hds/table\\\",\\\":body\\\"]]\",\n    \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n    \"isStrictMode\": false\n  });\n  const hbsSelectableTable = (0, _templateFactory.createTemplateFactory)(\n  /*\n    \n    <Hds::Table\n      @isSelectable={{true}}\n      @model={{this.model}}\n      @columns={{this.columns}}\n      id=\"data-test-selectable-table\"\n    >\n      <:body as |B|>\n        <B.Tr @selectionKey={{B.data.id}}>\n          <B.Td>{{B.data.artist}}</B.Td>\n          <B.Td>{{B.data.album}}</B.Td>\n          <B.Td>{{B.data.year}}</B.Td>\n        </B.Tr>\n      </:body>\n    </Hds::Table>\n  \n  */\n  {\n    \"id\": \"vLnXM1c4\",\n    \"block\": \"[[[1,\\\"\\\\n  \\\"],[8,[39,0],[[24,1,\\\"data-test-selectable-table\\\"]],[[\\\"@isSelectable\\\",\\\"@model\\\",\\\"@columns\\\"],[true,[30,0,[\\\"model\\\"]],[30,0,[\\\"columns\\\"]]]],[[\\\"body\\\"],[[[[1,\\\"\\\\n      \\\"],[8,[30,1,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\"],[[30,1,[\\\"data\\\",\\\"id\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"artist\\\"]]]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"album\\\"]]]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"year\\\"]]]],[]]]]],[1,\\\"\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[1]]]]],[1,\\\"\\\\n\\\"]],[\\\"B\\\"],false,[\\\"hds/table\\\",\\\":body\\\"]]\",\n    \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n    \"isStrictMode\": false\n  });\n\n  // Basic tests\n\n  (0, _qunit.module)('Integration | Component | hds/table/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table id=\"data-test-table\"/>\n      */\n      {\n        \"id\": \"p0TZZImj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table\\\"]],null,null]],[],false,[\\\"hds/table\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table').hasClass('hds-table');\n    });\n    (0, _qunit.test)('it should render with a CSS class appropriate for the @density value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table @density=\"short\" id=\"data-test-table\" />\n      */\n      {\n        \"id\": \"55Zi3jn5\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table\\\"]],[[\\\"@density\\\"],[\\\"short\\\"]],null]],[],false,[\\\"hds/table\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table').hasClass('hds-table--density-short');\n    });\n    (0, _qunit.test)('it should render with a CSS class appropriate if no @density value is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table id=\"data-test-table\"/>\n      */\n      {\n        \"id\": \"p0TZZImj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table\\\"]],null,null]],[],false,[\\\"hds/table\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table').hasClass('hds-table--density-medium');\n    });\n    (0, _qunit.test)('it should render with a CSS class appropriate for the @valign value', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table @valign=\"middle\" id=\"data-test-table\" />\n      */\n      {\n        \"id\": \"pldXvWrn\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table\\\"]],[[\\\"@valign\\\"],[\\\"middle\\\"]],null]],[],false,[\\\"hds/table\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table').hasClass('hds-table--valign-middle');\n    });\n    (0, _qunit.test)('it should render with a CSS class appropriate if no @valign value is set', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table id=\"data-test-table\"/>\n      */\n      {\n        \"id\": \"p0TZZImj\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table\\\"]],null,null]],[],false,[\\\"hds/table\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table').hasClass('hds-table--valign-top');\n    });\n    (0, _qunit.test)('it should support splattributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table id=\"data-test-table\" aria-label=\"data test table\" />\n      */\n      {\n        \"id\": \"LyyvkDWv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table\\\"],[24,\\\"aria-label\\\",\\\"data test table\\\"]],null,null]],[],false,[\\\"hds/table\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table').hasAttribute('aria-label', 'data test table');\n    });\n    (0, _qunit.test)('it should render the table with manual data passed and no model defined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table id=\"data-test-table\">\n              <:head as |H|>\n                <H.Tr>\n                  <H.Th>Cell Header 1</H.Th>\n                  <H.Th>Cell Header 2</H.Th>\n                  <H.Th>Cell Header 3</H.Th>\n                </H.Tr>\n              </:head>\n              <:body as |B|>\n                <B.Tr>\n                  <B.Td>Cell Content 1 1</B.Td>\n                  <B.Td>Cell Content 1 2</B.Td>\n                  <B.Td>Cell Content 1 3</B.Td>\n                </B.Tr>\n                <B.Tr>\n                  <B.Td>Cell Content 2 1</B.Td>\n                  <B.Td>Cell Content 2 2</B.Td>\n                  <B.Td>Cell Content 2 3</B.Td>\n                </B.Tr>\n                <B.Tr>\n                  <B.Td>Cell Content 3 1</B.Td>\n                  <B.Td>Cell Content 3 2</B.Td>\n                  <B.Td>Cell Content 3 3</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"+xbCFbnk\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-table\\\"]],null,[[\\\"head\\\",\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 3 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 3 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 3 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[2]]]]],[1,\\\"\\\\n    \\\"]],[\\\"H\\\",\\\"B\\\"],false,[\\\"hds/table\\\",\\\":head\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table tr th:first-of-type').hasText('Cell Header 1');\n      assert.dom('#data-test-table tr td:first-of-type').hasText('Cell Content 1 1');\n    });\n    (0, _qunit.test)('it should render a table based on the data model passed', async function (assert) {\n      this.set('model', [{\n        key: 'artist',\n        name: 'Test 1',\n        description: 'Test 1 description'\n      }, {\n        key: 'album',\n        name: 'Test 2',\n        description: 'Test 2 description'\n      }, {\n        key: 'year',\n        name: 'Test 3',\n        description: 'Test 3 description'\n      }]);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table id=\"data-test-table\" @model={{this.model}} @columns={{array\n              (hash key='artist' label='components.table.headers.artist')\n              (hash key='album' label='components.table.headers.album')\n              (hash key='year' label='components.table.headers.year')\n            }}>\n              <:body as |B|>\n                <B.Tr>\n                  <B.Td>{{B.data.key}}</B.Td>\n                  <B.Td>{{B.data.name}}</B.Td>\n                  <B.Td>{{B.data.description}}</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"fFo/1dfq\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-table\\\"]],[[\\\"@model\\\",\\\"@columns\\\"],[[30,0,[\\\"model\\\"]],[28,[37,1],[[28,[37,2],null,[[\\\"key\\\",\\\"label\\\"],[\\\"artist\\\",\\\"components.table.headers.artist\\\"]]],[28,[37,2],null,[[\\\"key\\\",\\\"label\\\"],[\\\"album\\\",\\\"components.table.headers.album\\\"]]],[28,[37,2],null,[[\\\"key\\\",\\\"label\\\"],[\\\"year\\\",\\\"components.table.headers.year\\\"]]]],null]]],[[\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"key\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"name\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"description\\\"]]]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"B\\\"],false,[\\\"hds/table\\\",\\\"array\\\",\\\"hash\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table tr:first-of-type td:nth-of-type(2n)').hasText('Test 1');\n      assert.dom('#data-test-table tr:last-of-type td:last-of-type').hasText('Test 3 description');\n    });\n    (0, _qunit.test)('it should render caption if @caption is defined', async function (assert) {\n      this.set('model', [{\n        id: 1,\n        name: 'Test 1',\n        description: 'Test 1 description'\n      }, {\n        id: 2,\n        name: 'Test 2',\n        description: 'Test 2 description'\n      }, {\n        id: 3,\n        name: 'Test 3',\n        description: 'Test 3 description'\n      }]);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table id=\"data-test-table\" @model={{this.model}} @caption=\"a test caption\">\n              <:head as |H|>\n                <H.Tr>\n                  <H.Th>Id</H.Th>\n                  <H.Th>Name</H.Th>\n                  <H.Th>Description</H.Th>\n                </H.Tr>\n              </:head>\n              <:body as |B|>\n                <B.Tr>\n                  <B.Td>{{B.data.id}}</B.Td>\n                  <B.Td>{{B.data.name}}</B.Td>\n                  <B.Td>{{B.data.description}}</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"wYku07R/\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-table\\\"]],[[\\\"@model\\\",\\\"@caption\\\"],[[30,0,[\\\"model\\\"]],\\\"a test caption\\\"]],[[\\\"head\\\",\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Id\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Name\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Description\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,2,[\\\"data\\\",\\\"id\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,2,[\\\"data\\\",\\\"name\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,2,[\\\"data\\\",\\\"description\\\"]]]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[2]]]]],[1,\\\"\\\\n    \\\"]],[\\\"H\\\",\\\"B\\\"],false,[\\\"hds/table\\\",\\\":head\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table caption').hasText('a test caption');\n    });\n\n    // OPTIONS\n\n    // Sortable\n\n    (0, _qunit.test)('it should render a sortable table when appropriate', async function (assert) {\n      setSortableTableData(this);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table th:first-of-type').hasClass('hds-table__th--sort');\n      assert.dom('#data-test-table th:first-of-type .hds-table__th-content > span').hasText('Artist');\n    });\n    (0, _qunit.test)('it should render a sortable table with a tooltip', async function (assert) {\n      setSortableTableData(this);\n      // add the tooltip key/value to the first column\n      this.columns[0].tooltip = 'More info.';\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table thead th:first-of-type .hds-table__th-button--tooltip').exists();\n      // activate the tooltip:\n      await (0, _testHelpers.focus)('#data-test-table thead th:first-of-type .hds-table__th-button--tooltip');\n      // test that the tooltip exists and has the passed in content:\n      assert.dom('.tippy-content').hasText('More info.');\n    });\n    (0, _qunit.test)('it should render a sortable table with an empty caption if no caption is provided and table is unsorted', async function (assert) {\n      setSortableTableData(this);\n      // unset the sorting applied in the `setSortableTableData`\n      this.set('sortBy', undefined);\n      this.set('sortOrder', undefined);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table th:first-of-type').hasClass('hds-table__th--sort');\n      assert.dom('#data-test-table caption').hasText('');\n    });\n    (0, _qunit.test)('it sorts the rows asc by default when the sort button is clicked on an unsorted column', async function (assert) {\n      setSortableTableData(this);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table td:nth-of-type(1)').hasText('Melanie');\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.dom('#data-test-table td:nth-of-type(1)').hasText('The Beatles');\n    });\n    (0, _qunit.test)('it updates the caption correctly after a sort has been performed', async function (assert) {\n      setSortableTableData(this);\n      // unset the sorting applied in the `setSortableTableData`\n      this.set('sortBy', undefined);\n      this.set('sortOrder', undefined);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table td:nth-of-type(1)').hasText('Nick Drake');\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.dom('#data-test-table td:nth-of-type(1)').hasText('Melanie');\n      assert.dom('#data-test-table caption').hasText('Sorted by artist ascending');\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.dom('#data-test-table td:nth-of-type(1)').hasText('The Beatles');\n      assert.dom('#data-test-table caption').hasText('Sorted by artist descending');\n    });\n    (0, _qunit.test)('it renders a custom sortedMessageText if supplied', async function (assert) {\n      setSortableTableData(this);\n      this.set('sortedMessageText', 'Melanie will sort it');\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table caption').hasText('Melanie will sort it');\n    });\n    (0, _qunit.test)('it renders both a custom caption and a custom sortedMessageText if supplied', async function (assert) {\n      setSortableTableData(this);\n      this.set('caption', 'A custom caption.');\n      this.set('sortedMessageText', 'Melanie will sort it!');\n      await (0, _testHelpers.render)(hbsSortableTable);\n      assert.dom('#data-test-table caption').hasText('A custom caption. Melanie will sort it!');\n    });\n    (0, _qunit.test)('it uses a custom sort function if one is supplied', async function (assert) {\n      // contrived example; we don’t care _what_ the custom sorting function does, just that it’s used instead of the default.\n      // sort based on the second letter of the album name\n      const mySortingFunction = (a, b) => {\n        if (a.album.charAt(1) < b.album.charAt(1)) {\n          return -1;\n        } else if (a.album.charAt(1) > b.album.charAt(1)) {\n          return 1;\n        } else {\n          return 0;\n        }\n      };\n      setSortableTableData(this);\n      this.set('columns', [{\n        key: 'artist',\n        label: 'Artist',\n        isSortable: true\n      }, {\n        key: 'album',\n        label: 'Album',\n        isSortable: true,\n        sortingFunction: mySortingFunction\n      }, {\n        key: 'year',\n        label: 'Year'\n      }]);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      // let’s just check that the table is pre-sorted the way we expect (artist, ascending)\n      assert.dom('#data-test-table td:nth-of-type(1)').hasText('Melanie');\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(2) button');\n      assert.dom('#data-test-table tbody td:nth-of-type(2)').hasText('Candles in the Rain');\n    });\n    (0, _qunit.test)('it updates the `aria-sort` attribute value when a sort is performed', async function (assert) {\n      setSortableTableData(this);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.dom('#data-test-table .hds-table__th--sort:nth-of-type(1)').hasAria('sort', 'descending');\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.dom('#data-test-table .hds-table__th--sort:nth-of-type(1)').hasAria('sort', 'ascending');\n    });\n    (0, _qunit.test)('it invokes the `onSort` callback when a sort is performed', async function (assert) {\n      let sortBy, sortOrder;\n      this.set('onSort', (by, ord) => {\n        sortBy = by;\n        sortOrder = ord;\n      });\n      setSortableTableData(this);\n      await (0, _testHelpers.render)(hbsSortableTable);\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.strictEqual(sortBy, 'artist');\n      assert.strictEqual(sortOrder, 'desc');\n      await (0, _testHelpers.click)('#data-test-table .hds-table__th--sort:nth-of-type(1) button');\n      assert.strictEqual(sortBy, 'artist');\n      assert.strictEqual(sortOrder, 'asc');\n    });\n    (0, _qunit.test)('it sorts by selected row when `@selectableColumnKey` is provided', async function (assert) {\n      const sortSpy = _sinon.default.spy();\n      const sortBySelectedSelector = '#data-test-table thead th[scope=\"col\"] .hds-table__th-button--sort';\n      this.setProperties({\n        model: [{\n          id: 1,\n          name: 'Bob',\n          age: 1,\n          isSelected: false\n        }, {\n          id: 2,\n          name: 'Sally',\n          age: 50,\n          isSelected: true\n        }, {\n          id: 3,\n          name: 'Jim',\n          age: 30,\n          isSelected: false\n        }],\n        selectableColumnKey: 'isSelected',\n        onSort: sortSpy\n      });\n      this.set('onSelectionChange', ({\n        selectionKey\n      }) => {\n        const recordToUpdate = this.model.find(modelRow => modelRow.id === selectionKey);\n        if (recordToUpdate) {\n          recordToUpdate.isSelected = !recordToUpdate.isSelected;\n        }\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table\n              id=\"data-test-table\"\n              @isSelectable={{true}}\n              @selectableColumnKey={{this.selectableColumnKey}}\n              @onSelectionChange={{this.onSelectionChange}}\n              @onSort={{this.onSort}}\n              @model={{this.model}}\n              @columns={{array\n                (hash key=\"name\" label=\"Name\")\n                (hash key=\"age\" label=\"Age\")\n              }}\n            >\n              <:body as |B|>\n                <B.Tr\n                  @selectionKey={{B.data.id}}\n                  @isSelected={{B.data.isSelected}}\n                >\n                  <B.Td>{{B.data.name}}</B.Td>\n                  <B.Td>{{B.data.age}}</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"Pi8KlBzT\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-table\\\"]],[[\\\"@isSelectable\\\",\\\"@selectableColumnKey\\\",\\\"@onSelectionChange\\\",\\\"@onSort\\\",\\\"@model\\\",\\\"@columns\\\"],[true,[30,0,[\\\"selectableColumnKey\\\"]],[30,0,[\\\"onSelectionChange\\\"]],[30,0,[\\\"onSort\\\"]],[30,0,[\\\"model\\\"]],[28,[37,1],[[28,[37,2],null,[[\\\"key\\\",\\\"label\\\"],[\\\"name\\\",\\\"Name\\\"]]],[28,[37,2],null,[[\\\"key\\\",\\\"label\\\"],[\\\"age\\\",\\\"Age\\\"]]]],null]]],[[\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\",\\\"@isSelected\\\"],[[30,1,[\\\"data\\\",\\\"id\\\"]],[30,1,[\\\"data\\\",\\\"isSelected\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"name\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"age\\\"]]]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"B\\\"],false,[\\\"hds/table\\\",\\\"array\\\",\\\"hash\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(sortBySelectedSelector).exists();\n      assert.dom('#data-test-table tbody tr:nth-of-type(3) td:nth-of-type(1)').hasText('Jim');\n      await (0, _testHelpers.click)(sortBySelectedSelector);\n      assert.dom('#data-test-table tbody tr:nth-of-type(3) td:nth-of-type(1)').hasText('Sally');\n      assert.ok(sortSpy.calledWith(this.selectableColumnKey, 'asc'), 'it invokes the `onSort` callback with the `selectableColumnKey` when a sort is performed on the selectable column');\n    });\n\n    // Multi-select\n\n    const selectAllCheckboxSelector = '#data-test-selectable-table thead th[scope=\"col\"] .hds-table__checkbox';\n    const rowCheckboxesSelector = '#data-test-selectable-table tbody th[scope=\"row\"] .hds-table__checkbox';\n\n    // basic multi-select\n\n    (0, _qunit.test)('it renders a multi-select table when isSelectable is set to true for a table with a model', async function (assert) {\n      setSelectableTableData(this);\n      await (0, _testHelpers.render)(hbsSelectableTable);\n      assert.dom(selectAllCheckboxSelector).exists({\n        count: 1\n      });\n      assert.dom(rowCheckboxesSelector).exists({\n        count: this.model.length\n      });\n    });\n    (0, _qunit.test)('it renders a multi-select table when isSelectable is set to true for a table without a model', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table @isSelectable={{true}} id=\"data-test-selectable-table\">\n              <:head as |H|>\n                <H.Tr>\n                  <H.Th>Cell Header 1</H.Th>\n                  <H.Th>Cell Header 2</H.Th>\n                  <H.Th>Cell Header 3</H.Th>\n                </H.Tr>\n              </:head>\n              <:body as |B|>\n                <B.Tr @selectionKey=\"row1\">\n                  <B.Td>Cell Content 1 1</B.Td>\n                  <B.Td>Cell Content 1 2</B.Td>\n                  <B.Td>Cell Content 1 3</B.Td>\n                </B.Tr>\n                <B.Tr @selectionKey=\"row2\">\n                  <B.Td>Cell Content 2 1</B.Td>\n                  <B.Td>Cell Content 2 2</B.Td>\n                  <B.Td>Cell Content 2 3</B.Td>\n                </B.Tr>\n                <B.Tr @selectionKey=\"row3\">\n                  <B.Td>Cell Content 3 1</B.Td>\n                  <B.Td>Cell Content 3 2</B.Td>\n                  <B.Td>Cell Content 3 3</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"FWEQAtdS\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-selectable-table\\\"]],[[\\\"@isSelectable\\\"],[true]],[[\\\"head\\\",\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\"],[\\\"row1\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\"],[\\\"row2\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\"],[\\\"row3\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 3 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 3 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 3 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[2]]]]],[1,\\\"\\\\n    \\\"]],[\\\"H\\\",\\\"B\\\"],false,[\\\"hds/table\\\",\\\":head\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(selectAllCheckboxSelector).exists({\n        count: 1\n      });\n      assert.dom(rowCheckboxesSelector).exists({\n        count: 3\n      });\n    });\n\n    // multi-select functionality\n\n    (0, _qunit.test)('it selects all rows when the \"select all\" checkbox checked state is triggered', async function (assert) {\n      setSelectableTableData(this);\n      await (0, _testHelpers.render)(hbsSelectableTable);\n      // Default should be unchecked:\n      assert.dom(selectAllCheckboxSelector).isNotChecked();\n      assert.dom(rowCheckboxesSelector).isNotChecked().exists({\n        count: 3\n      });\n      // Should change to checked after it is triggered:\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      assert.dom(selectAllCheckboxSelector).isChecked();\n      assert.dom(rowCheckboxesSelector).isChecked().exists({\n        count: 3\n      });\n    });\n    (0, _qunit.test)('it deselects all rows when the \"select all\" checkbox unchecked state is triggered', async function (assert) {\n      setSelectableTableData(this);\n      await (0, _testHelpers.render)(hbsSelectableTable);\n      // Trigger checked status:\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      // Trigger unchecked state:\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      assert.dom(selectAllCheckboxSelector).isNotChecked();\n      assert.dom(rowCheckboxesSelector).isNotChecked().exists({\n        count: 3\n      });\n    });\n    (0, _qunit.test)('if some rows are selected but not all, the \"select all\" checkbox should be in an indeterminate state', async function (assert) {\n      setSelectableTableData(this);\n      await (0, _testHelpers.render)(hbsSelectableTable);\n      const rowCheckboxes = this.element.querySelectorAll(rowCheckboxesSelector);\n      const firstRowCheckbox = rowCheckboxes[0];\n      // Check checkbox in just the first row:\n      await (0, _testHelpers.click)(firstRowCheckbox);\n      assert.dom(selectAllCheckboxSelector).hasProperty('indeterminate', true);\n    });\n    (0, _qunit.test)('it should invoke the `onSelectionChange` callback when a checkbox is selected', async function (assert) {\n      let keys;\n      this.set('onSelectionChange', ({\n        selectedRowsKeys\n      }) => keys = selectedRowsKeys);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table @isSelectable={{true}} @onSelectionChange={{this.onSelectionChange}} id=\"data-test-selectable-table\">\n              <:head as |H|>\n                <H.Tr>\n                  <H.Th>Cell Header 1</H.Th>\n                  <H.Th>Cell Header 2</H.Th>\n                  <H.Th>Cell Header 3</H.Th>\n                </H.Tr>\n              </:head>\n              <:body as |B|>\n                <B.Tr @selectionKey=\"row1\">\n                  <B.Td>Cell Content 1 1</B.Td>\n                  <B.Td>Cell Content 1 2</B.Td>\n                  <B.Td>Cell Content 1 3</B.Td>\n                </B.Tr>\n                <B.Tr @selectionKey=\"row2\">\n                  <B.Td>Cell Content 2 1</B.Td>\n                  <B.Td>Cell Content 2 2</B.Td>\n                  <B.Td>Cell Content 2 3</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"zFx7o4+c\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-selectable-table\\\"]],[[\\\"@isSelectable\\\",\\\"@onSelectionChange\\\"],[true,[30,0,[\\\"onSelectionChange\\\"]]]],[[\\\"head\\\",\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Th\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Header 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]],[[[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\"],[\\\"row1\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 1 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,2,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\"],[\\\"row2\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 2\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Cell Content 2 3\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[2]]]]],[1,\\\"\\\\n    \\\"]],[\\\"H\\\",\\\"B\\\"],false,[\\\"hds/table\\\",\\\":head\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      const rowCheckboxes = this.element.querySelectorAll(rowCheckboxesSelector);\n      const firstRowCheckbox = rowCheckboxes[0];\n      await (0, _testHelpers.click)(firstRowCheckbox);\n      assert.deepEqual(keys, ['row1']);\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      assert.deepEqual(keys, ['row1', 'row2']);\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      assert.deepEqual(keys, []);\n    });\n\n    // multi-select options\n\n    // aria-labels\n\n    (0, _qunit.test)('it renders the expected `aria-label` values for \"select all\" and rows (based on provided suffix)', async function (assert) {\n      setSelectableTableData(this);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Table\n              @isSelectable={{true}}\n              @model={{this.model}}\n              @columns={{this.columns}}\n              id=\"data-test-selectable-table\"\n            >\n              <:body as |B|>\n                <B.Tr\n                  @selectionKey={{B.data.id}}\n                  @selectionAriaLabelSuffix=\"custom suffix\"\n                >\n                  <B.Td>{{B.data.artist}}</B.Td>\n                  <B.Td>{{B.data.album}}</B.Td>\n                  <B.Td>{{B.data.year}}</B.Td>\n                </B.Tr>\n              </:body>\n            </Hds::Table>\n          \n      */\n      {\n        \"id\": \"2jSWUPDv\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"data-test-selectable-table\\\"]],[[\\\"@isSelectable\\\",\\\"@model\\\",\\\"@columns\\\"],[true,[30,0,[\\\"model\\\"]],[30,0,[\\\"columns\\\"]]]],[[\\\"body\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tr\\\"]],null,[[\\\"@selectionKey\\\",\\\"@selectionAriaLabelSuffix\\\"],[[30,1,[\\\"data\\\",\\\"id\\\"]],\\\"custom suffix\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"artist\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"album\\\"]]]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,1,[\\\"Td\\\"]],null,null,[[\\\"default\\\"],[[[[1,[30,1,[\\\"data\\\",\\\"year\\\"]]]],[]]]]],[1,\\\"\\\\n          \\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"B\\\"],false,[\\\"hds/table\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      const rowCheckboxes = this.element.querySelectorAll(rowCheckboxesSelector);\n      const firstRowCheckbox = rowCheckboxes[0];\n      const secondRowCheckbox = rowCheckboxes[1];\n      assert.dom(selectAllCheckboxSelector).hasAria('label', 'Select all rows');\n      assert.dom(rowCheckboxesSelector).hasAria('label', 'Select custom suffix');\n      await (0, _testHelpers.click)(firstRowCheckbox);\n      assert.dom(selectAllCheckboxSelector).hasAria('label', 'Select all rows');\n      assert.dom(firstRowCheckbox).hasAria('label', 'Deselect custom suffix');\n      assert.dom(secondRowCheckbox).hasAria('label', 'Select custom suffix');\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      assert.dom(selectAllCheckboxSelector).hasAria('label', 'Deselect all rows');\n      assert.dom(firstRowCheckbox).hasAria('label', 'Deselect custom suffix');\n      assert.dom(secondRowCheckbox).hasAria('label', 'Deselect custom suffix');\n      await (0, _testHelpers.click)(secondRowCheckbox);\n      assert.dom(selectAllCheckboxSelector).hasAria('label', 'Select all rows');\n      assert.dom(firstRowCheckbox).hasAria('label', 'Deselect custom suffix');\n      assert.dom(secondRowCheckbox).hasAria('label', 'Select custom suffix');\n      await (0, _testHelpers.click)(secondRowCheckbox);\n      assert.dom(selectAllCheckboxSelector).hasAria('label', 'Deselect all rows');\n      assert.dom(firstRowCheckbox).hasAria('label', 'Deselect custom suffix');\n      assert.dom(secondRowCheckbox).hasAria('label', 'Deselect custom suffix');\n      await (0, _testHelpers.click)(selectAllCheckboxSelector);\n      assert.dom(selectAllCheckboxSelector).hasAria('label', 'Select all rows');\n      assert.dom(firstRowCheckbox).hasAria('label', 'Select custom suffix');\n      assert.dom(secondRowCheckbox).hasAria('label', 'Select custom suffix');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/table/td-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/table/td', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Td id=\"data-test-table-td\"/>\n      */\n      {\n        \"id\": \"3TRpEVh/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-td\\\"]],null,null]],[],false,[\\\"hds/table/td\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/td-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-td').hasClass('hds-table__td');\n    });\n    (0, _qunit.test)('it should render with the appropriate `@align` CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Td id=\"data-test-table-td\" @align=\"right\"/>\n      */\n      {\n        \"id\": \"aqbBPlcQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-td\\\"]],[[\\\"@align\\\"],[\\\"right\\\"]],null]],[],false,[\\\"hds/table/td\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/td-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-td').hasClass('hds-table__td--align-right');\n    });\n    (0, _qunit.test)('it should support splattributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Td id=\"data-test-table-td\" lang=\"es\" />\n      */\n      {\n        \"id\": \"twNfQx9w\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-td\\\"],[24,\\\"lang\\\",\\\"es\\\"]],null,null]],[],false,[\\\"hds/table/td\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/td-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-td').hasAttribute('lang', 'es');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/table/th-sort-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/table/th-sort', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"CQE/5Lwc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort').hasClass('hds-table__th--sort');\n      assert.dom('#data-test-table-th-sort .hds-table__th-button--sort').exists();\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders text content yielded within the cell', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"CQE/5Lwc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort .hds-table__th-content > span').hasText('Artist');\n    });\n\n    // ALIGNMENT\n\n    (0, _qunit.test)('it should render with the appropriate `@align` CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\" @align=\"right\">Year</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"MQDQeGy2\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@align\\\"],[\\\"right\\\"]],[[\\\"default\\\"],[[[[1,\\\"Year\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort').hasClass('hds-table__th--align-right');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should add inline styles if `@width` is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\" @width=\"10%\" />\n      */\n      {\n        \"id\": \"tfRckgtX\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@width\\\"],[\\\"10%\\\"]],null]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort').hasAttribute('style', 'width: 10%; min-width: 10%;');\n    });\n\n    // SORT ICON\n\n    (0, _qunit.test)('if @sortOrder is not defined, the swap-vertical icon should be displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort @sortBy='artist'>Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"EKxf91CS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@sortBy\\\"],[\\\"artist\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test-icon=\"swap-vertical\"]').exists();\n    });\n    (0, _qunit.test)('if sorted, and `@sortOrder` is set, the correct icon should be displayed', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort @sortOrder='asc'>Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"hl8aFB7t\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@sortOrder\\\"],[\\\"asc\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test-icon=\"arrow-up\"]').exists();\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort @sortOrder='desc'>Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"VQ23iOKv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@sortOrder\\\"],[\\\"desc\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('[data-test-icon=\"arrow-down\"]').exists();\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('it should support splattributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th\" lang=\"es\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"n9MUMbSL\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"],[24,\\\"lang\\\",\\\"es\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasAttribute('lang', 'es');\n    });\n    (0, _qunit.test)('it has the `scope` attribute, and it is set to column by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort>Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"7Kr6eEae\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-table__th--sort').hasAttribute('scope', 'col');\n    });\n    (0, _qunit.test)('the default `scope` attribute can not be overwritten', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort scope=\"row\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"tUT5rk2y\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"scope\\\",\\\"row\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('.hds-table__th--sort').hasAttribute('scope', 'col');\n    });\n    (0, _qunit.test)('if unsorted, the aria-sort attribute value should be set to none', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort @sortBy='artist' id=\"data-test-table-th-sort\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"5uR7YjDW\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@sortBy\\\"],[\\\"artist\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort').hasAttribute('aria-sort', 'none');\n    });\n    (0, _qunit.test)('if sorted, the aria-sort attribute value should reflect the direction', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort @sortBy='artist' @sortOrder=\"desc\" id=\"data-test-table-th-sort\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"josDtyOv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@sortBy\\\",\\\"@sortOrder\\\"],[\\\"artist\\\",\\\"desc\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort').hasAttribute('aria-sort', 'descending');\n    });\n    (0, _qunit.test)('it renders the `aria-labelledby` attribute for the sort button with the correct IDs', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\" @sortBy='artist' @sortOrder=\"desc\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"josDtyOv\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@sortBy\\\",\\\"@sortOrder\\\"],[\\\"artist\\\",\\\"desc\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      const prefixLabel = this.element.querySelector('#data-test-table-th-sort .hds-table__th-button-aria-label-hidden-segment:nth-of-type(1)');\n      const buttonLabel = this.element.querySelector('#data-test-table-th-sort .hds-table__th-content > span');\n      const suffixLabel = this.element.querySelector('#data-test-table-th-sort .hds-table__th-button-aria-label-hidden-segment:nth-of-type(2)');\n      assert.dom('#data-test-table-th-sort .hds-table__th-button--sort').hasAria('labelledby', `${prefixLabel.id} ${buttonLabel.id} ${suffixLabel.id}`);\n      assert.dom(suffixLabel).hasText('ascending');\n    });\n\n    // ONCLICKSORT\n\n    (0, _qunit.test)('it should call the `@onClickSort` function if provided', async function (assert) {\n      let isClicked = false;\n      this.set('onClickSort', () => isClicked = true);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\" @onClickSort={{this.onClickSort}}>Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"aknsJYl5\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@onClickSort\\\"],[[30,0,[\\\"onClickSort\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('#data-test-table-th-sort .hds-table__th-button--sort');\n      assert.ok(isClicked);\n    });\n\n    // TOOLTIP\n\n    (0, _qunit.test)('if @tooltip is undefined a tooltip button toggle should not be present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"CQE/5Lwc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort .hds-table__th-button--tooltip').doesNotExist();\n    });\n    (0, _qunit.test)('if @tooltip is defined a tooltip should be added to the table cell header', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort @tooltip=\"More info.\" id=\"data-test-table-th-sort\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"YANISV6K\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@tooltip\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th-sort .hds-table__th-button--tooltip').exists();\n      // activate the tooltip:\n      await (0, _testHelpers.focus)('#data-test-table-th-sort .hds-table__th-button--tooltip');\n      // test that the tooltip exists and has the passed in content:\n      assert.dom('.tippy-content').hasText('More info.');\n    });\n    (0, _qunit.test)('it renders the `aria-labelledby` attribute for the tooltip button with the correct IDs', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::ThSort id=\"data-test-table-th-sort\" @tooltip=\"More info.\">Artist</Hds::Table::ThSort>\n      */\n      {\n        \"id\": \"YANISV6K\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th-sort\\\"]],[[\\\"@tooltip\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th-sort\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-sort-test.js\",\n        \"isStrictMode\": false\n      }));\n      let prefixLabel = this.element.querySelector('#data-test-table-th-sort .hds-table__th-button-aria-label-hidden-segment');\n      let buttonLabel = this.element.querySelector('#data-test-table-th-sort .hds-table__th-content > span');\n      assert.dom('#data-test-table-th-sort .hds-table__th-button--tooltip').hasAria('labelledby', `${prefixLabel.id} ${buttonLabel.id}`);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/table/th-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/table/th', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"MubeN6yI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasClass('hds-table__th');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders text content yielded within the cell (no tooltip)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"MubeN6yI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th > span').hasText('Artist');\n    });\n    (0, _qunit.test)('it renders text content yielded within the cell (with tooltip)', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\" @tooltip=\"More info.\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"yqrnsFwN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],[[\\\"@tooltip\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th .hds-table__th-content > span').hasText('Artist');\n    });\n\n    // ALIGNMENT\n\n    (0, _qunit.test)('it should render with the appropriate `@align` CSS class', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\" @align=\"right\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"6vHA0n5T\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],[[\\\"@align\\\"],[\\\"right\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasClass('hds-table__th--align-right');\n    });\n\n    // WIDTH\n\n    (0, _qunit.test)('it should add inline styles if `@width` is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\" @width=\"10%\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"BDmcvDor\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],[[\\\"@width\\\"],[\\\"10%\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasAttribute('style', 'width: 10%; min-width: 10%;');\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('it should support splattributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\" lang=\"es\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"5B0zGHWP\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"],[24,\\\"lang\\\",\\\"es\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasAttribute('lang', 'es');\n    });\n    (0, _qunit.test)('it has the scope attribute set to column by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"MubeN6yI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasAttribute('scope', 'col');\n    });\n    (0, _qunit.test)('it has the scope attribute set to row if inside a tbody', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table><:body as |B|><B.Tr><B.Th id=\"data-test-table-th\">Artist</B.Th></B.Tr></:body></Hds::Table>\n      */\n      {\n        \"id\": \"3VGNWznF\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"body\\\"],[[[[8,[30,1,[\\\"Tr\\\"]],null,null,[[\\\"default\\\"],[[[[8,[30,1,[\\\"Th\\\"]],[[24,1,\\\"data-test-table-th\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[]]]]]],[1]]]]]],[\\\"B\\\"],false,[\\\"hds/table\\\",\\\":body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th').hasAttribute('scope', 'row');\n    });\n\n    // TOOLTIP\n\n    (0, _qunit.test)('if @tooltip is undefined a tooltip button toggle should not be present', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"MubeN6yI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th .hds-table__th-button--tooltip').doesNotExist();\n    });\n    (0, _qunit.test)('if @tooltip is defined a tooltip should be added to the table cell header', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th @tooltip=\"More info.\" id=\"data-test-table-th\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"yqrnsFwN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],[[\\\"@tooltip\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-th .hds-table__th-button--tooltip').exists();\n      // activate the tooltip:\n      await (0, _testHelpers.focus)('#data-test-table-th .hds-table__th-button--tooltip');\n      // test that the tooltip exists and has the passed in content:\n      assert.dom('.tippy-content').hasText('More info.');\n    });\n    (0, _qunit.test)('it renders the `aria-labelledby` attribute for the tooltip button with the correct IDs', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Th id=\"data-test-table-th\" @tooltip=\"More info.\">Artist</Hds::Table::Th>\n      */\n      {\n        \"id\": \"yqrnsFwN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-th\\\"]],[[\\\"@tooltip\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"Artist\\\"]],[]]]]]],[],false,[\\\"hds/table/th\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/th-test.js\",\n        \"isStrictMode\": false\n      }));\n      let prefixLabel = this.element.querySelector('#data-test-table-th .hds-table__th-button-aria-label-hidden-segment');\n      let buttonLabel = this.element.querySelector('#data-test-table-th .hds-table__th-content > span');\n      assert.dom('#data-test-table-th .hds-table__th-button--tooltip').hasAria('labelledby', `${prefixLabel.id} ${buttonLabel.id}`);\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/table/tr-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/table/tr', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\"/>\n      */\n      {\n        \"id\": \"aFpqQBNR\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],null,null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-tr').hasClass('hds-table__tr');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should render the yielded content', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\"><td></td></Hds::Table::Tr>\n      */\n      {\n        \"id\": \"WrvleNVD\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],null,[[\\\"default\\\"],[[[[10,\\\"td\\\"],[12],[13]],[]]]]]],[],false,[\\\"hds/table/tr\\\",\\\"td\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-tr > td').exists();\n    });\n\n    // SELECTABLE\n\n    const checkboxSelector = '#data-test-table-tr > .hds-table__th--is-selectable input.hds-table__checkbox';\n    (0, _qunit.test)('it should render a checkbox if `@isSelectable` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} />\n      */\n      {\n        \"id\": \"GRqJQTWS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\"],[true]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(checkboxSelector).exists();\n    });\n    (0, _qunit.test)('the checkbox should be checked if `@isSelected` is `true`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} @isSelected={{true}} />\n      */\n      {\n        \"id\": \"E7lqSaTy\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\",\\\"@isSelected\\\"],[true,true]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(checkboxSelector).isChecked();\n    });\n    (0, _qunit.test)('the checkbox contains the `@selectionAriaLabelSuffix` suffix', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} @selectionAriaLabelSuffix=\"row 123\" />\n      */\n      {\n        \"id\": \"8TVpRmea\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\",\\\"@selectionAriaLabelSuffix\\\"],[true,\\\"row 123\\\"]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(checkboxSelector).hasAria('label', 'Select row 123');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} @isSelected={{true}} @selectionAriaLabelSuffix=\"row 123\" />\n      */\n      {\n        \"id\": \"ai3BMJ7/\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\",\\\"@isSelected\\\",\\\"@selectionAriaLabelSuffix\\\"],[true,true,\\\"row 123\\\"]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(checkboxSelector).hasAria('label', 'Deselect row 123');\n    });\n    (0, _qunit.test)('the `th` element has the correct `scope` attribute value provided via `@selectionScope`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} @selectionScope=\"test-selectionscope\" />\n      */\n      {\n        \"id\": \"fbhFqgh3\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\",\\\"@selectionScope\\\"],[true,\\\"test-selectionscope\\\"]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-tr > .hds-table__th--is-selectable').hasAttribute('scope', 'test-selectionscope');\n    });\n    (0, _qunit.test)('it should invoke the `onSelectionChange` callback when the checkbox is selected', async function (assert) {\n      let key;\n      this.set('onSelectionChange', (_checkbox, selectionKey) => key = selectionKey);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} @selectionScope=\"row\" @selectionKey=\"row123\" @onSelectionChange={{this.onSelectionChange}} />\n      */\n      {\n        \"id\": \"CGNjp/l6\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\",\\\"@selectionScope\\\",\\\"@selectionKey\\\",\\\"@onSelectionChange\\\"],[true,\\\"row\\\",\\\"row123\\\",[30,0,[\\\"onSelectionChange\\\"]]]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(checkboxSelector);\n      assert.strictEqual(key, 'row123');\n    });\n    (0, _qunit.test)('it should render a sort button in the checkbox cell if `@onClickSortBySelected` is provided and `@isSelectable` is `true`', async function (assert) {\n      this.set('noop', () => {});\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} @onClickSortBySelected={{this.noop}} />\n      */\n      {\n        \"id\": \"z7hFtqe0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\",\\\"@onClickSortBySelected\\\"],[true,[30,0,[\\\"noop\\\"]]]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(checkboxSelector + ' ~ .hds-table__th-button--sort').exists();\n    });\n    (0, _qunit.test)('it should not render a sort button in the checkbox cell if `@isSelectable` is `true`, and `@onClickSortBySelected` is undefined', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" @isSelectable={{true}} />\n      */\n      {\n        \"id\": \"GRqJQTWS\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"]],[[\\\"@isSelectable\\\"],[true]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(checkboxSelector + ' + .hds-table__th-button--sort').doesNotExist();\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('it should support splattributes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr id=\"data-test-table-tr\" lang=\"es\" />\n      */\n      {\n        \"id\": \"u2kp4H00\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"data-test-table-tr\\\"],[24,\\\"lang\\\",\\\"es\\\"]],null,null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#data-test-table-tr').hasAttribute('lang', 'es');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an error if @selectionKey is not defined when @isSelectable is `true` and @selectionScope is `row`', async function (assert) {\n      const errorMessage = '@selectionKey must be defined on Table::Tr or B.Tr when @isSelectable is true';\n      assert.expect(1);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, errorMessage);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Table::Tr @isSelectable={{true}} @selectionScope=\"row\" />\n      */\n      {\n        \"id\": \"s4iOl24c\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@isSelectable\\\",\\\"@selectionScope\\\"],[true,\\\"row\\\"]],null]],[],false,[\\\"hds/table/tr\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/table/tr-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/tabs/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  function assertCssVarsCloseTo(assert, string, values) {\n    // we need to use this regex because the widths of the tabs in local env and in CI are different (browser rendering)\n    const match = string.match(/^--indicator-left-pos: (\\d+)px; --indicator-width: (\\d+)px;$/);\n    if (match) {\n      const indicatorLeftPos = parseInt(match[1]);\n      const indicatorWidth = parseInt(match[2]);\n      const expectedIndicatorLeftPos = values[0];\n      const expectedIndicatorWidth = values[1];\n      let isIndicatorLeftPosWithinTolerance;\n      let isIndicatorWidthWithinTolerance;\n      // debugger;\n      if (indicatorLeftPos === expectedIndicatorLeftPos) {\n        isIndicatorLeftPosWithinTolerance = true;\n      } else {\n        isIndicatorLeftPosWithinTolerance = Math.abs(indicatorLeftPos - expectedIndicatorLeftPos) / expectedIndicatorLeftPos <= 0.02;\n      }\n      if (indicatorWidth === expectedIndicatorWidth) {\n        isIndicatorWidthWithinTolerance = true;\n      } else {\n        isIndicatorWidthWithinTolerance = Math.abs(indicatorWidth - expectedIndicatorWidth) / expectedIndicatorWidth <= 0.03;\n      }\n      assert.ok(isIndicatorLeftPosWithinTolerance, `comparing expected \\`--indicator-left-pos\\` value \\`${expectedIndicatorLeftPos}\\` with actual value \\`${indicatorLeftPos}\\``);\n      assert.ok(isIndicatorWidthWithinTolerance, `comparing expected \\`--indicator-width\\` value \\`${expectedIndicatorWidth}\\` with actual value \\`${indicatorWidth}\\``);\n    } else {\n      assert.ok(false, `testing \\`${string}\\` against \\`/^--indicator-left-pos: (\\\\d+)px; --indicator-width: (\\\\d+)px;$/\\` regex failed because there was no match`);\n    }\n  }\n\n  // NOTICE\n  // Because of how the `tab` and `panel` subcomponents are built,\n  // it's practically impossible to test them in isolation, so we will\n  // test everything in this file and try to cover as much as possible\n\n  (0, _qunit.module)('Integration | Component | hds/tabs/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.set('createTabs', async (args = {}) => {\n        this.iconTab1 = args.iconTab1 ?? undefined;\n        this.countTab1 = args.countTab1 ?? undefined;\n        this.isSelectedTab1 = args.isSelectedTab1 ?? false;\n        this.isSelectedTab2 = args.isSelectedTab2 ?? false;\n        this.selectedTabIndex = args.selectedTabIndex ?? undefined;\n        this.size = args.size ?? undefined;\n        this.onClickTab = args.onClickTab ?? undefined;\n        return await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          \n                <Hds::Tabs id=\"test-tabs\" @size={{this.size}} @selectedTabIndex={{this.selectedTabIndex}} @onClickTab={{this.onClickTab}} as |T|>\n                  <T.Tab data-test=\"tab-1\" @isSelected={{this.isSelectedTab1}} @icon={{this.iconTab1}} @count={{this.countTab1}}>One</T.Tab>\n                  <T.Tab data-test=\"tab-2\" @isSelected={{this.isSelectedTab2}}>Two</T.Tab>\n                  <T.Panel data-test=\"panel-1\">Content 1</T.Panel>\n                  <T.Panel data-test=\"panel-2\">Content 2</T.Panel>\n                </Hds::Tabs>\n              \n        */\n        {\n          \"id\": \"EyiwJ+hv\",\n          \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-tabs\\\"]],[[\\\"@size\\\",\\\"@selectedTabIndex\\\",\\\"@onClickTab\\\"],[[30,0,[\\\"size\\\"]],[30,0,[\\\"selectedTabIndex\\\"]],[30,0,[\\\"onClickTab\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1\\\"]],[[\\\"@isSelected\\\",\\\"@icon\\\",\\\"@count\\\"],[[30,0,[\\\"isSelectedTab1\\\"]],[30,0,[\\\"iconTab1\\\"]],[30,0,[\\\"countTab1\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"One\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2\\\"]],[[\\\"@isSelected\\\"],[[30,0,[\\\"isSelectedTab2\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"Two\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Content 1\\\"]],[]]]]],[1,\\\"\\\\n          \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Content 2\\\"]],[]]]]],[1,\\\"\\\\n        \\\"]],[1]]]]],[1,\\\"\\\\n      \\\"]],[\\\"T\\\"],false,[\\\"hds/tabs\\\"]]\",\n          \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tabs/index-test.js\",\n          \"isStrictMode\": false\n        }));\n      });\n    });\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component names', async function (assert) {\n      await this.createTabs();\n      assert.dom('[data-test=\"tab-1\"]').hasClass('hds-tabs__tab');\n      assert.dom('[data-test=\"panel-1\"]').hasClass('hds-tabs__panel');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it should have 2 Tabs and 2 Panels', async function (assert) {\n      await this.createTabs();\n      assert.dom('.hds-tabs__panel').exists({\n        count: 2\n      });\n    });\n\n    // SIZE\n\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the default values if no arguments provided', async function (assert) {\n      await this.createTabs();\n      assert.dom('#test-tabs').hasClass('hds-tabs--size-medium');\n    });\n    (0, _qunit.test)('it should render the component with CSS classes that reflect the arguments provided', async function (assert) {\n      await this.createTabs({\n        size: 'large'\n      });\n      assert.dom('#test-tabs').hasClass('hds-tabs--size-large');\n    });\n\n    // TAB AND PANEL SELECTION AND DISPLAY\n\n    (0, _qunit.test)('it should select the first tab and display the first panel by default', async function (assert) {\n      await this.createTabs();\n      assert.dom('[data-test=\"tab-1\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-1\"]').doesNotHaveAttribute('hidden');\n      assert.dom('[data-test=\"tab-2\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'false');\n      assert.dom('[data-test=\"panel-2\"]').hasAttribute('hidden');\n    });\n    (0, _qunit.test)('it should select the specified tab using @isSelected and display the associated panel', async function (assert) {\n      await this.createTabs({\n        isSelectedTab2: true\n      });\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"]').doesNotHaveAttribute('hidden');\n      assert.dom('[data-test=\"tab-1\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'false');\n      assert.dom('[data-test=\"panel-1\"]').hasAttribute('hidden');\n    });\n    (0, _qunit.test)('it should select the specified tab using @selectedTabIndex and display the associated panel', async function (assert) {\n      await this.createTabs({\n        selectedTabIndex: 1\n      });\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"]').doesNotHaveAttribute('hidden');\n      assert.dom('[data-test=\"tab-1\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'false');\n      assert.dom('[data-test=\"panel-1\"]').hasAttribute('hidden');\n    });\n    (0, _qunit.test)('it should dynamically select the specified tab with multiple @isSelected conditions', async function (assert) {\n      this.set('isSelectedTab1', false);\n      this.set('isSelectedTab2', true);\n      await this.createTabs({\n        isSelectedTab1: this.isSelectedTab1,\n        isSelectedTab2: this.isSelectedTab2\n      });\n      assert.dom('[data-test=\"tab-1\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      this.set('isSelectedTab1', true);\n      this.set('isSelectedTab2', false);\n      await (0, _testHelpers.settled)();\n      assert.dom('[data-test=\"tab-1\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n    });\n    (0, _qunit.test)('it should dynamically select the specified tab when @selectedIndex changes', async function (assert) {\n      this.set('selectedTabIndex', 1);\n      await this.createTabs({\n        selectedTabIndex: this.selectedTabIndex\n      });\n      assert.dom('[data-test=\"tab-1\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      this.set('selectedTabIndex', 0);\n      await (0, _testHelpers.settled)();\n      assert.dom('[data-test=\"tab-1\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n    });\n\n    // TAB CLICK\n\n    (0, _qunit.test)('on click it should select the clicked tab, display the associated panel', async function (assert) {\n      await this.createTabs();\n      // select tab 2\n      await (0, _testHelpers.click)('[data-test=\"tab-2\"] .hds-tabs__tab-button');\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"]').doesNotHaveAttribute('hidden');\n      assert.dom('[data-test=\"tab-1\"]').doesNotHaveClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'false');\n      assert.dom('[data-test=\"panel-1\"]').hasAttribute('hidden');\n    });\n\n    // KEYBOARD CONTROLS\n\n    (0, _qunit.test)('it should focus tabs and navigate through them using left and right arrow keys', async function (assert) {\n      const leftArrowKey = 37;\n      const rightArrowKey = 39;\n      const spaceKey = 32;\n      await this.createTabs();\n      // focus 2nd tab:\n      await (0, _testHelpers.focus)('[data-test=\"tab-2\"] .hds-tabs__tab-button');\n      // test that the navigated to tab is now focused:\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').isFocused();\n      // activate the focused tab using the space key:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-2\"] .hds-tabs__tab-button', 'keyup', spaceKey);\n      // check that the focused tab is now selected\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      // navigate to the previous (1st) tab using right arrow key:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-2\"] .hds-tabs__tab-button', 'keyup', rightArrowKey);\n      // test that the navigated to tab is now focused:\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').isFocused();\n\n      // navigate back to the next (2nd) tab using left arrow key:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-1\"] .hds-tabs__tab-button', 'keyup', leftArrowKey);\n      // test that the navigated to tab is now focused:\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').isFocused();\n    });\n    (0, _qunit.test)('It should display the associated panel when a focused tab is activated', async function (assert) {\n      const enterKey = 13;\n      const spaceKey = 32;\n      await this.createTabs();\n      // focus 2nd tab:\n      await (0, _testHelpers.focus)('[data-test=\"tab-2\"] .hds-tabs__tab-button');\n      // activate the tab using the enterKey:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-2\"] .hds-tabs__tab-button', 'keyup', enterKey);\n      // test that the tab and panel have been activated:\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"]').doesNotHaveAttribute('hidden');\n\n      // focus 1st tab:\n      await (0, _testHelpers.focus)('[data-test=\"tab-1\"] .hds-tabs__tab-button');\n      // activate the tab using the spaceKey:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-1\"] .hds-tabs__tab-button', 'keyup', spaceKey);\n      // test that the tab and panel have been activated:\n      assert.dom('[data-test=\"tab-1\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-1\"]').doesNotHaveAttribute('hidden');\n    });\n\n    // ATTRIBUTES\n\n    (0, _qunit.test)('elements should have a set of attributes based on the arguments provided', async function (assert) {\n      await this.createTabs();\n      assert.dom('[data-test=\"tab-1\"]').hasAttribute('role', 'presentation');\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').hasAttribute('role', 'tab');\n      assert.dom('[data-test=\"panel-1\"]').hasAttribute('role', 'tabpanel');\n      const tabId = (0, _testHelpers.find)('[data-test=\"tab-1\"] .hds-tabs__tab-button').getAttribute('id');\n      assert.dom('[data-test=\"panel-1\"]').hasAttribute('aria-labelledby', tabId);\n    });\n\n    // CALLBACKS\n\n    (0, _qunit.test)('on click it should invoke the `onClickTab` callback function', async function (assert) {\n      let clicked = false;\n      let selected = -1;\n      this.set('onClick', (_event, index) => {\n        clicked = true;\n        selected = index;\n      });\n      await this.createTabs({\n        onClickTab: this.onClick\n      });\n      await (0, _testHelpers.click)('[data-test=\"tab-1\"] .hds-tabs__tab-button');\n      assert.ok(clicked);\n      assert.strictEqual(selected, 0);\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if the number of tabs does not match the number of panels', async function (assert) {\n      const errorMessage = 'The number of Tabs must be equal to the number of Panels';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Tabs as |T|>\n              <T.Tab>One</T.Tab>\n              <T.Tab>Two</T.Tab>\n              <T.Panel>Content 1</T.Panel>\n              <T.Panel>Content 2</T.Panel>\n              <T.Panel>Content 3</T.Panel>\n            </Hds::Tabs>\n          \n      */\n      {\n        \"id\": \"4HL09nFv\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"One\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Two\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Content 1\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Content 2\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],null,null,[[\\\"default\\\"],[[[[1,\\\"Content 3\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"T\\\"],false,[\\\"hds/tabs\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tabs/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n\n    // for some reasons, the second button triggers an error on `willDestroyNode` because `element` is undefeined\n    // not sure why it's happening, so I am skipping this test for now\n    (0, _qunit.skip)('it should throw an assertion if more than one tab is selected', async function (assert) {\n      const errorMessage = 'Only one tab may use isSelected argument';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      // await this.createTabs({ isSelectedTab1: true, isSelectedTab2: true });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Tabs as |T|>\n              <T.Tab @isSelected={{true}} @id=\"ONE\">One</T.Tab>\n              <T.Tab @isSelected={{true}} @id=\"TWO\">Two</T.Tab>\n              <T.Panel data-test=\"panel-1\">Content 1</T.Panel>\n              <T.Panel data-test=\"panel-2\">Content 2</T.Panel>\n            </Hds::Tabs>\n          \n      */\n      {\n        \"id\": \"54uqWPap\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],null,[[\\\"@isSelected\\\",\\\"@id\\\"],[true,\\\"ONE\\\"]],[[\\\"default\\\"],[[[[1,\\\"One\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],null,[[\\\"@isSelected\\\",\\\"@id\\\"],[true,\\\"TWO\\\"]],[[\\\"default\\\"],[[[[1,\\\"Two\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Content 1\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Content 2\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"T\\\"],false,[\\\"hds/tabs\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tabs/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // await pauseTest();\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n\n    // ===============================================================\n\n    // TAB OPTIONS\n\n    (0, _qunit.test)('`Tab` should render an icon if @icon is defined', async function (assert) {\n      await this.createTabs({\n        iconTab1: 'info'\n      });\n      assert.dom('.hds-tabs__tab-icon').exists();\n      assert.dom('.hds-tabs__tab-icon').hasAttribute('data-test-icon', 'info');\n    });\n    (0, _qunit.test)('`Tab` should render a badge if @count is defined', async function (assert) {\n      await this.createTabs({\n        countTab1: '5'\n      });\n      assert.dom('.hds-tabs__tab-count').exists();\n      assert.dom('.hds-tabs__tab-count').hasText('5');\n    });\n\n    // ===============================================================\n\n    // INDICATOR\n\n    // eslint-disable-next-line qunit/require-expect\n    (0, _qunit.test)('tab indicator should respond to tab clicks', async function (assert) {\n      await this.createTabs();\n      let tablistStyle = (0, _testHelpers.find)('.hds-tabs__tablist').style;\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [0, 51]); // --indicator-left-pos: 0px; --indicator-width: 51px;\n      // select tab 2\n      await (0, _testHelpers.click)('[data-test=\"tab-2\"] .hds-tabs__tab-button');\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [51, 51]); // --indicator-left-pos: 51px; --indicator-width: 51px;\n    });\n\n    // eslint-disable-next-line qunit/require-expect\n    (0, _qunit.test)('tab indicator should respond to content size changes', async function (assert) {\n      this.set('count', 5);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Tabs id=\"test-tabs\" as |T|>\n              <T.Tab data-test=\"tab-1\" @count=\"{{this.count}}\">One</T.Tab>\n              <T.Tab data-test=\"tab-2\">Two</T.Tab>\n              <T.Panel data-test=\"panel-1\">Content 1</T.Panel>\n              <T.Panel data-test=\"panel-2\">Content 2</T.Panel>\n            </Hds::Tabs>\n          \n      */\n      {\n        \"id\": \"T9YL+iNk\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-tabs\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1\\\"]],[[\\\"@count\\\"],[[29,[[30,0,[\\\"count\\\"]]]]]],[[\\\"default\\\"],[[[[1,\\\"One\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Two\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Content 1\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Content 2\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"T\\\"],false,[\\\"hds/tabs\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tabs/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      let tablistStyle = (0, _testHelpers.find)('.hds-tabs__tablist').style;\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [0, 81]); // --indicator-left-pos: 0px; --indicator-width: 81px;\n      this.set('count', 12345);\n      await (0, _testHelpers.settled)();\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [0, 112]); // --indicator-left-pos: 0px; --indicator-width: 112px;\n    });\n\n    // eslint-disable-next-line qunit/require-expect\n    (0, _qunit.test)('tab indicator should not move when focus is shifted to another tab', async function (assert) {\n      const leftArrowKey = 37;\n      const spaceKey = 32;\n      await this.createTabs();\n      let tablistStyle = (0, _testHelpers.find)('.hds-tabs__tablist').style;\n      // test that the indicator is in the right position\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [0, 51]); // --indicator-left-pos: 0px; --indicator-width: 51px;\n      // focus 2nd tab:\n      await (0, _testHelpers.focus)('[data-test=\"tab-2\"] .hds-tabs__tab-button');\n      // test that the navigated to tab is now focused:\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').isFocused();\n      // activate the focused tab using the space key:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-2\"] .hds-tabs__tab-button', 'keyup', spaceKey);\n      // test that the indicator has changed position\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [51, 51]); // --indicator-left-pos: 51px; --indicator-width: 51px;\n      // navigate back to the previous (1st) tab using left arrow key:\n      await (0, _testHelpers.triggerKeyEvent)('[data-test=\"tab-2\"] .hds-tabs__tab-button', 'keyup', leftArrowKey);\n      // test that the navigated to tab is now focused:\n      assert.dom('[data-test=\"tab-1\"] .hds-tabs__tab-button').isFocused();\n      // test that the indicator did _not_ changed position (tab has not been activated, just focused)\n      assertCssVarsCloseTo(assert, tablistStyle['cssText'], [51, 51]); // --indicator-left-pos: 51px; --indicator-width: 51px;\n    });\n\n    // ===============================================================\n    // ===============================================================\n    // ===============================================================\n\n    // NESTED TABS\n\n    (0, _qunit.test)('it should have the correct selection of tabs (via @isSelected) and correct indicator at different stages', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Tabs id=\"test-tabs\" as |T|>\n              <T.Tab data-test=\"tab-1\">One</T.Tab>\n              <T.Tab data-test=\"tab-2\" @isSelected={{true}}>Two</T.Tab>\n              <T.Panel data-test=\"panel-1\">\n                <Hds::Tabs id=\"test-tabs-sub1\" as |T|>\n                  <T.Tab data-test=\"tab-1__subtab-1\">Tab One / Subtab One</T.Tab>\n                  <T.Tab data-test=\"tab-1__subtab-2\">Tab One / Subtab Two</T.Tab>\n                  <T.Panel data-test=\"tab-1__panel-1\">Tab One / Subcontent 1</T.Panel>\n                  <T.Panel data-test=\"tab-1__panel-2\">Tab One / SubContent 2</T.Panel>\n                </Hds::Tabs>\n              </T.Panel>\n              <T.Panel data-test=\"panel-2\">\n                <Hds::Tabs id=\"test-tabs-sub2\" as |T|>\n                  <T.Tab data-test=\"tab-2__subtab-1\">Tab Two / Subtab One</T.Tab>\n                  <T.Tab data-test=\"tab-2__subtab-2\" @isSelected={{true}}>Tab Two / Subtab Two</T.Tab>\n                  <T.Panel data-test=\"tab-2__panel-1\">Tab Two / Subcontent 1</T.Panel>\n                  <T.Panel data-test=\"tab-2__panel-2\">Tab Two / SubContent 2</T.Panel>\n                </Hds::Tabs>\n              </T.Panel>\n            </Hds::Tabs>\n          \n      */\n      {\n        \"id\": \"EG99/0mm\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-tabs\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"One\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2\\\"]],[[\\\"@isSelected\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"Two\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,1,\\\"test-tabs-sub1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__subtab-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / Subtab One\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__subtab-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / Subtab Two\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / Subcontent 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / SubContent 2\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,1,\\\"test-tabs-sub2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__subtab-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / Subtab One\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__subtab-2\\\"]],[[\\\"@isSelected\\\"],[true]],[[\\\"default\\\"],[[[[1,\\\"Tab Two / Subtab Two\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / Subcontent 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / SubContent 2\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[3]]]]],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"T\\\",\\\"T\\\",\\\"T\\\"],false,[\\\"hds/tabs\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tabs/index-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // tab 2 is selected (via @isSelected)\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"]').doesNotHaveAttribute('hidden');\n\n      // tab 2 / subtab 2 is selected (via @isSelected)\n      assert.dom('[data-test=\"panel-2\"] [data-test=\"tab-2__subtab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"panel-2\"] [data-test=\"tab-2__subtab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"] [data-test=\"tab-2__panel-2\"]').doesNotHaveAttribute('hidden');\n\n      // tab 1 / subtab 1 is not selected (default, invisible)\n\n      assert.dom('[data-test=\"panel-1\"] [data-test=\"tab-1__subtab-1\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"panel-1\"] [data-test=\"tab-1__subtab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-1\"] [data-test=\"tab-1__panel-1\"]').doesNotHaveAttribute('hidden');\n    });\n    (0, _qunit.test)('it should have the correct selection of tabs (via @selectedTabIndex) and correct indicator at different stages', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <Hds::Tabs id=\"test-tabs\" @selectedTabIndex={{1}} as |T|>\n              <T.Tab data-test=\"tab-1\">One</T.Tab>\n              <T.Tab data-test=\"tab-2\">Two</T.Tab>\n              <T.Panel data-test=\"panel-1\">\n                <Hds::Tabs id=\"test-tabs-sub1\" as |T|>\n                  <T.Tab data-test=\"tab-1__subtab-1\">Tab One / Subtab One</T.Tab>\n                  <T.Tab data-test=\"tab-1__subtab-2\">Tab One / Subtab Two</T.Tab>\n                  <T.Panel data-test=\"tab-1__panel-1\">Tab One / Subcontent 1</T.Panel>\n                  <T.Panel data-test=\"tab-1__panel-2\">Tab One / SubContent 2</T.Panel>\n                </Hds::Tabs>\n              </T.Panel>\n              <T.Panel data-test=\"panel-2\">\n                <Hds::Tabs id=\"test-tabs-sub2\" @selectedTabIndex={{1}} as |T|>\n                  <T.Tab data-test=\"tab-2__subtab-1\">Tab Two / Subtab One</T.Tab>\n                  <T.Tab data-test=\"tab-2__subtab-2\">Tab Two / Subtab Two</T.Tab>\n                  <T.Panel data-test=\"tab-2__panel-1\">Tab Two / Subcontent 1</T.Panel>\n                  <T.Panel data-test=\"tab-2__panel-2\">Tab Two / SubContent 2</T.Panel>\n                </Hds::Tabs>\n              </T.Panel>\n            </Hds::Tabs>\n          \n      */\n      {\n        \"id\": \"KDodPk1H\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],[[24,1,\\\"test-tabs\\\"]],[[\\\"@selectedTabIndex\\\"],[1]],[[\\\"default\\\"],[[[[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"One\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Two\\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,1,\\\"test-tabs-sub1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__subtab-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / Subtab One\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__subtab-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / Subtab Two\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / Subcontent 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,2,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-1__panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab One / SubContent 2\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[2]]]]],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n        \\\"],[8,[30,1,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n          \\\"],[8,[39,0],[[24,1,\\\"test-tabs-sub2\\\"]],[[\\\"@selectedTabIndex\\\"],[1]],[[\\\"default\\\"],[[[[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__subtab-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / Subtab One\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Tab\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__subtab-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / Subtab Two\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__panel-1\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / Subcontent 1\\\"]],[]]]]],[1,\\\"\\\\n            \\\"],[8,[30,3,[\\\"Panel\\\"]],[[24,\\\"data-test\\\",\\\"tab-2__panel-2\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"Tab Two / SubContent 2\\\"]],[]]]]],[1,\\\"\\\\n          \\\"]],[3]]]]],[1,\\\"\\\\n        \\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[1]]]]],[1,\\\"\\\\n    \\\"]],[\\\"T\\\",\\\"T\\\",\\\"T\\\"],false,[\\\"hds/tabs\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tabs/index-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // tab 2 is selected (via @isSelected)\n      assert.dom('[data-test=\"tab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"tab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"]').doesNotHaveAttribute('hidden');\n\n      // tab 2 / subtab 2 is selected (via @isSelected)\n      assert.dom('[data-test=\"panel-2\"] [data-test=\"tab-2__subtab-2\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"panel-2\"] [data-test=\"tab-2__subtab-2\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-2\"] [data-test=\"tab-2__panel-2\"]').doesNotHaveAttribute('hidden');\n\n      // tab 1 / subtab 1 is not selected (default, invisible)\n\n      assert.dom('[data-test=\"panel-1\"] [data-test=\"tab-1__subtab-1\"]').hasClass('hds-tabs__tab--is-selected');\n      assert.dom('[data-test=\"panel-1\"] [data-test=\"tab-1__subtab-1\"] .hds-tabs__tab-button').hasAttribute('aria-selected', 'true');\n      assert.dom('[data-test=\"panel-1\"] [data-test=\"tab-1__panel-1\"]').doesNotHaveAttribute('hidden');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/tag/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/tag/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My tag\" id=\"test-tag\" />\n      */\n      {\n        \"id\": \"CXsptMxI\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tag\\\"]],[[\\\"@text\\\"],[\\\"My tag\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-tag').hasClass('hds-tag');\n    });\n\n    // DISMISS\n\n    (0, _qunit.test)('it should not render the \"dismiss\" button by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My tag\" />\n      */\n      {\n        \"id\": \"RVvhDYuJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\"],[\\\"My tag\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-tag__dismiss').doesNotExist();\n    });\n    (0, _qunit.test)('it should render the \"dismiss\" button if a callback function is passed to the @onDismiss argument', async function (assert) {\n      this.set('NOOP', () => {});\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My tag\" @onDismiss={{this.NOOP}} />\n      */\n      {\n        \"id\": \"2ddmkB6o\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@onDismiss\\\"],[\\\"My tag\\\",[30,0,[\\\"NOOP\\\"]]]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-tag__dismiss').exists();\n      assert.dom('button.hds-tag__dismiss').hasAttribute('aria-label', 'Dismiss My tag');\n    });\n    (0, _qunit.test)('it should render a customized label for the dismiss button if custom @ariaLabel text is defined', async function (assert) {\n      this.set('NOOP', () => {});\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My tag\" @onDismiss={{this.NOOP}} @ariaLabel=\"Please dismiss\" />\n      */\n      {\n        \"id\": \"aD+taQsf\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@onDismiss\\\",\\\"@ariaLabel\\\"],[\\\"My tag\\\",[30,0,[\\\"NOOP\\\"]],\\\"Please dismiss\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('button.hds-tag__dismiss').exists();\n      assert.dom('button.hds-tag__dismiss').hasAttribute('aria-label', 'Please dismiss My tag');\n    });\n    // COLOR\n\n    (0, _qunit.test)('it should render the primary color as the default if no @color prop is declared when the text is a link', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My text tag\" @href=\"/\" id=\"test-link-tag\"/>\n      */\n      {\n        \"id\": \"TruTDP7l\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link-tag\\\"]],[[\\\"@text\\\",\\\"@href\\\"],[\\\"My text tag\\\",\\\"/\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link-tag').hasClass('hds-tag--color-primary');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared when the text is a link', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My text tag\" @href=\"/\" @color=\"secondary\" id=\"test-link-tag\"/>\n      */\n      {\n        \"id\": \"N1QcTj11\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-link-tag\\\"]],[[\\\"@text\\\",\\\"@href\\\",\\\"@color\\\"],[\\\"My text tag\\\",\\\"/\\\",\\\"secondary\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-link-tag').hasClass('hds-tag--color-secondary');\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @color is provided when the text is a link', async function (assert) {\n      const errorMessage = '@color for \"Hds::Tag\" must be one of the following: primary, secondary; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My text tag\" @href=\"/\" @color=\"foo\"/>\n      */\n      {\n        \"id\": \"b2WziXzJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@href\\\",\\\"@color\\\"],[\\\"My text tag\\\",\\\"/\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if @color is provided without @href or @route', async function (assert) {\n      const errorMessage = '@color can only be applied to \"Hds::Tag\" along with either @href or @route';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Tag @text=\"My text tag\" @color=\"foo\"/>\n      */\n      {\n        \"id\": \"qp6XPAa8\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@color\\\"],[\\\"My text tag\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/tag\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tag/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/text/body-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/text/body', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Body @size=\"200\" @tag=\"p\" id=\"test-text\" />\n      */\n      {\n        \"id\": \"r4gnAk0l\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@size\\\",\\\"@tag\\\"],[\\\"200\\\",\\\"p\\\"]],null]],[],false,[\\\"hds/text/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasClass('hds-text');\n      assert.dom('#test-text').hasClass('hds-typography-body-200');\n    });\n\n    // GENERAL TEST\n    // most of the testing is already done in the `index` test file\n\n    (0, _qunit.test)('it renders correctly the provided arguments', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Body @size=\"100\" @tag=\"mark\" @weight=\"semibold\" @align=\"right\" @color=\"success\" id=\"test-text\">This is the text</Hds::Text::Body>\n      */\n      {\n        \"id\": \"Gyb94ieb\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@size\\\",\\\"@tag\\\",\\\"@weight\\\",\\\"@align\\\",\\\"@color\\\"],[\\\"100\\\",\\\"mark\\\",\\\"semibold\\\",\\\"right\\\",\\\"success\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasText('This is the text');\n      assert.dom('#test-text').hasClass('hds-typography-body-100');\n      assert.dom('#test-text').hasTagName('mark');\n      assert.dom('#test-text').hasClass('hds-font-weight-semibold');\n      assert.dom('#test-text').hasClass('hds-text--align-right');\n      assert.dom('#test-text').hasClass('hds-foreground-success');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Text::Body\" must be one of the following: 300, 200, 100; received: 123';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Body @size=\"123\" />\n      */\n      {\n        \"id\": \"yLp/9MDK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"123\\\"]],null]],[],false,[\\\"hds/text/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=300', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Body\" with @size=300 must be one of the following: regular, medium, semibold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Body @size=\"300\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"L3rlthWp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"300\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=200', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Body\" with @size=200 must be one of the following: regular, medium, semibold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Body @size=\"200\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"fC44ohlt\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"200\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=100', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Body\" with @size=100 must be one of the following: regular, medium, semibold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Body @size=\"100\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"2RARjaZc\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"100\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/body\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/body-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/text/code-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/text/code', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Code @size=\"200\" @tag=\"pre\" id=\"test-text\" />\n      */\n      {\n        \"id\": \"B9BQU2jH\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@size\\\",\\\"@tag\\\"],[\\\"200\\\",\\\"pre\\\"]],null]],[],false,[\\\"hds/text/code\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/code-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasClass('hds-text');\n      assert.dom('#test-text').hasClass('hds-typography-code-200');\n    });\n\n    // GENERAL TEST\n    // most of the testing is already done in the `index` test file\n\n    (0, _qunit.test)('it renders correctly the provided arguments', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Code @size=\"100\" @tag=\"code\" @weight=\"regular\" @align=\"right\" @color=\"success\" id=\"test-text\">This is the text</Hds::Text::Code>\n      */\n      {\n        \"id\": \"a6w3a4Wd\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@size\\\",\\\"@tag\\\",\\\"@weight\\\",\\\"@align\\\",\\\"@color\\\"],[\\\"100\\\",\\\"code\\\",\\\"regular\\\",\\\"right\\\",\\\"success\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text/code\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/code-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasText('This is the text');\n      assert.dom('#test-text').hasClass('hds-typography-code-100');\n      assert.dom('#test-text').hasTagName('code');\n      assert.dom('#test-text').hasClass('hds-font-weight-regular');\n      assert.dom('#test-text').hasClass('hds-text--align-right');\n      assert.dom('#test-text').hasClass('hds-foreground-success');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Text::Code\" must be one of the following: 300, 200, 100; received: 123';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Code @size=\"123\" />\n      */\n      {\n        \"id\": \"HqzDlm0E\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"123\\\"]],null]],[],false,[\\\"hds/text/code\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/code-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=300', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Code\" with @size=300 must be one of the following: regular, bold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Code @size=\"300\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"TYrE5c0N\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"300\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/code\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/code-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=200', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Code\" with @size=200 must be one of the following: regular, bold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Code @size=\"200\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"iFF4nS34\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"200\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/code\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/code-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=100', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Code\" with @size=100 must be one of the following: regular, bold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Code @size=\"100\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"20AfIoNh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"100\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/code\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/code-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/text/display-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/text/display', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"500\" @tag=\"h1\" id=\"test-text\" />\n      */\n      {\n        \"id\": \"NsHPrOr3\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@size\\\",\\\"@tag\\\"],[\\\"500\\\",\\\"h1\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasClass('hds-text');\n      assert.dom('#test-text').hasClass('hds-typography-display-500');\n    });\n\n    // GENERAL TEST\n    // most of the testing is already done in the `index` test file\n\n    (0, _qunit.test)('it renders correctly the provided arguments', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"400\" @tag=\"h3\" @weight=\"bold\" @align=\"right\" @color=\"success\" id=\"test-text\">This is the text</Hds::Text::Display>\n      */\n      {\n        \"id\": \"mseDD4+q\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@size\\\",\\\"@tag\\\",\\\"@weight\\\",\\\"@align\\\",\\\"@color\\\"],[\\\"400\\\",\\\"h3\\\",\\\"bold\\\",\\\"right\\\",\\\"success\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasText('This is the text');\n      assert.dom('#test-text').hasClass('hds-typography-display-400');\n      assert.dom('#test-text').hasTagName('h3');\n      assert.dom('#test-text').hasClass('hds-font-weight-bold');\n      assert.dom('#test-text').hasClass('hds-text--align-right');\n      assert.dom('#test-text').hasClass('hds-foreground-success');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @size is provided', async function (assert) {\n      const errorMessage = '@size for \"Hds::Text::Display\" must be one of the following: 500, 400, 300, 200, 100; received: 123';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"123\" />\n      */\n      {\n        \"id\": \"Xbwq2w6l\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\"],[\\\"123\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=500', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Display\" with @size=500 must be one of the following: bold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"500\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"lE800DUq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"500\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=400', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Display\" with @size=400 must be one of the following: medium, semibold, bold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"400\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"ckLCS43p\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"400\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=300', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Display\" with @size=300 must be one of the following: medium, semibold, bold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"300\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"XobtHPjC\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"300\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=200', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Display\" with @size=200 must be one of the following: semibold; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"200\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"WqE4Iljr\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"200\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @weight is provided when @size=100', async function (assert) {\n      const errorMessage = '@weight for \"Hds::Text::Display\" with @size=100 must be one of the following: medium; received: foo';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text::Display @size=\"100\" @weight=\"foo\" />\n      */\n      {\n        \"id\": \"mEgv1T7M\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@size\\\",\\\"@weight\\\"],[\\\"100\\\",\\\"foo\\\"]],null]],[],false,[\\\"hds/text/display\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/display-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/text/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/text/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n    });\n    (0, _qunit.test)('it should render with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" id=\"test-text\" />\n      */\n      {\n        \"id\": \"BJl2nLhQ\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\"]],null]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasClass('hds-text');\n    });\n\n    // CONTENT (TEXT)\n\n    (0, _qunit.test)('it renders with the provided text', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"arcyCa1Z\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasText('This is the text');\n    });\n\n    // VARIANT (GROUP + SIZE)\n\n    (0, _qunit.test)('it should render text with the correct variant based on the @group/@size declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"display\" @size=\"500\" @tag=\"p\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"dVhlMBne\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\"],[\\\"display\\\",\\\"500\\\",\\\"p\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // notice: we use CSS helper classes for the weight definitions\n      assert.dom('#test-text').hasClass('hds-typography-display-500');\n    });\n\n    // TAG\n\n    (0, _qunit.test)('it should render text with a \"span\" element if @tag is not declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"oq9A2f0j\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\"],[\\\"body\\\",\\\"200\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasTagName('span');\n    });\n    (0, _qunit.test)('it should render text with the correct @tag declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @tag=\"mark\" @size=\"200\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"bexZF3h4\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@tag\\\",\\\"@size\\\"],[\\\"body\\\",\\\"mark\\\",\\\"200\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasTagName('mark');\n    });\n\n    // WEIGHT\n\n    (0, _qunit.test)('it should render text without weight if no @weight is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"arcyCa1Z\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').doesNotHaveClass(/hds-text--weight-/);\n    });\n    (0, _qunit.test)('it should render the correct CSS class if the @weight prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" @weight=\"semibold\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"49UGFFbN\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\",\\\"@weight\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\",\\\"semibold\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // notice: we use CSS helper classes for the weight definitions\n      assert.dom('#test-text').hasClass('hds-font-weight-semibold');\n    });\n\n    // ALIGN\n\n    (0, _qunit.test)('it should render text without alignment if no @align is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"arcyCa1Z\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').doesNotHaveClass(/hds-text--align-/);\n    });\n    (0, _qunit.test)('it should render the correct CSS class if the @align prop is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" @align=\"right\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"HrF4kid0\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\",\\\"@align\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\",\\\"right\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasClass('hds-text--align-right');\n    });\n\n    // COLOR\n\n    (0, _qunit.test)('it should render text without color if no @color is declared', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"arcyCa1Z\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').doesNotHaveClass(/hds-text--color-/);\n      assert.dom('#test-text').doesNotHaveAttribute('style');\n    });\n    (0, _qunit.test)('it should render the correct CSS color class if the @color prop is declared using a pre-defined color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" @color=\"highlight\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"mbTcfoQz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\",\\\"@color\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\",\\\"highlight\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      // notice: we use CSS helper classes for the color definitions\n      assert.dom('#test-text').hasClass('hds-foreground-highlight');\n    });\n    (0, _qunit.test)('it should render the correct style if the @color prop is declared as custom CSS property color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" @color=\"var(--token-color-foreground-action)\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"a4kfW325\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\",\\\"@color\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\",\\\"var(--token-color-foreground-action)\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasAttribute('style', 'color: var(--token-color-foreground-action);');\n    });\n    (0, _qunit.test)('it should render the correct style if the @color prop is declared as custom HEX color', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" @color=\"#FF0000\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"+nZrTYPz\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\",\\\"@color\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\",\\\"#FF0000\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-text').hasAttribute('style', 'color: rgb(255, 0, 0);');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if an incorrect value for @align is provided', async function (assert) {\n      const errorMessage = '@align for \"Hds::Text\" must be one of the following: left, center, right; received: top';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Text @group=\"body\" @size=\"200\" @tag=\"p\" @align=\"top\" id=\"test-text\">This is the text</Hds::Text>\n      */\n      {\n        \"id\": \"Cs8dj8rP\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-text\\\"]],[[\\\"@group\\\",\\\"@size\\\",\\\"@tag\\\",\\\"@align\\\"],[\\\"body\\\",\\\"200\\\",\\\"p\\\",\\\"top\\\"]],[[\\\"default\\\"],[[[[1,\\\"This is the text\\\"]],[]]]]]],[],false,[\\\"hds/text\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/text/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/toast/index-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/toast/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // notice: \"toast\" is a wrapper around the \"hds::alert\" so we test only very specific things\n\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::Toast id=\"test-toast\" />\n      */\n      {\n        \"id\": \"SHp7k7xm\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-toast\\\"]],null,null]],[],false,[\\\"hds/toast\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/toast/index-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-toast').hasClass('hds-toast');\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/tooltip/tooltip-button-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/tooltip/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should render the component with a CSS class that matches the component name', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"+leNOz89\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-tooltip-button').hasClass('hds-tooltip-button');\n    });\n\n    // CONTENT\n\n    (0, _qunit.test)('it renders plain text content passed into the tooltip', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"+leNOz89\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.focus)('#test-tooltip-button');\n      assert.dom('.tippy-content').hasText('More info.');\n    });\n    (0, _qunit.test)('when allowHTML to true is passed in as an extraTippyOption, it renders rich HTML and text content passed into the tooltip', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n              <Hds::TooltipButton\n                @extraTippyOptions={{hash allowHTML=true}}\n                @text=\"<em>em</em> <strong>strong</strong>\"\n                id=\"test-tooltip-button\"\n              >info</Hds::TooltipButton>\n            \n      */\n      {\n        \"id\": \"NUP8835t\",\n        \"block\": \"[[[1,\\\"\\\\n        \\\"],[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@extraTippyOptions\\\",\\\"@text\\\"],[[28,[37,1],null,[[\\\"allowHTML\\\"],[true]]],\\\"<em>em</em> <strong>strong</strong>\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]],[1,\\\"\\\\n      \\\"]],[],false,[\\\"hds/tooltip-button\\\",\\\"hash\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.focus)('#test-tooltip-button');\n      assert.dom('.tippy-content em').exists().hasText('em');\n      assert.dom('.tippy-content strong').exists().hasText('strong');\n    });\n\n    // A11Y\n\n    (0, _qunit.test)('it displays the tooltip when focused and dismisses it if Escape key is triggered', async function (assert) {\n      const escapeKey = 27;\n      function wait(timeout = 1000) {\n        return new Promise(resolve => {\n          setTimeout(resolve, timeout);\n        });\n      }\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"+leNOz89\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // Test that tooltip does not display by default:\n      assert.dom('.tippy-box').doesNotExist();\n\n      // Focus button to trigger tooltip display:\n      await (0, _testHelpers.focus)('#test-tooltip-button');\n      assert.dom('.tippy-box').exists();\n\n      // Trigger escape key to close the tooltip:\n      await (0, _testHelpers.triggerKeyEvent)('#test-tooltip-button', 'keydown', escapeKey);\n      await wait();\n      // test that the tooltip is now gone:\n      assert.dom('.tippy-box').doesNotExist();\n    });\n    (0, _qunit.test)('the tooltip has a role of \"tooltip\"', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"+leNOz89\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.focus)('#test-tooltip-button');\n      assert.dom('.tippy-box').hasAttribute('role', 'tooltip');\n    });\n    (0, _qunit.test)('the button has an aria-describedby attribute with a value matching the tooltip id', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"Hello\" data-test-tooltip-button>info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"+Q7jFBRU\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"data-test-tooltip-button\\\",\\\"\\\"]],[[\\\"@text\\\"],[\\\"Hello\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.focus)('[data-test-tooltip-button]');\n      assert.dom('[data-test-tooltip-button]').hasAttribute('aria-describedby');\n      assert.dom('[data-tippy-root]').hasAttribute('id');\n      assert.strictEqual(this.element.querySelector('[data-test-tooltip-button]').getAttribute('aria-describedby'), this.element.querySelector('[data-tippy-root]').getAttribute('id'));\n    });\n\n    // PLACEMENT\n\n    (0, _qunit.test)('it should render the component with the passed in @placement', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"Hello\" @placement=\"right\" id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"ZIvMNLJX\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\",\\\"@placement\\\"],[\\\"Hello\\\",\\\"right\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.focus)('#test-tooltip-button');\n      assert.dom('.tippy-box').hasAttribute('data-placement', 'right');\n    });\n\n    // isInline\n\n    (0, _qunit.test)('it should render the component with isInline as true by default', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"+leNOz89\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\"],[\\\"More info.\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-tooltip-button').hasClass('hds-tooltip-button--is-inline');\n    });\n    (0, _qunit.test)('it should render the component with the correct class if isInline is set to false', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" @isInline={{false}} id=\"test-tooltip-button\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"YQmLnrmc\",\n        \"block\": \"[[[8,[39,0],[[24,1,\\\"test-tooltip-button\\\"]],[[\\\"@text\\\",\\\"@isInline\\\"],[\\\"More info.\\\",false]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom('#test-tooltip-button').hasClass('hds-tooltip-button--is-block');\n    });\n\n    // ASSERTIONS\n\n    (0, _qunit.test)('it should throw an assertion if @text is missing/has no value', async function (assert) {\n      const errorMessage = '@text for \"Hds::TooltipButton\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton>info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"3jFg6Hzi\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if the value passed to @placement is invalid', async function (assert) {\n      const errorMessage = '@placement for \"Hds::TooltipButton\" must have a valid value';\n      assert.expect(2);\n      (0, _testHelpers.setupOnerror)(function (error) {\n        assert.strictEqual(error.message, `Assertion Failed: ${errorMessage}`);\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <Hds::TooltipButton @text=\"More info.\" @placement=\"invalid\">info</Hds::TooltipButton>\n      */\n      {\n        \"id\": \"H3vGGuaY\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@text\\\",\\\"@placement\\\"],[\\\"More info.\\\",\\\"invalid\\\"]],[[\\\"default\\\"],[[[[1,\\\"info\\\"]],[]]]]]],[],false,[\\\"hds/tooltip-button\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.throws(function () {\n        throw new Error(errorMessage);\n      });\n    });\n  });\n});","define(\"showcase/tests/integration/components/hds/tooltip/tooltip-modifier-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Component | hds/tooltip/index', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it attaches a tooltip to the element it is invoked on', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <a href=\"#\" {{hds-tooltip \"More info.\"}}  id=\"test-tooltip-modifier\">Info</a>\n      */\n      {\n        \"id\": \"FekC5C8I\",\n        \"block\": \"[[[11,3],[24,6,\\\"#\\\"],[24,1,\\\"test-tooltip-modifier\\\"],[4,[38,1],[\\\"More info.\\\"],null],[12],[1,\\\"Info\\\"],[13]],[],false,[\\\"a\\\",\\\"hds-tooltip\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/components/hds/tooltip/tooltip-modifier-test.js\",\n        \"isStrictMode\": false\n      }));\n      // activate the tooltip:\n      await (0, _testHelpers.focus)('#test-tooltip-modifier');\n      // test that the tooltip exists and has the passed in content:\n      assert.dom('.tippy-content').hasText('More info.');\n\n      // test the expected accessibility related attributes:\n      assert.dom('#test-tooltip-modifier').hasAttribute('aria-describedby');\n      assert.dom('[data-tippy-root]').hasAttribute('id');\n      assert.strictEqual(this.element.querySelector('#test-tooltip-modifier').getAttribute('aria-describedby'), this.element.querySelector('[data-tippy-root]').getAttribute('id'));\n    });\n  });\n});","define(\"showcase/tests/integration/modifiers/hds-anchored-position-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@hashicorp/design-system-components/modifiers/hds-anchored-position\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _hdsAnchoredPosition, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@hashicorp/design-system-components/modifiers/hds-anchored-position\",0,\"@hashicorp/design-system-components/modifiers/hds-anchored-position\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  //\n  // ================================================================\n  //\n  // NOTICE:\n  // we're collecting both _unit_ and _integration_ tests\n  // in a single file for simplicity / ease of maintainance\n  //\n  // ================================================================\n  //\n  (0, _qunit.module)('Unit | Modifier | hds-anchored-position - getFloatingUIOptions()', function () {\n    (0, _qunit.test)('returns the default values if no options are provided', async function (assert) {\n      const floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({});\n      assert.deepEqual(floatingUIOptions.placement, 'bottom');\n      assert.deepEqual(floatingUIOptions.strategy, 'absolute');\n      // this is the default generated by Floating UI for the offset\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[0].options, 0);\n    });\n    (0, _qunit.test)('returns the offset options provided via `offsetOptions` to the middleware', async function (assert) {\n      // https://floating-ui.com/docs/offset\n      let floatingUIOptions;\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        offsetOptions: 1234\n      });\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[0].options, 1234);\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        offsetOptions: {\n          mainAxis: 1234,\n          crossAxis: 9876\n        }\n      });\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[0].options, {\n        mainAxis: 1234,\n        crossAxis: 9876\n      });\n    });\n    (0, _qunit.test)('returns the offset options for the `flip/shift` middleware functions if the `enableCollisionDetection` is set to `true`', async function (assert) {\n      let floatingUIOptions;\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: true\n      });\n      assert.deepEqual(floatingUIOptions.middleware.length, 3);\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[1].name, 'flip');\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 8\n      });\n      assert.deepEqual(floatingUIOptions.middleware[2].name, 'shift');\n      // the object contains also the `limiter` function, so we test only the padding\n      assert.deepEqual(floatingUIOptions.middleware[2].options.padding, 8);\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: true,\n        flipOptions: {\n          padding: 1234\n        },\n        shiftOptions: {\n          padding: 9876\n        }\n      });\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 1234\n      });\n      assert.deepEqual(floatingUIOptions.middleware[2].options, {\n        padding: 9876\n      });\n    });\n    (0, _qunit.test)('returns the offset options for the `flip` middleware functions if the `enableCollisionDetection` is set to `flip`', async function (assert) {\n      let floatingUIOptions;\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: 'flip'\n      });\n      assert.deepEqual(floatingUIOptions.middleware.length, 2);\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[1].name, 'flip');\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 8\n      });\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: 'flip',\n        flipOptions: {\n          padding: 1234\n        }\n      });\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 1234\n      });\n    });\n    (0, _qunit.test)('returns the offset options for the `shift` middleware functions if the `enableCollisionDetection` is set to `shift`', async function (assert) {\n      let floatingUIOptions;\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: 'shift'\n      });\n      assert.deepEqual(floatingUIOptions.middleware.length, 2);\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[1].name, 'shift');\n      // the object contains also the `limiter` function, so we test only the padding\n      assert.deepEqual(floatingUIOptions.middleware[1].options.padding, 8);\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: 'shift',\n        shiftOptions: {\n          padding: 9876\n        }\n      });\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 9876\n      });\n    });\n    (0, _qunit.test)('returns the offset options for the `autoPlacement` middleware functions if the `enableCollisionDetection` is set to `auto`', async function (assert) {\n      let floatingUIOptions;\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: 'auto'\n      });\n      assert.deepEqual(floatingUIOptions.middleware.length, 2);\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[1].name, 'autoPlacement');\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 8\n      });\n      floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: 'auto',\n        autoPlacementOptions: {\n          padding: 9876\n        }\n      });\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        padding: 9876\n      });\n    });\n    (0, _qunit.test)('returns the `middlewareExtra` provided as an option', async function (assert) {\n      function testFunction() {\n        return {\n          name: 'test',\n          options: {\n            abc: 1234\n          }\n        };\n      }\n      const floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        enableCollisionDetection: true,\n        middlewareExtra: [testFunction()]\n      });\n      assert.deepEqual(floatingUIOptions.middleware.length, 4);\n      // we want also to test the order of the middleware (the extra should be the last)\n      assert.deepEqual(floatingUIOptions.middleware[0].name, 'offset');\n      assert.deepEqual(floatingUIOptions.middleware[1].name, 'flip');\n      assert.deepEqual(floatingUIOptions.middleware[2].name, 'shift');\n      assert.deepEqual(floatingUIOptions.middleware[3].name, 'test');\n      assert.deepEqual(floatingUIOptions.middleware[3].options, {\n        abc: 1234\n      });\n    });\n    (0, _qunit.test)('returns the `arrow` element provided as an option ', async function (assert) {\n      const floatingUIOptions = (0, _hdsAnchoredPosition.getFloatingUIOptions)({\n        // notice: this in reality should be a DOM element, but we found a string works as well for this type of test\n        arrowElement: 'test1234',\n        arrowPadding: 1234\n      });\n      assert.deepEqual(floatingUIOptions.middleware[1].name, 'arrow');\n      assert.deepEqual(floatingUIOptions.middleware[1].options, {\n        element: 'test1234',\n        padding: 1234\n      });\n    });\n  });\n\n  // ================================================================\n\n  function wait(timeout = 500) {\n    return new Promise(resolve => {\n      setTimeout(resolve, timeout);\n    });\n  }\n  (0, _qunit.module)('Integration | Modifier | hds-anchored-position', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.styleElement = document.createElement('style');\n\n      // see: https://codepen.io/didoo/pen/VwNpOJb\n      this.styleElement.textContent = `\n      body {\n        margin: 0px;\n        padding: 0px;\n      }\n\n      #ember-testing {\n        margin: 0px;\n        padding: 10px;\n      }\n\n      #wrapper {\n        position: relative;\n      }\n\n      #anchor {\n        width: 100px;\n        height: 40px;\n        background: green;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      #floating {\n        width: 200px;\n        height: 100px;\n        background: lightblue;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      #arrow {\n        position: absolute;\n        width: 10px;\n        height: 10px;\n        background: red;\n      }\n    `;\n      document.head.appendChild(this.styleElement);\n    });\n    hooks.afterEach(() => {\n      if (this.styleElement) {\n        this.styleElement.remove();\n      }\n    });\n    (0, _qunit.test)('render \"anchor/floating/arrow\" elements with default `options`', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div id=\"wrapper\">\n              <div id=\"anchor\">anchor</div>\n              <div id=\"floating\"><div id=\"arrow\"></div>floating</div>\n            </div>\n          \n      */\n      {\n        \"id\": \"GWLvBE0i\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,1,\\\"wrapper\\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"anchor\\\"],[12],[1,\\\"anchor\\\"],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"floating\\\"],[12],[10,0],[14,1,\\\"arrow\\\"],[12],[13],[1,\\\"floating\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-anchored-position-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.anchorElement = document.getElementById('anchor');\n      this.floatingElement = document.getElementById('floating');\n      this.arrowElement = document.getElementById('arrow');\n      this.floatingOptions = {\n        arrowElement: this.arrowElement\n      };\n      // apply the modifier to the testing elements (after the rendering)\n      await (0, _hdsAnchoredPosition.default)(this.floatingElement,\n      // element the modifier is attached to\n      [this.anchorElement],\n      // positional arguments\n      this.floatingOptions // named arguments\n      );\n      // we need to wait for the Floating UI computation to complete (it's incremental)\n      await wait();\n      const floatingStyle = window.getComputedStyle(this.floatingElement);\n      const arrowStyle = window.getComputedStyle(this.arrowElement);\n      assert.deepEqual(floatingStyle.position, 'absolute');\n      assert.deepEqual(floatingStyle.top, '40px');\n      assert.deepEqual(floatingStyle.left, '-50px');\n      assert.deepEqual(arrowStyle.left, '95px');\n      assert.deepEqual(this.arrowElement.getAttribute('data-hds-anchored-arrow-placement'), 'bottom');\n    });\n    (0, _qunit.test)('render \"anchor/floating/arrow\" elements with custom options', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div id=\"wrapper\">\n              <div id=\"anchor\">anchor</div>\n              <div id=\"floating\"><div id=\"arrow\"></div>floating</div>\n            </div>\n          \n      */\n      {\n        \"id\": \"GWLvBE0i\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,1,\\\"wrapper\\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"anchor\\\"],[12],[1,\\\"anchor\\\"],[13],[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"floating\\\"],[12],[10,0],[14,1,\\\"arrow\\\"],[12],[13],[1,\\\"floating\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"div\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-anchored-position-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.anchorElement = document.getElementById('anchor');\n      this.floatingElement = document.getElementById('floating');\n      this.arrowElement = document.getElementById('arrow');\n      this.floatingOptions = {\n        placement: 'bottom-start',\n        strategy: 'fixed',\n        offsetOptions: 20,\n        arrowElement: this.arrowElement\n      };\n      // apply the modifier to the elements (after the rendering)\n      await (0, _hdsAnchoredPosition.default)(this.floatingElement,\n      // element the modifier is attached to\n      [this.anchorElement],\n      // positional arguments\n      this.floatingOptions // named arguments\n      );\n      // we need to wait for the Floating UI computation to complete (it's incremental)\n      await wait();\n      const floatingStyle = window.getComputedStyle(this.floatingElement);\n      const arrowStyle = window.getComputedStyle(this.arrowElement);\n      assert.deepEqual(floatingStyle.position, 'fixed');\n      assert.deepEqual(floatingStyle.top, '70px');\n      assert.deepEqual(floatingStyle.left, '10px');\n      assert.deepEqual(arrowStyle.left, '45px');\n      assert.deepEqual(this.arrowElement.getAttribute('data-hds-anchored-arrow-placement'), 'bottom-start');\n    });\n    (0, _qunit.test)('the modifier works also when applied directly in the template code', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        \n            <div id=\"wrapper\">\n              <div id=\"anchor\">anchor</div>\n              <div id=\"floating\" {{hds-anchored-position '#anchor' placement='bottom-start' strategy='fixed' offsetOptions=20 arrowSelector='#arrow' }}><div id=\"arrow\"></div>floating</div>\n            </div>\n          \n      */\n      {\n        \"id\": \"l3JN9btI\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[10,0],[14,1,\\\"wrapper\\\"],[12],[1,\\\"\\\\n        \\\"],[10,0],[14,1,\\\"anchor\\\"],[12],[1,\\\"anchor\\\"],[13],[1,\\\"\\\\n        \\\"],[11,0],[24,1,\\\"floating\\\"],[4,[38,1],[\\\"#anchor\\\"],[[\\\"placement\\\",\\\"strategy\\\",\\\"offsetOptions\\\",\\\"arrowSelector\\\"],[\\\"bottom-start\\\",\\\"fixed\\\",20,\\\"#arrow\\\"]]],[12],[10,0],[14,1,\\\"arrow\\\"],[12],[13],[1,\\\"floating\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n    \\\"]],[],false,[\\\"div\\\",\\\"hds-anchored-position\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-anchored-position-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.anchorElement = document.getElementById('anchor');\n      this.floatingElement = document.getElementById('floating');\n      this.arrowElement = document.getElementById('arrow');\n      // we need to wait for the Floating UI computation to complete (it's incremental)\n      await wait();\n      const floatingStyle = window.getComputedStyle(this.floatingElement);\n      const arrowStyle = window.getComputedStyle(this.arrowElement);\n      assert.deepEqual(floatingStyle.position, 'fixed');\n      assert.deepEqual(floatingStyle.top, '70px');\n      assert.deepEqual(floatingStyle.left, '10px');\n      assert.deepEqual(arrowStyle.left, '45px');\n      assert.deepEqual(this.arrowElement.getAttribute('data-hds-anchored-arrow-placement'), 'bottom-start');\n    });\n  });\n});","define(\"showcase/tests/integration/modifiers/hds-clipboard-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"sinon\", \"@hashicorp/design-system-components/modifiers/hds-clipboard\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _sinon, _hdsClipboard, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@hashicorp/design-system-components/modifiers/hds-clipboard\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  //\n  // ================================================================\n  //\n  // NOTICE:\n  // we're collecting both _unit_ and _integration_ tests\n  // in a single file for simplicity / ease of maintainance\n  //\n  // ================================================================\n  //\n  (0, _qunit.module)('Unit | Modifier | hds-clipboard - getTextToCopy()', function () {\n    (0, _qunit.test)('returns the string that is passed as argument', async function (assert) {\n      assert.deepEqual((0, _hdsClipboard.getTextToCopy)('test'), 'test');\n    });\n    (0, _qunit.test)('returns the number that is passed as argument as a string', async function (assert) {\n      assert.deepEqual((0, _hdsClipboard.getTextToCopy)(1234), '1234');\n    });\n    (0, _qunit.test)('it should throw an assertion if the argument provided is not a string/number', async function (assert) {\n      const arg = {};\n      assert.throws(function () {\n        (0, _hdsClipboard.getTextToCopy)(arg);\n      });\n    });\n  });\n  (0, _qunit.module)('Unit | Modifier | hds-clipboard - getTargetElement()', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('returns the DOM element identified by a CSS selector string passed as argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <pre id=\"test-target\">Test</pre>\n      */\n      {\n        \"id\": \"c9nhTWrg\",\n        \"block\": \"[[[10,\\\"pre\\\"],[14,1,\\\"test-target\\\"],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual(await this.target, await (0, _testHelpers.find)('#test-target'));\n    });\n    (0, _qunit.test)('returns the same DOM element passed as argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <pre id=\"test-target\">Test</pre>\n      */\n      {\n        \"id\": \"c9nhTWrg\",\n        \"block\": \"[[[10,\\\"pre\\\"],[14,1,\\\"test-target\\\"],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.node = await (0, _testHelpers.find)('#test-target');\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual(await this.target, this.node);\n    });\n    (0, _qunit.test)('it should throw an assertion if the argument provided is a list of DOM nodes', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <pre class=\"test-target\">Test 1</pre><pre class=\"test-target\">Test 2</pre>\n      */\n      {\n        \"id\": \"84rqilUE\",\n        \"block\": \"[[[10,\\\"pre\\\"],[14,0,\\\"test-target\\\"],[12],[1,\\\"Test 1\\\"],[13],[10,\\\"pre\\\"],[14,0,\\\"test-target\\\"],[12],[1,\\\"Test 2\\\"],[13]],[],false,[\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      const arg = await (0, _testHelpers.findAll)('.test-target');\n      assert.throws(function () {\n        (0, _hdsClipboard.getTargetElement)(arg);\n      });\n    });\n    (0, _qunit.test)('it should throw an assertion if the argument provided is not a string/node', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <pre class=\"test-target\">Test 1</pre><pre class=\"test-target\">Test 2</pre>\n      */\n      {\n        \"id\": \"84rqilUE\",\n        \"block\": \"[[[10,\\\"pre\\\"],[14,0,\\\"test-target\\\"],[12],[1,\\\"Test 1\\\"],[13],[10,\\\"pre\\\"],[14,0,\\\"test-target\\\"],[12],[1,\\\"Test 2\\\"],[13]],[],false,[\\\"pre\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      const arg = {};\n      assert.throws(function () {\n        (0, _hdsClipboard.getTargetElement)(arg);\n      });\n    });\n  });\n  (0, _qunit.module)('Unit | Modifier | hds-clipboard - getTextToCopyFromTargetElement()', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const cases = [['text', 'test'], ['number', 1234], ['date', '2022-12-08'],\n    // you can't pass a Date() object to the <input type=\"date\">, it will not work\n    ['time', '23:59'],\n    // same for the date\n    ['range', 6], ['color', '#e66465']];\n    _qunit.test.each('returns the value of an <input> element (with \"type\") passed as `target` argument', cases, async function (assert, [type, value]) {\n      this.set('type', type);\n      this.set('value', value);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <input id=\"test-target\" type={{this.type}} value={{this.value}} />\n      */\n      {\n        \"id\": \"twFOaWbJ\",\n        \"block\": \"[[[10,\\\"input\\\"],[14,1,\\\"test-target\\\"],[15,2,[30,0,[\\\"value\\\"]]],[15,4,[30,0,[\\\"type\\\"]]],[12],[13]],[],false,[\\\"input\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.equal(this.value, (0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target), `input type=\"${type}\"`);\n    });\n    (0, _qunit.test)('returns the value of a <textarea> passed as `target` argument', async function (assert) {\n      this.set('value', `hello\\nworld<br>!`);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <textarea id=\"test-target\">{{this.value}}</textarea>\n      */\n      {\n        \"id\": \"9cPcgOGl\",\n        \"block\": \"[[[10,\\\"textarea\\\"],[14,1,\\\"test-target\\\"],[12],[1,[30,0,[\\\"value\\\"]]],[13]],[],false,[\\\"textarea\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual(this.value, (0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target));\n    });\n    (0, _qunit.test)('returns the value of a <select> element passed as `target` argument', async function (assert) {\n      this.set('option1', `option1`);\n      this.set('option2', `option2`);\n      this.set('option3', `option3`);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <select id=\"test-target\">\n              <option>{{this.option1}}</option>\n              <option>{{this.option2}}</option>\n              <option>{{this.option3}}</option>\n            </select>\n      */\n      {\n        \"id\": \"1wrNbH3m\",\n        \"block\": \"[[[10,\\\"select\\\"],[14,1,\\\"test-target\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"option\\\"],[12],[1,[30,0,[\\\"option1\\\"]]],[13],[1,\\\"\\\\n        \\\"],[10,\\\"option\\\"],[12],[1,[30,0,[\\\"option2\\\"]]],[13],[1,\\\"\\\\n        \\\"],[10,\\\"option\\\"],[12],[1,[30,0,[\\\"option3\\\"]]],[13],[1,\\\"\\\\n      \\\"],[13]],[],false,[\\\"select\\\",\\\"option\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual(this.option1, (0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target));\n    });\n    (0, _qunit.test)('returns the value of the selected option of a <select> element passed as `target` argument', async function (assert) {\n      this.set('option1', `option1`);\n      this.set('option2', `option2`);\n      this.set('option3', `option3`);\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <select id=\"test-target\">\n              <option>{{this.option1}}</option>\n              <option selected>{{this.option2}}</option>\n              <option>{{this.option3}}</option>\n            </select>\n      */\n      {\n        \"id\": \"WdzX/d2a\",\n        \"block\": \"[[[10,\\\"select\\\"],[14,1,\\\"test-target\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"option\\\"],[12],[1,[30,0,[\\\"option1\\\"]]],[13],[1,\\\"\\\\n        \\\"],[10,\\\"option\\\"],[14,\\\"selected\\\",\\\"\\\"],[12],[1,[30,0,[\\\"option2\\\"]]],[13],[1,\\\"\\\\n        \\\"],[10,\\\"option\\\"],[12],[1,[30,0,[\\\"option3\\\"]]],[13],[1,\\\"\\\\n      \\\"],[13]],[],false,[\\\"select\\\",\\\"option\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual(this.option2, (0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target));\n      await (0, _testHelpers.fillIn)(this.target, this.option3);\n      assert.deepEqual(this.option3, (0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target));\n    });\n    (0, _qunit.test)('returns the innerText of DOM element passed as `target` argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <ul id=\"test-target\">\n              <li><p>Lorem <span><strong>Ipsum</strong> <em>dolor</em></span></p></li>\n              <li><p><code>Sit</code> <a href=\"#\">Amet</a></p><pre>Some<br/>Code</pre></li>\n            </ul>\n      */\n      {\n        \"id\": \"uja9P+aA\",\n        \"block\": \"[[[10,\\\"ul\\\"],[14,1,\\\"test-target\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"li\\\"],[12],[10,2],[12],[1,\\\"Lorem \\\"],[10,1],[12],[10,\\\"strong\\\"],[12],[1,\\\"Ipsum\\\"],[13],[1,\\\" \\\"],[10,\\\"em\\\"],[12],[1,\\\"dolor\\\"],[13],[13],[13],[13],[1,\\\"\\\\n        \\\"],[10,\\\"li\\\"],[12],[10,2],[12],[10,\\\"code\\\"],[12],[1,\\\"Sit\\\"],[13],[1,\\\" \\\"],[10,3],[14,6,\\\"#\\\"],[12],[1,\\\"Amet\\\"],[13],[13],[10,\\\"pre\\\"],[12],[1,\\\"Some\\\"],[10,\\\"br\\\"],[12],[13],[1,\\\"Code\\\"],[13],[13],[1,\\\"\\\\n      \\\"],[13]],[],false,[\\\"ul\\\",\\\"li\\\",\\\"p\\\",\\\"span\\\",\\\"strong\\\",\\\"em\\\",\\\"code\\\",\\\"a\\\",\\\"pre\\\",\\\"br\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual((0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target), `Lorem Ipsum dolor\\n\\nSit Amet\\n\\nSome\\nCode`);\n    });\n    (0, _qunit.test)('returns the innerText of DOM element passed as `target` argument without including hidden elements', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <p id=\"test-target\">Lorem\n            <span style=\"display: none\">Ipsum</span>\n            <span style=\"visibility: hidden\">Dolor</span>\n          </p>\n      */\n      {\n        \"id\": \"YaWJlgb/\",\n        \"block\": \"[[[10,2],[14,1,\\\"test-target\\\"],[12],[1,\\\"Lorem\\\\n      \\\"],[10,1],[14,5,\\\"display: none\\\"],[12],[1,\\\"Ipsum\\\"],[13],[1,\\\"\\\\n      \\\"],[10,1],[14,5,\\\"visibility: hidden\\\"],[12],[1,\\\"Dolor\\\"],[13],[1,\\\"\\\\n    \\\"],[13]],[],false,[\\\"p\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.target = (0, _testHelpers.find)('#test-target');\n      assert.deepEqual((0, _hdsClipboard.getTextToCopyFromTargetElement)(this.target), 'Lorem ');\n    });\n  });\n  (0, _qunit.module)('Unit | Modifier | hds-clipboard - writeTextToClipboard()', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.afterEach(() => {\n      // we need to restore the \"window.navigator\" methods\n      _sinon.default.restore();\n    });\n    (0, _qunit.test)('returns `true` as response if the `navigator.writeText` operation succeeds', async function (assert) {\n      // we need to mock this call, otherwise it will fail in a testing environment (with error: DOMException: Document is not focused)\n      // this is because the \"Document is not\"\n      // see: https://github.com/cypress-io/cypress/issues/18198\n      // see: https://stackoverflow.com/questions/69425289/javascript-prompt-cause-document-is-not-focused\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').resolves();\n      const success = await (0, _hdsClipboard.writeTextToClipboard)('test');\n      assert.true(success);\n    });\n    (0, _qunit.test)('returns `false` as response if the `navigator.writeText` operation fails', async function (assert) {\n      // we need to mock the \"catch\" in the `try/catch`\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').throws('Sinon throws (syntethic error)', 'this is a fake error message provided to the sinon.stub().throws() method');\n      const success = await (0, _hdsClipboard.writeTextToClipboard)('test');\n      assert.false(success);\n    });\n    (0, _qunit.test)('returns `false` as response if no `textToCopy` argument is provided', async function (assert) {\n      assert.false(await (0, _hdsClipboard.writeTextToClipboard)());\n    });\n  });\n  (0, _qunit.module)('Unit | Modifier | hds-clipboard - copyToClipboard()',\n  // for this one we test only the assertion (the functionality is tested in the integration tests below)\n  function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    // not sure why it's not working...\n    (0, _qunit.skip)('it should throw an assertion if no `text` or `target` argument is provided', async function (assert) {\n      assert.throws(async function () {\n        await (0, _hdsClipboard.copyToClipboard)();\n      });\n    });\n  });\n  (0, _qunit.module)('Integration | Modifier | hds-clipboard', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    // IMPORTANT: don't use an arrow function here or \"this.set\" will not be recognized\n    hooks.beforeEach(function () {\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').resolves();\n      this.success = undefined;\n      this.set('onSuccess', () => this.success = true);\n      this.set('onError', () => this.success = false);\n    });\n    hooks.afterEach(() => {\n      (0, _testHelpers.resetOnerror)();\n      // we need to restore the \"window.navigator\" methods\n      _sinon.default.restore();\n      this.success = undefined;\n    });\n\n    // @TEXT ARGUMENT\n\n    (0, _qunit.test)('it should allow to copy a `string` provided as `@text` argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button id=\"test-button\" {{hds-clipboard\n              text=\"Hello world!\"\n              onSuccess=this.onSuccess\n              onError=this.onError\n            }}>Test</button>\n      */\n      {\n        \"id\": \"IVVZRN7F\",\n        \"block\": \"[[[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,1],null,[[\\\"text\\\",\\\"onSuccess\\\",\\\"onError\\\"],[\\\"Hello world!\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]]],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"button\\\",\\\"hds-clipboard\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-button');\n      assert.true(this.success);\n    });\n\n    // context: https://github.com/hashicorp/design-system/pull/1564\n    (0, _qunit.test)('it should allow to copy an `integer` provided as `@text` argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button id=\"test-button\" {{hds-clipboard\n              text=1234\n              onSuccess=this.onSuccess\n              onError=this.onError\n            }}>Test</button>\n      */\n      {\n        \"id\": \"mEfqAEyn\",\n        \"block\": \"[[[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,1],null,[[\\\"text\\\",\\\"onSuccess\\\",\\\"onError\\\"],[1234,[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]]],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"button\\\",\\\"hds-clipboard\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-button');\n      assert.true(this.success);\n    });\n\n    // @TARGET ARGUMENT\n\n    (0, _qunit.test)('it should allow to target an element using a `string` selector for the `@target` argument', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <p id=\"test-target\">Hello world!</p><button id=\"test-button\" {{hds-clipboard\n              target=\"#test-target\"\n              onSuccess=this.onSuccess\n              onError=this.onError\n            }}>Test</button>\n      */\n      {\n        \"id\": \"yQ0G22jG\",\n        \"block\": \"[[[10,2],[14,1,\\\"test-target\\\"],[12],[1,\\\"Hello world!\\\"],[13],[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,2],null,[[\\\"target\\\",\\\"onSuccess\\\",\\\"onError\\\"],[\\\"#test-target\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]]],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"p\\\",\\\"button\\\",\\\"hds-clipboard\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-button');\n      assert.true(this.success);\n    });\n    (0, _qunit.test)('it should allow to target an element using a DOM node', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <p id=\"test-target\">Hello world!</p><button id=\"test-button\" {{hds-clipboard\n              target=this.target\n              onSuccess=this.onSuccess\n              onError=this.onError\n            }}>Test</button>\n      */\n      {\n        \"id\": \"bm2h6kyi\",\n        \"block\": \"[[[10,2],[14,1,\\\"test-target\\\"],[12],[1,\\\"Hello world!\\\"],[13],[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,2],null,[[\\\"target\\\",\\\"onSuccess\\\",\\\"onError\\\"],[[30,0,[\\\"target\\\"]],[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]]],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"p\\\",\\\"button\\\",\\\"hds-clipboard\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      this.set('target', (0, _testHelpers.find)('#test-target'));\n      await (0, _testHelpers.click)('button#test-button');\n      assert.true(this.success);\n    });\n\n    // ONSUCCESS/ONERROR CALLBACKS\n\n    (0, _qunit.test)('it should invoke the `onSuccess` callback on a successful \"copy\" action', async function (assert) {\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button id=\"test-button\" {{hds-clipboard\n              text=\"Hello world!\"\n              onSuccess=this.onSuccess\n              onError=this.onError\n            }}>Test</button>\n      */\n      {\n        \"id\": \"IVVZRN7F\",\n        \"block\": \"[[[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,1],null,[[\\\"text\\\",\\\"onSuccess\\\",\\\"onError\\\"],[\\\"Hello world!\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]]],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"button\\\",\\\"hds-clipboard\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-button');\n      assert.true(this.success);\n    });\n    (0, _qunit.test)('it should invoke the `onError` callback on a failed \"copy\" action', async function (assert) {\n      _sinon.default.restore();\n      _sinon.default.stub(window.navigator.clipboard, 'writeText').throws('Sinon throws (syntethic error)', 'this is a fake error message provided to the sinon.stub().throws() method');\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button id=\"test-button\" {{hds-clipboard\n              text=\"Hello world!\"\n              onSuccess=this.onSuccess\n              onError=this.onError\n            }}>Test</button>\n      */\n      {\n        \"id\": \"IVVZRN7F\",\n        \"block\": \"[[[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,1],null,[[\\\"text\\\",\\\"onSuccess\\\",\\\"onError\\\"],[\\\"Hello world!\\\",[30,0,[\\\"onSuccess\\\"]],[30,0,[\\\"onError\\\"]]]]],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"button\\\",\\\"hds-clipboard\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-clipboard-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button#test-button');\n      assert.false(this.success);\n    });\n  });\n});","define(\"showcase/tests/integration/modifiers/hds-register-event-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Integration | Modifier | hds-register-event', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it adds an event listener to the element', async function (assert) {\n      assert.expect(1);\n      this.set('eventHandler', () => {\n        assert.ok(true, 'event handler was called');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button id=\"test-button\" {{hds-register-event 'click' this.eventHandler}}>Test</button>\n      */\n      {\n        \"id\": \"jj1vB8CP\",\n        \"block\": \"[[[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,1],[\\\"click\\\",[30,0,[\\\"eventHandler\\\"]]],null],[12],[1,\\\"Test\\\"],[13]],[],false,[\\\"button\\\",\\\"hds-register-event\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-register-event-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)('button');\n    });\n    (0, _qunit.test)('it passes the `useCapture` option to the event listener', async function (assert) {\n      assert.expect(1);\n      this.set('eventHandler', event => {\n        assert.strictEqual(event.eventPhase, Event.CAPTURING_PHASE, 'event was captured');\n      });\n      await (0, _testHelpers.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <button id=\"test-button\" {{hds-register-event 'click' this.eventHandler useCapture=true}}><span>Test</span></button>\n      */\n      {\n        \"id\": \"HME3ifiU\",\n        \"block\": \"[[[11,\\\"button\\\"],[24,1,\\\"test-button\\\"],[4,[38,1],[\\\"click\\\",[30,0,[\\\"eventHandler\\\"]]],[[\\\"useCapture\\\"],[true]]],[12],[10,1],[12],[1,\\\"Test\\\"],[13],[13]],[],false,[\\\"button\\\",\\\"hds-register-event\\\",\\\"span\\\"]]\",\n        \"moduleName\": \"/Users/zack.moore/Code/design-system/showcase/showcase/tests/integration/modifiers/hds-register-event-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerEvent)('span', 'click', {\n        bubbles: true\n      });\n    });\n  });\n});","define(\"showcase/tests/test-helper\", [\"showcase/app\", \"showcase/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\", \"ember-a11y-testing/test-support\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit, _testSupport) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"showcase/app\",0,\"showcase/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\",0,\"ember-a11y-testing/test-support\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _testSupport.setupGlobalA11yHooks)(() => true, {\n    helpers: [..._testSupport.DEFAULT_A11Y_TEST_HELPER_NAMES, 'render', 'tab', 'focus', 'select']\n  });\n  (0, _testSupport.setRunOptions)({\n    runOnly: {\n      type: 'tag',\n      values: ['wcag2a', 'wcag2aa', 'wcag21a', 'wcag21aa', 'wcag22aa', 'best-practice']\n    },\n    // @ts-expect-error: This is a valid option\n    include: [['#ember-testing-container']],\n    exclude: [['.flight-sprite-container'], ['.shw-page-main']]\n  });\n\n  // This will be used by developers to run the tests locally\n  // Either with the `enableA11yAudit` as a query param in the URL\n  // or `yarn test:a11y` in the CLI\n  // Note: if you want to filter what test is run from the start, use the --filter flag: `yarn test:a11y --filter=\"alert\"`\n  // Docs: https://guides.emberjs.com/release/testing/#toc_how-to-filter-tests\n  if ((0, _testSupport.shouldForceAudit)()) {\n    (0, _testSupport.setEnableA11yAudit)(true);\n  }\n  // Note, as a convenience, useMiddlewareReporter automatically forces audits, thus explicitly specifying the enableA11yAudit query param or the ENABLE_A11Y_AUDIT environment variable is unnecessary.\n  if ((0, _testSupport.useMiddlewareReporter)()) {\n    // Only runs if `enableA11yMiddlewareReporter` is set in URL\n    (0, _testSupport.setupMiddlewareReporter)();\n  }\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"showcase/tests/unit/components/hds/pagination/numbered-test\", [\"qunit\", \"@hashicorp/design-system-components/components/hds/pagination/numbered\"], function (_qunit, _numbered) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@hashicorp/design-system-components/components/hds/pagination/numbered\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  // prettier-ignore\n  const A10 = Array.from(Array(10), (x, i) => i + 1);\n  const A11 = Array.from(Array(11), (x, i) => i + 1);\n  const A100 = Array.from(Array(100), (x, i) => i + 1);\n  const A101 = Array.from(Array(101), (x, i) => i + 1);\n  (0, _qunit.module)('Unit | Component | hds/pagination/numbered', function () {\n    (0, _qunit.test)('the \"elliptize\" function returns the correct list of pages (10 total pages / limit of 7 pages)', async function (assert) {\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 1,\n        limit: 7\n      }), [1, 2, 3, 4, \"…\", 9, 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 2,\n        limit: 7\n      }), [1, 2, 3, 4, \"…\", 9, 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 3,\n        limit: 7\n      }), [1, 2, 3, 4, \"…\", 9, 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 4,\n        limit: 7\n      }), [1, \"…\", 3, 4, 5, \"…\", 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 5,\n        limit: 7\n      }), [1, \"…\", 4, 5, 6, \"…\", 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 6,\n        limit: 7\n      }), [1, \"…\", 5, 6, 7, \"…\", 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 7,\n        limit: 7\n      }), [1, \"…\", 6, 7, 8, \"…\", 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 8,\n        limit: 7\n      }), [1, 2, \"…\", 7, 8, 9, 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 9,\n        limit: 7\n      }), [1, 2, \"…\", 7, 8, 9, 10]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A10,\n        current: 10,\n        limit: 7\n      }), [1, 2, \"…\", 7, 8, 9, 10]);\n    });\n    (0, _qunit.test)('the \"elliptize\" function returns the correct list of pages (11 total pages / limit of 7 pages)', async function (assert) {\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A11,\n        current: 1,\n        limit: 7\n      }), [1, 2, 3, 4, \"…\", 10, 11]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A11,\n        current: 7,\n        limit: 7\n      }), [1, \"…\", 6, 7, 8, \"…\", 11]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A11,\n        current: 11,\n        limit: 7\n      }), [1, 2, \"…\", 8, 9, 10, 11]);\n    });\n    (0, _qunit.test)('the \"elliptize\" function returns the correct list of pages (100 total pages / limit of 9 pages)', async function (assert) {\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A100,\n        current: 1,\n        limit: 9\n      }), [1, 2, 3, 4, 5, \"…\", 98, 99, 100]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A100,\n        current: 7,\n        limit: 9\n      }), [1, \"…\", 5, 6, 7, 8, 9, \"…\", 100]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A100,\n        current: 11,\n        limit: 9\n      }), [1, \"…\", 9, 10, 11, 12, 13, \"…\", 100]);\n    });\n    (0, _qunit.test)('the \"elliptize\" function returns the correct list of pages (101 total pages / limit of 11 pages)', async function (assert) {\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A101,\n        current: 1,\n        limit: 11\n      }), [1, 2, 3, 4, 5, 6, \"…\", 98, 99, 100, 101]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A101,\n        current: 7,\n        limit: 11\n      }), [1, \"…\", 4, 5, 6, 7, 8, 9, 10, \"…\", 101]);\n      // prettier-ignore\n      assert.deepEqual((0, _numbered.elliptize)({\n        pages: A101,\n        current: 11,\n        limit: 11\n      }), [1, \"…\", 8, 9, 10, 11, 12, 13, 14, \"…\", 101]);\n    });\n  });\n});","define(\"showcase/tests/unit/helpers/hds-link-to-models-test\", [\"qunit\", \"@hashicorp/design-system-components/helpers/hds-link-to-models\"], function (_qunit, _hdsLinkToModels) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@hashicorp/design-system-components/helpers/hds-link-to-models\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Unit | Helper | hds-link-to-models', function () {\n    (0, _qunit.test)('returns the same array of models that is passed as argument', async function (assert) {\n      // NOTICE: helpers arguments are positional, so we have to use this trick\n      const args = new Array(2);\n      args[1] = ['model-1', 'model-2', 'model-3'];\n      assert.deepEqual((0, _hdsLinkToModels.hdsLinkToModels)(args), ['model-1', 'model-2', 'model-3']);\n    });\n    (0, _qunit.test)('returns an array containing the model if a single model is passed as argument', async function (assert) {\n      const args = new Array(2);\n      args[0] = 'model';\n      assert.deepEqual((0, _hdsLinkToModels.hdsLinkToModels)(args), ['model']);\n    });\n    (0, _qunit.test)('returns an empty array if no argument is passed', async function (assert) {\n      const args = new Array(2);\n      assert.deepEqual((0, _hdsLinkToModels.hdsLinkToModels)(args), []);\n    });\n    (0, _qunit.test)('it should throw an assertion if both \"model\" and \"models\" are provided', async function (assert) {\n      const args = new Array(2);\n      args[0] = 'model';\n      args[1] = ['model-1', 'model-2', 'model-3'];\n      assert.throws(function () {\n        (0, _hdsLinkToModels.hdsLinkToModels)(args);\n      });\n    });\n  });\n});","define(\"showcase/tests/unit/helpers/hds-link-to-query-test\", [\"qunit\", \"@hashicorp/design-system-components/helpers/hds-link-to-query\"], function (_qunit, _hdsLinkToQuery) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@hashicorp/design-system-components/helpers/hds-link-to-query\"eaimeta@70e063a35619d71f\n  /**\n   * Copyright (c) HashiCorp, Inc.\n   * SPDX-License-Identifier: MPL-2.0\n   */\n  (0, _qunit.module)('Unit | Helper | hds-link-to-query', function () {\n    (0, _qunit.test)('returns the same object that is passed as argument', async function (assert) {\n      assert.deepEqual((0, _hdsLinkToQuery.hdsLinkToQuery)(['test']), 'test');\n    });\n    (0, _qunit.test)('returns an empty object if no argument is passed', async function (assert) {\n      assert.deepEqual((0, _hdsLinkToQuery.hdsLinkToQuery)([]), {});\n    });\n  });\n});","define('showcase/config/environment', [], function() {\n  var prefix = 'showcase';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('showcase/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACflhgaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACznnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrxhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrljxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljvzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvllrlnpnrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjxzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhnlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpzjlWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvvthuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjxxfppntzlYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}